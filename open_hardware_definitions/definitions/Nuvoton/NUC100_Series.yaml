!Device
part_number: NUC1xx_registers
architecture: ARM Cortex-M
bit_width: 32
modules:
- !Module
  name: PWMA
  description: Registers group
  base_addr: 0x40040000
  size: 0x80
  registers:
  - !Register
    name: PPR
    addr: 0x40040000
    size_bits: 32
    description: PWM Prescaler Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CP01
      bit_offset: 0
      bit_width: 8
      description: 'Clock prescaler 0 (PWM-timer 0 & 1 for group A and PWM-timer 4
        & 5 for group B)

        Clock input is divided by (CP01 + 1) before it is fed to the corresponding
        PWM-timer

        If CP01=0, then the clock prescaler 0 output clock will be stopped. So corresponding
        PWM-timer will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CP23
      bit_offset: 8
      bit_width: 8
      description: 'Clock prescaler 2 (PWM-timer2 & 3 for group A and PWM-timer 6
        & 7 for group B)

        Clock input is divided by (CP23 + 1) before it is fed to the corresponding
        PWM-timer.

        If CP23=0, then the clock prescaler 2 output clock will be stopped. So corresponding
        PWM-timer will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI01
      bit_offset: 16
      bit_width: 8
      description: 'Dead Zone Interval for Pair of Channel 0 and Channel 1 (PWM0 and
        PWM1 pair for PWM group A, PWM4 and PWM5 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI23
      bit_offset: 24
      bit_width: 8
      description: 'Dead Zone Interval for Pair of Channel2 and Channel3 (PWM2 and
        PWM3 pair for PWM group A, PWM6 and PWM7 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CSR
    addr: 0x40040004
    size_bits: 32
    description: PWM Clock Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CSR0
      bit_offset: 0
      bit_width: 3
      description: 'PWM Timer 0 Clock Source Selection (PWM timer 0 for group A and
        PWM timer 4 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR1
      bit_offset: 4
      bit_width: 3
      description: 'PWM Timer 1 Clock Source Selection (PWM timer 1 for group A and
        PWM timer 5 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR2
      bit_offset: 8
      bit_width: 3
      description: 'PWM Timer 2 Clock Source Selection (PWM timer 2 for group A and
        PWM timer 6 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR3
      bit_offset: 12
      bit_width: 3
      description: "PWM Timer 3 Clock Source Selection (PWM timer 3 for group A and
        PWM timer 7 for group B)\nSelect clock input for PWM timer.\nCSR3 [14:12]\tInput
        clock divided by\t\n100\t1\t\n011\t16\t\n010\t8\t\n001\t4\t\n000\t2\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PCR
    addr: 0x40040008
    size_bits: 32
    description: PWM Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CH0EN
      bit_offset: 0
      bit_width: 1
      description: 'PWM-Timer 0 Enable (PWM timer 0 for group A and PWM timer 4 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0INV
      bit_offset: 2
      bit_width: 1
      description: 'PWM-Timer 0 Output Inverter Enable (PWM timer 0 for group A and
        PWM timer 4 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0MOD
      bit_offset: 3
      bit_width: 1
      description: 'PWM-Timer 0 Auto-reload/One-Shot Mode (PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR0 and
        CMR0 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN01
      bit_offset: 4
      bit_width: 1
      description: 'Dead-Zone 0 Generator Enable (PWM0 and PWM1 pair for PWM group
        A, PWM4 and PWM5 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM0 and PWM1 becomes
        a complementary pair for PWM group A and the pair of PWM4 and PWM5 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN23
      bit_offset: 5
      bit_width: 1
      description: 'Dead-Zone 2 Generator Enable (PWM2 and PWM3 pair for PWM group
        A, PWM6 and PWM7 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM2 and PWM3 becomes
        a complementary pair for PWM group A and the pair of PWM6 and PWM7 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1EN
      bit_offset: 8
      bit_width: 1
      description: 'PWM-Timer 1 Enable (PWM timer 1 for group A and PWM timer 5 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1INV
      bit_offset: 10
      bit_width: 1
      description: 'PWM-Timer 1 Output Inverter Enable (PWM timer 1 for group A and
        PWM timer 5 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1MOD
      bit_offset: 11
      bit_width: 1
      description: 'PWM-Timer 1 Auto-reload/One-Shot Mode (PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Auto-load Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR1 and
        CMR1 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2EN
      bit_offset: 16
      bit_width: 1
      description: 'PWM-Timer 2 Enable (PWM timer 2 for group A and PWM timer 6 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2INV
      bit_offset: 18
      bit_width: 1
      description: 'PWM-Timer 2 Output Inverter Enable (PWM timer 2 for group A and
        PWM timer 6 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2MOD
      bit_offset: 19
      bit_width: 1
      description: 'PWM-Timer 2 Auto-reload/One-Shot Mode (PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR2 and
        CMR2 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3EN
      bit_offset: 24
      bit_width: 1
      description: 'PWM-Timer 3 Enable (PWM timer 3 for group A and PWM timer 7 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3INV
      bit_offset: 26
      bit_width: 1
      description: 'PWM-Timer 3 Output Inverter Enable (PWM timer 3 for group A and
        PWM timer 7 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3MOD
      bit_offset: 27
      bit_width: 1
      description: 'PWM-Timer 3 Auto-reload/One-Shot Mode (PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR3 and
        CMR3 be clear.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CNR0
    addr: 0x4004000c
    size_bits: 32
    description: PWM Counter Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR0
    addr: 0x40040010
    size_bits: 32
    description: PWM Comparator Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR0
    addr: 0x40040014
    size_bits: 32
    description: PWM Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR1
    addr: 0x40040018
    size_bits: 32
    description: PWM Counter Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR1
    addr: 0x4004001c
    size_bits: 32
    description: PWM Comparator Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR1
    addr: 0x40040020
    size_bits: 32
    description: PWM Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR2
    addr: 0x40040024
    size_bits: 32
    description: PWM Counter Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR2
    addr: 0x40040028
    size_bits: 32
    description: PWM Comparator Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR2
    addr: 0x4004002c
    size_bits: 32
    description: PWM Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR3
    addr: 0x40040030
    size_bits: 32
    description: PWM Counter Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR3
    addr: 0x40040034
    size_bits: 32
    description: PWM Comparator Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR3
    addr: 0x40040038
    size_bits: 32
    description: PWM Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PBCR
    addr: 0x4004003c
    size_bits: 32
    description: New description for register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BCn
      bit_offset: 0
      bit_width: 1
      description: 'PWM Backward Compatible Register

        0 = PWM register action is compatible with Medium Density

        1 = PWM register action is not compatible with Medium Density

        Please reference CCR0/CCR2 register bit 6, 7, 22, 23 description'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIER
    addr: 0x40040040
    size_bits: 32
    description: PWM Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIE0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIIR
    addr: 0x40040044
    size_bits: 32
    description: PWM Interrupt Indication Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIF0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Interrupt Status

        Flag is set by hardware when PWM0 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Interrupt Status

        Flag is set by hardware when PWM1 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Interrupt Status

        Flag is set by hardware when PWM2 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Interrupt Status

        Flag is set by hardware when PWM3 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR0
    addr: 0x40040050
    size_bits: 32
    description: Capture Control Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV0
      bit_offset: 0
      bit_width: 1
      description: 'Channel 0 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE0
      bit_offset: 1
      bit_width: 1
      description: 'Channel 0 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 0 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE0
      bit_offset: 2
      bit_width: 1
      description: 'Channel 0 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 0 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH0EN
      bit_offset: 3
      bit_width: 1
      description: 'Channel 0 Capture Function Enable

        1 = Enable capture function on PWM group channel 0.

        0 = Disable capture function on PWM group channel 0.

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 0 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF0
      bit_offset: 4
      bit_width: 1
      description: 'Channel 0 Capture Interrupt Indication Flag

        If PWM group channel 0 rising latch interrupt is enabled (CRL_IE0=1), a rising
        transition occurs at PWM group channel 0 will result in CAPIF0 to high; Similarly,
        a falling transition will cause CAPIF0 to be set high if PWM group channel
        0 falling latch interrupt is enabled (CFL_IE0=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI0
      bit_offset: 6
      bit_width: 1
      description: 'CRLR0 Latched Indicator Bit

        When PWM group input channel 0 has a rising transition, CRLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI0
      bit_offset: 7
      bit_width: 1
      description: 'CFLR0 Latched Indicator Bit

        When PWM group input channel 0 has a falling transition, CFLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV1
      bit_offset: 16
      bit_width: 1
      description: 'Channel 1 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE1
      bit_offset: 17
      bit_width: 1
      description: 'Channel 1 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 1 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE1
      bit_offset: 18
      bit_width: 1
      description: 'Channel 1 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 1 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH1EN
      bit_offset: 19
      bit_width: 1
      description: 'Channel 1 Capture Function Enable

        1 = Enable capture function on PWM group channel 1.

        0 = Disable capture function on PWM group channel 1.

        When Enable, Capture latched the PMW-counter and saved to CRLR (Rising latch)
        and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 1 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF1
      bit_offset: 20
      bit_width: 1
      description: 'Channel 1 Capture Interrupt Indication Flag

        If PWM group channel 1 rising latch interrupt is enabled (CRL_IE1=1), a rising
        transition occurs at PWM group channel 1 will result in CAPIF1 to high; Similarly,
        a falling transition will cause CAPIF1 to be set high if PWM group channel
        1 falling latch interrupt is enabled (CFL_IE1=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI1
      bit_offset: 22
      bit_width: 1
      description: 'CRLR1 Latched Indicator Bit

        When PWM group input channel 1 has a rising transition, CRLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI1
      bit_offset: 23
      bit_width: 1
      description: 'CFLR1 Latched Indicator Bit

        When PWM group input channel 1 has a falling transition, CFLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR2
    addr: 0x40040054
    size_bits: 32
    description: Capture Control Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV2
      bit_offset: 0
      bit_width: 1
      description: 'Channel 2 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE2
      bit_offset: 1
      bit_width: 1
      description: 'Channel 2 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 2 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE2
      bit_offset: 2
      bit_width: 1
      description: 'Channel 2 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 2 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH2EN
      bit_offset: 3
      bit_width: 1
      description: 'Channel 2 Capture Function Enable

        1 = Enable capture function on PWM group channel 2.

        0 = Disable capture function on PWM group channel 2.

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 2 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF2
      bit_offset: 4
      bit_width: 1
      description: 'Channel 2 Capture Interrupt Indication Flag

        If PWM group channel 2 rising latch interrupt is enabled (CRL_IE2=1), a rising
        transition occurs at PWM group channel 2 will result in CAPIF2 to high; Similarly,
        a falling transition will cause CAPIF2 to be set high if PWM group channel
        2 falling latch interrupt is enabled (CFL_IE2=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI2
      bit_offset: 6
      bit_width: 1
      description: 'CRLR2 Latched Indicator Bit

        When PWM group input channel 2 has a rising transition, CRLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI2
      bit_offset: 7
      bit_width: 1
      description: 'CFLR2 Latched Indicator Bit

        When PWM group input channel 2 has a falling transition, CFLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV3
      bit_offset: 16
      bit_width: 1
      description: 'Channel 3 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE3
      bit_offset: 17
      bit_width: 1
      description: 'Channel 3 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 3 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE3
      bit_offset: 18
      bit_width: 1
      description: 'Channel 3 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 3 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH3EN
      bit_offset: 19
      bit_width: 1
      description: 'Channel 3 Capture Function Enable

        1 = Enable capture function on PWM group channel 3.

        0 = Disable capture function on PWM group channel 3.

        When Enable, Capture latched the PMW-counter and saved to CRLR (Rising latch)
        and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 3 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF3
      bit_offset: 20
      bit_width: 1
      description: 'Channel 3 Capture Interrupt Indication Flag

        If PWM group channel 3 rising latch interrupt is enabled (CRL_IE3=1), a rising
        transition occurs at PWM group channel 3 will result in CAPIF3 to high; Similarly,
        a falling transition will cause CAPIF3 to be set high if PWM group channel
        3 falling latch interrupt is enabled (CFL_IE3=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI3
      bit_offset: 22
      bit_width: 1
      description: 'CRLR3 Latched Indicator Bit

        When PWM group input channel 3 has a rising transition, CRLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI3
      bit_offset: 23
      bit_width: 1
      description: 'CFLR3 Latched Indicator Bit

        When PWM group input channel 3 has a falling transition, CFLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CRLR0
    addr: 0x40040058
    size_bits: 32
    description: Capture Rising Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR0
    addr: 0x4004005c
    size_bits: 32
    description: Capture Falling Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR1
    addr: 0x40040060
    size_bits: 32
    description: Capture Rising Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 1 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR1
    addr: 0x40040064
    size_bits: 32
    description: Capture Falling Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 1 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR2
    addr: 0x40040068
    size_bits: 32
    description: Capture Rising Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 2 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR2
    addr: 0x4004006c
    size_bits: 32
    description: Capture Falling Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 2 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR3
    addr: 0x40040070
    size_bits: 32
    description: Capture Rising Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR3
    addr: 0x40040074
    size_bits: 32
    description: Capture Falling Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAPENR
    addr: 0x40040078
    size_bits: 32
    description: Capture Input Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPENR
      bit_offset: 0
      bit_width: 4
      description: "Capture Input Enable Register\nThere are four capture inputs from
        pad. Bit0~Bit3 are used to control each inputs enable or disable. \n0 = Disable
        (PWMx multi-function pin input does not affect input capture function)\n1
        = Enable (PWMx multi-function pin input will affect its input capture function.)\n\n\n\nCAPENR\nBit
        3210 for PWM group A\nBit xxx1 Capture channel 0 is from pin PA.12 \nBit xx1x
        Capture channel 1 is from pin PA.13 \nBit x1xx Capture channel 2 is from pin
        PA.14\nBit 1xxx Capture channel 3 is from pin PA.15 \nBit 3210 for PWM group
        B\nBit xxx1 Capture channel 0 is from pin PE.11\nBit xx1x Capture channel
        1 is from pin PE.5\nBit x1xx Capture channel 2 is from pin PE.0\nBit 1xxx
        Capture channel 3 is from pin PE.1 "
      read_allowed: true
      write_allowed: true
  - !Register
    name: POE
    addr: 0x4004007c
    size_bits: 32
    description: PWM Output Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWM0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Output Enable Register

        1 = Enable PWM channel 0 output to pin

        0 = Disable PWM channel 0 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Output Enable Register

        1 = Enable PWM channel 1 output to pin

        0 = Disable PWM channel 1 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Output Enable Register

        1 = Enable PWM channel 2 output to pin

        0 = Disable PWM channel 2 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Output Enable Register

        1 = Enable PWM channel 3 output to pin

        0 = Disable PWM channel 3 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
- !Module
  name: PWMB
  description: Registers group
  base_addr: 0x40140000
  size: 0x80
  registers:
  - !Register
    name: PPR
    addr: 0x40140000
    size_bits: 32
    description: PWM Prescaler Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CP01
      bit_offset: 0
      bit_width: 8
      description: 'Clock prescaler 0 (PWM-timer 0 & 1 for group A and PWM-timer 4
        & 5 for group B)

        Clock input is divided by (CP01 + 1) before it is fed to the corresponding
        PWM-timer

        If CP01=0, then the clock prescaler 0 output clock will be stopped. So corresponding
        PWM-timer will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CP23
      bit_offset: 8
      bit_width: 8
      description: 'Clock prescaler 2 (PWM-timer2 & 3 for group A and PWM-timer 6
        & 7 for group B)

        Clock input is divided by (CP23 + 1) before it is fed to the corresponding
        PWM-timer.

        If CP23=0, then the clock prescaler 2 output clock will be stopped. So corresponding
        PWM-timer will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI01
      bit_offset: 16
      bit_width: 8
      description: 'Dead Zone Interval for Pair of Channel 0 and Channel 1 (PWM0 and
        PWM1 pair for PWM group A, PWM4 and PWM5 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI23
      bit_offset: 24
      bit_width: 8
      description: 'Dead Zone Interval for Pair of Channel2 and Channel3 (PWM2 and
        PWM3 pair for PWM group A, PWM6 and PWM7 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CSR
    addr: 0x40140004
    size_bits: 32
    description: PWM Clock Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CSR0
      bit_offset: 0
      bit_width: 3
      description: 'PWM Timer 0 Clock Source Selection (PWM timer 0 for group A and
        PWM timer 4 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR1
      bit_offset: 4
      bit_width: 3
      description: 'PWM Timer 1 Clock Source Selection (PWM timer 1 for group A and
        PWM timer 5 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR2
      bit_offset: 8
      bit_width: 3
      description: 'PWM Timer 2 Clock Source Selection (PWM timer 2 for group A and
        PWM timer 6 for group B)

        Select clock input for PWM timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR3
      bit_offset: 12
      bit_width: 3
      description: "PWM Timer 3 Clock Source Selection (PWM timer 3 for group A and
        PWM timer 7 for group B)\nSelect clock input for PWM timer.\nCSR3 [14:12]\tInput
        clock divided by\t\n100\t1\t\n011\t16\t\n010\t8\t\n001\t4\t\n000\t2\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PCR
    addr: 0x40140008
    size_bits: 32
    description: PWM Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CH0EN
      bit_offset: 0
      bit_width: 1
      description: 'PWM-Timer 0 Enable (PWM timer 0 for group A and PWM timer 4 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0INV
      bit_offset: 2
      bit_width: 1
      description: 'PWM-Timer 0 Output Inverter Enable (PWM timer 0 for group A and
        PWM timer 4 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0MOD
      bit_offset: 3
      bit_width: 1
      description: 'PWM-Timer 0 Auto-reload/One-Shot Mode (PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR0 and
        CMR0 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN01
      bit_offset: 4
      bit_width: 1
      description: 'Dead-Zone 0 Generator Enable (PWM0 and PWM1 pair for PWM group
        A, PWM4 and PWM5 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM0 and PWM1 becomes
        a complementary pair for PWM group A and the pair of PWM4 and PWM5 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN23
      bit_offset: 5
      bit_width: 1
      description: 'Dead-Zone 2 Generator Enable (PWM2 and PWM3 pair for PWM group
        A, PWM6 and PWM7 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM2 and PWM3 becomes
        a complementary pair for PWM group A and the pair of PWM6 and PWM7 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1EN
      bit_offset: 8
      bit_width: 1
      description: 'PWM-Timer 1 Enable (PWM timer 1 for group A and PWM timer 5 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1INV
      bit_offset: 10
      bit_width: 1
      description: 'PWM-Timer 1 Output Inverter Enable (PWM timer 1 for group A and
        PWM timer 5 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1MOD
      bit_offset: 11
      bit_width: 1
      description: 'PWM-Timer 1 Auto-reload/One-Shot Mode (PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Auto-load Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR1 and
        CMR1 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2EN
      bit_offset: 16
      bit_width: 1
      description: 'PWM-Timer 2 Enable (PWM timer 2 for group A and PWM timer 6 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2INV
      bit_offset: 18
      bit_width: 1
      description: 'PWM-Timer 2 Output Inverter Enable (PWM timer 2 for group A and
        PWM timer 6 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2MOD
      bit_offset: 19
      bit_width: 1
      description: 'PWM-Timer 2 Auto-reload/One-Shot Mode (PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR2 and
        CMR2 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3EN
      bit_offset: 24
      bit_width: 1
      description: 'PWM-Timer 3 Enable (PWM timer 3 for group A and PWM timer 7 for
        group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3INV
      bit_offset: 26
      bit_width: 1
      description: 'PWM-Timer 3 Output Inverter Enable (PWM timer 3 for group A and
        PWM timer 7 for group B)

        1 = Inverter enable

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3MOD
      bit_offset: 27
      bit_width: 1
      description: 'PWM-Timer 3 Auto-reload/One-Shot Mode (PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR3 and
        CMR3 be clear.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CNR0
    addr: 0x4014000c
    size_bits: 32
    description: PWM Counter Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR0
    addr: 0x40140010
    size_bits: 32
    description: PWM Comparator Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR0
    addr: 0x40140014
    size_bits: 32
    description: PWM Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR1
    addr: 0x40140018
    size_bits: 32
    description: PWM Counter Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR1
    addr: 0x4014001c
    size_bits: 32
    description: PWM Comparator Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM01_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR1
    addr: 0x40140020
    size_bits: 32
    description: PWM Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR2
    addr: 0x40140024
    size_bits: 32
    description: PWM Counter Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR2
    addr: 0x40140028
    size_bits: 32
    description: PWM Comparator Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR2
    addr: 0x4014002c
    size_bits: 32
    description: PWM Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR3
    addr: 0x40140030
    size_bits: 32
    description: PWM Counter Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR3
    addr: 0x40140034
    size_bits: 32
    description: PWM Comparator Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CMR determines the PWM duty.

        PWM frequency = PWM23_CLK/(prescale+1)*(clock divider)/(CNR+1).

        Duty ratio = (CMR+1)/(CNR+1).

        CMR >= CNR: PWM output is always high.

        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.

        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit

        (Unit : 1 PWM clock cycle)

        Note: Any write to CMR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR3
    addr: 0x40140038
    size_bits: 32
    description: PWM Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PBCR
    addr: 0x4014003c
    size_bits: 32
    description: New description for register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BCn
      bit_offset: 0
      bit_width: 1
      description: 'PWM Backward Compatible Register

        0 = PWM register action is compatible with Medium Density

        1 = PWM register action is not compatible with Medium Density

        Please reference CCR0/CCR2 register bit 6, 7, 22, 23 description'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIER
    addr: 0x40140040
    size_bits: 32
    description: PWM Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIE0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIIR
    addr: 0x40140044
    size_bits: 32
    description: PWM Interrupt Indication Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIF0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Interrupt Status

        Flag is set by hardware when PWM0 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Interrupt Status

        Flag is set by hardware when PWM1 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Interrupt Status

        Flag is set by hardware when PWM2 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Interrupt Status

        Flag is set by hardware when PWM3 down counter reaches zero, software can
        write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR0
    addr: 0x40140050
    size_bits: 32
    description: Capture Control Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV0
      bit_offset: 0
      bit_width: 1
      description: 'Channel 0 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE0
      bit_offset: 1
      bit_width: 1
      description: 'Channel 0 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 0 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE0
      bit_offset: 2
      bit_width: 1
      description: 'Channel 0 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 0 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH0EN
      bit_offset: 3
      bit_width: 1
      description: 'Channel 0 Capture Function Enable

        1 = Enable capture function on PWM group channel 0.

        0 = Disable capture function on PWM group channel 0.

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 0 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF0
      bit_offset: 4
      bit_width: 1
      description: 'Channel 0 Capture Interrupt Indication Flag

        If PWM group channel 0 rising latch interrupt is enabled (CRL_IE0=1), a rising
        transition occurs at PWM group channel 0 will result in CAPIF0 to high; Similarly,
        a falling transition will cause CAPIF0 to be set high if PWM group channel
        0 falling latch interrupt is enabled (CFL_IE0=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI0
      bit_offset: 6
      bit_width: 1
      description: 'CRLR0 Latched Indicator Bit

        When PWM group input channel 0 has a rising transition, CRLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI0
      bit_offset: 7
      bit_width: 1
      description: 'CFLR0 Latched Indicator Bit

        When PWM group input channel 0 has a falling transition, CFLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV1
      bit_offset: 16
      bit_width: 1
      description: 'Channel 1 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE1
      bit_offset: 17
      bit_width: 1
      description: 'Channel 1 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 1 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE1
      bit_offset: 18
      bit_width: 1
      description: 'Channel 1 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 1 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH1EN
      bit_offset: 19
      bit_width: 1
      description: 'Channel 1 Capture Function Enable

        1 = Enable capture function on PWM group channel 1.

        0 = Disable capture function on PWM group channel 1.

        When Enable, Capture latched the PMW-counter and saved to CRLR (Rising latch)
        and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 1 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF1
      bit_offset: 20
      bit_width: 1
      description: 'Channel 1 Capture Interrupt Indication Flag

        If PWM group channel 1 rising latch interrupt is enabled (CRL_IE1=1), a rising
        transition occurs at PWM group channel 1 will result in CAPIF1 to high; Similarly,
        a falling transition will cause CAPIF1 to be set high if PWM group channel
        1 falling latch interrupt is enabled (CFL_IE1=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI1
      bit_offset: 22
      bit_width: 1
      description: 'CRLR1 Latched Indicator Bit

        When PWM group input channel 1 has a rising transition, CRLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI1
      bit_offset: 23
      bit_width: 1
      description: 'CFLR1 Latched Indicator Bit

        When PWM group input channel 1 has a falling transition, CFLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR2
    addr: 0x40140054
    size_bits: 32
    description: Capture Control Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV2
      bit_offset: 0
      bit_width: 1
      description: 'Channel 2 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE2
      bit_offset: 1
      bit_width: 1
      description: 'Channel 2 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 2 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE2
      bit_offset: 2
      bit_width: 1
      description: 'Channel 2 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 2 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH2EN
      bit_offset: 3
      bit_width: 1
      description: 'Channel 2 Capture Function Enable

        1 = Enable capture function on PWM group channel 2.

        0 = Disable capture function on PWM group channel 2.

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 2 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF2
      bit_offset: 4
      bit_width: 1
      description: 'Channel 2 Capture Interrupt Indication Flag

        If PWM group channel 2 rising latch interrupt is enabled (CRL_IE2=1), a rising
        transition occurs at PWM group channel 2 will result in CAPIF2 to high; Similarly,
        a falling transition will cause CAPIF2 to be set high if PWM group channel
        2 falling latch interrupt is enabled (CFL_IE2=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI2
      bit_offset: 6
      bit_width: 1
      description: 'CRLR2 Latched Indicator Bit

        When PWM group input channel 2 has a rising transition, CRLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI2
      bit_offset: 7
      bit_width: 1
      description: 'CFLR2 Latched Indicator Bit

        When PWM group input channel 2 has a falling transition, CFLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV3
      bit_offset: 16
      bit_width: 1
      description: 'Channel 3 Inverter Enable

        1 = Inverter enable. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE3
      bit_offset: 17
      bit_width: 1
      description: 'Channel 3 Rising Latch Interrupt Enable

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 3 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE3
      bit_offset: 18
      bit_width: 1
      description: 'Channel 3 Falling Latch Interrupt Enable

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 3 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH3EN
      bit_offset: 19
      bit_width: 1
      description: 'Channel 3 Capture Function Enable

        1 = Enable capture function on PWM group channel 3.

        0 = Disable capture function on PWM group channel 3.

        When Enable, Capture latched the PMW-counter and saved to CRLR (Rising latch)
        and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 3 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF3
      bit_offset: 20
      bit_width: 1
      description: 'Channel 3 Capture Interrupt Indication Flag

        If PWM group channel 3 rising latch interrupt is enabled (CRL_IE3=1), a rising
        transition occurs at PWM group channel 3 will result in CAPIF3 to high; Similarly,
        a falling transition will cause CAPIF3 to be set high if PWM group channel
        3 falling latch interrupt is enabled (CFL_IE3=1).

        Write 1 to clear this bit to zero'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI3
      bit_offset: 22
      bit_width: 1
      description: 'CRLR3 Latched Indicator Bit

        When PWM group input channel 3 has a rising transition, CRLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI3
      bit_offset: 23
      bit_width: 1
      description: 'CFLR3 Latched Indicator Bit

        When PWM group input channel 3 has a falling transition, CFLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.

        In Medium Density, software can write 0 to clear this bit to zero.

        In Low Density, software can write 0 to clear this bit to zero if BCn bit
        is 0, and can Write 1 to clear this bit to zero if BCn bit is 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CRLR0
    addr: 0x40140058
    size_bits: 32
    description: Capture Rising Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR0
    addr: 0x4014005c
    size_bits: 32
    description: Capture Falling Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR1
    addr: 0x40140060
    size_bits: 32
    description: Capture Rising Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 1 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR1
    addr: 0x40140064
    size_bits: 32
    description: Capture Falling Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 1 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR2
    addr: 0x40140068
    size_bits: 32
    description: Capture Rising Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 2 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR2
    addr: 0x4014006c
    size_bits: 32
    description: Capture Falling Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 2 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR3
    addr: 0x40140070
    size_bits: 32
    description: Capture Rising Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR3
    addr: 0x40140074
    size_bits: 32
    description: Capture Falling Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAPENR
    addr: 0x40140078
    size_bits: 32
    description: Capture Input Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPENR
      bit_offset: 0
      bit_width: 4
      description: "Capture Input Enable Register\nThere are four capture inputs from
        pad. Bit0~Bit3 are used to control each inputs enable or disable. \n0 = Disable
        (PWMx multi-function pin input does not affect input capture function)\n1
        = Enable (PWMx multi-function pin input will affect its input capture function.)\n\n\n\nCAPENR\nBit
        3210 for PWM group A\nBit xxx1 Capture channel 0 is from pin PA.12 \nBit xx1x
        Capture channel 1 is from pin PA.13 \nBit x1xx Capture channel 2 is from pin
        PA.14\nBit 1xxx Capture channel 3 is from pin PA.15 \nBit 3210 for PWM group
        B\nBit xxx1 Capture channel 0 is from pin PE.11\nBit xx1x Capture channel
        1 is from pin PE.5\nBit x1xx Capture channel 2 is from pin PE.0\nBit 1xxx
        Capture channel 3 is from pin PE.1 "
      read_allowed: true
      write_allowed: true
  - !Register
    name: POE
    addr: 0x4014007c
    size_bits: 32
    description: PWM Output Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWM0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Output Enable Register

        1 = Enable PWM channel 0 output to pin

        0 = Disable PWM channel 0 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Output Enable Register

        1 = Enable PWM channel 1 output to pin

        0 = Disable PWM channel 1 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Output Enable Register

        1 = Enable PWM channel 2 output to pin

        0 = Disable PWM channel 2 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Output Enable Register

        1 = Enable PWM channel 3 output to pin

        0 = Disable PWM channel 3 output to pin

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
- !Module
  name: ADC
  description: Registers group
  base_addr: 0x400e0000
  size: 0x44
  registers:
  - !Register
    name: ADDR0
    addr: 0x400e0000
    size_bits: 32
    description: A/D Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12]'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR1
    addr: 0x400e0004
    size_bits: 32
    description: A/D Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR2
    addr: 0x400e0008
    size_bits: 32
    description: A/D Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR3
    addr: 0x400e000c
    size_bits: 32
    description: A/D Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR4
    addr: 0x400e0010
    size_bits: 32
    description: A/D Data Register 4
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR5
    addr: 0x400e0014
    size_bits: 32
    description: A/D Data Register 5
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR6
    addr: 0x400e0018
    size_bits: 32
    description: A/D Data Register 6
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR7
    addr: 0x400e001c
    size_bits: 32
    description: A/D Data Register 7
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 16
      description: 'A/D Conversion Result

        This field contains conversion result of ADC.

        For Medium density, RSLT[15:12] always read as 0.

        For Low density, if DMOF bit (ADCR[31]) set to 0, 12 bits ADC conversion result
        with unsigned format will be filled in RSLT[11:0] and zero will be filled
        in RSLT[15:12]. If DMOF bit (ADCR[31]) set to 1, 12 bits ADC conversion result
        with 2''s complement format will be filled in RSLT[11:0] and signed bits will
        be filled in RSLT[15:12].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1 and previous conversion result
        is gone. It will be cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADCR
    addr: 0x400e0020
    size_bits: 32
    description: A/D Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADEN
      bit_offset: 0
      bit_width: 1
      description: 'A/D Converter Enable

        1 = Enable

        0 = Disable

        Before starting A/D conversion function, this bit should be set to 1. Clear
        it to 0 to disable A/D converter analog circuit for saving power consumption.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADIE
      bit_offset: 1
      bit_width: 1
      description: 'A/D Interrupt Enable

        1 = Enable A/D interrupt function

        0 = Disable A/D interrupt function

        A/D conversion end interrupt request is generated if ADIE bit is set to 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADMD
      bit_offset: 2
      bit_width: 2
      description: 'A/D Converter Operation Mode

        00 = Single conversion

        01 = Reserved

        10 = Single-cycle scan

        11 = Continuous scan

        When changing the operation mode, software should disable ADST bit firstly.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGS
      bit_offset: 4
      bit_width: 2
      description: "Hardware Trigger Source\n00 = A/D conversion is started by external
        STADC pin.\nOthers = Reserved\nSoftware should disable TRGE and ADST before
        change TRGS. \nIn hardware trigger mode, the ADST bit is set by the external
        trigger from STADC."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGCOND
      bit_offset: 6
      bit_width: 2
      description: 'External Trigger Condition

        These two bits decide external pin STADC trigger event is level or edge. The
        signal must be kept at stable state at least 8 PCLKs for level trigger and
        4 PCLKs at high and low state for edge trigger.

        00 = Low level

        01 = High level

        10 = Falling edge

        11 = Positive edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGEN
      bit_offset: 8
      bit_width: 1
      description: 'External Trigger Enable

        Enable or disable triggering of A/D conversion by external STADC pin.

        1= Enable

        0= Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PTEN
      bit_offset: 9
      bit_width: 1
      description: 'PDMA Transfer Enable

        1 = Enable PDMA data transfer in ADDR 0~7

        0 = Disable PDMA data transfer.

        When A/D conversion is completed, the converted data is loaded into ADDR 0~7,
        software can enable this bit to generate a PDMA data transfer request.

        When PTEN=1, software must set ADIE=0 to disable interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIFFEN
      bit_offset: 10
      bit_width: 1
      description: 'A/D Differential Input Mode Enable

        1 = A/D is in differential analog input mode

        0 = A/D is in single-end analog input mode

        Differential input voltage (Vdiff) = Vplus - Vminus

        The Vplus of differential input paired channel 0 is from ADC0 pin; Vminus
        is from ADC1 pin.

        The Vplus of differential input paired channel 1 is from ADC2 pin; Vminus
        is from ADC3 pin.

        The Vplus of differential input paired channel 2 is from ADC4 pin; Vminus
        is from ADC5 pin.

        The Vplus of differential input paired channel 3 is from ADC6 pin; Vminus
        is from ADC7 pin.

        In differential input mode, only one of the two corresponding channels needs
        to be enabled in ADCHER. The conversion result will be placed to the corresponding
        data register of the enabled channel. If both channels of a differential input
        paired channel are enabled, the ADC will convert it twice in scan mode. And
        then write the conversion result to the two corresponding data registers.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADST
      bit_offset: 11
      bit_width: 1
      description: 'A/D Conversion Start

        1 = Conversion start.

        0 = Conversion stopped and A/D converter enter idle state.

        ADST bit can be controlled by two sources: software write and external pin
        STADC. ADST is cleared to 0 by hardware automatically at the ends of single
        mode and single-cycle scan mode on specified channels. In continuous scan
        mode, A/D conversion is continuously performed sequentially until this bit
        is cleared to 0 or chip reset.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMOF
      bit_offset: 31
      bit_width: 1
      description: 'A/D differential input Mode Output Format

        This bit is only supported in Low Density.

        1 = A/D Conversion result will be filled in RSLT at ADDRx registers with 2''complement
        format.

        0 = A/D Conversion result will be filled in RSLT at ADDRx registers with unsigned
        format.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCHER
    addr: 0x400e0024
    size_bits: 32
    description: A/D Channel Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CHEN0
      bit_offset: 0
      bit_width: 1
      description: 'Analog Input Channel 0 Enable

        1 = Enable

        0 = Disable

        Channel 0 is the default enable channel if CHEN0~7 are set as 0s.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN1
      bit_offset: 1
      bit_width: 1
      description: 'Analog Input Channel 1 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN2
      bit_offset: 2
      bit_width: 1
      description: 'Analog Input Channel 2 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN3
      bit_offset: 3
      bit_width: 1
      description: 'Analog Input Channel 3 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN4
      bit_offset: 4
      bit_width: 1
      description: 'Analog Input Channel 4 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN5
      bit_offset: 5
      bit_width: 1
      description: 'Analog Input Channel 5 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN6
      bit_offset: 6
      bit_width: 1
      description: 'Analog Input Channel 6 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN7
      bit_offset: 7
      bit_width: 1
      description: 'Analog Input Channel 7 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRESEL
      bit_offset: 8
      bit_width: 2
      description: 'Analog Input Channel 7 select

        00: External analog input

        01: Internal bandgap voltage

        10: Internal temperature sensor

        11: Reserved'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCMPR0
    addr: 0x400e0028
    size_bits: 32
    description: A/D Compare Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMPEN
      bit_offset: 0
      bit_width: 1
      description: 'Compare Enable

        1 = Enable compare.

        0 = Disable compare.

        Set this bit to 1 to enable ADC controller to compare CMPD[11:0] with specified
        channel conversion result when converted data is loaded into ADDR register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPIE
      bit_offset: 1
      bit_width: 1
      description: 'Compare Interrupt Enable

        1 = Enable

        0 = Disable

        If the compare function is enabled and the compare condition matches the setting
        of CMPCOND and CMPMATCNT, CMPF0 bit will be asserted, in the meanwhile, if
        CMPIE is set to 1, a compare interrupt request is generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCOND
      bit_offset: 2
      bit_width: 1
      description: 'Compare Condition

        1 = Set the compare condition as that when a 12-bit A/D conversion result
        is greater or equal to the 12-bit CMPD (ADCMPR0[27:16]), the internal match
        counter will increase one.

        0 = Set the compare condition as that when a 12-bit A/D conversion result
        is less than the 12-bit CMPD (ADCMPR0[27:16]), the internal match counter
        will increase one.

        When the internal counter reaches the value to (CMPMATCNT +1), the CMPF0 bit
        will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCH
      bit_offset: 3
      bit_width: 3
      description: 'Compare Channel Selection

        000 = Channel 0 conversion result is selected to be compared.

        001 = Channel 1 conversion result is selected to be compared.

        010 = Channel 2 conversion result is selected to be compared.

        011 = Channel 3 conversion result is selected to be compared.

        100 = Channel 4 conversion result is selected to be compared.

        101 = Channel 5 conversion result is selected to be compared.

        110 = Channel 6 conversion result is selected to be compared.

        111 = Channel 7 conversion result is selected to be compared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPMATCNT
      bit_offset: 8
      bit_width: 4
      description: 'Compare Match Count

        When the specified A/D channel analog conversion result matches the compare
        condition defined by CMPCOND[2], the internal match counter will increase
        1. When the internal counter reaches the value to (CMPMATCNT +1), the CMPF0
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPD
      bit_offset: 16
      bit_width: 12
      description: 'Comparison Data

        The 12 bits data is used to compare with conversion result of specified channel.
        Software can use it to monitor the external analog input pin voltage transition
        in scan mode without imposing a load on software.

        The following description is only supported in Low Density.

        When DMOF bit is set to 0, ADC comparator compares CMPD with conversion result
        with unsigned format. CMPD should be filled in unsigned format.

        When DMOF bit is set to 1, ADC comparator compares CMPD with conversion result
        with 2''s complement format. CMPD should be filled in 2''s complement format.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCMPR1
    addr: 0x400e002c
    size_bits: 32
    description: A/D Compare Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMPEN
      bit_offset: 0
      bit_width: 1
      description: 'Compare Enable

        1 = Enable compare.

        0 = Disable compare.

        Set this bit to 1 to enable ADC controller to compare CMPD[11:0] with specified
        channel conversion result when converted data is loaded into ADDR register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPIE
      bit_offset: 1
      bit_width: 1
      description: 'Compare Interrupt Enable

        1 = Enable

        0 = Disable

        If the compare function is enabled and the compare condition matches the setting
        of CMPCOND and CMPMATCNT, CMPF1 bit will be asserted, in the meanwhile, if
        CMPIE is set to 1, a compare interrupt request is generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCOND
      bit_offset: 2
      bit_width: 1
      description: 'Compare Condition

        1 = Set the compare condition as that when a 12-bit A/D conversion result
        is greater or equal to the 12-bit CMPD (ADCMPR1[27:16]), the internal match
        counter will increase one.

        0 = Set the compare condition as that when a 12-bit A/D conversion result
        is less than the 12-bit CMPD (ADCMPR1[27:16]), the internal match counter
        will increase one.

        When the internal counter reaches the value to (CMPMATCNT +1), the CMPF1 bit
        will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCH
      bit_offset: 3
      bit_width: 3
      description: 'Compare Channel Selection

        000 = Channel 0 conversion result is selected to be compared.

        001 = Channel 1 conversion result is selected to be compared.

        010 = Channel 2 conversion result is selected to be compared.

        011 = Channel 3 conversion result is selected to be compared.

        100 = Channel 4 conversion result is selected to be compared.

        101 = Channel 5 conversion result is selected to be compared.

        110 = Channel 6 conversion result is selected to be compared.

        111 = Channel 7 conversion result is selected to be compared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPMATCNT
      bit_offset: 8
      bit_width: 4
      description: 'Compare Match Count

        When the specified A/D channel analog conversion result matches the compare
        condition defined by CMPCOND[2], the internal match counter will increase
        1. When the internal counter reaches the value to (CMPMATCNT +1), the CMPF1
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPD
      bit_offset: 16
      bit_width: 12
      description: 'Comparison Data

        The 12 bits data is used to compare with conversion result of specified channel.
        Software can use it to monitor the external analog input pin voltage transition
        in scan mode without imposing a load on software.

        The following description is only supported in Low Density.

        When DMOF bit is set to 0, ADC comparator compares CMPD with conversion result
        with unsigned format. CMPD should be filled in unsigned format.

        When DMOF bit is set to 1, ADC comparator compares CMPD with conversion result
        with 2''s complement format. CMPD should be filled in 2''s complement format.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADSR
    addr: 0x400e0030
    size_bits: 32
    description: A/D Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADF
      bit_offset: 0
      bit_width: 1
      description: 'A/D Conversion End Flag

        A status flag that indicates the end of A/D conversion.

        ADF is set to 1 at these two conditions:

        When A/D conversion ends in single mode

        When A/D conversion ends on all specified channels in scan mode.

        This flag can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPF0
      bit_offset: 1
      bit_width: 1
      description: 'Compare Flag

        When the selected channel A/D conversion result meets the setting conditions
        of ADCMPR0 then this bit will be set to 1. And it can be cleared by writing
        1 to itself.

        1 = Conversion result in ADDR meets ADCMPR0 setting

        0 = Conversion result in ADDR does not meet ADCMPR0 setting'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPF1
      bit_offset: 2
      bit_width: 1
      description: 'Compare Flag

        When the selected channel A/D conversion result meets the setting conditions
        of ADCMPR1 then this bit will be set to 1. And it can be cleared by writing
        1 to itself.

        1 = Conversion result in ADDR meets ADCMPR1 setting

        0 = Conversion result in ADDR does not meet ADCMPR1 setting'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 3
      bit_width: 1
      description: 'BUSY/IDLE

        1 = A/D converter is busy at conversion.

        0 = A/D converter is in idle state.

        This bit is mirror of as ADST bit in ADCR.

        It is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CHANNEL
      bit_offset: 4
      bit_width: 3
      description: 'Current Conversion Channel

        This filed reflects current conversion channel when BUSY=1. When BUSY=0, it
        shows the next channel will be converted.

        It is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 8
      bit_width: 8
      description: 'Data Valid flag

        It is a mirror of VALID bit in ADDRx

        It is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 8
      description: 'Over Run flag

        It is a mirror of OVERRUN bit in ADDRx

        It is read only.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADCALR
    addr: 0x400e0034
    size_bits: 32
    description: A/D Calibration Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CALEN
      bit_offset: 0
      bit_width: 1
      description: 'Self Calibration Enable

        1 = Enable self calibration

        0 = Disable self calibration

        Software can set this bit to 1 enables A/D converter to do self calibration
        function. It needs 127 ADC clocks to complete calibration. This bit must be
        kept at 1 after CALDONE asserted. Clearing this bit will disable self calibration
        function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CALDONE
      bit_offset: 1
      bit_width: 1
      description: "Calibration is Done \n1 = A/D converter self calibration is done\n0
        = A/D converter has not been calibrated or calibration is in progress if CALEN
        bit is set.\nWhen 0 is written to CALEN bit, CALDONE bit is cleared by hardware
        immediately. It is a read only bit."
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADPDMA
    addr: 0x400e0040
    size_bits: 32
    description: New description for register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: AD_PDMA
      bit_offset: 0
      bit_width: 12
      description: 'ADC PDMA current transfer data register

        When PDMA transferring, read this register can monitor current PDMA transfer
        data. This is a read only register.'
      read_allowed: true
      write_allowed: false
- !Module
  name: CAN
  description: Registers group
  base_addr: 0x40180000
  size: 0x170
  registers:
  - !Register
    name: CAN_CON
    addr: 0x40180000
    size_bits: 32
    description: Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: Init
      bit_offset: 0
      bit_width: 1
      description: 'Init Initialization

        1 = Initialization is started.

        0 = Normal Operation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 1
      bit_width: 1
      description: 'Module Interrupt Enable

        1 = Enabled.

        0 = Disabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIE
      bit_offset: 2
      bit_width: 1
      description: 'Status Change Interrupt Enable

        1 = Enabled - An interrupt will be generated when a message transfer is successfully
        completed or a CAN bus error is detected.

        0 = Disabled - No Status Change Interrupt will be generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EIE
      bit_offset: 3
      bit_width: 1
      description: 'Error Interrupt Enable

        1 = Enabled - A change in the bits BOff or EWarn in the Status Register will
        generate an interrupt.

        0 = Disabled - No Error Status Interrupt will be generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAR
      bit_offset: 5
      bit_width: 1
      description: "Disable Automatic Re-transmission \n1 = Automatic Retransmission
        disabled.\n0 = Automatic Retransmission of disturbed messages enabled."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CCE
      bit_offset: 6
      bit_width: 1
      description: 'Configuration Change Enable

        1 = Write access to the Bit Timing Register (CAN_BTIME & CAN_BRP) allowed.
        (while Init bit =1).

        0 = No write access to the Bit Timing Register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Test
      bit_offset: 7
      bit_width: 1
      description: 'Test Mode Enable

        1 = Test Mode.

        0 = Normal Operation.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_STATUS
    addr: 0x40180004
    size_bits: 32
    description: Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: LEC
      bit_offset: 0
      bit_width: 3
      description: 'Last Error Code (Type of the last error to occur on the CAN bus)

        The LEC field holds a code, which indicates the type of the last error to
        occur on the CAN bus. This field will be cleared to ''0'' when a message has
        been transferred (reception or transmission) without error. The unused code
        ''7'' may be written by the CPU to check for updates. Table 5-17 describes
        the error codes.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxOK
      bit_offset: 3
      bit_width: 1
      description: 'Transmitted a Message Successfully

        1 = Since this bit was last reset by the CPU, a message has been successfully
        (error free and acknowledged by at least one other node) transmitted.

        0 = Since this bit was reset by the CPU, no message has been successfully
        transmitted. This bit is never reset by the CAN Core.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RxOK
      bit_offset: 4
      bit_width: 1
      description: 'Received a Message Successfully

        1 = A message has been successfully received since this bit was last reset
        by the CPU (independent of the result of acceptance filtering).

        0 = No message has been successfully received since this bit was last reset
        by the CPU. This bit is never reset by the CAN Core.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPass
      bit_offset: 5
      bit_width: 1
      description: 'Error Passive (Read Only)

        1 = The CAN Core is in the error passive state as defined in the CAN Specification.

        0 = The CAN Core is error active.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EWarn
      bit_offset: 6
      bit_width: 1
      description: 'Error Warning Status (Read Only)

        1 = At least one of the error counters in the EML has reached the error warning
        limit of 96.

        0 = Both error counters are below the error warning limit of 96.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOff
      bit_offset: 7
      bit_width: 1
      description: "Busoff Status (Read Only) \n1 = The CAN module is in busoff state.\n0
        = The CAN module is not in busoff state."
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_ERR
    addr: 0x40180008
    size_bits: 32
    description: Error Counter
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TEC
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Error Counter

        Actual state of the Transmit Error Counter. Values between 0 and 255.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: REC
      bit_offset: 8
      bit_width: 7
      description: 'Receive Error Counter

        Actual state of the Receive Error Counter. Values between 0 and 127.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RP
      bit_offset: 15
      bit_width: 1
      description: 'Receive Error Passive

        1 = The Receive Error Counter has reached the error passive level as defined
        in the CAN Specification.

        0 = The Receive Error Counter is below the error passive level.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_BTIME
    addr: 0x4018000c
    size_bits: 32
    description: Bit Timing Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x2301
    fields:
    - !Field
      name: BRP
      bit_offset: 0
      bit_width: 6
      description: "Baud Rate Prescaler \n0x01-0x3F: The value by which the oscillator
        frequency is divided for generating the bit time quanta. The bit time is built
        up from a multiple of this quanta. Valid values for the Baud Rate Prescaler
        are [0...63]. The actual interpretation by the hardware of this value is such
        that one more than the value programmed here is used."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SJW
      bit_offset: 6
      bit_width: 2
      description: '(Re)Synchronization Jump Width

        0x0-0x3: Valid programmed values are [0 ... 3]. The actual interpretation
        by the hardware of this value is such that one more than the value programmed
        here is used.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TSeg1
      bit_offset: 8
      bit_width: 4
      description: 'Time Segment before the sample Point Minus Sync_seg

        0x01-0x0F: valid values for TSeg1 are [1 ... 15]. The actual interpretation
        by the hardware of this value is such that one more than the value programmed
        is used.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TSeg2
      bit_offset: 12
      bit_width: 3
      description: "Time Segment After sample Point \n0x0-0x7: Valid values for TSeg2
        are [0 ... 7]. The actual interpretation by the hardware of this value is
        such that one more than the value programmed here is used."
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IIDR
    addr: 0x40180010
    size_bits: 32
    description: Interrupt Identifier Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: IntId
      bit_offset: 0
      bit_width: 16
      description: 'Interrupt Identifier (Indicates the source of the interrupt. Ref.
        Table 5-18)

        If several interrupts are pending, the CAN Interrupt Register will point to
        the pending interrupt with the highest priority, disregarding their chronological
        order. An interrupt remains pending until the application software has cleared
        it. If IntId is different from 0x0000 and IE is set, the IRQ interrupt signal
        to the EIC is active. The interrupt remains active until IntId is back to
        value 0x0000 (the cause of the interrupt is reset) or until IE is reset.

        The Status Interrupt has the highest priority. Among the message interrupts,
        the Message Object'' s interrupt priority decreases with increasing message
        number.

        A message interrupt is cleared by clearing the Message Object''s IntPnd bit.
        The Status Interrupt is cleared by reading the Status Register.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_TEST
    addr: 0x40180014
    size_bits: 32
    description: Test Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Res
      bit_offset: 0
      bit_width: 2
      description: 'Reserved

        There are reserved bits.

        These bits are always read as ''0'' and must always be written with ''0''.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Basic
      bit_offset: 2
      bit_width: 1
      description: 'Basic Mode

        1= IF1 Registers used as Tx Buffer, IF2 Registers used as Rx Buffer.

        0 = Basic Mode disabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Silent
      bit_offset: 3
      bit_width: 1
      description: 'Silent Mode

        1 = The module is in Silent Mode.

        0 = Normal operation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LBack
      bit_offset: 4
      bit_width: 1
      description: 'Loop Back Mode

        1 = Loop Back Mode is enabled.

        0 = Loop Back Mode is disabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Tx
      bit_offset: 5
      bit_width: 2
      description: 'Tx[1:0]: Control of CAN_TX pin

        00 = Reset value, CAN_TX is controlled by the CAN Core

        01 = Sample Point can be monitored at CAN_TX pin

        10 = CAN_TX pin drives a dominant (''0'') value.

        11 = CAN_TX pin drives a recessive (''1'') value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Rx
      bit_offset: 7
      bit_width: 1
      description: 'Monitors the actual value of CAN_RX Pin (Read Only)

        1 = The CAN bus is recessive (CAN_RX = ''1'').

        0 = The CAN bus is dominant (CAN_RX = ''0'').'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_BRPE
    addr: 0x40180018
    size_bits: 32
    description: BRP Extension Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BRPE
      bit_offset: 0
      bit_width: 4
      description: 'BRPE: Baud Rate Prescaler Extension

        0x00-0x0F: By programming BRPE, the Baud Rate Prescaler can be extended to
        values up to 1023. The actual interpretation by the hardware is that one more
        than the value programmed by BRPE (MSBs) and BTIME (LSBs) is used.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_CREQ
    addr: 0x40180020
    size_bits: 32
    description: IF1 Command Request Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: MessageNumber
      bit_offset: 0
      bit_width: 6
      description: 'Message Number

        0x01-0x20: Valid Message Number, the Message Object in the Message

        RAM is selected for data transfer.

        0x00: Not a valid Message Number, interpreted as 0x20.

        0x21-0x3F: Not a valid Message Number, interpreted as 0x01-0x1F.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Busy
      bit_offset: 15
      bit_width: 1
      description: 'Busy Flag

        1 = Writing to the IF1 Command Request Register is in progress. This bit can
        only be read by the software.

        0 = Read/write action has finished.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_CMASK
    addr: 0x40180024
    size_bits: 32
    description: IF1 Command Mask Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DAT_B
      bit_offset: 0
      bit_width: 1
      description: "Access Data Bytes [7:4]\nDirection = Write \n1 = Transfer Data
        Bytes [7:4] to Message Object.\n0 = Data Bytes [7:4] unchanged.\nDirection
        = Read\n1 = Transfer Data Bytes [7:4] to IF1 Message Buffer Register.\n0 =
        Data Bytes [7:4] unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAT_A
      bit_offset: 1
      bit_width: 1
      description: "Access Data Bytes [3:0]\nDirection = Write\n1 = Transfer Data
        Bytes [3:0] to Message Object \n0 = Data Bytes [3:0] unchanged.\nDirection
        = Read\n1 = Transfer Data Bytes [3:0] to IF1 Message Buffer Register.\n0 =
        Data Bytes [3:0] unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxRqstOrNewDat
      bit_offset: 2
      bit_width: 1
      description: "Access Transmission Request Bit  when Direction = Write\n1 = Set
        TxRqst bit.\n0 = TxRqst bit unchanged.\nNote: If a transmission is requested
        by programming bit TxRqst/NewDat in the IF1 Command Mask Register, bit TxRqst
        in the IF2 Message Control Register will be ignored.\nAccess New Data Bit
        when Direction = Read\n1 = Clear NewDat bit in the Message Object \n0 = NewDat
        bit remains unchanged.\nNote : A read access to a Message Object can be combined
        with the reset of the control bits IntPnd and NewDat. The values of these
        bits transferred to the IF1 Message Control Register always reflect the status
        before resetting these bits."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ClrIntPnd
      bit_offset: 3
      bit_width: 1
      description: 'Clear Interrupt Pending Bit

        Direction = Write

        When writing to a Message Object, this bit is ignored.

        Direction = Read

        1 = Clear IntPnd bit in the Message Object.

        0 = IntPnd bit remains unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Control
      bit_offset: 4
      bit_width: 1
      description: 'Control Access Control Bits

        Direction = Write

        1 = Transfer Control Bits to Message Object.

        0 = Control Bits unchanged

        Direction = Read

        1 = Transfer Control Bits to IF1 Message Buffer Register.

        0 = Control Bits unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Arb
      bit_offset: 5
      bit_width: 1
      description: "Access Arbitration Bits\nDirection = Write\n1 = Transfer Identifier
        + Dir + Xtd + MsgVal to Message Object \n0 = Arbitration bits unchanged.\nDirection
        = Read\n1 = Transfer Identifier + Dir + Xtd + MsgVal to IF1 Message Buffer
        Register.\n0 = Arbitration bits unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Mask
      bit_offset: 6
      bit_width: 1
      description: 'Access Mask Bits

        Direction = Write

        1 = Transfer Identifier Mask + MDir + MXtd to Message Object.

        0: = Mask bits unchanged.

        Direction = Read

        1 = Transfer Identifier Mask + MDir + MXtd to IF1 Message Buffer Register.

        0 = Mask bits unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WROrRD
      bit_offset: 7
      bit_width: 1
      description: 'Write / Read

        1 = Write: Transfer data from the selected Message Buffer Registers to the
        Message Object addressed by the Command Request Register.

        0 = Read: Transfer data from the Message Object addressed by the Command Request
        Register into the selected Message Buffer Registers.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_MASK1
    addr: 0x40180028
    size_bits: 32
    description: IF1 Mask 1 Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: Msk_0_15
      bit_offset: 0
      bit_width: 16
      description: 'Identifier Mask 15-0

        1 = The corresponding identifier bit is used for acceptance filtering.

        0 = The corresponding bit in the identifier of the message object cannot inhibit
        the match in the acceptance filtering.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_MASK2
    addr: 0x4018002c
    size_bits: 32
    description: IF1 Mask 2 Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: Msk_16_28
      bit_offset: 0
      bit_width: 13
      description: 'Identifier Mask 28-16

        1 = The corresponding identifier bit is used for acceptance filtering.

        0 = The corresponding bit in the identifier of the message object cannot inhibit
        the match in the acceptance filtering.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MDir
      bit_offset: 14
      bit_width: 1
      description: 'Mask Message Direction

        1 = The message direction bit (Dir) is used for acceptance filtering.

        0 = The message direction bit (Dir) has no effect on the acceptance filtering.            '
      read_allowed: true
      write_allowed: true
    - !Field
      name: MXtd
      bit_offset: 15
      bit_width: 1
      description: 'Mask Extended Identifier

        1 = The extended identifier bit (IDE) is used for acceptance filtering.

        0 = The extended identifier bit (IDE) has no effect on the acceptance filtering.

        Note: When 11-bit ("standard") Identifiers are used for a Message Object,
        the identifiers of received Data Frames are written into bits ID28 to ID18.
        For acceptance filtering, only these bits together with mask bits Msk28 to
        Msk18 are considered.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_ARB1
    addr: 0x40180030
    size_bits: 32
    description: IF1 Arbitration 1 Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ID_0_15
      bit_offset: 0
      bit_width: 16
      description: 'Message Identifier 15-0

        ID28 - ID0, 29-bit Identifier ("Extended Frame").

        ID28 - ID18, 11-bit Identifier ("Standard Frame") '
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_ARB2
    addr: 0x40180034
    size_bits: 32
    description: IF1 Arbitration 2 Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ID_16_28
      bit_offset: 0
      bit_width: 13
      description: 'Message Identifier 28-16

        ID28 - ID0, 29-bit Identifier ("Extended Frame").

        ID28 - ID18, 11-bit Identifier ("Standard Frame")'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Dir
      bit_offset: 13
      bit_width: 1
      description: 'Message Direction

        1 = Direction is transmit

        On TxRqst, the respective Message Object is transmitted as a Data Frame. On
        reception of a Remote Frame with matching identifier, the TxRqst bit of this
        Message Object is set (if RmtEn = one).

        0 = Direction is receive

        On TxRqst, a Remote Frame with the identifier of this Message Object is transmitted.
        On reception of a Data Frame with matching identifier, that message is stored
        in this Message Object.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Xtd
      bit_offset: 14
      bit_width: 1
      description: 'Extended Identifier

        1 = The 29-bit ("extended") Identifier will be used for this Message Object.

        0 = The 11-bit ("standard") Identifier will be used for this Message Object.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MsgVal
      bit_offset: 15
      bit_width: 1
      description: 'Message Valid

        1 = The Message Object is configured and should be considered by the Message
        Handler.

        0 = The Message Object is ignored by the Message Handler.

        Note: The application software must reset the MsgVal bit of all unused Messages
        Objects during the initialization before it resets bit Init in the CAN Control
        Register. This bit must also be reset before the identifier Id28-0, the control
        bits Xtd, Dir, or the Data Length Code DLC3-0  are modified,  or if the Messages  Object  is
        no longer required.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_MCON
    addr: 0x40180038
    size_bits: 32
    description: IF1 Message Control Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DLC
      bit_offset: 0
      bit_width: 4
      description: 'Data Length Code

        0-8: Data Frame has 0-8 data bytes.

        9-15: Data Frame has 8 data bytes

        Note: The Data Length Code of a Message Object must be defined the same as
        in all the corresponding objects with the same identifier at other nodes.
        When the Message Handler stores a data frame, it will write the DLC to the
        value given by the received message.

        Data 0: 1st data byte of a CAN Data Frame

        Data 1: 2nd data byte of a CAN Data Frame

        Data 2: 3rd data byte of a CAN Data Frame

        Data 3: 4th data byte of a CAN Data Frame

        Data 4: 5th data byte of a CAN Data Frame

        Data 5: 6th data byte of a CAN Data Frame

        Data 6: 7th data byte of a CAN Data Frame

        Data 7 : 8th data byte of a CAN Data Frame

        Note: The Data 0 Byte is the first data byte shifted into the shift register
        of the CAN Core during a reception while the Data 7 byte is the last. When
        the Message Handler stores a Data Frame, it will write all the eight data
        bytes into a Message Object. If the Data Length Code is less than 8, the remaining
        bytes of the Message Object will be overwritten by unspecified values.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EoB
      bit_offset: 7
      bit_width: 1
      description: 'End of Buffer

        1 = Single Message Object or last Message Object of a FIFO Buffer.

        0 = Message Object belongs to a FIFO Buffer and is not the last Message Object
        of that FIFO Buffer.

        Note: This bit is used to concatenate two or more Message Objects (up to 32)
        to build a FIFO Buffer. For single Message Objects (not belonging to a FIFO
        Buffer), this bit must always be set to one. '
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxRqst
      bit_offset: 8
      bit_width: 1
      description: 'Transmit Request

        1 = The transmission of this Message Object is requested and is not yet done.

        0 = This Message Object is not waiting for transmission.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RmtEn
      bit_offset: 9
      bit_width: 1
      description: 'Remote Enable

        1 = At the reception of a Remote Frame, TxRqst is set.

        0 = At the reception of a Remote Frame, TxRqst is left unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RxIE
      bit_offset: 10
      bit_width: 1
      description: 'Receive Interrupt Enable

        1 = IntPnd will be set after a successful reception of a frame.

        0 = IntPnd will be left unchanged after a successful reception of a frame.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxIE
      bit_offset: 11
      bit_width: 1
      description: 'Transmit Interrupt Enable

        1 = IntPnd will be set after a successful transmission of a frame.

        0 = IntPnd will be left unchanged after the successful transmission of a frame.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UMask
      bit_offset: 12
      bit_width: 1
      description: 'Use Acceptance Mask

        1 = Use Mask (Msk28-0, MXtd, and MDir) for acceptance filtering.

        0 = Mask ignored.

        Note: If the UMask bit is set to one, the Message Object''s mask bits have  to  be  programmed  during  initialization  of  the  Message
        Object before MsgVal is set to one.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IntPnd
      bit_offset: 13
      bit_width: 1
      description: 'Interrupt Pending

        1 = This message object is the source of an interrupt. The Interrupt Identifier
        in the Interrupt Register will point to this message object if there is no
        other interrupt source with higher priority.

        0 = This message object is not the source of an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MsgLst
      bit_offset: 14
      bit_width: 1
      description: 'Message Lost (only valid for Message Objects with direction =
        receive)

        1 = The Message Handler stored a new message into this object when NewDat
        was still set, the CPU has lost a message.

        0 = No message lost since last time this bit was reset by the CPU.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: NewDat
      bit_offset: 15
      bit_width: 1
      description: 'New Data

        1 = The Message Handler or the application software has written new data into
        the data portion of this Message Object.

        0 = No new data has been written into the data portion of this Message Object
        by the Message Handler since last time this flag was cleared by the application
        software.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_DAT_A1
    addr: 0x4018003c
    size_bits: 32
    description: IF1 Data A1 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data0
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 0

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data1
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 1

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_DAT_A2
    addr: 0x40180040
    size_bits: 32
    description: IF1 Data A2 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data2
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 2

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data3
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 3

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_DAT_B1
    addr: 0x40180044
    size_bits: 32
    description: IF1 Data B1 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data4
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 4

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data5
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 5

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF1_DAT_B2
    addr: 0x40180048
    size_bits: 32
    description: IF1 Data B2 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data6
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 6

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data7
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 7

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_CREQ
    addr: 0x40180080
    size_bits: 32
    description: IF2 Command Request Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: MessageNumber
      bit_offset: 0
      bit_width: 6
      description: 'Message Number

        0x01-0x20: Valid Message Number, the Message Object in the Message

        RAM is selected for data transfer.

        0x00: Not a valid Message Number, interpreted as 0x20.

        0x21-0x3F: Not a valid Message Number, interpreted as 0x01-0x1F.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Busy
      bit_offset: 15
      bit_width: 1
      description: 'Busy Flag

        1 = Writing to the IF2 Command Request Register is in progress. This bit can
        only be read by the software.

        0 = Read/write action has finished.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_CMASK
    addr: 0x40180084
    size_bits: 32
    description: IF2 Command Mask Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DAT_B
      bit_offset: 0
      bit_width: 1
      description: "Access Data Bytes [7:4]\nDirection = Write \n1 = Transfer Data
        Bytes [7:4] to Message Object.\n0 = Data Bytes [7:4] unchanged.\nDirection
        = Read\n1 = Transfer Data Bytes [7:4] to IF2 Message Buffer Register.\n0 =
        Data Bytes [7:4] unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAT_A
      bit_offset: 1
      bit_width: 1
      description: "Access Data Bytes [3:0]\nDirection = Write\n1 = Transfer Data
        Bytes [3:0] to Message Object \n0 = Data Bytes [3:0] unchanged.\nDirection
        = Read\n1 = Transfer Data Bytes [3:0] to IF2 Message Buffer Register.\n0 =
        Data Bytes [3:0] unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxRqstOrNewDat
      bit_offset: 2
      bit_width: 1
      description: "Access Transmission Request Bit  when Direction = Write\n1 = Set
        TxRqst bit.\n0 = TxRqst bit unchanged.\nNote: If a transmission is requested
        by programming bit TxRqst/NewDat in the IF2 Command Mask Register, bit TxRqst
        in the IF2 Message Control Register will be ignored.\nAccess New Data Bit
        when Direction = Read\n1 = Clear NewDat bit in the Message Object \n0 = NewDat
        bit remains unchanged.\nNote : A read access to a Message Object can be combined
        with the reset of the control bits IntPnd and NewDat. The values of these
        bits transferred to the IF2 Message Control Register always reflect the status
        before resetting these bits."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ClrIntPnd
      bit_offset: 3
      bit_width: 1
      description: 'Clear Interrupt Pending Bit

        Direction = Write

        When writing to a Message Object, this bit is ignored.

        Direction = Read

        1 = Clear IntPnd bit in the Message Object.

        0 = IntPnd bit remains unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Control
      bit_offset: 4
      bit_width: 1
      description: 'Control Access Control Bits

        Direction = Write

        1 = Transfer Control Bits to Message Object.

        0 = Control Bits unchanged

        Direction = Read

        1 = Transfer Control Bits to IF2 Message Buffer Register.

        0 = Control Bits unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Arb
      bit_offset: 5
      bit_width: 1
      description: "Access Arbitration Bits\nDirection = Write\n1 = Transfer Identifier
        + Dir + Xtd + MsgVal to Message Object \n0 = Arbitration bits unchanged.\nDirection
        = Read\n1 = Transfer Identifier + Dir + Xtd + MsgVal to IF2 Message Buffer
        Register.\n0 = Arbitration bits unchanged."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Mask
      bit_offset: 6
      bit_width: 1
      description: 'Access Mask Bits

        Direction = Write

        1 = Transfer Identifier Mask + MDir + MXtd to Message Object.

        0: = Mask bits unchanged.

        Direction = Read

        1 = Transfer Identifier Mask + MDir + MXtd to IF2 Message Buffer Register.

        0 = Mask bits unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WROrRD
      bit_offset: 7
      bit_width: 1
      description: 'Write / Read

        1 = Write: Transfer data from the selected Message Buffer Registers to the
        Message Object addressed by the Command Request Register.

        0 = Read: Transfer data from the Message Object addressed by the Command Request
        Register into the selected Message Buffer Registers.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_MASK1
    addr: 0x40180088
    size_bits: 32
    description: IF2 Mask 1 Registers
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: Msk_0_15
      bit_offset: 0
      bit_width: 16
      description: 'Identifier Mask 15-0

        1 = The corresponding identifier bit is used for acceptance filtering.

        0 = The corresponding bit in the identifier of the message object cannot inhibit
        the match in the acceptance filtering.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_MASK2
    addr: 0x4018008c
    size_bits: 32
    description: IF2 Mask 2 Registers
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: Msk_16_28
      bit_offset: 0
      bit_width: 13
      description: 'Identifier Mask 28-16

        1 = The corresponding identifier bit is used for acceptance filtering.

        0 = The corresponding bit in the identifier of the message object cannot inhibit
        the match in the acceptance filtering.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MDir
      bit_offset: 14
      bit_width: 1
      description: 'Mask Message Direction

        1 = The message direction bit (Dir) is used for acceptance filtering.

        0 = The message direction bit (Dir) has no effect on the acceptance filtering.            '
      read_allowed: true
      write_allowed: true
    - !Field
      name: MXtd
      bit_offset: 15
      bit_width: 1
      description: 'Mask Extended Identifier

        1 = The extended identifier bit (IDE) is used for acceptance filtering.

        0 = The extended identifier bit (IDE) has no effect on the acceptance filtering.

        Note: When 11-bit ("standard") Identifiers are used for a Message Object,
        the identifiers of received Data Frames are written into bits ID28 to ID18.
        For acceptance filtering, only these bits together with mask bits Msk28 to
        Msk18 are considered.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_ARB1
    addr: 0x40180090
    size_bits: 32
    description: IF2 Arbitration 1 Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ID_0_15
      bit_offset: 0
      bit_width: 16
      description: 'Message Identifier 15-0

        ID28 - ID0, 29-bit Identifier ("Extended Frame").

        ID28 - ID18, 11-bit Identifier ("Standard Frame") '
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_ARB2
    addr: 0x40180094
    size_bits: 32
    description: IF2 Arbitration 2 Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ID_16_28
      bit_offset: 0
      bit_width: 13
      description: 'Message Identifier 28-16

        ID28 - ID0, 29-bit Identifier ("Extended Frame").

        ID28 - ID18, 11-bit Identifier ("Standard Frame")'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Dir
      bit_offset: 13
      bit_width: 1
      description: 'Message Direction

        1 = Direction is transmit

        On TxRqst, the respective Message Object is transmitted as a Data Frame. On
        reception of a Remote Frame with matching identifier, the TxRqst bit of this
        Message Object is set (if RmtEn = one).

        0 = Direction is receive

        On TxRqst, a Remote Frame with the identifier of this Message Object is transmitted.
        On reception of a Data Frame with matching identifier, that message is stored
        in this Message Object.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Xtd
      bit_offset: 14
      bit_width: 1
      description: 'Extended Identifier

        1 = The 29-bit ("extended") Identifier will be used for this Message Object.

        0 = The 11-bit ("standard") Identifier will be used for this Message Object.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MsgVal
      bit_offset: 15
      bit_width: 1
      description: 'Message Valid

        1 = The Message Object is configured and should be considered by the Message
        Handler.

        0 = The Message Object is ignored by the Message Handler.

        Note: The application software must reset the MsgVal bit of all unused Messages
        Objects during the initialization before it resets bit Init in the CAN Control
        Register. This bit must also be reset before the identifier Id28-0, the control
        bits Xtd, Dir, or the Data Length Code DLC3-0  are modified,  or if the Messages  Object  is
        no longer required.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_MCON
    addr: 0x40180098
    size_bits: 32
    description: IF2 Message Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DLC
      bit_offset: 0
      bit_width: 4
      description: 'Data Length Code

        0-8: Data Frame has 0-8 data bytes.

        9-15: Data Frame has 8 data bytes

        Note: The Data Length Code of a Message Object must be defined the same as
        in all the corresponding objects with the same identifier at other nodes.
        When the Message Handler stores a data frame, it will write the DLC to the
        value given by the received message.

        Data 0: 1st data byte of a CAN Data Frame

        Data 1: 2nd data byte of a CAN Data Frame

        Data 2: 3rd data byte of a CAN Data Frame

        Data 3: 4th data byte of a CAN Data Frame

        Data 4: 5th data byte of a CAN Data Frame

        Data 5: 6th data byte of a CAN Data Frame

        Data 6: 7th data byte of a CAN Data Frame

        Data 7 : 8th data byte of a CAN Data Frame

        Note: The Data 0 Byte is the first data byte shifted into the shift register
        of the CAN Core during a reception while the Data 7 byte is the last. When
        the Message Handler stores a Data Frame, it will write all the eight data
        bytes into a Message Object. If the Data Length Code is less than 8, the remaining
        bytes of the Message Object will be overwritten by unspecified values.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EoB
      bit_offset: 7
      bit_width: 1
      description: 'End of Buffer

        1 = Single Message Object or last Message Object of a FIFO Buffer.

        0 = Message Object belongs to a FIFO Buffer and is not the last Message Object
        of that FIFO Buffer.

        Note: This bit is used to concatenate two or more Message Objects (up to 32)
        to build a FIFO Buffer. For single Message Objects (not belonging to a FIFO
        Buffer), this bit must always be set to one. '
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxRqst
      bit_offset: 8
      bit_width: 1
      description: 'Transmit Request

        1 = The transmission of this Message Object is requested and is not yet done.

        0 = This Message Object is not waiting for transmission.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RmtEn
      bit_offset: 9
      bit_width: 1
      description: 'Remote Enable

        1 = At the reception of a Remote Frame, TxRqst is set.

        0 = At the reception of a Remote Frame, TxRqst is left unchanged.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RxIE
      bit_offset: 10
      bit_width: 1
      description: 'Receive Interrupt Enable

        1 = IntPnd will be set after a successful reception of a frame.

        0 = IntPnd will be left unchanged after a successful reception of a frame.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TxIE
      bit_offset: 11
      bit_width: 1
      description: 'Transmit Interrupt Enable

        1 = IntPnd will be set after a successful transmission of a frame.

        0 = IntPnd will be left unchanged after the successful transmission of a frame.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UMask
      bit_offset: 12
      bit_width: 1
      description: 'Use Acceptance Mask

        1 = Use Mask (Msk28-0, MXtd, and MDir) for acceptance filtering.

        0 = Mask ignored.

        Note: If the UMask bit is set to one, the Message Object''s mask bits have  to  be  programmed  during  initialization  of  the  Message
        Object before MsgVal is set to one.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IntPnd
      bit_offset: 13
      bit_width: 1
      description: 'Interrupt Pending

        1 = This message object is the source of an interrupt. The Interrupt Identifier
        in the Interrupt Register will point to this message object if there is no
        other interrupt source with higher priority.

        0 = This message object is not the source of an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MsgLst
      bit_offset: 14
      bit_width: 1
      description: 'Message Lost (only valid for Message Objects with direction =
        receive)

        1 = The Message Handler stored a new message into this object when NewDat
        was still set, the CPU has lost a message.

        0 = No message lost since last time this bit was reset by the CPU.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: NewDat
      bit_offset: 15
      bit_width: 1
      description: 'New Data

        1 = The Message Handler or the application software has written new data into
        the data portion of this Message Object.

        0 = No new data has been written into the data portion of this Message Object
        by the Message Handler since last time this flag was cleared by the application
        software.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_DAT_A1
    addr: 0x4018009c
    size_bits: 32
    description: IF2 Data A1 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data0
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 0

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data1
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 1

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_DAT_A2
    addr: 0x401800a0
    size_bits: 32
    description: IF2 Data A2 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data2
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 2

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data3
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 3

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_DAT_B1
    addr: 0x401800a4
    size_bits: 32
    description: IF2 Data B1 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data4
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 4

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data5
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 5

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_IF2_DAT_B2
    addr: 0x401800a8
    size_bits: 32
    description: IF2 Data B2 Registers
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Data6
      bit_offset: 0
      bit_width: 8
      description: 'Data byte 6

        1st data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Data7
      bit_offset: 8
      bit_width: 8
      description: 'Data byte 7

        2nd data byte of a CAN Data Frame'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_TXREQ1
    addr: 0x40180100
    size_bits: 32
    description: Transmission Request Registers 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TxRqst1_16
      bit_offset: 0
      bit_width: 16
      description: 'Transmission Request Bits 1-16 (of all Message Objects)

        1 = The transmission of this Message Object is requested and is not yet done.

        0 = This Message Object is not waiting for transmission.

        These bits are read only.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_TXREQ2
    addr: 0x40180104
    size_bits: 32
    description: Transmission Request Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TxRqst17_32
      bit_offset: 0
      bit_width: 16
      description: 'Transmission Request Bits 17-32 (of all Message Objects)

        1 = The transmission of this Message Object is requested and is not yet done.

        0 = This Message Object is not waiting for transmission.

        These bits are read only.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_NDAT1
    addr: 0x40180120
    size_bits: 32
    description: New Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: NewData1_16
      bit_offset: 0
      bit_width: 16
      description: 'New Data Bits 1-16 (of all Message Objects)

        1 = The Message Handler or the application software has written new data into
        the data portion of this Message Object.

        0 = No new data has been written into the data portion of this Message Object
        by the Message Handler since the last time this flag was cleared by the application
        software.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_NDAT2
    addr: 0x40180124
    size_bits: 32
    description: New Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: NewData17_32
      bit_offset: 0
      bit_width: 16
      description: 'New Data Bits 17-32 (of all Message Objects)

        1 = The Message Handler or the application software has written new data into
        the data portion of this Message Object.

        0 = No new data has been written into the data portion of this Message Object
        by the Message Handler since the last time this flag was cleared by the application
        software.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_IPND1
    addr: 0x40180140
    size_bits: 32
    description: Interrupt Pending Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: IntPnd1_16
      bit_offset: 0
      bit_width: 16
      description: 'Interrupt Pending Bits 1-16 (of all Message Objects)

        1 = This message object is the source of an interrupt.

        0 = This message object is not the source of an interrupt.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_IPND2
    addr: 0x40180144
    size_bits: 32
    description: Interrupt Pending Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: IntPnd17_32
      bit_offset: 0
      bit_width: 16
      description: 'Interrupt Pending Bits 17-32 (of all Message Objects)

        1 = This message object is the source of an interrupt.

        0 = This message object is not the source of an interrupt.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_MVLD1
    addr: 0x40180160
    size_bits: 32
    description: Message Valid Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MsgVal1_16
      bit_offset: 0
      bit_width: 16
      description: 'Message Valid Bits 1-16 (of all Message Objects) (Read Only)

        1 = This Message Object is configured and should be considered by the Message
        Handler.

        0 = This Message Object is ignored by the Message Handler.

        Ex. CAN_MVLD1[0] means Message object No.1 is valid or not. If CAN_MVLD1[0]
        is set, message object No.1 is configured.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_MVLD2
    addr: 0x40180164
    size_bits: 32
    description: Message Valid Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MsgVal17_32
      bit_offset: 0
      bit_width: 16
      description: 'Message Valid Bits 17-32 (of all Message Objects) (Read Only)

        1 = This Message Object is configured and should be considered by the Message
        Handler.

        0 = This Message Object is ignored by the Message Handler.

        Ex. CAN_MVLD1[0] means Message object No.1 is valid or not. If CAN_MVLD1[0]
        is set, message object No.1 is configured.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAN_WU_EN
    addr: 0x40180168
    size_bits: 32
    description: Wake Up Function Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WAKUP_EN
      bit_offset: 0
      bit_width: 1
      description: 'Wake Up Enable

        1 = The wake-up function is enable.

        0 = The wake-up function is disable.

        Note: User can wake-up system when there is a falling edge in the CAN_Rx pin..'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAN_WU_STATUS
    addr: 0x4018016c
    size_bits: 32
    description: Wake Up Function Status
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WAKUP_STS
      bit_offset: 0
      bit_width: 1
      description: "Wake Up Status \n1 = Wake-up event is occurred.\n0 = No wake-up
        event is occurred.\nNote: The bit can be written '0' to clear."
      read_allowed: true
      write_allowed: true
- !Module
  name: CLK
  description: Registers group
  base_addr: 0x50000200
  size: 0x28
  registers:
  - !Register
    name: PWRCON
    addr: 0x50000200
    size_bits: 32
    description: System Power Down Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x10
    fields:
    - !Field
      name: XTL12M_EN
      bit_offset: 0
      bit_width: 1
      description: "External 4~24 MHz Crystal Enable (write-protection bit)\nThe bit
        default value is set by flash controller user configuration register config0
        [26:24]. When the default clock source is from external 4~24 MHz crystal,
        this bit is set to 1 automatically\n1 = Enable external 4~24 MHz crystal \n0
        = Disable external 4~24 MHz crystal"
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL32K_EN
      bit_offset: 1
      bit_width: 1
      description: 'External 32.768 KHz Crystal Enable (write-protection bit)

        1 = Enable external 32.768 kHz Crystal (Normal operation)

        0 = Disable external 32.768 kHz Crystal'
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC22M_EN
      bit_offset: 2
      bit_width: 1
      description: "Internal 22.1184MHz Oscillator Enable (write-protection bit)\n1
        = Enable 22.1184MHz Oscillation \n0 = Disable 22.1184MHz Oscillation "
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC10K_EN
      bit_offset: 3
      bit_width: 1
      description: "Internal 10KHz Oscillator Enable (write-protection bit)\n1 = Enable
        10KHz Oscillation \n0 = Disable 10KHz Oscillation "
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_DLY
      bit_offset: 4
      bit_width: 1
      description: 'Enable the wake up delay counter (write-protection bit)

        When the chip wakes up from power down mode, the clock control will delay
        certain clock cycles to wait system clock stable.

        The delayed clock cycle is 4096 clock cycles when chip work at external 4~24
        MHz crystal, and 256 clock cycles when chip work at internal 22.1184 MHz oscillator.

        1 = Enable clock cycles delay

        0 = Disable clock cycles delay'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_INT_EN
      bit_offset: 5
      bit_width: 1
      description: 'Power down mode wake up Interrupt enable (write-protection bit)

        0 = Disable

        1 = Enable.

        The interrupt will occur when both PD_WU_STS and PD_WU_INT_EN are high.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_STS
      bit_offset: 6
      bit_width: 1
      description: "Power down mode wake up interrupt status\nSet by \"power down
        wake up\", it indicates that resume from power down mode \nThe flag is set
        if the GPIO, USB, UART, WDT, CAN, ACMP, BOD or RTC wakeup occurred \nWrite
        1 to clear the bit \nNote: This bit is working only if PD_WU_INT_EN (PWRCON[5])
        set to 1. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWR_DOWN_EN
      bit_offset: 7
      bit_width: 1
      description: 'System power down enable bit (write-protection bit)

        When CPU sets this bit "1" the chip power down mode is enabled, and chip power-down
        behavior will depends on the PD_WAIT_CPU bit.

        (a) If the PD_WAIT_CPU is "0", then the chip enters power down mode immediately
        after the PWR_DOWN_EN bit set.

        (b) if the PD_WAIT_CPU is "1", then the chip keeps active till the CPU sleep
        mode is also active and then the chip enters power down mode.

        When chip wakes up from power down mode, this bit is auto cleared. Users need
        to set this bit again for next power down.

        When in power down mode, external 4~24 MHz crystal and the internal 22.1184
        MHz oscillator will be disabled in this mode, but the external 32 kHz crystal
        and internal 10 kHz oscillator are not controlled by power down mode.

        When in power down mode, the PLL and system clock are disabled, and ignored
        the clock source selection. The clocks of peripheral are not controlled by
        power down mode, if the peripheral clock source is from 32 kHz crystal or
        the 10 kHz oscillator.

        1 = Chip enter the power down mode instant or wait CPU sleep command WFI.

        0 = Chip operate in normal mode or CPU in idle mode (sleep mode) because of
        WFI command.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WAIT_CPU
      bit_offset: 8
      bit_width: 1
      description: 'This bit control the power down entry condition (write-protection
        bit)

        1 = Chip enter power down mode when the both PWR_DOWN_EN bit is set to 1 and
        CPU run WFI instruction.

        0 = Chip entry power down mode when the PWR_DOWN_EN bit is set to 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: AHBCLK
    addr: 0x50000204
    size_bits: 32
    description: AHB Devices Clock Enable Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xd
    fields:
    - !Field
      name: PDMA_EN
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Controller Clock Enable Control.

        1 = Enable the PDMA engine clock.

        0 = Disable the PDMA engine clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISP_EN
      bit_offset: 2
      bit_width: 1
      description: 'Flash ISP Controller Clock Enable Control.

        1 = Enable the Flash ISP engine clock.

        0 = Disable the Flash ISP engine clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_EN
      bit_offset: 3
      bit_width: 1
      description: 'EBI Controller Clock Enable Control (Low Density Only)

        1 = Enable the EBI engine clock.

        0 = Disable the EBI engine clock.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: APBCLK
    addr: 0x50000208
    size_bits: 32
    description: APB Devices Clock Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WDT_EN
      bit_offset: 0
      bit_width: 1
      description: 'Watch Dog Timer Clock Enable (write-protection bit)

        This bit is the protected bit. It means programming this needs to write "59h",
        "16h", "88h" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100.

        The bit default value is set by flash controller. User configuration register
        config0 bit[31]

        1 = Enable Watchdog Timer Clock

        0 = Disable Watchdog Timer Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTC_EN
      bit_offset: 1
      bit_width: 1
      description: "Real-Time-Clock APB interface Clock Enable. \nThis bit is used
        to control the RTC APB clock only, The RTC engine clock source is from the
        32.768KHz crystal.\n1 = Enable RTC Clock\n0 = Disable RTC Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_EN
      bit_offset: 2
      bit_width: 1
      description: 'Timer0 Clock Enable

        1 = Enable Timer0 Clock

        0 = Disable Timer0 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_EN
      bit_offset: 3
      bit_width: 1
      description: "Timer1 Clock Enable \n1 = Enable Timer1 Clock\n0 = Disable Timer1
        Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_EN
      bit_offset: 4
      bit_width: 1
      description: "Timer2 Clock Enable \n1 = Enable Timer2 Clock\n0 = Disable Timer2
        Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_EN
      bit_offset: 5
      bit_width: 1
      description: "Timer3 Clock Enable \n1 = Enable Timer3 Clock\n0 = Disable Timer3
        Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FDIV_EN
      bit_offset: 6
      bit_width: 1
      description: 'Frequency Divider Output Clock Enable

        1 = Enable FDIV Clock

        0 = Disable FDIV Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C0_EN
      bit_offset: 8
      bit_width: 1
      description: "I2C0 Clock Enable . \n1 = Enable I2C0 Clock\n0 = Disable I2C0
        Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C1_EN
      bit_offset: 9
      bit_width: 1
      description: "I2C1 Clock Enable. \n1 = Enable I2C1 Clock\n0 = Disable I2C1 Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_EN
      bit_offset: 12
      bit_width: 1
      description: "SPI0 Clock Enable. \n1 = Enable SPI0 Clock\n0 = Disable SPI0 Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_EN
      bit_offset: 13
      bit_width: 1
      description: "SPI1 Clock Enable. \n1 = Enable SPI1 Clock\n0 = Disable SPI1 Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI2_EN
      bit_offset: 14
      bit_width: 1
      description: 'SPI2 Clock Enable. (Medium Density Only)

        1 = Enable SPI2 Clock

        0 = Disable SPI2 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI3_EN
      bit_offset: 15
      bit_width: 1
      description: 'SPI3 Clock Enable. (Medium Density Only)

        1 = Enable SPI3 Clock

        0 = Disable SPI3 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART0_EN
      bit_offset: 16
      bit_width: 1
      description: 'UART0 Clock Enable.

        1 = Enable UART0 clock

        0 = Disable UART0 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_EN
      bit_offset: 17
      bit_width: 1
      description: 'UART1 Clock Enable.

        1 = Enable UART1 clock

        0 = Disable UART1 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART2_EN
      bit_offset: 18
      bit_width: 1
      description: 'UART2 Clock Enable.(Medium Density Only)

        1 = Enable UART2 clock

        0 = Disable UART2 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM01_EN
      bit_offset: 20
      bit_width: 1
      description: 'PWM_01 Clock Enable.

        1 = Enable PWM01 clock

        0 = Disable PWM01 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM23_EN
      bit_offset: 21
      bit_width: 1
      description: 'PWM_23 Clock Enable.

        1 = Enable PWM23 clock

        0 = Disable PWM23 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM45_EN
      bit_offset: 22
      bit_width: 1
      description: 'PWM_45 Clock Enable.(Medium Density Only)

        1 = Enable PWM45 clock

        0 = Disable PWM45 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM67_EN
      bit_offset: 23
      bit_width: 1
      description: 'PWM_67 Clock Enable.(Medium Density Only)

        1 = Enable PWM67 clock

        0 = Disable PWM67 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAN0_EN
      bit_offset: 24
      bit_width: 1
      description: 'CAN Bus Controller-0 Clock Enable

        1 = Enable CAN0 clock

        0 = Disable CAN0 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USBD_EN
      bit_offset: 27
      bit_width: 1
      description: 'USB 2.0 FS Device Controller Clock Enable

        1 = Enable USB clock

        0 = Disable USB clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_EN
      bit_offset: 28
      bit_width: 1
      description: 'Analog-Digital-Converter (ADC) Clock Enable.

        1 = Enable ADC clock

        0 = Disable ADC clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2S_EN
      bit_offset: 29
      bit_width: 1
      description: 'I2S Clock Enable

        1 = Enable I2S Clock

        0 = Disable I2S Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP_EN
      bit_offset: 30
      bit_width: 1
      description: 'Analog Comparator Clock Enable.

        1 = Enable the Analog Comparator Clock

        0 = Disable the Analog Comparator Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PS2_EN
      bit_offset: 31
      bit_width: 1
      description: 'PS2 Clock Enable.

        1 = Enable PS2 clock

        0 = Disable PS2 clock'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSTATUS
    addr: 0x5000020c
    size_bits: 32
    description: Clock status monitor Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: XTL12M_STB
      bit_offset: 0
      bit_width: 1
      description: 'XTL12M clock source stable flag

        1 = XTL12M clock is stable

        0 = XTL12M clock is not stable or disabled

        This is read only bit'
      read_allowed: true
      write_allowed: false
    - !Field
      name: XTL32K_STB
      bit_offset: 1
      bit_width: 1
      description: 'XTL32K clock source stable flag

        1 = XTL32K clock is stable

        0 = XTL32K clock is not stable or disabled

        This is read only bit'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PLL_STB
      bit_offset: 2
      bit_width: 1
      description: 'PLL clock source stable flag

        1 = PLL clock is stable

        0 = PLL clock is not stable or disabled

        This is read only bit'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC10K_STB
      bit_offset: 3
      bit_width: 1
      description: 'OSC10K clock source stable flag

        1 = OSC10K clock is stable

        0 = OSC10K clock is not stable or disabled

        This is read only bit'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC22M_STB
      bit_offset: 4
      bit_width: 1
      description: 'OSC22M clock source stable flag

        1 = OSC22M clock is stable

        0 = OSC22M clock is not stable or disabled

        This is read only bit'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLK_SW_FAIL
      bit_offset: 7
      bit_width: 1
      description: 'Clock switching fail flag

        1 = Clock switching failure

        0 = Clock switching success

        This bit is updated when software switches system clock source. If switch
        target clock is stable, this bit will be set to 1''b0. If switch target clock
        is not stable, this bit will be set to 1''b1.

        Write 1 to clear the bit to zero'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL0
    addr: 0x50000210
    size_bits: 32
    description: Clock Source Select Control Register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0xfffffff8
    fields:
    - !Field
      name: HCLK_S
      bit_offset: 0
      bit_width: 3
      description: 'HCLK clock source select (write-protection bits)

        Note:

        1. Before clock switching, the related clock sources (both pre-select and
        new-select) must be turn on

        2. The 3-bit default value is reloaded from the value of CFOSC (Config0[26:24])
        in user configuration register of Flash controller by any reset. Therefore
        the default value is either 000b or 111b.

        3. These bits are protected bit, It means programming this bit needs to write
        "59h", "16h", "88h" to address 0x5000_0100 to disable register protection.
        Reference the register REGWRPROT at address GCR_BA+0x100.

        000 = Clock source from external 4~24 MHz crystal clock

        001 = Clock source from external 32.768 kHz crystal clock

        010 = Clock source from PLL clock

        011 = Clock source from internal 10 kHz oscillator clock

        111 = Clock source from internal 22.1184 MHz oscillator clock

        Others = reserved'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STCLK_S
      bit_offset: 3
      bit_width: 3
      description: "Cortex_M0 SysTick clock source select (write-protection bits)\nIf
        SYST_CSR[2]=0, SysTick uses listed clock source below\nThese bits are protected
        bit. It means programming this bit needs to write \"59h\", \"16h\", \"88h\"
        to address 0x5000_0100 to disable register protection. Reference the register
        REGWRPROT at address GCR_BA+0x100.\n000 = clock source from 4~24 MHz crystal
        clock \n001 = Clock source from external 32.768 kHz crystal clock\n010 = clock
        source from 12MHz crystal clock / 2\n011 = clock source from HCLK / 2\n1xx
        = Clock source from internal 22.1184 MHz oscillator clock / 2"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL1
    addr: 0x50000214
    size_bits: 32
    description: Clock Source Select Control Register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: WDT_S
      bit_offset: 0
      bit_width: 2
      description: 'Watchdog Timer clock source select (write-protection bits)

        These bits are protected bit, program this need to write "59h", "16h", "88h"
        to address 0x5000_0100 to disable register protection. Reference the register
        REGWRPROT at address GCR_BA+0x100.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Reserved

        10 = Clock source from HCLK/2048 clock.

        11 = Clock source from internal 10 kHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_S
      bit_offset: 2
      bit_width: 2
      description: 'ADC clock source select

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = clock source from PLL clock

        1x = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_S
      bit_offset: 8
      bit_width: 3
      description: 'TIMER0 clock source select.

        000 = Clock source from external 4~24 MHz crystal clock.

        001 = Clock source from external 32.768 kHz crystal clock.

        010 = Clock source from HCLK.

        011 = Clock source from external trigger.

        1xx = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_S
      bit_offset: 12
      bit_width: 3
      description: 'TIMER1 clock source select.

        000 = Clock source from external 4~24 MHz crystal clock.

        001 = Clock source from external 32.768 kHz crystal clock.

        010 = Clock source from HCLK.

        011 = Clock source from external trigger.

        1xx = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_S
      bit_offset: 16
      bit_width: 3
      description: 'TIMER2 clock source select.

        000 = Clock source from external 4~24 MHz crystal clock.

        001 = Clock source from external 32.768 kHz crystal clock.

        010 = Clock source from HCLK.

        011 = Clock source from external trigger.

        1xx = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_S
      bit_offset: 20
      bit_width: 3
      description: 'TIMER3 clock source select.

        000 = Clock source from external 4~24 MHz crystal clock.

        001 = Clock source from external 32.768 kHz crystal clock.

        010 = Clock source from HCLK.

        011 = Clock source from external trigger.

        1xx = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART_S
      bit_offset: 24
      bit_width: 2
      description: 'UART clock source select.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from PLL clock.

        1x = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAN_S
      bit_offset: 26
      bit_width: 2
      description: 'CAN clock source select

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from PLL clock.

        1x = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM01_S
      bit_offset: 28
      bit_width: 2
      description: 'PWM0 and PWM1 clock source select

        PWM0 and PWM1 uses the same Engine clock source, both of them use the same
        prescaler.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from external 32.768 kHz crystal clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM23_S
      bit_offset: 30
      bit_width: 2
      description: 'PWM2 and PWM3 clock source select

        PWM2 and PWM3 uses the same Engine clock source, both of them use the same
        prescaler.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from external 32.768 kHz crystal clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKDIV
    addr: 0x50000218
    size_bits: 32
    description: Clock Divider Number Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: HCLK_N
      bit_offset: 0
      bit_width: 4
      description: 'HCLK clock divide number from HCLK clock source

        The HCLK clock frequency = (HCLK clock source frequency) / (HCLK_N + 1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB_N
      bit_offset: 4
      bit_width: 4
      description: 'USB clock divide number from PLL clock

        The USB clock frequency = (PLL frequency ) / (USB_N + 1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART_N
      bit_offset: 8
      bit_width: 4
      description: 'UART clock divide number from UART clock source

        The UART clock frequency = (UART clock source frequency ) / (UART_N + 1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAN_N_L
      bit_offset: 12
      bit_width: 4
      description: 'CAN clock divide number from CAN clock source

        The CAN clock frequency = (CAN clock source frequency ) / (CAN_N + 1)

        Which CAN_N = 16 * CAN_N_H + CAN_N_L'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_N
      bit_offset: 16
      bit_width: 8
      description: 'ADC clock divide number from ADC clock source

        The ADC clock frequency = (ADC engine clock source frequency ) / (ADC_N +
        1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAN_N_H
      bit_offset: 24
      bit_width: 6
      description: 'CAN clock divide number from CAN clock source (Low Density Only)

        The CAN clock frequency = (CAN clock source frequency ) / (CAN_N + 1)

        Which CAN_N = 16 * CAN_N_H + CAN_N_L'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL2
    addr: 0x5000021c
    size_bits: 32
    description: Clock Source Select Control Register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: I2S_S
      bit_offset: 0
      bit_width: 2
      description: 'I2S clock source select.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from PLL clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRQDIV_S
      bit_offset: 2
      bit_width: 2
      description: 'Clock Divider Clock Source Select.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from external 32.768 kHz crystal clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM45_S
      bit_offset: 4
      bit_width: 2
      description: 'PWM4 and PWM5 Clock Source Select.(Medium Density Only)

        PWM4 and PWM5 used the same Engine clock source, both of them use the same
        prescaler.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from external 32.768 kHz crystal clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM67_S
      bit_offset: 6
      bit_width: 2
      description: 'PWM6 and PWM7 Clock Source Select.(Medium Density Only)

        PWM6 and PWM7 used the same Engine clock source, both of them use the same
        prescaler.

        00 = Clock source from external 4~24 MHz crystal clock.

        01 = Clock source from external 32.768 kHz crystal clock.

        10 = Clock source from HCLK.

        11 = Clock source from internal 22.1184 MHz oscillator clock.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PLLCON
    addr: 0x50000220
    size_bits: 32
    description: PLL Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5c22e
    fields:
    - !Field
      name: FB_DV
      bit_offset: 0
      bit_width: 9
      description: "PLL Feedback Divider Control Pins\nRefer to the formulas below
        the table.\nFOUT = FIN x NF/NR x 1/NO\nConstrain:\n1. 3.2MHz < FIN < 150MHz\n2.
        800KHz < FIN/(2xNR) < 8MHz\n3. 100MHz < FCO = FINxNF/NR < 200MHz\n, 120M <
        FCO is preferred.\nSymbol\tDescription\t\nFOUT\tOutput Clock Frequency\t\nFIN\tInput
        (Reference) Clock Frequency\t\nNR\tInput Divider (IN_DV + 2)\t\nNF\tFeedback
        Divider (FB_DV + 2)\t\nNO\tOUT_DV = \"00\":NO = 1\nOUT_DV = \"01\":NO = 2\nOUT_DV
        = \"10\":NO = 2\nOUT_DV = \"11\":NO = 4\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_DV
      bit_offset: 9
      bit_width: 5
      description: 'PLL Input Divider Control Pins

        Refer to the formulas below the table.

        (Table is the same as FB_DV).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_DV
      bit_offset: 14
      bit_width: 2
      description: "PLL Output Divider Control Pins \nRefer to the formulas below
        the table.\n(Table is the same as FB_DV)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD
      bit_offset: 16
      bit_width: 1
      description: "Power Down Mode. \nIf set the IDLE bit \"1\" in PWRCON register,
        the PLL will enter power down mode too\n0 = PLL is in normal mode \n1 = PLL
        is in power-down mode(default)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BP
      bit_offset: 17
      bit_width: 1
      description: 'PLL Bypass Control

        0 = PLL is in normal mode (default)

        1 = PLL clock output is same as clock input (XTALin)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: OE
      bit_offset: 18
      bit_width: 1
      description: 'PLL OE (FOUT enable) pin Control

        0 = PLL FOUT enable

        1 = PLL FOUT is fixed low'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PLL_SRC
      bit_offset: 19
      bit_width: 1
      description: 'PLL Source Clock Select

        1 = PLL source clock from 22.1184 MHz oscillator

        0 = PLL source clock from 4~24 MHz crystal'
      read_allowed: true
      write_allowed: true
  - !Register
    name: FRQDIV
    addr: 0x50000224
    size_bits: 32
    description: Frequency Divider Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FSEL
      bit_offset: 0
      bit_width: 4
      description: 'Divider Output Frequency Selection Bits

        The formula of output frequency is

        Fout = Fin/(2^(N+1)),

        Fin is the input clock frequency.

        Fout is the frequency of divider output clock.

        N is the 4-bit value of FSEL[3:0].'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER_EN
      bit_offset: 4
      bit_width: 1
      description: 'Frequency Divider Enable Bit

        0 = Disable Frequency Divider

        1 = Enable Frequency Divider'
      read_allowed: true
      write_allowed: true
- !Module
  name: CMP
  description: Registers group
  base_addr: 0x400d0000
  size: 0xc
  registers:
  - !Register
    name: CMP0CR
    addr: 0x400d0000
    size_bits: 32
    description: Comparator0 Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: 'Comparator0 Enable

        1 = Enable

        0 = Disable

        Comparator0 output needs wait 10 us stable time after CMP0EN is set'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 1
      bit_width: 1
      description: 'Comparator0 Interrupt Enable

        1 = Enable comparator0 interrupt function

        0 = Disable comparator0 interrupt function

        Interrupt is generated if CMP0IE bit is set to 1 after comparator0 conversion
        finished.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HYSEN
      bit_offset: 2
      bit_width: 1
      description: 'CMP0 Hysterisis Enable

        1 = Enable comparator0 Hysterisis function; the typical range is 20mV.

        0 = Disable comparator0 Hysterisis function (Default).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CN0
      bit_offset: 4
      bit_width: 1
      description: 'Comparator0 negative input select

        1 = The internal comparator reference voltage (Vref=1.2V) is selected as the
        negative comparator input

        0 = The comparator0 reference pin CPN0 is selected as the negative comparator
        input'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMP1CR
    addr: 0x400d0004
    size_bits: 32
    description: Comparator1 Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: 'Comparator1 Enable

        1 = Enable

        0 = Disable

        Comparator1 output needs wait 10 us stable time after CMP1EN is set'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 1
      bit_width: 1
      description: 'Comparator1 Interrupt Enable

        1 = Enable Comparator1 interrupt function

        0 = Disable Comparator1 interrupt function

        Interrupt is generated if CMP1IE bit is set to 1 after comparator1 conversion
        finished.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HYSEN
      bit_offset: 2
      bit_width: 1
      description: 'Comparator1 Hysterisis Enable

        1 = Enable comparator1 Hysterisis function; the typical range is 20mV.

        0 = Disable comparator1 Hysterisis function (Default).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CN1
      bit_offset: 4
      bit_width: 1
      description: 'Comparator1 negative input select

        1 = The internal comparator reference voltage (Vref=1.2V) is selected as the
        negative comparator input

        0 = The comparator1 reference pin CPN1 is selected as the negative comparator
        input'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMPSR
    addr: 0x400d0008
    size_bits: 32
    description: Comparator Channel Selection Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMPF0
      bit_offset: 0
      bit_width: 1
      description: 'Comparator0 Flag

        This bit is set by hardware whenever the comparator0 output changes state.
        This will cause an interrupt if CMP0IE set.

        Write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPF1
      bit_offset: 1
      bit_width: 1
      description: 'Comparator1 Flag

        This bit is set by hardware whenever the comparator1 output changes state.
        This will cause an interrupt if CMP1IE set.

        Write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CO0
      bit_offset: 2
      bit_width: 1
      description: 'Comparator0 Output

        Synchronized to the APB clock to allow reading by software. Cleared when the
        comparator is disabled (CMP0EN = 0).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CO1
      bit_offset: 3
      bit_width: 1
      description: 'Comparator1 Output

        Synchronized to the APB clock to allow reading by software. Cleared when the
        comparator is disabled (CMP1EN = 0).'
      read_allowed: true
      write_allowed: false
- !Module
  name: EBI
  description: Registers group
  base_addr: 0x50010000
  size: 0x8
  registers:
  - !Register
    name: EBICON
    addr: 0x50010000
    size_bits: 32
    description: External Bus Interface General Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ExtEN
      bit_offset: 0
      bit_width: 1
      description: "EBI Enable\nThis bit is the functional enable bit for EBI. \n1:
        EBI function is enabled\n0: EBI function is disabled"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtBW16
      bit_offset: 1
      bit_width: 1
      description: "EBI data width 16 bit\nThis bit defines if the data bus is 8-bit
        or 16-bit. \n1: EBI data width is 16 bit\n0: EBI data width is 8 bit"
      read_allowed: true
      write_allowed: true
    - !Field
      name: MCLKDIV
      bit_offset: 8
      bit_width: 3
      description: "External Output Clock Divider\nThe frequency of EBI output clock
        is controlled by MCLKDIV as follows table:\nMCLKDIV\tOutput clock (MCLK)\t\n000\tHCLK/1\t\n001\tHCLK/2\t\n010\tHCLK/4\t\n011\tHCLK/8\t\n100\tHCLK/16\t\n101\tHCLK/32\t\n\n11X\tdefault\t\n\nNotice:
        Default value of output clock is HCLK/1"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExttALE
      bit_offset: 16
      bit_width: 3
      description: 'Expand Time of ALE

        The ALE width (tALE) to latch the address can be controlled by ExttALE.

        tALE = (ExttALE+1)*MCLK'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EXTIME
    addr: 0x50010004
    size_bits: 32
    description: External Bus Interface Timing Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ExttACC
      bit_offset: 3
      bit_width: 5
      description: 'EBI Data Access Time

        ExttACC define data access time (tACC).

        tACC = (ExttACC+1)*MCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExttAHD
      bit_offset: 8
      bit_width: 3
      description: 'EBI Data Access Hold Time

        ExttAHD define data access hold time (tAHD).

        tAHD = (ExttAHD+1)*MCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtIW2X
      bit_offset: 12
      bit_width: 4
      description: 'Idle State Cycle After Write

        When write action is finish, idle state is inserted and nCS return to high
        if ExtIW2X is not zero.

        Idle state cycle = (ExtIW2X)*MCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtIR2R
      bit_offset: 24
      bit_width: 4
      description: 'Idle State Cycle Between Read-Read

        When read action is finish and next action is going to read, idle state is
        inserted and nCS return to high if ExtIR2R is not zero.

        Idle state cycle = (ExtIR2R)*MCLK'
      read_allowed: true
      write_allowed: true
- !Module
  name: FMC
  description: Registers group
  base_addr: 0x5000c000
  size: 0x1c
  registers:
  - !Register
    name: ISPCON
    addr: 0x5000c000
    size_bits: 32
    description: ISP Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPEN
      bit_offset: 0
      bit_width: 1
      description: 'ISP Enable

        ISP function enable bit. Set this bit to enable ISP function.

        1 = Enable ISP function

        0 = Disable ISP function'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BS
      bit_offset: 1
      bit_width: 1
      description: "Boot Select \nSet/clear this bit to select next booting from LDROM/APROM,
        respectively. This bit also functions as chip booting status flag, which can
        be used to check where chip booted from. This bit is initiated with the inversed
        value of CBS in Config0 after power-on reset; It keeps the same value at other
        reset.\n1 = boot from LDROM\n0 = boot from APROM"
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFGUEN
      bit_offset: 4
      bit_width: 1
      description: "Enable Config-bits Update by ISP\nLDROM update enable bit. \n1
        = Enable ISP can update config-bits.\n0 = Disable ISP can update config-bits."
      read_allowed: true
      write_allowed: true
    - !Field
      name: LDUEN
      bit_offset: 5
      bit_width: 1
      description: "LDROM Update Enable\nLDROM update enable bit. \n1 = LDROM can
        be updated when the MCU runs in APROM.\n0 = LDROM can not be updated"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISPFF
      bit_offset: 6
      bit_width: 1
      description: "ISP Fail Flag\nThis bit is set by hardware when a triggered ISP
        meets any of the following conditions:\n(1) APROM writes to itself.\n(2) LDROM
        writes to itself. \n(3) CONFIG is erased/programmed if CFGUEN is set to 0.\n(4)
        Destination address is illegal, such as over an available range.\nWrite 1
        to clear."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PT
      bit_offset: 8
      bit_width: 3
      description: "Flash Program Time\nPT[2]\tPT[1]\tPT[0]\tProgram Time (us)\t\n0\t0\t0\t40\t\n0\t0\t1\t45\t\n0\t1\t0\t50\t\n0\t1\t1\t55\t\n1\t0\t0\t20\t\n1\t0\t1\t25\t\n1\t1\t0\t30\t\n1\t1\t1\t35\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ET
      bit_offset: 12
      bit_width: 3
      description: "Flash Erase Time\nET[2]\tET[1]\tET[0]\tErase Time (ms)\t\n0\t0\t0\t20
        (default)\t\n0\t0\t1\t25\t\n0\t1\t0\t30\t\n0\t1\t1\t35\t\n1\t0\t0\t3\t\n1\t0\t1\t5\t\n1\t1\t0\t10\t\n1\t1\t1\t15\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPADR
    addr: 0x5000c004
    size_bits: 32
    description: ISP Address Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPADR
      bit_offset: 0
      bit_width: 32
      description: "ISP Address \nNuMicro(TM) NUC100 Series equips with a maximum
        32Kx32 embedded flash, it supports word program only. ISPARD[1:0] must be
        kept 00b for ISP operation."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPDAT
    addr: 0x5000c008
    size_bits: 32
    description: ISP Data Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPDAT
      bit_offset: 0
      bit_width: 32
      description: "ISP Data \nWrite data to this register before ISP program operation\nRead
        data from this register after ISP read operation"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPCMD
    addr: 0x5000c00c
    size_bits: 32
    description: ISP Command Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FCTRL
      bit_offset: 0
      bit_width: 4
      description: "ISP Command \nISP command table is showed below:\nOperation Mode\tFOEN\tFCEN\tFCTRL[3:0]\t\nRead\t0\t0\t0\t0\t0\t0\t\nProgram\t1\t0\t0\t0\t0\t1\t\nPage
        Erase\t1\t0\t0\t0\t1\t0\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FCEN
      bit_offset: 4
      bit_width: 1
      description: "ISP Command \nISP command table is showed below:\nOperation Mode\tFOEN\tFCEN\tFCTRL[3:0]\t\nRead\t0\t0\t0\t0\t0\t0\t\nProgram\t1\t0\t0\t0\t0\t1\t\nPage
        Erase\t1\t0\t0\t0\t1\t0\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FOEN
      bit_offset: 5
      bit_width: 1
      description: "ISP Command \nISP command table is showed below:\nOperation Mode\tFOEN\tFCEN\tFCTRL[3:0]\t\nRead\t0\t0\t0\t0\t0\t0\t\nProgram\t1\t0\t0\t0\t0\t1\t\nPage
        Erase\t1\t0\t0\t0\t1\t0\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPTRG
    addr: 0x5000c010
    size_bits: 32
    description: ISP Trigger Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPGO
      bit_offset: 0
      bit_width: 1
      description: 'ISP start trigger

        Write 1 to start ISP operation and this bit will be cleared to 0 by hardware
        automatically when ISP operation is finished.

        1 = ISP is on going

        0 = ISP is operation is finished'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DFBADR
    addr: 0x5000c014
    size_bits: 32
    description: Data Flash Base Address Register
    read_allowed: true
    write_allowed: false
    reset_value: 0x1f000
    fields:
    - !Field
      name: DFBADR
      bit_offset: 0
      bit_width: 32
      description: 'Data Flash Base Address

        This register indicates data flash start address. It is a read only register.

        For 128kB flash memory device, the data flash size is defined by user configuration,
        register content is loaded from Config1 when chip power on but for 64/32kB
        device, it is fixed at 0x01_f000 '
      read_allowed: true
      write_allowed: false
  - !Register
    name: FATCON
    addr: 0x5000c018
    size_bits: 32
    description: Flash Access Time Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FPSEN
      bit_offset: 0
      bit_width: 1
      description: "Flash Power Save Enable\nIf CPU clock is slower than 24 MHz, then
        s/w can enable flash power saving function. \n1 = Enable flash power saving\n0
        = Disable flash power saving"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FATS
      bit_offset: 1
      bit_width: 3
      description: "Flash Access Time Window Select\nThese bits are used to decide
        flash sense amplifier active duration.\n\n\n\nFATS\tAccess Time window (ns)\t\n000\t40\t\n001\t50\t\n010\t60\t\n011\t70\t\n100\t80\t\n101\t90\t\n110\t100\t\n111\treserved\t"
      read_allowed: true
      write_allowed: true
- !Module
  name: GCR
  description: Registers group
  base_addr: 0x50000000
  size: 0x104
  registers:
  - !Register
    name: PDID
    addr: 0x50000000
    size_bits: 32
    description: Part Device Identification Number Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDID
      bit_offset: 0
      bit_width: 32
      description: 'Part Device Identification Number

        This register reflects device part number code. S/W can read this register
        to identify which device is used.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: RSTSRC
    addr: 0x50000004
    size_bits: 32
    description: System Reset Source Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RSTS_POR
      bit_offset: 0
      bit_width: 1
      description: 'The RSTS_POR flag is set by the "reset signal" from the Power-On
        Reset (POR) module or bit CHIP_RST (IPRSTC1[0]) to indicate the previous reset
        source

        1= The Power-On Reset (POR) or CHIP_RST had issued the reset signal to reset
        the system.

        0= No reset from POR or CHIP_RS

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_RESET
      bit_offset: 1
      bit_width: 1
      description: 'The RSTS_RESET flag is set by the "reset signal" from the /RESET
        pin to indicate the previous reset source.

        1 = The Pin /RESET had issued the reset signal to reset the system.

        0 = No reset from /RESET pin

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_WDT
      bit_offset: 2
      bit_width: 1
      description: 'The The RSTS_WDT flag is set by the "reset signal" from the watchdog
        timer to indicate the previous reset source.

        1 = The watchdog timer had issued the reset signal to reset the system.

        0 = No reset from watchdog timer

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_LVR
      bit_offset: 3
      bit_width: 1
      description: 'The RSTS_LVR flag is set by the "reset signal" from the Low-Voltage-Reset
        controller to indicate the previous reset source.

        1 = The LVR controller had issued the reset signal to reset the system.

        0 = No reset from LVR

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_BOD
      bit_offset: 4
      bit_width: 1
      description: 'The RSTS_BOD flag is set by the "reset signal" from the Brown-Out-Detector
        controller to indicate the previous reset source.

        1 = The BOD had issued the reset signal to reset the system.

        0 = No reset from BOD

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_SYS
      bit_offset: 5
      bit_width: 1
      description: 'The RSTS_SYS flag is set by the "reset signal" from the Cortex_M0
        kernel to indicate the previous reset source.

        1 = The Cortex_M0 had issued the reset signal to reset the system by software
        writing 1 to bit SYSRESTREQ(AIRCR[2], Application Interrupt and Reset Control
        Register, address = 0xE000ED0C) in system control registers of Cortex_M0 kernel.

        0 = No reset from Cortex_M0

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_CPU
      bit_offset: 7
      bit_width: 1
      description: 'The RSTS_CPU flag is set by hardware if software writes CPU_RST
        (IPRSTC1[1]) 1 to reset Cortex-M0 CPU kernel and Flash memory controller (FMC).

        1 = The Cortex-M0 CPU kernel and FMC are reset by software setting CPU_RST
        to 1

        0 = No reset from CPU

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IPRSTC1
    addr: 0x50000008
    size_bits: 32
    description: IP Reset Control Resister1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CHIP_RST
      bit_offset: 0
      bit_width: 1
      description: 'CHIP one shot reset (write-protection bit)

        Setting this bit will reset the whole chip, including CPU kernel and all peripherals,
        and this bit will automatically return to 0 after the 2 clock cycles.

        The CHIP_RST is same as the POR reset, all the chip controllers is reset and
        the chip setting from flash are also reload. About the difference between
        CHIP_RST and SYSRESETREQ, please refer to section 5.2.2 of TRM.

        This bit is the protected bit. It means programming this bit needs to write
        "59h", "16h", "88h" to address 0x5000_0100 to disable register protection.
        Reference the register REGWRPROT at address GCR_BA+0x100.

        1 = CHIP one shot reset

        0 = CHIP normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPU_RST
      bit_offset: 1
      bit_width: 1
      description: 'CPU kernel one shot reset (write-protection bit)

        Setting this bit will only reset the CPU kernel and Flash Memory Controller(FMC),
        and this bit will automatically return to 0 after the 2 clock cycles

        This bit is the protected bit, It means programming this bit needs to write
        "59h", "16h", "88h" to address 0x5000_0100 to disable register protection.
        Reference the register REGWRPROT at address GCR_BA+0x100.

        1 = CPU one shot reset

        0 = CPU normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDMA_RST
      bit_offset: 2
      bit_width: 1
      description: 'PDMA Controller Reset (write-protection bit in NUC100/NUC120/NUC130/NUC140
        Low Density and NUC101)

        Setting this bit to 1 will generate a reset signal to the PDMA. User need
        to set this bit to 0 to release from reset state

        This bit is the protected bit, It means programming this bit needs to write
        "59h", "16h", "88h" to address 0x5000_0100 to disable register protection.
        Reference the register REGWRPROT at address GCR_BA+0x100

        1 = PDMA controller reset

        0 = PDMA controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_RST
      bit_offset: 3
      bit_width: 1
      description: 'EBI Controller Reset (write-protection bit in NUC100/NUC120/NUC130/NUC140
        Low Density 64-pin package)

        Set this bit to 1 will generate a reset signal to the EBI. User need to set
        this bit to 0 to release from the reset state.

        This bit is the protected bit, It means programming this bit needs to write
        "59h", "16h", "88h" to address 0x5000_0100 to disable register protection.
        Reference the register REGWRPROT at address GCR_BA+0x100.

        1 = EBI controller reset

        0 = EBI controller normal operation'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IPRSTC2
    addr: 0x5000000c
    size_bits: 32
    description: IP Reset Control Resister 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPIO_RST
      bit_offset: 1
      bit_width: 1
      description: 'GPIO controller Reset

        1 = GPIO controller reset

        0 = GPIO controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_RST
      bit_offset: 2
      bit_width: 1
      description: 'Timer0 controller Reset

        1 = Timer0 controller reset

        0 = Timer0 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_RST
      bit_offset: 3
      bit_width: 1
      description: 'Timer1 controller Reset

        1 = Timer1 controller reset

        0 = Timer1 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_RST
      bit_offset: 4
      bit_width: 1
      description: 'Timer2 controller Reset

        1 = Timer2 controller reset

        0 = Timer2 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_RST
      bit_offset: 5
      bit_width: 1
      description: 'Timer3 controller Reset

        1 = Timer3 controller reset

        0 = Timer3 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C0_RST
      bit_offset: 8
      bit_width: 1
      description: 'I2C0 controller Reset

        1 = I2C0 controller reset

        0 = I2C0 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C1_RST
      bit_offset: 9
      bit_width: 1
      description: 'I2C1 controller Reset

        1 = I2C1 controller reset

        0 = I2C1 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_RST
      bit_offset: 12
      bit_width: 1
      description: 'SPI0 controller Reset

        1 = SPI0 controller reset

        0 = SPI0 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_RST
      bit_offset: 13
      bit_width: 1
      description: 'SPI1 controller Reset

        1 = SPI1 controller reset

        0 = SPI1 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI2_RST
      bit_offset: 14
      bit_width: 1
      description: 'SPI2 controller Reset (Medium Density Only)

        1 = SPI2 controller reset

        0 = SPI2 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI3_RST
      bit_offset: 15
      bit_width: 1
      description: 'SPI3 controller Reset (Medium Density Only)

        1 = SPI3 controller reset

        0 = SPI3 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART0_RST
      bit_offset: 16
      bit_width: 1
      description: 'UART0 controller Reset

        1 = UART0 controller reset

        0 = UART0 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_RST
      bit_offset: 17
      bit_width: 1
      description: 'UART1 controller Reset

        1 = UART1 controller reset

        0 = UART1 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART2_RST
      bit_offset: 18
      bit_width: 1
      description: 'UART2 controller Reset (Medium Density Only)

        1 = UART2 controller reset

        0 = UART2 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM03_RST
      bit_offset: 20
      bit_width: 1
      description: 'PWM03 controller Reset

        1 = PWM03 controller reset

        0 = PWM03 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM47_RST
      bit_offset: 21
      bit_width: 1
      description: 'PWM47 controller Reset (Medium Density Only)

        1 = PWM47 controller reset

        0 = PWM47 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP_RST
      bit_offset: 22
      bit_width: 1
      description: 'Analog Comparator Controller Reset

        1 = Analog Comparator controller reset

        0 = Analog Comparator controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PS2_RST
      bit_offset: 23
      bit_width: 1
      description: 'PS2 Controller Reset

        1 = PS2 controller reset

        0 = PS2 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAN0_RST
      bit_offset: 24
      bit_width: 1
      description: 'CAN0 Controller Reset

        1 = CAN0 controller reset

        0 = CAN0 controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USBD_RST
      bit_offset: 27
      bit_width: 1
      description: 'USB Device Controller Reset

        1 = USB device controller reset

        0 = USB devide controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_RST
      bit_offset: 28
      bit_width: 1
      description: 'ADC Controller Reset

        1 = ADC controller reset

        0 = ADC controller normal operation'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2S_RST
      bit_offset: 29
      bit_width: 1
      description: 'I2S Controller Reset

        1 = I2S controller reset

        0 = I2S controller normal operation'
      read_allowed: true
      write_allowed: true
  - !Register
    name: BODCR
    addr: 0x50000018
    size_bits: 32
    description: Brown Out Detector Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x80
    fields:
    - !Field
      name: BOD_EN
      bit_offset: 0
      bit_width: 1
      description: 'Brown Out Detector Enable

        The default value is set by flash controller user configuration register config0
        bit[23].

        1 = Brown Out Detector function is enabled

        0 = Brown Out Detector function is disabled

        This bit is the protected bit. It means programming this needs to write "59h",
        "16h", "88h" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_VL
      bit_offset: 1
      bit_width: 2
      description: "Brown Out Detector Threshold Voltage Selection\nThe default value
        is set by flash controller user configuration register config0 bit[22:21].\nThis
        bit is the protected bit. It means programming this needs to write \"59h\",
        \"16h\", \"88h\" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100.\nBOV_VL[1]\tBOV_VL[0]\tBrown
        out voltage\t\n1\t1\t4.5V\t\n1\t0\t3.8V\t\n0\t1\t2.7V\t\n0\t0\t2.2V\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_RSTEN
      bit_offset: 3
      bit_width: 1
      description: "Brown Out Reset \n1 = Enable the Brown Out \"RESET\" function.\nWhile
        the Brown Out Detector function is enabled (BOD_EN high) and BOD reset function
        is enabled (BOD_RSTEN high), BOD will assert a signal to reset chip when the
        detected voltage is lower than the threshold (BOD_OUT high).\n0 = Enable the
        Brown Out \"INTERRUPT\" function\nWhile the BOD function is enabled (BOD_EN
        high) and BOD interrupt function is enabled (BOD_RSTEN low), BOD will assert
        an interrupt if BOD_OUT is high. BOD interrupt will keep till to the BOD_EN
        set to 0. BOD interrupt can be blocked by disabling the NVIC BOD interrupt
        or disabling BOD function (set BOD_EN low).\nThe default value is set by flash
        controller user configuration register config0 bit[20].\nThis bit is the protected
        bit. It means programming this needs to write \"59h\", \"16h\", \"88h\" to
        address 0x5000_0100 to disable register protection. Reference the register
        REGWRPROT at address GCR_BA+0x100."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_INTF
      bit_offset: 4
      bit_width: 1
      description: 'Brown Out Detector Interrupt Flag

        1 = When Brown Out Detector detects the VDD is dropped down through the voltage
        of BOD_VL setting or the VDD is raised up through the voltage of BOD_VL setting,
        this bit is set to 1 and the brown out interrupt is requested if brown out
        interrupt is enabled.

        0 = Brown Out Detector does not detect any voltage draft at VDD down through
        or up through the voltage of BOD_VL setting.

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_LPM
      bit_offset: 5
      bit_width: 1
      description: 'Brown Out Detector Low power Mode

        1 = Enable the BOD low power mode

        0 = BOD operate in normal mode (default)

        The BOD consumes about 100uA in normal mode, the low power mode can reduce
        the current to about 1/10 but slow the BOD response.

        This bit is the protected bit. It means programming this needs to write "59h",
        "16h", "88h" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_OUT
      bit_offset: 6
      bit_width: 1
      description: 'Brown Out Detector output status

        1 = Brown Out Detector output status is 1. It means the detected voltage is
        lower than BOD_VL setting. If the BOD_EN is 0, BOD function disabled , this
        bit always responds 0

        0 = Brown Out Detector output status is 0. It means the detected voltage is
        higher than BOD_VL setting or BOD_EN is 0'
      read_allowed: true
      write_allowed: false
    - !Field
      name: LVR_EN
      bit_offset: 7
      bit_width: 1
      description: 'Low Voltage Reset Enable

        The LVR function reset the chip when the input power voltage is lower than
        LVR circuit setting. LVR function is enabled in default.

        1 = Enabled Low Voltage Reset function. After enabling the bit, the LVR function
        will be active with 100uS delay for LVR output stable (default)

        0 = Disabled Low Voltage Reset function

        This bit is the protected bit. It means programming this needs to write "59h",
        "16h", "88h" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TEMPCR
    addr: 0x5000001c
    size_bits: 32
    description: Temperature Sensor Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VTEMP_EN
      bit_offset: 0
      bit_width: 1
      description: 'Temperature sensor Enable

        This bit is used to enable/disable temperature sensor function.

        1 = Enabled temperature sensor function

        0 = Disabled temperature sensor function (default)

        After this bit is set to 1, the value of temperature can get from ADC conversion
        result by ADC channel selecting channel 7 and alternative multiplexer channel
        selecting temperature sensor. Detail ADC conversion function please reference
        ADC function chapter.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PORCR
    addr: 0x50000024
    size_bits: 32
    description: Power-On-Reset Controller Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: POR_DIS_CODE
      bit_offset: 0
      bit_width: 16
      description: 'The register is used for the Power-On-Reset enable control

        When power on, the POR circuit generates a reset signal to reset the whole
        chip function, but noise on the power may cause the POR active again. User
        can disable internal POR circuit to avoid unpredictable noise to cause chip
        reset by writing 0x5AA5 to this field.

        The POR function will be active again when this field is set to another value
        or chip is reset by other reset source, including: /RESET, Watch dog, LVR
        reset, BOD reset, ICE reset command and the software-chip reset function

        This bit is the protected bit. It means programming this needs to write "59h",
        "16h", "88h" to address 0x5000_0100 to disable register protection. Reference
        the register REGWRPROT at address GCR_BA+0x100.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPA_MFP
    addr: 0x50000030
    size_bits: 32
    description: GPIOA multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPA_MFP0
      bit_offset: 0
      bit_width: 1
      description: 'PA.0 Pin Function Selection

        1 = The ADC0 (Analog-to-Digital converter channel 0) function is selected
        to the pin PA.0

        0 = The GPIOA[0] is selected to the pin PA.0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP1
      bit_offset: 1
      bit_width: 1
      description: "PA.1 Pin Function Selection\nThe pin function depends on GPA_MFP1
        and EBI_HB_EN[4] (ALT_MFP[20]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[4]\tEBI_EN
        \tGPA_MFP[1]\tPA.1 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tADC1 (ADC)\t\n0
        \t1 \t1 \tADC1 (ADC)\t\n1 \t1 \t1 \tAD12 (EBI AD bus bit 12)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP2
      bit_offset: 2
      bit_width: 1
      description: "PA.2 Pin Function Selection\nThe pin function depends on GPA_MFP2
        and EBI_HB_EN[3] (ALT_MFP[19]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[3]\tEBI_EN
        \tGPA_MFP[2]\tPA.2 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tADC2 (ADC)\t\n0
        \t1 \t1 \tADC2 (ADC)\t\n1 \t1 \t1 \tAD11 (EBI AD bus bit 11)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP3
      bit_offset: 3
      bit_width: 1
      description: "PA.3 Pin Function Selection\nThe pin function depends on GPA_MFP3
        and EBI_HB_EN[2] (ALT_MFP[18]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[2]\tEBI_EN
        \tGPA_MFP[3]\tPA.3 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tADC3 (ADC)\t\n0
        \t1 \t1 \tADC3 (ADC)\t\n1 \t1 \t1 \tAD10 (EBI AD bus bit 10)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP4
      bit_offset: 4
      bit_width: 1
      description: "PA.4 Pin Function Selection\nThe pin function depends on GPA_MFP4
        and EBI_HB_EN[1] (ALT_MFP[17]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[1]\tEBI_EN
        \tGPA_MFP[4]\tPA.4 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tADC4 (ADC)\t\n0
        \t1 \t1 \tADC4 (ADC)\t\n1 \t1 \t1 \tAD9 (EBI AD bus bit 9)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP5
      bit_offset: 5
      bit_width: 1
      description: "PA.5 Pin Function Selection\nThe pin function depends on GPA_MFP5
        and EBI_HB_EN[0] (ALT_MFP[16]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[0]\tEBI_EN
        \tGPA_MFP[5]\tPA.5 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tADC5 (ADC)\t\n0
        \t1 \t1 \tADC5 (ADC)\t\n1 \t1 \t1 \tAD8 (EBI AD bus bit 8)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP6
      bit_offset: 6
      bit_width: 1
      description: "PA.6 Pin Function Selection\nThe pin function depends on GPA_MFP6
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPA_MFP[6]\tPA.6 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tADC6 (ADC)\t\n1 \t1 \tAD7 (EBI AD bus bit 7)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP7
      bit_offset: 7
      bit_width: 1
      description: "PA.7 Pin Function Selection\nThe pin function depends on GPA_MFP7
        and PA7_S21 (ALT_MFP[2]) and EBI_EN (ALT_MFP[11]).\nEBI_EN\tPA7_S21\tGPA_MFP[7]\tPA.7
        function \t\nx \tx \t0 \tGPIO \t\n0 \t0 \t1 \tADC7 (ADC)\t\n0 \t1 \t1 \tSPISS21
        (SPI2)\t\n1 \tx \t1 \tAD6 (EBI AD bus bit 6)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP8
      bit_offset: 8
      bit_width: 1
      description: 'PA.8 Pin Function Selection

        1 = The I2C0 SDA function is selected to the pin PA.8

        0 = The GPIOA[8] is selected to the pin PA.8'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP9
      bit_offset: 9
      bit_width: 1
      description: 'PA.9 Pin Function Selection

        1 = The I2C0 SCL function is selected to the pin PA.9

        0 = The GPIOA[9] is selected to the pin PA.9'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP10
      bit_offset: 10
      bit_width: 1
      description: "PA.10 Pin Function Selection\nThe pin function depends on GPA_MFP10
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPA_MFP[10]\tPA.10 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tSDA1 (I2C)\t\n1 \t1 \tnWR (EBI)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP11
      bit_offset: 11
      bit_width: 1
      description: "PA.11 Pin Function Selection\nThe pin function depends on GPA_MFP11
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPA_MFP[11]\tPA.11 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tSCL1 (I2C)\t\n1 \t1 \tnRD (EBI)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP12
      bit_offset: 12
      bit_width: 1
      description: "PA.12 Pin Function Selection\nThe pin function depends on GPA_MFP12
        and EBI_HB_EN[5] (ALT_MFP[21]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[5]\tEBI_EN
        \tGPA_MFP[12]\tPA.12 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tPWM0 (PWM)\t\n0
        \t1 \t1 \tPWM0 (PWM)\t\n1 \t1 \t1 \tAD13 (EBI AD bus bit 13)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP13
      bit_offset: 13
      bit_width: 1
      description: "PA.13 Pin Function Selection\nThe pin function depends on GPA_MFP13
        and EBI_HB_EN[6] (ALT_MFP[22]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[6]\tEBI_EN
        \tGPA_MFP[13]\tPA.13 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tPWM1 (PWM)\t\n0
        \t1 \t1 \tPWM1 (PWM)\t\n1 \t1 \t1 \tAD14 (EBI AD bus bit 14)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP14
      bit_offset: 14
      bit_width: 1
      description: "PA.14 Pin Function Selection\nThe pin function depends on GPA_MFP14
        and EBI_HB_EN[7] (ALT_MFP[23]) and EBI_EN (ALT_MFP[11]).\nEBI_HB_EN[7]\tEBI_EN
        \tGPA_MFP[14]\tPA.14 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tPWM2 (PWM)\t\n0
        \t1 \t1 \tPWM2 (PWM)\t\n1 \t1 \t1 \tAD15 (EBI AD bus bit 15)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_MFP15
      bit_offset: 15
      bit_width: 1
      description: "PA.14 Pin Function Selection\nThe pin function depends on GPA_MFP15
        and PA15_I2SMCLK (ALT_MFP[9]).\nPA15_I2SMCLK\tGPA_MFP[15]\tPA.15 function
        \t\nx \t0 \tGPIO \t\n0 \t1 \tPWM3 (PWM) \t\n1 \t1 \tI2SMCLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPA_TYPEn
      bit_offset: 16
      bit_width: 16
      description: '1 = Enable GPIOA[15:0] I/O input Schmitt Trigger function

        0 = Disable GPIOA[15:0] I/O input Schmitt Trigger function'
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPB_MFP
    addr: 0x50000034
    size_bits: 32
    description: GPIOB multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPB_MFP0
      bit_offset: 0
      bit_width: 1
      description: 'PB.0 Pin Function Selection

        1 = The UART0 RXD function is selected to the pin PB.0

        0 = The GPIOB[0] is selected to the pin PB.0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP1
      bit_offset: 1
      bit_width: 1
      description: 'PB.1 Pin Function Selection

        1 = The UART0 TXD function is selected to the pin PB.1

        0 = The GPIOB[1] is selected to the pin PB.1'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP2
      bit_offset: 2
      bit_width: 1
      description: "PB.2 Pin Function Selection\nThe pin function depends on GPB_MFP2
        and EBI_nWRL_EN (ALT_MFP[13]) and EBI_EN (ALT_MFP[11]).\nEBI_nWRL_EN \tEBI_EN
        \tGPB_MFP[2]\tPB.2 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tRTS0 (UART0)\t\n0
        \t1 \t1 \tRTS0 (UART0)\t\n1 \t1 \t1 \tnWRL (EBI write low byte enable)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP3
      bit_offset: 3
      bit_width: 1
      description: "PB.3 Pin Function Selection\nThe pin function depends on GPB_MFP3
        and EBI_nWRH_EN (ALT_MFP[14]) and EBI_EN (ALT_MFP[11]).\nEBI_nWRH_EN \tEBI_EN
        \tGPB_MFP[3]\tPB.3 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tCTS0 (UART0)\t\n0
        \t1 \t1 \tCTS0 (UART0)\t\n1 \t1 \t1 \tnWRH (EBI write high byte enable)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP4
      bit_offset: 4
      bit_width: 1
      description: 'PB.4 Pin Function Selection

        1 = The UART1 RXD function is selected to the pin PB.4

        0 = The GPIOB[4] is selected to the pin PB.4'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP5
      bit_offset: 5
      bit_width: 1
      description: 'PB.5 Pin Function Selection

        1 = The UART1 TXD function is selected to the pin PB.5

        0 = The GPIOB[5] is selected to the pin PB.5'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP6
      bit_offset: 6
      bit_width: 1
      description: "PB.6 Pin Function Selection\nThe pin function depends on GPB_MFP6
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPB_MFP[6]\tPB.6 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tTRS1 (UART1)\t\n1 \t1 \tALE (EBI)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP7
      bit_offset: 7
      bit_width: 1
      description: "PB.7 Pin Function Selection\nThe pin function depends on GPB_MFP7
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPB_MFP[7]\tPB.7 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tCTS1 (UART1)\t\n1 \t1 \tnCS (EBI)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP8
      bit_offset: 8
      bit_width: 1
      description: 'PB.8 Pin Function Selection

        1 = The TM0 (Timer/Counter external trigger clock input) function is selected
        to the pin PB.8

        0 = The GPIOB[8] is selected to the pin PB.8'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP9
      bit_offset: 9
      bit_width: 1
      description: "PB.9 Pin Function Selection\nThe pin function depends on GPB_MFP9
        and PB9_S11 (ALT_MFP[1]).\nPB9_S11\tGPB_MFP[9]\tPB.9 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tTM1 \t\n1 \t1 \tSPISS11 (SPI1)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP10
      bit_offset: 10
      bit_width: 1
      description: "PB.10 Pin Function Selection\nThe pin function depends on GPB_MFP10
        and PB10_S01 (ALT_MFP[0]).\nPB10_S01\tGPB_MFP[10]\tPB.10 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tTM2 \t\n1 \t1 \tSPISS01 (SPI0)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP11
      bit_offset: 11
      bit_width: 1
      description: "PB.11 Pin Function Selection\nThe pin function depends on GPB_MFP11
        and PB11_PWM4 (ALT_MFP[4]).\nPB11_PWM4\tGPB_MFP[11]\tPB.11 function \t\nx
        \t0 \tGPIO \t\n0 \t1 \tTM3 \t\n1 \t1 \tPWM4 (PWM)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP12
      bit_offset: 12
      bit_width: 1
      description: "PB.12 Pin Function Selection\nThe pin function depends on GPB_MFP12
        and PB12_CLKO (ALT_MFP[10]) and EBI_EN (ALT_MFP[11]).\nEBI_EN\tPB12_CLKO\tGPB_MFP[12]\tPB.12
        function \t\nx \tx \t0 \tGPIO \t\n0 \t0 \t1 \tCPO0(CMP) \t\n0 \t1 \t1 \tCLKO
        (Clock Driver output)\t\n1 \tx \t1 \tAD0(EBI AD bus bit 0) \t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP13
      bit_offset: 13
      bit_width: 1
      description: "PB.13 Pin Function Selection\nThe pin function depends on GPB_MFP13
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPB_MFP[13]\tPB.13 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tCPO1 (CMP)\t\n1 \t1 \tAD1 (EBI AD bus bit 1)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP14
      bit_offset: 14
      bit_width: 1
      description: "PB.14 Pin Function Selection\nThe pin function depends on GPB_MFP14
        and PB14_S31 (ALT_MFP[3]).\nPB14_S31\tGPB_MFP[14]\tPB.14 function \t\nx \t0
        \tGPIO \t\n0 \t1 \t/INT0 \t\n1 \t1 \tSPISS31 (SPI3)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_MFP15
      bit_offset: 15
      bit_width: 1
      description: 'PB.15 Pin Function Selection

        1 = The External Interrupt INT1 function is selected to the pin PB.15

        0 = The GPIOB[15] is selected to the pin PB.15'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPB_TYPEn
      bit_offset: 16
      bit_width: 16
      description: '1 = Enable GPIOB[15:0] I/O input Schmitt Trigger function

        0 = Disable GPIOB[15:0] I/O input Schmitt Trigger function'
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPC_MFP
    addr: 0x50000038
    size_bits: 32
    description: GPIOC multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SPI0_SS0_I2SLRCLK
      bit_offset: 0
      bit_width: 1
      description: "PC.0 Pin Function Selection\nBits PC0_I2SLRCLK (ALT_MFP[5]) and
        GPC_MFP[0] determine the PC.0 function.\nPC0_I2SLRCLK\tGPC_MFP[0]\tPC.0 function
        \t\nx \t0 \tGPIO \t\n0 \t1 \tSPISS00(SPI0) \t\n1 \t1 \tI2SLRCLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_CLK_I2SBCLK
      bit_offset: 1
      bit_width: 1
      description: "PC.1 Pin Function Selection\nBits PC1_I2SBCLK (ALT_MFP[6]) and
        GPC_MFP[1] determine the PC.1 function.\nPC1_I2SBCLK\tGPC_MFP[1]\tPC.1 function
        \t\nx \t0 \tGPIO \t\n0 \t1 \tSPICLK0 (SPI0) \t\n1 \t1 \tI2SBLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_MISO0_I2SDI
      bit_offset: 2
      bit_width: 1
      description: "PC.2 Pin Function Selection\nBits PC2_I2SDI (ALT_MFP[7]) and GPC_MFP[2]
        determine the PC.2 function.\nPC2_I2SDI\tGPC_MFP[2]\tPC.2 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tMISO00 (SPI0) \t\n1 \t1 \tI2SDI (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_MOSI0_I2SDO
      bit_offset: 3
      bit_width: 1
      description: "PC.3 Pin Function Selection\nBits PC3_I2SDO (ALT_MFP[8]) and GPC_MFP[3]
        determine the PC.3 function.\nPC3_I2SDO\tGPC_MFP[3]\tPC.3 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tMOSI00 (SPI0) \t\n1 \t1 \tI2SDO (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_MISO1
      bit_offset: 4
      bit_width: 1
      description: 'PC.4 Pin Function Selection

        1 = The SPI0 MISO1 (master input, slave output pin-1) function is selected
        to the pin PC.4

        0 = The GPIOC[4] is selected to the pin PC.4'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_MOSI1
      bit_offset: 5
      bit_width: 1
      description: 'PC.5 Pin Function Selection

        1 = The SPI0 MOSI1 (master output, slave input pin-1) function is selected
        to the pin PC.5

        0 = The GPIOC[5] is selected to the pin PC.5'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPP0_AD4
      bit_offset: 6
      bit_width: 1
      description: "PC.6 Pin Function Selection\nThe pin function depends on GPC_MFP6
        and EBI_EN (ALT_MFP[11]).\nEBI_EN\tGPC_MFP[6]\tPC.6 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tCPP0 (CMP) \t\n1 \t1 \tAD4 (EBI AD bus bit 4)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPN0_AD5
      bit_offset: 7
      bit_width: 1
      description: "PC.7 Pin Function Selection\nThe pin function depends on GPC_MFP7
        and EBI_EN (ALT_MFP[11]).\nEBI_EN\tGPC_MFP[7]\tPC.7 function \t\nx \t0 \tGPIO
        \t\n0 \t1 \tCPN0 (CMP) \t\n1 \t1 \tAD5 (EBI AD bus bit 5)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_SS0_MCLK
      bit_offset: 8
      bit_width: 1
      description: "PC.8 Pin Function Selection\nThe pin function depends on GPC_MFP8
        and EBI_MCLK_EN (ALT_MFP[12]) and EBI_EN (ALT_MFP[11]).\nEBI_MCLK_EN \tEBI_EN
        \tGPC_MFP[8]\tPC.8 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tSPISS10 (SPI1)
        \t\n0 \t1 \t1 \tSPISS10 (SPI1) \t\n1 \t1 \t1 \tMCLK (EBI Clock output)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_CLK
      bit_offset: 9
      bit_width: 1
      description: 'PC.9 Pin Function Selection

        1 = The SPI1 SPICLK function is selected to the pin PC.9

        0 = The GPIOC[9] is selected to the pin PC.9'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_MISO0
      bit_offset: 10
      bit_width: 1
      description: 'PC.10 Pin Function Selection

        1 = The SPI1 MISO0 (master input, slave output pin-0) function is selected
        to the pin PC.10

        0 = The GPIOC[10] is selected to the pin PC.10'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_MOSI0
      bit_offset: 11
      bit_width: 1
      description: 'PC.11 Pin Function Selection

        1 = The SPI1 MOSI0 (master output, slave input pin-0) function is selected
        to the pin PC.11

        0 = The GPIOC[11] is selected to the pin PC.11'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_MISO1
      bit_offset: 12
      bit_width: 1
      description: 'PC.12 Pin Function Selection

        1 = The SPI1 MISO1 (master input, slave output pin-1) function is selected
        to the pin PC.12

        0 = The GPIOC[12] is selected to the pin PC.12'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_MOSI1
      bit_offset: 13
      bit_width: 1
      description: 'PC.13 Pin Function Selection

        1 = The SPI1 MOSI1 (master output, slave input pin-1) function is selected
        to the pin PC.13

        0 = The GPIOC[13] is selected to the pin PC.13'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPP1_AD2
      bit_offset: 14
      bit_width: 1
      description: "PC.14 Pin Function Selection\nThe pin function depends on GPC_MFP14
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPC_MFP[14]\tPC.14 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tCPP1 (CMP)\t\n1 \t1 \tAD2 (EBI AD bus bit 2)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPP1_AD3
      bit_offset: 15
      bit_width: 1
      description: "PC.15 Pin Function Selection\nThe pin function depends on GPC_MFP15
        and EBI_EN (ALT_MFP[11]).\nEBI_EN \tGPC_MFP[15]\tPC.15 function \t\nx \t0
        \tGPIO \t\n0 \t1 \tCPN1 (CMP)\t\n1 \t1 \tAD3 (EBI AD bus bit 3)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 16
      bit_width: 16
      description: '1 = Enable GPIOC[15:0] I/O input Schmitt Trigger function

        0 = Disable GPIOC[15:0] I/O input Schmitt Trigger function'
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPD_MFP
    addr: 0x5000003c
    size_bits: 32
    description: GPIOD multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPD_MFP0
      bit_offset: 0
      bit_width: 1
      description: 'PD.0 Pin Function Selection (Medium Density Only)

        1 = The SPI2 SS20 function is selected to the pin PD.0

        0 = The GPIOD[0] is selected to the pin PD.0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP1
      bit_offset: 1
      bit_width: 1
      description: 'PD.1 Pin Function Selection

        For NUC100/NUC120/NUC130/NUC140 Medium Density

        1 = The SPI2 SPICLK function is selected to the pin PD.1

        0 = The GPIOD[1] is selected to the pin PD.1

        For NUC100/NUC120/NUC130/NUC140 Low Density and NUC101 LQFP48 package

        Reserved

        For NUC101 QFN36 package

        1 = The SPI0 SS01 function is selected to the pin PD.1

        0 = The GPIOD[1] is selected to the pin PD.1'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP2
      bit_offset: 2
      bit_width: 1
      description: 'PD.2 Pin Function Selection

        For NUC100/NUC120/NUC130/NUC140 Medium Density

        1 = The SPI2 MISO0 (master input, slave output pin-0) function is selected
        to the pin PD.2

        0 = The GPIOD[2] is selected to the pin PD.2

        For NUC100/NUC120/NUC130/NUC140 Low Density and NUC101 LQFP48 package

        Reserved

        For NUC101 QFN36 package

        1 = The SPI0 MISO1 (master input, slave output pin-1) function is selected
        to the pin PD.2

        0 = The GPIOD[2] is selected to the pin PD.2'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP3
      bit_offset: 3
      bit_width: 1
      description: 'PD.3 Pin Function Selection

        For NUC100/NUC120/NUC130/NUC140 Medium Density

        1 = The SPI2 MOSI0 (master output, slave input pin-0) function is selected
        to the pin GPD3

        0 = The GPIOD[3] is selected to the pin PD.3

        For NUC100/NUC120/NUC130/NUC140 Low Density and NUC101 LQFP48 package

        Reserved

        For NUC101 QFN36 package

        1 = The SPI0 MOSI1 (master output, slave input pin-1) function is selected
        to the pin PD.3

        0 = The GPIOD[3] is selected to the pin PD.3'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP4
      bit_offset: 4
      bit_width: 1
      description: 'PD.4 Pin Function Selection (Medium Density Only)

        1 = The SPI2 MISO1 (master input, slave output pin-1) function is selected
        to the pin PD.4

        0 = The GPIOD[4]is selected to the pin PD.4'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP5
      bit_offset: 5
      bit_width: 1
      description: 'PD.5 Pin Function Selection (Medium Density Only)

        1 = The SPI2 MOSI1 (master output, slave input pin-1) function is selected
        to the pin PD.5

        0 = The GPIOD[5] is selected to the pin PD.5'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP6
      bit_offset: 6
      bit_width: 1
      description: 'PD.6 Pin Function Selection (Medium Density Only)

        1 = The CAN0 RX function is selected to the pin PD.6

        0 = The GPIOD[6] is selected to the pin PD.6'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP7
      bit_offset: 7
      bit_width: 1
      description: 'PD.7 Pin Function Selection (Medium Density Only)

        1 = The CAN0 TX function is selected to the pin PD.7

        0 = The GPIOD[7] is selected to the pin PD.7'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP8
      bit_offset: 8
      bit_width: 1
      description: 'PD.8 Pin Function Selection (Medium Density Only)

        1 = The SPI3 SS30 function is selected to the pin PD8

        0 = The GPIOD[8] is selected to the pin PD8'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP9
      bit_offset: 9
      bit_width: 1
      description: 'PD.9 Pin Function Selection (Medium Density Only)

        1 = The SPI3 SPICLK function is selected to the pin PD.9

        0 = The GPIOD-9 is selected to the pin PD.9'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP10
      bit_offset: 10
      bit_width: 1
      description: 'PD.10 Pin Function Selection (Medium Density Only)

        1 = The SPI3 MISO0 (master input, slave output pin-0) function is selected
        to the pin PD.10

        0 = The GPIOD[10] is selected to the pin PD.10'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP11
      bit_offset: 11
      bit_width: 1
      description: 'PD.11 Pin Function Selection (Medium Density Only)

        1 = The SPI3 MOSI0 (master output, slave input pin-0) function is selected
        to the pin PD.11

        0 = The GPIOD[11] is selected to the pin PD.11'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP12
      bit_offset: 12
      bit_width: 1
      description: 'PD.12 Pin Function Selection (Medium Density Only)

        1 = The SPI3 MISO1 (master input, slave output pin-1) function is selected
        to the pin PD.12

        0 = The GPIOD[12] is selected to the pin PD.12'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP13
      bit_offset: 13
      bit_width: 1
      description: 'PD.13 Pin Function Selection (Medium Density Only)

        1 = The SPI3 MOSI1 (master output, slave input pin-1) function is selected
        to the pin PD.13

        0 = The GPIOD[13] is selected to the pin PD.13'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP14
      bit_offset: 14
      bit_width: 1
      description: 'PD.14 Pin Function Selection (Medium Density Only)

        1 = The UART2 RXD function is selected to the pin PD.14

        0 = The GPIOD[14] selected to the pin PD.14'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_MFP15
      bit_offset: 15
      bit_width: 1
      description: 'PD.15 Pin Function Selection (Medium Density Only)

        1 = The UART2 TXD function is selected to the pin PD.15

        0 = The GPIOD[15] selected to the pin PD.15'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPD_TYPEn
      bit_offset: 16
      bit_width: 16
      description: '1 = Enable GPIOD[15:0] I/O input Schmitt Trigger function

        0 = Disable GPIOD[15:0] I/O input Schmitt Trigger function'
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPE_MFP
    addr: 0x50000040
    size_bits: 32
    description: GPIOE multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPE_MFP0
      bit_offset: 0
      bit_width: 1
      description: 'PE.0 Pin Function Selection (Medium Density Only)

        1 = The PWM6 function is selected to the pin PE.0

        0 = The GPIOE[0] is selected to the pin PE.0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPE_MFP1
      bit_offset: 1
      bit_width: 1
      description: 'PE.1 Pin Function Selection (Medium Density Only)

        1 = The PWM7 function is selected to the pin PE.1

        0 = The GPIOE[1] is selected to the pin PE.1'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPE_MFP5
      bit_offset: 5
      bit_width: 1
      description: 'PE.5 Pin Function Selection (Medium Density Only)

        1 = The PWM5 function is selected to the pin PE.5

        0 = The GPIOE[5] is selected to the pin PE.5'
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPE_TYPEn
      bit_offset: 16
      bit_width: 16
      description: '1 = Enable GPIOE[15:0] I/O input Schmitt Trigger function

        0 = Disable GPIOE[15:0] I/O input Schmitt Trigger function

        Note: In this field, Low Density only has GPE_TYPE5 bit'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ALT_MFP
    addr: 0x50000050
    size_bits: 32
    description: Alternative Multiple Function Pin Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PB10_S01
      bit_offset: 0
      bit_width: 1
      description: "Bits PB10_S01 and GPB_MFP10 determine the PB.10 function.\nPB10_S01\tGPB_MFP[10]\tPB.10
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tTM2 \t\n1 \t1 \tSPISS01 (SPI0)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB9_S11
      bit_offset: 1
      bit_width: 1
      description: "Bits PB9_S11 and GPB_MFP9 determine the PB.9 function.\nPB9_S11\tGPB_MFP[9]\tPB.9
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tTM1 \t\n1 \t1 \tSPISS11 (SPI1)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA7_S21
      bit_offset: 2
      bit_width: 1
      description: "Bits PA7_S21, PA_MFP7 and EBI_EN (ALT_MFP[11])determine the PA.7
        function.\nEBI_EN\tPA7_S21\tGPA_MFP[7]\tPA.7 function \t\nx \tx \t0 \tGPIO
        \t\n0 \t0 \t1 \tADC7 (ADC)\t\n0 \t1 \t1 \tSPISS21 (SPI2)\t\n1 \tx \t1 \tAD6
        (EBI AD bus bit 6)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB14_S31
      bit_offset: 3
      bit_width: 1
      description: "Bits PB14_S31 and GPB_MFP14 determine the GPB14 function.\nPB14_S31\tGPB_MFP[14]\tPB.14
        function \t\nx \t0 \tGPIO \t\n0 \t1 \t/INT0 \t\n1 \t1 \tSPISS31 (SPI3)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB11_PWM4
      bit_offset: 4
      bit_width: 1
      description: "Bits PB11_PWM4 and GPB_MFP[11] determine the PB.11 function.\nPB11_PWM4\tGPB_MFP[11]\tPB.11
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tTM3 \t\n1 \t1 \tPWM4 (PWM)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PC0_I2SLRCLK
      bit_offset: 5
      bit_width: 1
      description: "Bits PC0_I2SLRCLK and GPC_MFP[0] determine the PC.0 function.\nPC0_I2SLRCLK\tGPC_MFP[0]\tPC.0
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tSPISS00(SPI0) \t\n1 \t1 \tI2SLRCLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PC1_I2SBCLK
      bit_offset: 6
      bit_width: 1
      description: "Bits PC1_I2SBCLK and GPC_MFP[1] determine the PC.1 function.\nPC1_I2SBCLK\tGPC_MFP[1]\tPC.1
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tSPICLK0 (SPI0) \t\n1 \t1 \tI2SBLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PC2_I2SDI
      bit_offset: 7
      bit_width: 1
      description: "Bits PC2_I2SDI and GPC_MFP[2] determine the PC.2 function.\nPC2_I2SDI\tGPC_MFP[2]\tPC.2
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tMISO00 (SPI0) \t\n1 \t1 \tI2SDI (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PC3_I2SDO
      bit_offset: 8
      bit_width: 1
      description: "Bits PC3_I2SDO and GPC_MFP[3] determine the PC.3 function.\nPC3_I2SDO\tGPC_MFP[3]\tPC.3
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tMOSI00 (SPI0) \t\n1 \t1 \tI2SDO (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_I2SMCLK
      bit_offset: 9
      bit_width: 1
      description: "Bits PA15_I2SMCLK and GPA_MFP[15] determine the PA.15 function.\nPA15_I2SMCLK\tGPA_MFP[15]\tPA.15
        function \t\nx \t0 \tGPIO \t\n0 \t1 \tPWM3 (PWM) \t\n1 \t1 \tI2SMCLK (I2S)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB12_CLKO
      bit_offset: 10
      bit_width: 1
      description: "Bits PB12_CLKO and GPB_MFP[12] determine the PB.12 function.\nEBI_EN
        \tPB12_CLKO \tGPB_MFP[12]\tPB.12 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1
        \tCPO0 (CMP)\t\n0 \t1 \t1 \tCLKO (Clock Driver output)\t\n1 \t1 \t1 \tAD0
        (EBI AD bus bit 0)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_EN
      bit_offset: 11
      bit_width: 1
      description: EBI_EN is use to switch GPIO function to EBI function (AD[15:0],
        ALE, RE, WE, CS, MCLK), it need additional registers EBI_EN[7:0] and EBI_MCLK_EN
        for some GPIO to switch to EBI function(AD[15:8], MCLK)
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_MCLK_EN
      bit_offset: 12
      bit_width: 1
      description: "Bits EBI_MCLK_EN, EBI_EN and GPC_MFP[8] determine the PC.8 function.\nEBI_MCLK_EN
        \tEBI_EN \tGPC_MFP[8]\tPC.8 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tSPISS10
        (SPI1) \t\n0 \t1 \t1 \tSPISS10 (SPI1) \t\n1 \t1 \t1 \tMCLK (EBI Clock output)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_nWRL_EN
      bit_offset: 13
      bit_width: 1
      description: "Bits EBI_nWRL_EN, EBI_EN and GPB_MFP[2] determine the PB.2 function.\nEBI_nWRL_EN
        \tEBI_EN \tGPB_MFP[2]\tPB.2 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tRTS0
        (UART0)\t\n0 \t1 \t1 \tRTS0 (UART0)\t\n1 \t1 \t1 \tnWRL (EBI write low byte
        enable)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_nWRH_EN
      bit_offset: 14
      bit_width: 1
      description: "Bits EBI_nWRH_EN, EBI_EN and GPB_MFP[3] determine the PB.3 function\nEBI_nWRH_EN
        \tEBI_EN \tGPB_MFP[3]\tPB.3 function \t\nx \tx \t0 \tGPIO \t\nx \t0 \t1 \tCTS0
        (UART0)\t\n0 \t1 \t1 \tCTS0 (UART0)\t\n1 \t1 \t1 \tnWRH (EBI write high byte
        enable)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_HB_EN
      bit_offset: 16
      bit_width: 8
      description: EBI_HB_EN is use to switch GPIO function to EBI address/data bus
        high byte (AD[15:8]), EBI_HB_EN, EBI_EN and corresponding GPx_MFP[y] determine
        the Px.y function.
      read_allowed: true
      write_allowed: true
  - !Register
    name: REGWRPROT
    addr: 0x50000100
    size_bits: 32
    description: Register Write Protect Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: REGPROTDIS
      bit_offset: 0
      bit_width: 1
      description: 'Register Write Protection Disable Index (Read only)

        1 = Write-Protection is disabled for writing protected registers

        0 = Write-Protection is enabled for writing protected registers. Any write
        to the protected register is ignored.

        The Protected registers are:

        IPRST1: address 0x5000_0008

        BODCR: address 0x5000_0018

        PORCR: address 0x5000_0024

        PWRCON: address 0x5000_0200 (bit[6] is not protected for power wake-up interrupt
        clear)

        APBCLK bit[0]: address 0x5000_0208 (bit[0] is watchdog timer clock enable)

        CLK_SEL0: address 0x5000_0210 (for HCLK and CPU STCLK clock source select)

        CLK_SEL1 bit[1:0]: address 0x5000_0214 (for watch dog clock source select)

        ISPCON: address 0x5000_C000 (Flash ISP Control register)

        WTCR: address 0x4000_4000

        FATCON: address 0x5000_C018'
      read_allowed: true
      write_allowed: false
    - !Field
      name: REGWRPROT
      bit_offset: 0
      bit_width: 8
      description: 'Register Write-Protection Code (Write only)

        Some write-protected registers have to be disabled the protected function
        by writing the sequence value "59h", "16h", "88h" to this field. After this
        sequence is completed, the REGPROTDIS bit will be set to 1 and write-protected
        registers can be normal write.'
      read_allowed: false
      write_allowed: true
- !Module
  name: GPA
  description: Registers group
  base_addr: 0x50004000
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x50004000
    size_bits: 32
    description: GPIO Port Pin I/O Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD8
      bit_offset: 16
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD9
      bit_offset: 18
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD10
      bit_offset: 20
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD11
      bit_offset: 22
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD12
      bit_offset: 24
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD13
      bit_offset: 26
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD14
      bit_offset: 28
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD15
      bit_offset: 30
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x50004004
    size_bits: 32
    description: GPIO Port Pin OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 16
      description: 'GPIOx Pin[n] OFF digital input path Enable

        Each of these bits is used to control if the input path of corresponding GPIO
        pin is disabled. If input is analog signal, users can OFF digital input path
        to avoid creepage

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x50004008
    size_bits: 32
    description: GPIO Port Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT8
      bit_offset: 8
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT9
      bit_offset: 9
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT10
      bit_offset: 10
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT11
      bit_offset: 11
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT12
      bit_offset: 12
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT13
      bit_offset: 13
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT14
      bit_offset: 14
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT15
      bit_offset: 15
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0x5000400c
    size_bits: 32
    description: GPIO Port Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x50004010
    size_bits: 32
    description: GPIO Port Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x50004014
    size_bits: 32
    description: GPIO Port De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x50004018
    size_bits: 32
    description: GPIO Port Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x5000401c
    size_bits: 32
    description: GPIO Port Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN8
      bit_offset: 8
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN9
      bit_offset: 9
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN10
      bit_offset: 10
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN11
      bit_offset: 11
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN12
      bit_offset: 12
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN13
      bit_offset: 13
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN14
      bit_offset: 14
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN15
      bit_offset: 15
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN8
      bit_offset: 24
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN9
      bit_offset: 25
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN10
      bit_offset: 26
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN11
      bit_offset: 27
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN12
      bit_offset: 28
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN13
      bit_offset: 29
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN14
      bit_offset: 30
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN15
      bit_offset: 31
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x50004020
    size_bits: 32
    description: GPIO Port Interrupt Trigger Source Indicator
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPB
  description: Registers group
  base_addr: 0x50004040
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x50004040
    size_bits: 32
    description: GPIO Port Pin I/O Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD8
      bit_offset: 16
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD9
      bit_offset: 18
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD10
      bit_offset: 20
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD11
      bit_offset: 22
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD12
      bit_offset: 24
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD13
      bit_offset: 26
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD14
      bit_offset: 28
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD15
      bit_offset: 30
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x50004044
    size_bits: 32
    description: GPIO Port Pin OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 16
      description: 'GPIOx Pin[n] OFF digital input path Enable

        Each of these bits is used to control if the input path of corresponding GPIO
        pin is disabled. If input is analog signal, users can OFF digital input path
        to avoid creepage

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x50004048
    size_bits: 32
    description: GPIO Port Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT8
      bit_offset: 8
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT9
      bit_offset: 9
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT10
      bit_offset: 10
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT11
      bit_offset: 11
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT12
      bit_offset: 12
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT13
      bit_offset: 13
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT14
      bit_offset: 14
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT15
      bit_offset: 15
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0x5000404c
    size_bits: 32
    description: GPIO Port Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x50004050
    size_bits: 32
    description: GPIO Port Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x50004054
    size_bits: 32
    description: GPIO Port De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x50004058
    size_bits: 32
    description: GPIO Port Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x5000405c
    size_bits: 32
    description: GPIO Port Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN8
      bit_offset: 8
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN9
      bit_offset: 9
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN10
      bit_offset: 10
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN11
      bit_offset: 11
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN12
      bit_offset: 12
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN13
      bit_offset: 13
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN14
      bit_offset: 14
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN15
      bit_offset: 15
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN8
      bit_offset: 24
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN9
      bit_offset: 25
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN10
      bit_offset: 26
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN11
      bit_offset: 27
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN12
      bit_offset: 28
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN13
      bit_offset: 29
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN14
      bit_offset: 30
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN15
      bit_offset: 31
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x50004060
    size_bits: 32
    description: GPIO Port Interrupt Trigger Source Indicator
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPC
  description: Registers group
  base_addr: 0x50004080
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x50004080
    size_bits: 32
    description: GPIO Port Pin I/O Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD8
      bit_offset: 16
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD9
      bit_offset: 18
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD10
      bit_offset: 20
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD11
      bit_offset: 22
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD12
      bit_offset: 24
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD13
      bit_offset: 26
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD14
      bit_offset: 28
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD15
      bit_offset: 30
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x50004084
    size_bits: 32
    description: GPIO Port Pin OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 16
      description: 'GPIOx Pin[n] OFF digital input path Enable

        Each of these bits is used to control if the input path of corresponding GPIO
        pin is disabled. If input is analog signal, users can OFF digital input path
        to avoid creepage

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x50004088
    size_bits: 32
    description: GPIO Port Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT8
      bit_offset: 8
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT9
      bit_offset: 9
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT10
      bit_offset: 10
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT11
      bit_offset: 11
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT12
      bit_offset: 12
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT13
      bit_offset: 13
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT14
      bit_offset: 14
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT15
      bit_offset: 15
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0x5000408c
    size_bits: 32
    description: GPIO Port Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x50004090
    size_bits: 32
    description: GPIO Port Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x50004094
    size_bits: 32
    description: GPIO Port De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x50004098
    size_bits: 32
    description: GPIO Port Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x5000409c
    size_bits: 32
    description: GPIO Port Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN8
      bit_offset: 8
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN9
      bit_offset: 9
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN10
      bit_offset: 10
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN11
      bit_offset: 11
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN12
      bit_offset: 12
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN13
      bit_offset: 13
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN14
      bit_offset: 14
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN15
      bit_offset: 15
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN8
      bit_offset: 24
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN9
      bit_offset: 25
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN10
      bit_offset: 26
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN11
      bit_offset: 27
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN12
      bit_offset: 28
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN13
      bit_offset: 29
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN14
      bit_offset: 30
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN15
      bit_offset: 31
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x500040a0
    size_bits: 32
    description: GPIO Port Interrupt Trigger Source Indicator
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPD
  description: Registers group
  base_addr: 0x500040c0
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x500040c0
    size_bits: 32
    description: GPIO Port Pin I/O Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD8
      bit_offset: 16
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD9
      bit_offset: 18
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD10
      bit_offset: 20
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD11
      bit_offset: 22
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD12
      bit_offset: 24
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD13
      bit_offset: 26
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD14
      bit_offset: 28
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD15
      bit_offset: 30
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x500040c4
    size_bits: 32
    description: GPIO Port Pin OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 16
      description: 'GPIOx Pin[n] OFF digital input path Enable

        Each of these bits is used to control if the input path of corresponding GPIO
        pin is disabled. If input is analog signal, users can OFF digital input path
        to avoid creepage

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x500040c8
    size_bits: 32
    description: GPIO Port Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT8
      bit_offset: 8
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT9
      bit_offset: 9
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT10
      bit_offset: 10
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT11
      bit_offset: 11
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT12
      bit_offset: 12
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT13
      bit_offset: 13
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT14
      bit_offset: 14
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT15
      bit_offset: 15
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0x500040cc
    size_bits: 32
    description: GPIO Port Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x500040d0
    size_bits: 32
    description: GPIO Port Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x500040d4
    size_bits: 32
    description: GPIO Port De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x500040d8
    size_bits: 32
    description: GPIO Port Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x500040dc
    size_bits: 32
    description: GPIO Port Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN8
      bit_offset: 8
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN9
      bit_offset: 9
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN10
      bit_offset: 10
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN11
      bit_offset: 11
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN12
      bit_offset: 12
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN13
      bit_offset: 13
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN14
      bit_offset: 14
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN15
      bit_offset: 15
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN8
      bit_offset: 24
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN9
      bit_offset: 25
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN10
      bit_offset: 26
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN11
      bit_offset: 27
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN12
      bit_offset: 28
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN13
      bit_offset: 29
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN14
      bit_offset: 30
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN15
      bit_offset: 31
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x500040e0
    size_bits: 32
    description: GPIO Port Interrupt Trigger Source Indicator
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPE
  description: Registers group
  base_addr: 0x50004100
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x50004100
    size_bits: 32
    description: GPIO Port Pin I/O Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD8
      bit_offset: 16
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD9
      bit_offset: 18
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD10
      bit_offset: 20
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD11
      bit_offset: 22
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD12
      bit_offset: 24
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD13
      bit_offset: 26
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD14
      bit_offset: 28
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD15
      bit_offset: 30
      bit_width: 2
      description: "GPIOX I/O Pin[n] Mode Control \nDetermine each I/O type of GPIOx
        pins\n00 = GPIO port [n] pin is in INPUT mode.\n01 = GPIO port [n] pin is
        in OUTPUT mode.\n10 = GPIO port [n] pin is in Open-Drain mode.\n11 = GPIO
        port [n] pin is in Quasi-bidirectional mode."
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x50004104
    size_bits: 32
    description: GPIO Port Pin OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 16
      description: 'GPIOx Pin[n] OFF digital input path Enable

        Each of these bits is used to control if the input path of corresponding GPIO
        pin is disabled. If input is analog signal, users can OFF digital input path
        to avoid creepage

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x50004108
    size_bits: 32
    description: GPIO Port Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT8
      bit_offset: 8
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT9
      bit_offset: 9
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT10
      bit_offset: 10
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT11
      bit_offset: 11
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT12
      bit_offset: 12
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT13
      bit_offset: 13
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT14
      bit_offset: 14
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT15
      bit_offset: 15
      bit_width: 1
      description: 'GPIOx Pin[n] Output Value

        Each of these bits control the status of a GPIO pin when the GPIO pin is configures
        as output, open-drain and quasi-mode.

        1 = GPIO port [A/B/C/D/E] Pin[n] will drive High if the GPIO pin is configures
        as output, open-drain and quasi-mode.

        0 = GPIO port [A/B/C/D/E] Pin[n] will drive Low if the GPIO pin is configures
        as output, open-drain and quasi-mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0x5000410c
    size_bits: 32
    description: GPIO Port Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Data Output Write Mask

        These bits are used to protect the corresponding register of GPIOx_DOUT bit[n].
        When set the DMASK bit[n] to"1", the corresponding GPIOx_DOUTn bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        1 = The corresponding GPIOx_DOUT[n] bit is protected

        0 = The corresponding GPIOx_DOUT[n] bit can be updated'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x50004110
    size_bits: 32
    description: GPIO Port Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Pin Values

        Each bit of the register reflects the actual status of the respective GPIO
        pin If bit is 1, it indicates the corresponding pin status is high, else the
        pin status is low'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x50004114
    size_bits: 32
    description: GPIO Port De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Input Signal De-bounce Enable

        DBEN[n]used to enable the de-bounce function for each corresponding bit. If
        the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle The input signal transition is seen as the signal bounce and
        will not trigger the interrupt. The de-bounce clock source is controlled by
        DBNCECON[4], one de-bounce sample cycle is controlled by DBNCECON[3:0]

        The DBEN[n] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        1 = The bit[n] de-bounce function is enabled

        0 = The bit[n] de-bounce function is disabled

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x50004118
    size_bits: 32
    description: GPIO Port Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Edge or Level Detection Interrupt Control

        IMD[n] is used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger source can be controlled
        by de-bounce. If the interrupt is by level trigger, the input source is sampled
        by one HCLK clock and generates the interrup.

        1 = Level trigger interrupt

        0 = Edge trigger interrupt

        If set pin as the level trigger interrupt, then only one level can be set
        on the registers GPIOx_IEN. If set both the level to trigger interrupt, the
        setting is ignored and no interrupt will occur

        The de-bounce function is valid for edge triggered interrupt. If the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x5000411c
    size_bits: 32
    description: GPIO Port Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN8
      bit_offset: 8
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN9
      bit_offset: 9
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN10
      bit_offset: 10
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN11
      bit_offset: 11
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN12
      bit_offset: 12
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN13
      bit_offset: 13
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN14
      bit_offset: 14
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN15
      bit_offset: 15
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Falling Edge or Input
        Level Low\nIF_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IF_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"low\" will generate the interrupt.\nIf the interrupt is edge
        trigger, the input PIN[n] state change from \"high-to-low\" will generate
        the interrupt.\n1 = Enable the PIN[n] state low-level or high-to-low change
        interrupt \n0 = Disable the PIN[n] state low-level or high-to-low change interrupt"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN8
      bit_offset: 24
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN9
      bit_offset: 25
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN10
      bit_offset: 26
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN11
      bit_offset: 27
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN12
      bit_offset: 28
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN13
      bit_offset: 29
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN14
      bit_offset: 30
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN15
      bit_offset: 31
      bit_width: 1
      description: "Port [A/B/C/D/E] Interrupt Enable by Input Rising Edge or Input
        Level High\nIR_EN[n] used to enable the interrupt for each of the corresponding
        input GPIO_PIN[n]. Set bit to 1 also enable the pin wakeup function\nWhen
        set the IR_EN[n] bit to 1:\nIf the interrupt is level trigger, the input PIN[n]
        state at level \"high\" will generate the interrupt.\nIf the interrupt is
        edge trigger, the input PIN[n] state change from \"low-to-high\" will generate
        the interrupt.\n1 = Enable the PIN[n] level-high or low-to-high interrupt
        \n0 = Disable the PIN[n] level-high or low-to-high interrupt."
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x50004120
    size_bits: 32
    description: GPIO Port Interrupt Trigger Source Indicator
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC8
      bit_offset: 8
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC9
      bit_offset: 9
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC10
      bit_offset: 10
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC11
      bit_offset: 11
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC12
      bit_offset: 12
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC13
      bit_offset: 13
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC14
      bit_offset: 14
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC15
      bit_offset: 15
      bit_width: 1
      description: 'Port [A/B/C/D/E] Interrupt Trigger Source Indicator

        Read :

        1 = Indicates GPIOx[n] generate an interrupt

        0 = No interrupt at GPIOx[n]

        Write :

        1= Clear the correspond pending interrupt

        0= No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPIO
  description: Registers group
  base_addr: 0x50004180
  size: 0x4
  registers:
  - !Register
    name: DBNCECON
    addr: 0x50004180
    size_bits: 32
    description: External Interrupt De-bounce Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x20
    fields:
    - !Field
      name: DBCLKSEL
      bit_offset: 0
      bit_width: 4
      description: "De-bounce sampling cycle selection\nDBCLKSEL\tDescription\t\n0\tSample
        interrupt input once per 1 clocks\t\n1\tSample interrupt input once per 2
        clocks\t\n2\tSample interrupt input once per 4 clocks\t\n3\tSample interrupt
        input once per 8 clocks\t\n4\tSample interrupt input once per 16 clocks\t\n5\tSample
        interrupt input once per 32 clocks\t\n6\tSample interrupt input once per 64
        clocks\t\n7\tSample interrupt input once per 128 clocks\t\n8\tSample interrupt
        input once per 256 clocks\t\n9\tSample interrupt input once per 2*256 clocks\t\n10\tSample
        interrupt input once per 4*256clocks\t\n11\tSample interrupt input once per
        8*256 clocks\t\n12\tSample interrupt input once per 16*256 clocks\t\n13\tSample
        interrupt input once per 32*256 clocks\t\n14\tSample interrupt input once
        per 64*256 clocks\t\n15\tSample interrupt input once per 128*256 clocks\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBCLKSRC
      bit_offset: 4
      bit_width: 1
      description: 'De-bounce counter clock source select

        1 = De-bounce counter clock source is the internal 10 KHz clock

        0 = De-bounce counter clock source is the HCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ICLK_ON
      bit_offset: 5
      bit_width: 1
      description: 'Interrupt clock On mode

        Set this bit to 0 will disable the interrupt generate circuit clock, if the
        pin[n] interrupt is disabled

        1 = Interrupt generated circuit clock always enable

        0 = Disable the clock if the GPIOA/B/C/D/E[n] interrupt is disabled'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPA_BITS
  description: Registers group
  base_addr: 0x50004200
  size: 0x40
  registers:
  - !Register
    name: DOUT0
    addr: 0x50004200
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT1
    addr: 0x50004204
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT2
    addr: 0x50004208
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT3
    addr: 0x5000420c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT4
    addr: 0x50004210
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT5
    addr: 0x50004214
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT6
    addr: 0x50004218
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT7
    addr: 0x5000421c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT8
    addr: 0x50004220
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT9
    addr: 0x50004224
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT10
    addr: 0x50004228
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT11
    addr: 0x5000422c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT12
    addr: 0x50004230
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT13
    addr: 0x50004234
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT14
    addr: 0x50004238
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT15
    addr: 0x5000423c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPB_BITS
  description: Registers group
  base_addr: 0x50004240
  size: 0x40
  registers:
  - !Register
    name: DOUT0
    addr: 0x50004240
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT1
    addr: 0x50004244
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT2
    addr: 0x50004248
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT3
    addr: 0x5000424c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT4
    addr: 0x50004250
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT5
    addr: 0x50004254
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT6
    addr: 0x50004258
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT7
    addr: 0x5000425c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT8
    addr: 0x50004260
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT9
    addr: 0x50004264
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT10
    addr: 0x50004268
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT11
    addr: 0x5000426c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT12
    addr: 0x50004270
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT13
    addr: 0x50004274
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT14
    addr: 0x50004278
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT15
    addr: 0x5000427c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPC_BITS
  description: Registers group
  base_addr: 0x50004280
  size: 0x40
  registers:
  - !Register
    name: DOUT0
    addr: 0x50004280
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT1
    addr: 0x50004284
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT2
    addr: 0x50004288
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT3
    addr: 0x5000428c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT4
    addr: 0x50004290
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT5
    addr: 0x50004294
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT6
    addr: 0x50004298
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT7
    addr: 0x5000429c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT8
    addr: 0x500042a0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT9
    addr: 0x500042a4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT10
    addr: 0x500042a8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT11
    addr: 0x500042ac
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT12
    addr: 0x500042b0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT13
    addr: 0x500042b4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT14
    addr: 0x500042b8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT15
    addr: 0x500042bc
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPD_BITS
  description: Registers group
  base_addr: 0x500042c0
  size: 0x40
  registers:
  - !Register
    name: DOUT0
    addr: 0x500042c0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT1
    addr: 0x500042c4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT2
    addr: 0x500042c8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT3
    addr: 0x500042cc
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT4
    addr: 0x500042d0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT5
    addr: 0x500042d4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT6
    addr: 0x500042d8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT7
    addr: 0x500042dc
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT8
    addr: 0x500042e0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT9
    addr: 0x500042e4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT10
    addr: 0x500042e8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT11
    addr: 0x500042ec
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT12
    addr: 0x500042f0
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT13
    addr: 0x500042f4
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT14
    addr: 0x500042f8
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT15
    addr: 0x500042fc
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPE_BITS
  description: Registers group
  base_addr: 0x50004300
  size: 0x40
  registers:
  - !Register
    name: DOUT0
    addr: 0x50004300
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT1
    addr: 0x50004304
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT2
    addr: 0x50004308
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT3
    addr: 0x5000430c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT4
    addr: 0x50004310
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT5
    addr: 0x50004314
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT6
    addr: 0x50004318
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT7
    addr: 0x5000431c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT8
    addr: 0x50004320
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT9
    addr: 0x50004324
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT10
    addr: 0x50004328
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT11
    addr: 0x5000432c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT12
    addr: 0x50004330
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT13
    addr: 0x50004334
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT14
    addr: 0x50004338
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT15
    addr: 0x5000433c
    size_bits: 32
    description: GPIO Port Pin I/O Bit Output Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'GPIOxx I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low

        For example: write GPIOx0_DOUT will reflect the written value to bit GPIOx_DOUT[0],
        read GPIOx0_DOUT will return the valur of GPIOx_PIN[0].'
      read_allowed: true
      write_allowed: true
- !Module
  name: I2C0
  description: Registers group
  base_addr: 0x40020000
  size: 0x34
  registers:
  - !Register
    name: I2CON
    addr: 0x40020000
    size_bits: 32
    description: I2C Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AA
      bit_offset: 2
      bit_width: 1
      description: 'Assert Acknowledge Control Bit

        When AA=1 prior to address or data received, an acknowledged (low level to
        SDA) will be returned during the acknowledge clock pulse on the SCL line when
        1.) A slave is acknowledging the address sent from master, 2.) The receiver
        devices are acknowledging the data sent by transmitter. When AA=0 prior to
        address or data received, a Not acknowledged (high level to SDA) will be returned
        during the acknowledge clock pulse on the SCL line.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SI
      bit_offset: 3
      bit_width: 1
      description: 'I2C Interrupt Flag

        When a new I2C state is present in the I2CSTATUS register, the SI flag is
        set by hardware, and if bit EI (I2CON [7]) is set, the I2C interrupt is requested.
        SI must be cleared by software. Clear SI is by writing 1 to this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STO
      bit_offset: 4
      bit_width: 1
      description: 'I2C STOP Control Bit

        In master mode, setting STO to transmit a STOP condition to bus then I2C hardware
        will check the bus condition if a STOP condition is detected this bit will
        be cleared by hardware automatically. In a slave mode, setting STO resets
        I2C hardware to the defined "not addressed" slave mode. This means it is NO
        LONGER in the slave receiver mode to receive data from the master transmit
        device.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STA
      bit_offset: 5
      bit_width: 1
      description: 'I2C START Control Bit

        Setting STA to logic 1 to enter master mode, the I2C hardware sends a START
        or repeat START condition to bus when the bus is free.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENSI
      bit_offset: 6
      bit_width: 1
      description: 'I2C Controller Enable Bit

        1 = Enable

        0 = Disable

        Set to enable I2C serial function block. When ENSI=1 the I2C serial function
        enables. The multi-function pin function of SDA and SCL must set to I2C function
        first.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EI
      bit_offset: 7
      bit_width: 1
      description: 'Enable Interrupt

        1 = Enable I2C interrupt

        0 = Disable I2C interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR0
    addr: 0x40020004
    size_bits: 32
    description: I2C Slave Address Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CDAT
    addr: 0x40020008
    size_bits: 32
    description: I2C Data Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CDAT
      bit_offset: 0
      bit_width: 8
      description: 'I2C Data Register

        Bit[7:0] is located with the 8-bit transferred data of I2C serial port. '
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CSTATUS
    addr: 0x4002000c
    size_bits: 32
    description: I2C Status Register
    read_allowed: true
    write_allowed: false
    reset_value: 0xf8
    fields:
    - !Field
      name: I2CSTATUS
      bit_offset: 0
      bit_width: 8
      description: "I2C Status Register \nThe status register of I2C:\nThe three least
        significant bits are always 0. The five most significant bits contain the
        status code. There are 26 possible status codes. When I2STATUS contains F8H,
        no serial interrupt is requested. All other I2CSTATUS values correspond to
        defined I2C states. When each of these states is entered, a status interrupt
        is requested (SI = 1). A valid status code is present in I2CSTATUS one machine
        cycle after SI is set by hardware and is still present one machine cycle after
        SI has been reset by software. In addition, states 00H stands for a Bus Error.
        A Bus Error occurs when a START or STOP condition is present at an illegal
        position in the formation frame. Example of illegal position are during the
        serial transfer of an address byte, a data byte or an acknowledge bit."
      read_allowed: true
      write_allowed: false
  - !Register
    name: I2CLK
    addr: 0x40020010
    size_bits: 32
    description: I2C Clock Divided Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CLK
      bit_offset: 0
      bit_width: 8
      description: 'I2C Clock Divided Register

        The I2C clock rate bits: Data Baud Rate of I2C = system clock /(4x(I2CLK+1)).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CTOC
    addr: 0x40020014
    size_bits: 32
    description: I2C Time-Out Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Time-Out Flag

        1 = Time-Out falg is set by H/W. It can interrupt CPU.

        0 = S/W can clear the flag.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV4
      bit_offset: 1
      bit_width: 1
      description: 'Time-Out counter input clock is divided by 4

        1 = Enable

        0 = Disable

        When Enable, The time-Out period is extend 4 times.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENTI
      bit_offset: 2
      bit_width: 1
      description: 'Time-out counter is enabled/disable

        1 = Enable

        0 = Disable

        When Enable, the 14 bit time-out counter will start counting when SI is clear.
        Setting flag SI to high will reset counter and re-start up counting after
        SI is cleared.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR1
    addr: 0x40020018
    size_bits: 32
    description: I2C Slave address Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR2
    addr: 0x4002001c
    size_bits: 32
    description: I2C Slave address Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR3
    addr: 0x40020020
    size_bits: 32
    description: I2C Slave address Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM0
    addr: 0x40020024
    size_bits: 32
    description: I2C Slave Address Mask Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM1
    addr: 0x40020028
    size_bits: 32
    description: I2C Slave Address Mask Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM2
    addr: 0x4002002c
    size_bits: 32
    description: I2C Slave Address Mask Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM3
    addr: 0x40020030
    size_bits: 32
    description: I2C Slave Address Mask Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
- !Module
  name: I2C1
  description: Registers group
  base_addr: 0x40120000
  size: 0x34
  registers:
  - !Register
    name: I2CON
    addr: 0x40120000
    size_bits: 32
    description: I2C Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AA
      bit_offset: 2
      bit_width: 1
      description: 'Assert Acknowledge Control Bit

        When AA=1 prior to address or data received, an acknowledged (low level to
        SDA) will be returned during the acknowledge clock pulse on the SCL line when
        1.) A slave is acknowledging the address sent from master, 2.) The receiver
        devices are acknowledging the data sent by transmitter. When AA=0 prior to
        address or data received, a Not acknowledged (high level to SDA) will be returned
        during the acknowledge clock pulse on the SCL line.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SI
      bit_offset: 3
      bit_width: 1
      description: 'I2C Interrupt Flag

        When a new I2C state is present in the I2CSTATUS register, the SI flag is
        set by hardware, and if bit EI (I2CON [7]) is set, the I2C interrupt is requested.
        SI must be cleared by software. Clear SI is by writing 1 to this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STO
      bit_offset: 4
      bit_width: 1
      description: 'I2C STOP Control Bit

        In master mode, setting STO to transmit a STOP condition to bus then I2C hardware
        will check the bus condition if a STOP condition is detected this bit will
        be cleared by hardware automatically. In a slave mode, setting STO resets
        I2C hardware to the defined "not addressed" slave mode. This means it is NO
        LONGER in the slave receiver mode to receive data from the master transmit
        device.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STA
      bit_offset: 5
      bit_width: 1
      description: 'I2C START Control Bit

        Setting STA to logic 1 to enter master mode, the I2C hardware sends a START
        or repeat START condition to bus when the bus is free.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENSI
      bit_offset: 6
      bit_width: 1
      description: 'I2C Controller Enable Bit

        1 = Enable

        0 = Disable

        Set to enable I2C serial function block. When ENSI=1 the I2C serial function
        enables. The multi-function pin function of SDA and SCL must set to I2C function
        first.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EI
      bit_offset: 7
      bit_width: 1
      description: 'Enable Interrupt

        1 = Enable I2C interrupt

        0 = Disable I2C interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR0
    addr: 0x40120004
    size_bits: 32
    description: I2C Slave Address Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CDAT
    addr: 0x40120008
    size_bits: 32
    description: I2C Data Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CDAT
      bit_offset: 0
      bit_width: 8
      description: 'I2C Data Register

        Bit[7:0] is located with the 8-bit transferred data of I2C serial port. '
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CSTATUS
    addr: 0x4012000c
    size_bits: 32
    description: I2C Status Register
    read_allowed: true
    write_allowed: false
    reset_value: 0xf8
    fields:
    - !Field
      name: I2CSTATUS
      bit_offset: 0
      bit_width: 8
      description: "I2C Status Register \nThe status register of I2C:\nThe three least
        significant bits are always 0. The five most significant bits contain the
        status code. There are 26 possible status codes. When I2STATUS contains F8H,
        no serial interrupt is requested. All other I2CSTATUS values correspond to
        defined I2C states. When each of these states is entered, a status interrupt
        is requested (SI = 1). A valid status code is present in I2CSTATUS one machine
        cycle after SI is set by hardware and is still present one machine cycle after
        SI has been reset by software. In addition, states 00H stands for a Bus Error.
        A Bus Error occurs when a START or STOP condition is present at an illegal
        position in the formation frame. Example of illegal position are during the
        serial transfer of an address byte, a data byte or an acknowledge bit."
      read_allowed: true
      write_allowed: false
  - !Register
    name: I2CLK
    addr: 0x40120010
    size_bits: 32
    description: I2C Clock Divided Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CLK
      bit_offset: 0
      bit_width: 8
      description: 'I2C Clock Divided Register

        The I2C clock rate bits: Data Baud Rate of I2C = system clock /(4x(I2CLK+1)).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CTOC
    addr: 0x40120014
    size_bits: 32
    description: I2C Time-Out Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Time-Out Flag

        1 = Time-Out falg is set by H/W. It can interrupt CPU.

        0 = S/W can clear the flag.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV4
      bit_offset: 1
      bit_width: 1
      description: 'Time-Out counter input clock is divided by 4

        1 = Enable

        0 = Disable

        When Enable, The time-Out period is extend 4 times.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENTI
      bit_offset: 2
      bit_width: 1
      description: 'Time-out counter is enabled/disable

        1 = Enable

        0 = Disable

        When Enable, the 14 bit time-out counter will start counting when SI is clear.
        Setting flag SI to high will reset counter and re-start up counting after
        SI is cleared.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR1
    addr: 0x40120018
    size_bits: 32
    description: I2C Slave address Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR2
    addr: 0x4012001c
    size_bits: 32
    description: I2C Slave address Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR3
    addr: 0x40120020
    size_bits: 32
    description: I2C Slave address Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM0
    addr: 0x40120024
    size_bits: 32
    description: I2C Slave Address Mask Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM1
    addr: 0x40120028
    size_bits: 32
    description: I2C Slave Address Mask Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM2
    addr: 0x4012002c
    size_bits: 32
    description: I2C Slave Address Mask Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM3
    addr: 0x40120030
    size_bits: 32
    description: I2C Slave Address Mask Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CADM
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding
        address bit is don't care.)\n0 = Mask disable (the received corresponding
        register bit should be exact the same as address register.) \nI2C bus controllers
        support multiple address recognition with four address mask reg. When the
        bit in the address mask register is set to one, it means the received corresponding
        address bit is don't-care. If the bit is set to zero, that means the received
        corresponding register bit should be exact the same as address register."
      read_allowed: true
      write_allowed: true
- !Module
  name: I2S
  description: Registers group
  base_addr: 0x401a0000
  size: 0x18
  registers:
  - !Register
    name: I2S_CON
    addr: 0x401a0000
    size_bits: 32
    description: I2S Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2SEN
      bit_offset: 0
      bit_width: 1
      description: 'Enable I2S Controller

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Enable

        1 = Enable data transmit

        0 = Disable data transmit'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXEN
      bit_offset: 2
      bit_width: 1
      description: 'Receive Enable

        1 = Enable data receive

        0 = Disable data receive'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MUTE
      bit_offset: 3
      bit_width: 1
      description: 'Transmit Mute Enable

        1 = Transmit channel zero

        0 = Transmit data is shifted from buffer'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WORDWIDTH
      bit_offset: 4
      bit_width: 2
      description: 'Word Width

        00 = data is 8 bit

        01 = data is 16 bit

        10 = data is 24 bit

        11 = data is 32 bit'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MONO
      bit_offset: 6
      bit_width: 1
      description: 'Monaural Data

        1 = Data is monaural format

        0 = Data is stereo format'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FORMAT
      bit_offset: 7
      bit_width: 1
      description: 'Data Format

        1 = MSB justified data format

        0 = I2S data format'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 8
      bit_width: 1
      description: 'Slave Mode

        I2S can operate as master or slave. For master mode, I2S_BCLK and I2S_LRCLK
        pins are output mode and send bit clock from NuMicro(TM) NUC100 series to
        Audio CODEC chip. In slave mode, I2S_BCLK and I2S_LRCLK pins are input mode
        and I2S_BCLK and I2S_LRCLK signals are received from outer Audio CODEC chip.

        1 = Slave mode

        0 = Master mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXTH
      bit_offset: 9
      bit_width: 3
      description: 'Transmit FIFO Threshold Level

        If remain data word (32 bits) in transmit FIFO is the same or less than threshold
        level then TXTHI flag is set.

        000 = 0 word data in transmit FIFO

        001 = 1 word data in transmit FIFO

        010 = 2 words data in transmit FIFO

        011 = 3 words data in transmit FIFO

        100 = 4 word data in transmit FIFO

        101 = 5 word data in transmit FIFO

        110 = 6 word data in transmit FIFO

        111 = 7 word data in transmit FIFO'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXTH
      bit_offset: 12
      bit_width: 3
      description: 'Receive FIFO Threshold Level

        When received data word(s) in buffer is equal or higher than threshold level
        then RXTHI flag is set.

        000 = 1 word data in receive FIFO

        001 = 2 word data in receive FIFO

        010 = 3 word data in receive FIFO

        011 = 4 word data in receive FIFO

        100 = 5 word data in receive FIFO

        101 = 6 word data in receive FIFO

        110 = 7 word data in receive FIFO

        111 = 8 word data in receive FIFO'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MCLKEN
      bit_offset: 15
      bit_width: 1
      description: 'Master Clock Enable

        If NuMicro(TM) NUC100 series external crystal clock is frequency 2*N*256fs
        then software can program MCLK_DIV[2:0] in I2S_CLKDIV register to get 256fs
        clock to audio codec chip.

        1 = Enable master clock

        0 = Disable master clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCHZCEN
      bit_offset: 16
      bit_width: 1
      description: 'Right channel zero cross detect enable

        If this bit is set to 1, when left channel data sign bit change or next shift
        data bits are all zero then RZCF flag in I2S_STATUS register is set to 1.

        1 = Enable right channel zero cross detect

        0 = Disable right channel zero cross detect'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LCHZCEN
      bit_offset: 17
      bit_width: 1
      description: 'Left channel zero cross detect enable

        If this bit is set to 1, when left channel data sign bit change or next shift
        data bits are all zero then LZCF flag in I2S_STATUS register is set to 1.

        1 = Enable left channel zero cross detect

        0 = Disable left channel zero cross detect'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_TXFIFO
      bit_offset: 18
      bit_width: 1
      description: 'Clear Transmit FIFO

        Write 1 to clear transmit FIFO, internal pointer is reset to FIFO start point,
        and TXFIFO_LEVEL[3:0] returns to zero and transmit FIFO becomes empty but
        data in transmit FIFO is not changed.

        This bit is clear by hardware automatically, read it return zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_RXFIFO
      bit_offset: 19
      bit_width: 1
      description: 'Clear Receive FIFO

        Write 1 to clear receive FIFO, internal pointer is reset to FIFO start point,
        and RXFIFO_LEVEL[3:0] returns to zero and receive FIFO becomes empty.

        This bit is clear by hardware automatically, read it return zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXDMA
      bit_offset: 20
      bit_width: 1
      description: 'Enable Transmit DMA

        When TX DMA is enabled, I2S requests DMA to transfer data from SRAM to transmit
        FIFO if FIFO is not full.

        1 = Enable TX DMA

        0 = Disable TX DMA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXDMA
      bit_offset: 21
      bit_width: 1
      description: 'Enable Receive DMA

        When RX DMA is enabled, I2S requests DMA to transfer data from receive FIFO
        to SRAM if FIFO is not empty.

        1 = Enable RX DMA

        0 = Disable RX DMA'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2S_CLKDIV
    addr: 0x401a0004
    size_bits: 32
    description: I2S Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MCLK_DIV
      bit_offset: 0
      bit_width: 3
      description: 'Master Clock Divider

        If chip external crystal frequency is (2xMCLK_DIV)*256fs then software can
        program these bits to generate 256fs clock frequency to audio codec chip.
        If MCLK_DIV is set to 0, MCLK is the same as external clock input.

        For example, sampling rate is 24 kHz and chip external crystal clock is 12.288
        MHz, set MCLK_DIV=1.

        F_MCLK = F_I2SCLK/(2x(MCLK_DIV)) (When MCLK_DIV is >= 1 )

        F_MCLK = F_I2SCLK (When MCLK_DIV is set to 0 )'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCLK_DIV
      bit_offset: 8
      bit_width: 8
      description: 'Bit Clock Divider

        If I2S operates in master mode, bit clock is provided by NuMicro(TM) NUC100
        series. Software can program these bits to generate sampling rate clock frequency.

        F_BCLK = F_I2SCLK /(2x(BCLK_DIV + 1))'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2S_IE
    addr: 0x401a0008
    size_bits: 32
    description: I2S Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RXUDFIE
      bit_offset: 0
      bit_width: 1
      description: 'Receive FIFO underflow interrupt enable

        If software read receive FIFO when it is empty then RXUDF flag in I2SSTATUS
        register is set to 1.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXOVFIE
      bit_offset: 1
      bit_width: 1
      description: 'Receive FIFO overflow interrupt enable

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXTHIE
      bit_offset: 2
      bit_width: 1
      description: 'Receive FIFO threshold level interrupt

        When data word in receive FIFO is equal or higher then RXTH[2:0] and the RXTHI
        bit is set to 1. If RXTHIE bit is enabled, interrupt occur.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXUDFIE
      bit_offset: 8
      bit_width: 1
      description: 'Transmit FIFO underflow interrupt enable

        Interrupt occurs if this bit is set to 1 and transmit FIFO underflow flag
        is set to 1.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXOVFIE
      bit_offset: 9
      bit_width: 1
      description: 'Transmit FIFO overflow interrupt enable

        Interrupt occurs if this bit is set to 1 and transmit FIFO overflow flag is
        set to 1.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXTHIE
      bit_offset: 10
      bit_width: 1
      description: 'Transmit FIFO threshold level interrupt enable

        Interrupt occurs if this bit is set to 1 and data words in transmit FIFO is
        less than TXTH[2:0].

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RZCIE
      bit_offset: 11
      bit_width: 1
      description: 'Right channel zero cross interrupt enable

        Interrupt occurs if this bit is set to 1 and right channel zero cross.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LZCIE
      bit_offset: 12
      bit_width: 1
      description: 'Left channel zero cross interrupt enable

        Interrupt occurs if this bit is set to 1 and left channel zero cross.

        1 = Enable interrupt

        0 = Disable interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2S_STATUS
    addr: 0x401a000c
    size_bits: 32
    description: I2S Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x141000
    fields:
    - !Field
      name: I2SINT
      bit_offset: 0
      bit_width: 1
      description: 'I2S Interrupt flag

        1 = I2S interrupt

        0 = No I2S interrup

        It is wire-OR of I2STXINT and I2SRXINT bits.

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: I2SRXINT
      bit_offset: 1
      bit_width: 1
      description: 'I2S receive interrupt

        1 = Receive interrupt

        0 = No receive interrupt

        This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: I2STXINT
      bit_offset: 2
      bit_width: 1
      description: 'I2S transmit interrupt

        1 = Transmit interrupt

        0 = No transmit interrupt

        This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RIGHT
      bit_offset: 3
      bit_width: 1
      description: 'Right channel

        This bit indicate current transmit data is belong to right channel.

        1 = Right channel

        0 = Left channel

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXUDF
      bit_offset: 8
      bit_width: 1
      description: 'Receive FIFO underflow flag

        Read receive FIFO when it is empty, this bit set to 1 indicate underflow occur.

        1 = Underflow occur

        0 = No underflow occur

        Write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXOVF
      bit_offset: 9
      bit_width: 1
      description: 'Receive FIFO overflow flag

        When receive FIFO is full and receive hardware attempt write to data into
        receive FIFO then this bit is set to 1, data in 1st buffer is overwrote.

        1 = Overflow occur

        0 = No overflow occur

        Write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXTHF
      bit_offset: 10
      bit_width: 1
      description: 'Receive FIFO threshold flag

        When data word(s) in receive FIFO is equal or higher than threshold value
        set in RXTH[2:0] the RXTHF bit becomes to 1. It keeps at 1 till RXFIFO_LEVEL[3:0]
        less than RXTH[1:0] after software read RXFIFO register.

        1 = Data word(s) in FIFO is equal or higher than threshold level

        0 = Data word(s) in FIFO is lower than threshold level

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 11
      bit_width: 1
      description: 'Receive FIFO full

        This bit reflect data words number in receive FIFO is 8.

        1 = Full

        0 = Not full

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXEMPTY
      bit_offset: 12
      bit_width: 1
      description: 'Receive FIFO empty

        This bit reflects data words number in receive FIFO is zero.

        1 = Empty

        0 = Not empty

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXUDF
      bit_offset: 16
      bit_width: 1
      description: 'Transmit FIFO underflow flag

        When transmit FIFO is empty and shift logic hardware read data from data FIFO
        causes this set to 1.

        1 = Underflow

        0 = No underflow

        Software can write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXOVF
      bit_offset: 17
      bit_width: 1
      description: 'Transmit FIFO overflow flag

        Write data to transmit FIFO when it is full and this bit set to 1.

        1 = Overflow

        0 = No overflow

        Software can write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXTHF
      bit_offset: 18
      bit_width: 1
      description: "Transmit FIFO threshold flag\nWhen data word(s) in transmit FIFO
        is equal or lower than threshold value set in TXTH[2:0] the TXTHF bit becomes
        to 1. It keeps at 1 till TXFIFO_LEVEL[3:0] is higher than TXTH[1:0] after
        software write TXFIFO register.\n1 = Data word(s) in FIFO is equal or lower
        than threshold level\n0 = Data word(s) in FIFO is higher than threshold level
        \nThis bit is read only."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFULL
      bit_offset: 19
      bit_width: 1
      description: 'Transmit FIFO full

        This bit reflect data word number in transmit FIFO is 8.

        1 = Full

        0 = Not full

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEMPTY
      bit_offset: 20
      bit_width: 1
      description: 'Transmit FIFO empty

        This bit reflect data word number in transmit FIFO is zero.

        1 = Empty

        0 = Not empty

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXBUSY
      bit_offset: 21
      bit_width: 1
      description: 'Transmit Busy

        This bit is clear to 0 when all data in transmit FIFO and shift buffer is
        shifted out. And set to 1 when 1st data is load to shift buffer.

        1 = Transmit shift buffer is busy

        0 = Transmit shift buffer is empty

        This bit is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RZCF
      bit_offset: 22
      bit_width: 1
      description: 'Right channel zero cross flag

        It indicates right channel next sample data sign bit is changed or all data
        bits are zero.

        1 = Right channel zero cross is detected

        0 = No zero cross

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LZCF
      bit_offset: 23
      bit_width: 1
      description: 'Left channel zero cross flag

        It indicates left channel next sample data sign bit is changed or all data
        bits are zero.

        1 = Left channel zero cross is detected

        0 = No zero cross

        Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_LEVEL
      bit_offset: 24
      bit_width: 4
      description: 'Receive FIFO level

        These bits indicate word number in receive FIFO.

        0000 = No data

        0001 = 1 word in receive FIFO

        0010 = 2 word in receive FIFO

        0011 = 3 word in receive FIFO

        0100 = 4 word in receive FIFO

        0101 = 5 word in receive FIFO

        0110 = 6 word in receive FIFO

        0111 = 7 word in receive FIFO

        1000 = 8 word in receive FIFO'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_LEVEL
      bit_offset: 28
      bit_width: 4
      description: 'Transmit FIFO level

        These bits indicate word number in Transmit FIFO.

        0000 = No data

        0001 = 1 word in Transmit FIFO

        0010 = 2 word in Transmit FIFO

        0011 = 3 word in Transmit FIFO

        0100 = 4 word in Transmit FIFO

        0101 = 5 word in Transmit FIFO

        0110 = 6 word in Transmit FIFO

        0111 = 7 word in Transmit FIFO

        1000 = 8 word in Transmit FIFO'
      read_allowed: true
      write_allowed: false
  - !Register
    name: I2S_TXFIFO
    addr: 0x401a0010
    size_bits: 32
    description: I2S Transmit FIFO Register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TXFIFO
      bit_offset: 0
      bit_width: 32
      description: 'Transmit FIFO register

        I2S contains 8 words (8x32 bit) data buffer for data transmit. Write data
        to this register to prepare data for transmit. The remain word number is indicated
        by TX_LEVEL[3:0] in I2S_STATUS.'
      read_allowed: false
      write_allowed: true
  - !Register
    name: I2S_RXFIFO
    addr: 0x401a0014
    size_bits: 32
    description: I2S Receive FIFO Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXFIFO
      bit_offset: 0
      bit_width: 32
      description: 'Receive FIFO register

        I2S contains 8 words (8x32 bit) data buffer for data receive. Read this register
        to get data in FIFO. The remaining data word number is indicated by RX_LEVEL[3:0]
        in I2S_STATUS register.'
      read_allowed: true
      write_allowed: false
- !Module
  name: INT
  description: Registers group
  base_addr: 0x50000300
  size: 0x88
  registers:
  - !Register
    name: IRQ0_SRC
    addr: 0x50000300
    size_bits: 32
    description: MCU IRQ0 (BOD) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: BOD_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ1_SRC
    addr: 0x50000304
    size_bits: 32
    description: MCU IRQ1 (WDG) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: WDG_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ2_SRC
    addr: 0x50000308
    size_bits: 32
    description: MCU IRQ2 (EINT0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: EINT0 - external interrupt 0 from PB.14'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ3_SRC
    addr: 0x5000030c
    size_bits: 32
    description: MCU IRQ3 (EINT1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: EINT1 - external interrupt 1 from PB.15'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ4_SRC
    addr: 0x50000310
    size_bits: 32
    description: MCU IRQ4 (GPA/B) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: GPB_INT

        Bit0: GPA_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ5_SRC
    addr: 0x50000314
    size_bits: 32
    description: MCU IRQ5 (GPC/D/E) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: GPE_INT

        Bit1: GPD_INT

        Bit0: GPC_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ6_SRC
    addr: 0x50000318
    size_bits: 32
    description: MCU IRQ6 (PWMA) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit3: PWM3_INT

        Bit2: PWM2_INT

        Bit1: PWM1_INT

        Bit0: PWM0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ7_SRC
    addr: 0x5000031c
    size_bits: 32
    description: MCU IRQ7 (PWMB) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit3: PWM7_INT

        Bit2: PWM6_INT

        Bit1: PWM5_INT

        Bit0: PWM4_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ8_SRC
    addr: 0x50000320
    size_bits: 32
    description: MCU IRQ8 (TMR0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: TMR0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ9_SRC
    addr: 0x50000324
    size_bits: 32
    description: MCU IRQ9 (TMR1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: TMR1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ10_SRC
    addr: 0x50000328
    size_bits: 32
    description: MCU IRQ10 (TMR2) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: TMR2_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ11_SRC
    addr: 0x5000032c
    size_bits: 32
    description: MCU IRQ11 (TMR3) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: TMR3_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ12_SRC
    addr: 0x50000330
    size_bits: 32
    description: MCU IRQ12 (URT0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: URT0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ13_SRC
    addr: 0x50000334
    size_bits: 32
    description: MCU IRQ13 (URT1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: URT1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ14_SRC
    addr: 0x50000338
    size_bits: 32
    description: MCU IRQ14 (SPI0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: SPI0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ15_SRC
    addr: 0x5000033c
    size_bits: 32
    description: MCU IRQ15 (SPI1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: SPI1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ16_SRC
    addr: 0x50000340
    size_bits: 32
    description: MCU IRQ16 (SPI2) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: SPI2_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ17_SRC
    addr: 0x50000344
    size_bits: 32
    description: MCU IRQ17 (SPI3) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: SPI3_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ18_SRC
    addr: 0x50000348
    size_bits: 32
    description: MCU IRQ18 (I2C0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: I2C0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ19_SRC
    addr: 0x5000034c
    size_bits: 32
    description: MCU IRQ19 (I2C1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: I2C1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ20_SRC
    addr: 0x50000350
    size_bits: 32
    description: MCU IRQ20 (CAN0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: CAN0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ21_SRC
    addr: 0x50000354
    size_bits: 32
    description: MCU IRQ21 (Reserved) interrupt source identity
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ22_SRC
    addr: 0x50000358
    size_bits: 32
    description: MCU IRQ22 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ23_SRC
    addr: 0x5000035c
    size_bits: 32
    description: MCU IRQ23 (USBD) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: USBD_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ24_SRC
    addr: 0x50000360
    size_bits: 32
    description: MCU IRQ24 (PS2) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: PS2_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ25_SRC
    addr: 0x50000364
    size_bits: 32
    description: MCU IRQ25 (ACMP) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: "Bit2: 0\nBit1: 0 \nBit0: ACMP_INT"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ26_SRC
    addr: 0x50000368
    size_bits: 32
    description: MCU IRQ26 (PDMA) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: PDMA_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ27_SRC
    addr: 0x5000036c
    size_bits: 32
    description: MCU IRQ27 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: I2S_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ28_SRC
    addr: 0x50000370
    size_bits: 32
    description: MCU IRQ28 (PWRWU) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: PWRWU_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ29_SRC
    addr: 0x50000374
    size_bits: 32
    description: MCU IRQ29 (ADC) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: ADC_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ30_SRC
    addr: 0x50000378
    size_bits: 32
    description: MCU IRQ30 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ31_SRC
    addr: 0x5000037c
    size_bits: 32
    description: MCU IRQ31 (RTC) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: 0

        Bit1: 0

        Bit0: RTC_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: NMI_SEL
    addr: 0x50000380
    size_bits: 32
    description: NMI source interrupt select control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: NMI_SEL
      bit_offset: 0
      bit_width: 5
      description: The NMI interrupt to Cortex-M0 can be selected from one of the
        peripheral interrupt by setting NMI_SEL.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCU_IRQ
    addr: 0x50000384
    size_bits: 32
    description: MCU IRQ Number identify register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MCU_IRQ
      bit_offset: 0
      bit_width: 32
      description: "MCU IRQ Source Register \nThe MCU_IRQ collect all the interrupts
        from the peripherals and generate the synchronous interrupt to MCU Cortex-M0.
        There are two modes to generate interrupt to MCU Cortex-M0, the normal mode
        and test mode.\nThe MCU_IRQ collect all interrupt from each peripheral and
        synchronize them then interrupt the Cortex-M0.\nWhen the MCU_IRQ[n] is \"0\":
        Set MCU_IRQ[n] \"1\" will generate a interrupt to Cortex_M0 NVIC[n].\nWhen
        the MCU_IRQ[n] is \"1\" (mean a interrupt is assert) set \"1\" to the MCU_bit[n]
        will clear the interrupt. \nSet MCU_IRQ[n] \"0\": no any effect"
      read_allowed: true
      write_allowed: true
- !Module
  name: PDMA0
  description: Registers group
  base_addr: 0x50008000
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008000
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008004
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008008
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000800c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008010
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008014
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008018
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000801c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008020
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008024
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008080
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA1
  description: Registers group
  base_addr: 0x50008100
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008100
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008104
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008108
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000810c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008110
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008114
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008118
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000811c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008120
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008124
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008180
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA2
  description: Registers group
  base_addr: 0x50008200
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008200
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008204
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008208
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000820c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008210
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008214
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008218
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000821c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008220
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008224
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008280
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA3
  description: Registers group
  base_addr: 0x50008300
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008300
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008304
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008308
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000830c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008310
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008314
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008318
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000831c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008320
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008324
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008380
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA4
  description: Registers group
  base_addr: 0x50008400
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008400
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008404
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008408
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000840c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008410
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008414
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008418
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000841c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008420
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008424
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008480
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA5
  description: Registers group
  base_addr: 0x50008500
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008500
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008504
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008508
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000850c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008510
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008514
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008518
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000851c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008520
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008524
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008580
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA6
  description: Registers group
  base_addr: 0x50008600
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008600
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008604
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008608
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000860c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008610
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008614
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008618
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000861c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008620
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008624
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008680
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA7
  description: Registers group
  base_addr: 0x50008700
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008700
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008704
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008708
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000870c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008710
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008714
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008718
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000871c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008720
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008724
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008780
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA8
  description: Registers group
  base_addr: 0x50008800
  size: 0x84
  registers:
  - !Register
    name: PDMA_CSRx
    addr: 0x50008800
    size_bits: 32
    description: PDMA Control and Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMACEN
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Channel Enable

        Setting this bit to 1 enables PDMA''s operation. If this bit is cleared, PDMA
        will ignore all PDMA request and force Bus Master into IDLE state.

        Note: SW_RST(PDMA_CSRx[1], x= 0~8) will clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_RST
      bit_offset: 1
      bit_width: 1
      description: 'Software Engine Reset

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the internal state machine and pointers.
        The contents of control register will not be cleared. This bit will auto clear
        after few clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE_SEL
      bit_offset: 2
      bit_width: 2
      description: 'PDMA Mode Select

        00 = Memory to Memory mode (Memory-to-Memory).

        01 = IP to Memory mode (APB-to-Memory).

        10 = Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAD_SEL
      bit_offset: 4
      bit_width: 2
      description: 'Transfer Source Address Direction Select

        00 = Transfer Source address is incremented successively.

        01 = Reserved.

        10 = Transfer Source address is fixed (This feature can be used when data
        where transferred from a single source to multiple destinations).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAD_SEL
      bit_offset: 6
      bit_width: 2
      description: 'Transfer Destination Address Direction Select

        00 = Transfer Destination address is incremented successively.

        01 = Reserved.

        10 = Transfer Destination address is fixed (This feature can be used when
        data where transferred from multiple sources to a single destination).

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: APB_TWS
      bit_offset: 19
      bit_width: 2
      description: 'Peripheral transfer Width Select

        00 = One word (32 bits) is transferred for every PDMA operation.

        01 = One byte (8 bits) is transferred for every PDMA operation.

        10 = One half-word (16 bits) is transferred for every PDMA operation.

        11 = Reserved.

        Note: This field is meaningful only when MODE_SEL is IP to Memory mode (APB-to-Memory)
        or Memory to IP mode (Memory-to-APB).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_EN
      bit_offset: 23
      bit_width: 1
      description: 'Trig_EN

        0 = No effect.

        1 = Enable PDMA data read or write transfer.

        Note: When PDMA transfer completed, this bit will be cleared automatically.

        If the bus error occurs, all PDMA transfer will be stopped. Software must
        reset all PDMA channel, and then trigger again.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SARx
    addr: 0x50008804
    size_bits: 32
    description: PDMA Transfer Source Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_SAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Source Address Register

        This field indicates a 32-bit source address of PDMA.

        Note : The source address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_DARx
    addr: 0x50008808
    size_bits: 32
    description: PDMA Transfer Destination Address Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_DAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Transfer Destination Address Register

        This field indicates a 32-bit destination address of PDMA.

        Note : The destination address must be word alignment'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_BCRx
    addr: 0x5000880c
    size_bits: 32
    description: PDMA Transfer Byte Count Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_BCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Transfer Byte Count Register

        This field indicates a 16-bit transfer byte count of PDMA.it must be word
        alignment.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_POINTx
    addr: 0x50008810
    size_bits: 32
    description: PDMA Internal Buffer Pointer Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_POINT
      bit_offset: 0
      bit_width: 4
      description: 'PDMA Internal Buffer Pointer Register (Read Only)

        This field indicates the internal buffer pointer.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CSARx
    addr: 0x50008814
    size_bits: 32
    description: PDMA Current Source Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CSAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Source Address Register (Read Only)

        This field indicates the source address where the PDMA transfer is just occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CDARx
    addr: 0x50008818
    size_bits: 32
    description: PDMA Current Destination Address Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CDAR
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Current Destination Address Register (Read Only)

        This field indicates the destination address where the PDMA transfer is just
        occurring.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_CBCRx
    addr: 0x5000881c
    size_bits: 32
    description: PDMA Current Byte Count Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_CBCR
      bit_offset: 0
      bit_width: 16
      description: 'PDMA Current Byte Count Register (Read Only)

        This field indicates the current remained byte count of PDMA.

        Note : SW_RST will clear this register value.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDMA_IERx
    addr: 0x50008820
    size_bits: 32
    description: PDMA Interrupt Enable Control Register CHx
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: TABORT_IE
      bit_offset: 0
      bit_width: 1
      description: 'PDMA Read/Write Target Abort Interrupt Enable

        0 = Disable target abort interrupt generation during PDMA transfer.

        1 = Enable target abort interrupt generation during PDMA transfer.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IE
      bit_offset: 1
      bit_width: 1
      description: 'PDMA Transfer Done Interrupt Enable

        0 = Disable interrupt generator during PDMA transfer done.

        1 = Enable interrupt generator during PDMA transfer done.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_ISRx
    addr: 0x50008824
    size_bits: 32
    description: PDMA Interrupt Status Register CHx
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TABORT_IF
      bit_offset: 0
      bit_width: 1
      description: "PDMA Read/Write Target Abort Interrupt Flag\n0 = No bus ERROR
        response received.\n1 = Bus ERROR response received. \nNOTE: Software can
        write 1 to clear this bit to zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLKD_IF
      bit_offset: 1
      bit_width: 1
      description: 'Block Transfer Done Interrupt Flag

        This bit indicates that PDMA has finished all transfer.

        0 = Not finished yet.

        1 = Done.

        NOTE: Software can write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_SBUF0_cx
    addr: 0x50008880
    size_bits: 32
    description: PDMA Shared Buffer FIFO 0 Register CHx
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDMA_SBUF0
      bit_offset: 0
      bit_width: 32
      description: 'PDMA Shared Buffer FIFO 0 (Read Only)

        Each channel has its own 1 word internal buffer. '
      read_allowed: true
      write_allowed: false
- !Module
  name: PDMA_GCR
  description: Registers group
  base_addr: 0x50008f00
  size: 0x14
  registers:
  - !Register
    name: PDMA_GCRCSR
    addr: 0x50008f00
    size_bits: 32
    description: PDMA Global Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLK0_EN
      bit_offset: 8
      bit_width: 1
      description: 'PDMA Controller Channel 0 Clock Enable Control

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK1_EN
      bit_offset: 9
      bit_width: 1
      description: 'PDMA Controller Channel 1 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK2_EN
      bit_offset: 10
      bit_width: 1
      description: 'PDMA Controller Channel 2 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK3_EN
      bit_offset: 11
      bit_width: 1
      description: 'PDMA Controller Channel 3 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK4_EN
      bit_offset: 12
      bit_width: 1
      description: 'PDMA Controller Channel 4 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK5_EN
      bit_offset: 13
      bit_width: 1
      description: 'PDMA Controller Channel 5 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK6_EN
      bit_offset: 14
      bit_width: 1
      description: 'PDMA Controller Channel 6 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK7_EN
      bit_offset: 15
      bit_width: 1
      description: 'PDMA Controller Channel 7 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK8_EN
      bit_offset: 16
      bit_width: 1
      description: 'PDMA Controller Channel 8 Clock Enable Control(Medium Density
        Only)

        0 = Disable

        1 = Enable'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDSSR0
    addr: 0x50008f04
    size_bits: 32
    description: PDMA Service Selection Control Register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: SPI0_RXSEL
      bit_offset: 0
      bit_width: 4
      description: "PDMA SPI0 RX Selection\nThis filed defines which PDMA channel
        is connected to the on-chip peripheral SPI0 RX. Software can change the channel
        RX setting by SPI0_RXSEL\n4'b0000: CH0\n4'b0001: CH1\n4'b0010: CH2\n4'b0011:
        CH3 \n4'b0100: CH4 \n4'b0101: CH5\n4'b0110: CH6\n4'b0111: CH7\n4'b1000: CH8\nOthers
        : Reserved\nNote : Ex : SPI0_RXSEL = 4'b0110, that means SPI0_RX is connected
        to PDMA_CH6(Low Density should set as 4'b0000 for PDMA channel 0 only)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_TXSEL
      bit_offset: 4
      bit_width: 4
      description: 'PDMA SPI0 TX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI0 TX. Software can configure the TX channel setting by SPI0_TXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_RXSEL
      bit_offset: 8
      bit_width: 4
      description: 'PDMA SPI1 RX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI1 RX. Software can configure the RX channel setting by SPI1_RXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_TXSEL
      bit_offset: 12
      bit_width: 4
      description: 'PDMA SPI1 TX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI1 TX. Software can configure the TX channel setting by SPI1_TXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI2_RXSEL
      bit_offset: 16
      bit_width: 4
      description: 'PDMA SPI2 RX Selection (Medium Density Only)

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI2 RX. Software can configure the RX channel setting by SPI2_RXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI2_TXSEL
      bit_offset: 20
      bit_width: 4
      description: 'PDMA SPI2 TX Selection (Medium Density Only)

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI2 TX. Software can configure the TX channel setting by SPI2_TXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI3_RXSEL
      bit_offset: 24
      bit_width: 4
      description: 'PDMA SPI3 RX Selection (Medium Density Only)

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI3 RX. Software can configure the RX channel setting by SPI3_RXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI3_TXSEL
      bit_offset: 28
      bit_width: 4
      description: 'PDMA SPI3 TX Selection (Medium Density Only)

        This filed defines which PDMA channel is connected to the on-chip peripheral
        SPI3 TX. Software can configure the TX channel setting by SPI3_TXSEL. The
        channel configuration is the same as SPI0_RXSEL field. Please refer to the
        explanation of SPI0_RXSEL.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDSSR1
    addr: 0x50008f08
    size_bits: 32
    description: PDMA Service Selection Control Register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: UART0_RXSEL
      bit_offset: 0
      bit_width: 4
      description: "This filed defines which PDMA channel is connected to the on-chip
        peripheral UART0 RX. Software can change the channel RX setting by UART0_RXSEL\n4'b0000:
        CH0\n4'b0001: CH1\n4'b0010: CH2\n4'b0011: CH3 \n4'b0100: CH4 \n4'b0101: CH5\n4'b0110:
        CH6\n4'b0111: CH7\n4'b1000: CH8\nOthers : Reserved\nNote : Ex : UART0_RXSEL
        = 4'b0110, that means UART0_RX is connected to PDMA_CH6(Low Density should
        set as 4'b0000 for PDMA channel 0 only)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART0_TXSEL
      bit_offset: 4
      bit_width: 4
      description: 'PDMA UART0 TX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        UART0 TX. Software can configure the TX channel setting by UART0_TXSEL. The
        channel configuration is the same as UART0_RXSEL field. Please refer to the
        explanation of UART0_RXSEL'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_RXSEL
      bit_offset: 8
      bit_width: 4
      description: 'PDMA UART1 RX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        UART1 RX. Software can configure the RX channel setting by UART1_RXSEL. The
        channel configuration is the same as UART0_RXSEL field. Please refer to the
        explanation of UART0_RXSEL'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_TXSEL
      bit_offset: 12
      bit_width: 4
      description: 'PDMA UART1 TX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        UART1 TX. Software can configure the TX channel setting by UART1_TXSEL. The
        channel configuration is the same as UART0_RXSEL field. Please refer to the
        explanation of UART0_RXSEL'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_RXSEL
      bit_offset: 24
      bit_width: 4
      description: 'PDMA ADC RX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        ADC RX. Software can configure the RX channel setting by ADC_RXSEL. The channel
        configuration is the same as UART0_RXSEL field. Please refer to the explanation
        of UART0_RXSEL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDMA_GCRISR
    addr: 0x50008f0c
    size_bits: 32
    description: PDMA Global Interrupt Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INTR0
      bit_offset: 0
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 0

        This bit is the Interrupt pin status of PDMA channel0.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR1
      bit_offset: 1
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 1 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel1.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR2
      bit_offset: 2
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 2 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel2.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR3
      bit_offset: 3
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 3 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel3.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR4
      bit_offset: 4
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 4 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel4.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR5
      bit_offset: 5
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 5 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel5.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR6
      bit_offset: 6
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 6 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel 6.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR7
      bit_offset: 7
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 7 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel 7.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR8
      bit_offset: 8
      bit_width: 1
      description: 'Interrupt Pin Status of Channel 4 (Medium Density Only)

        This bit is the Interrupt pin status of PDMA channel 8.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR
      bit_offset: 31
      bit_width: 1
      description: 'Interrupt Pin Status

        This bit is the Interrupt pin status of PDMA controller.

        Note: This bit is read only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PDSSR2
    addr: 0x50008f10
    size_bits: 32
    description: PDMA Service Selection Control Register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: I2S_RXSEL
      bit_offset: 0
      bit_width: 4
      description: "PDMA I2S RX Selection\n\nThis filed defines which PDMA channel
        is connected to the on-chip peripheral I2S RX. Software can change the channel
        RX setting by I2S_RXSEL\n4'b0000: CH0\n4'b0001: CH1\n4'b0010: CH2\n4'b0011:
        CH3 \n4'b0100: CH4 \n4'b0101: CH5\n4'b0110: CH6\n4'b0111: CH7\n4'b1000: CH8\nOthers
        : Reserved\nNote : Ex : I2S_RXSEL = 4'b0110, that means I2S_RX is connected
        to PDMA_CH6(Low Density should set as 4'b0000 for PDMA channel 0 only)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2S_TXSEL
      bit_offset: 4
      bit_width: 4
      description: 'PDMA I2S TX Selection

        This filed defines which PDMA channel is connected to the on-chip peripheral
        I2S TX. Software can configure the TX channel setting by I2S_TXSEL. The channel
        configuration is the same as I2S_RXSEL field. Please refer to the explanation
        of I2S_RXSEL.'
      read_allowed: true
      write_allowed: true
- !Module
  name: PS2
  description: Registers group
  base_addr: 0x40100000
  size: 0x20
  registers:
  - !Register
    name: PS2CON
    addr: 0x40100000
    size_bits: 32
    description: PS2 Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PS2EN
      bit_offset: 0
      bit_width: 1
      description: 'Enable PS2 Device

        Enable PS2 device controller

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXINTEN
      bit_offset: 1
      bit_width: 1
      description: 'Enable Transmit Interrupt

        1 = Enable data transmit complete interrupt

        0 = Disable data transmit complete interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXINTEN
      bit_offset: 2
      bit_width: 1
      description: 'Enable Receive Interrupt

        1 = Enable data receive complete interrupt

        0 = Disable data receive complete interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXFIFO_DEPTH
      bit_offset: 3
      bit_width: 4
      description: "Transmit Data FIFO Depth\nThere is 16 bytes buffer for data transmit.
        S/W can define the FIFO depth from 1 to 16 bytes depends on application. \n0
        = 1 byte\n1 = 2 bytes\n...\n14 = 15 bytes\n15 = 16 bytes"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACK
      bit_offset: 7
      bit_width: 1
      description: 'Acknowledge Enable

        1 = If parity error or stop bit is not received correctly, acknowledge bit
        will not be sent to host at 12th clock

        0 = Always send acknowledge to host at 12th clock for host to device communication.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLRFIFO
      bit_offset: 8
      bit_width: 1
      description: "Clear TX FIFO \nWrite 1 to this bit to terminate device to host
        transmission. The TXEMPTY bit in PS2STATUS bit will be set to 1 and pointer
        BYTEIDEX is reset to 0 regardless there is residue data in buffer or not.
        The buffer content is not been cleared.\n1 = Clear FIFO \n0 = Not active"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OVERRIDE
      bit_offset: 9
      bit_width: 1
      description: 'Software Override PS2 CLK/DATA Pin State

        1 = PS2CLK and PS2DATA pins are controlled by S/W

        0 = PS2CLK and PS2DATA pins are controlled by internal state machine.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPS2CLK
      bit_offset: 10
      bit_width: 1
      description: 'Force PS2CLK Line

        It forces PS2CLK line high or low regardless of the internal state of the
        device controller if OVERRIDE is set to high.

        1 = Force PS2DATA line high

        0 = Force PS2DATA line low'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPS2DAT
      bit_offset: 11
      bit_width: 1
      description: 'Force PS2DATA Line

        It forces PS2DATA high or low regardless of the internal state of the device
        controller if OVERRIDE is set to high.

        1 = Force PS2DATA high

        0 = Force PS2DATA low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PS2TXDATA0
    addr: 0x40100004
    size_bits: 32
    description: PS2 Transmit DATA Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 32
      description: 'Transmit data

        Write data to this register starts device to host communication if bus is
        in IDLE state. S/W must enable PS2EN before writing data to TX buffer.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PS2TXDATA1
    addr: 0x40100008
    size_bits: 32
    description: PS2 Transmit DATA Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 32
      description: 'Transmit data

        Write data to this register starts device to host communication if bus is
        in IDLE state. S/W must enable PS2EN before writing data to TX buffer.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PS2TXDATA2
    addr: 0x4010000c
    size_bits: 32
    description: PS2 Transmit DATA Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 32
      description: 'Transmit data

        Write data to this register starts device to host communication if bus is
        in IDLE state. S/W must enable PS2EN before writing data to TX buffer.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PS2TXDATA3
    addr: 0x40100010
    size_bits: 32
    description: PS2 Transmit DATA Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 32
      description: 'Transmit data

        Write data to this register starts device to host communication if bus is
        in IDLE state. S/W must enable PS2EN before writing data to TX buffer.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PS2RXDATA
    addr: 0x40100014
    size_bits: 32
    description: PS2 Receive DATA Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PS2RXDATA
      bit_offset: 0
      bit_width: 8
      description: "Received Data \nFor host to device communication, after acknowledge
        bit is sent, the received data is copied from receive shift register to PS2RXDATA
        register. CPU must read this register before next byte reception complete,
        otherwise the data will be overwritten and RXOVF bit in PS2STATUS[6] will
        be set to 1."
      read_allowed: true
      write_allowed: false
  - !Register
    name: PS2STATUS
    addr: 0x40100018
    size_bits: 32
    description: PS2 Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x83
    fields:
    - !Field
      name: PS2CLK
      bit_offset: 0
      bit_width: 1
      description: 'CLK Pin State

        This bit reflects the status of the PS2CLK line after synchronizing.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PS2DATA
      bit_offset: 1
      bit_width: 1
      description: 'DATA Pin State

        This bit reflects the status of the PS2DATA line after synchronizing and sampling.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERR
      bit_offset: 2
      bit_width: 1
      description: 'Frame Error

        For host to device communication, if STOP bit (logic 1) is not received it
        is a frame error. If frame error occurs, DATA line may keep at low state after
        12th clock. At this moment, S/w overrides PS2CLK to send clock till PS2DATA
        release to high state. After that, device sends a "Resend" command to host.

        1 = Frame error occur

        0 = No frame error

        Write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXPARITY
      bit_offset: 3
      bit_width: 1
      description: 'Received Parity

        This bit reflects the parity bit for the last received data byte (odd parity).

        Read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXBUSY
      bit_offset: 4
      bit_width: 1
      description: 'Receive Busy

        This bit indicates that the PS2 device is currently receiving data.

        0 = Idle.

        1 = Currently receiving data.

        Read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXBUSY
      bit_offset: 5
      bit_width: 1
      description: 'Transmit Busy

        This bit indicates that the PS2 device is currently sending data.

        0 = Idle.

        1 = Currently sending data.

        Read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXOVF
      bit_offset: 6
      bit_width: 1
      description: 'RX Buffer Overwrite

        1 = Data in PS2RXDATA register is overwritten by new coming data.

        0 = No overwrite

        Write 1 to clear this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXEMPTY
      bit_offset: 7
      bit_width: 1
      description: 'TX FIFO Empty

        When S/W writes any data to PS2TXDATA0-3 the TXEMPTY bit is cleared to 0 immediately
        if PS2EN is enabled. When transmitted data byte number is equal to FIFODEPTH
        then TXEMPTY bit is clear to 1.

        1 = FIFO is empty

        0 = There is data to be transmitted

        Read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BYTEIDX
      bit_offset: 8
      bit_width: 4
      description: "Byte Index \nIt indicates which data byte in transmit data shift
        register. When all data in FIFO is transmitted and it will be cleared to 0.\nIt
        is a read only bit.\nBYTEIDX\tDATA Transmit\tBYTEIDX\tDATA Transmit\t\n0000\tTXDATA0[7:0]\t1000\tTXDATA2[7:0]\t\n0001\tTXDATA0[15:8]\t1001\tTXDATA2[15:8]\t\n0010\tTXDATA0[23:16]\t1010\tTXDATA2[23:16]\t\n0011\tTXDATA0[31:24]\t1011\tTXDATA2[31:24]\t\n0100\tTXDATA1[7:0]\t1100\tTXDATA3[7:0]\t\n0101\tTXDATA1[15:8]\t1101\tTXDATA3[15:8]\t\n0110\tTXDATA1[23:16]\t1110\tTXDATA3[23:16]\t\n0111\tTXDATA1[31:24]\t1111\tTXDATA3[31:24]\t"
      read_allowed: true
      write_allowed: false
  - !Register
    name: PS2INTID
    addr: 0x4010001c
    size_bits: 32
    description: PS2 Interrupt Identification Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RXINT
      bit_offset: 0
      bit_width: 1
      description: 'Receive Interrupt

        This bit is set to 1 when acknowledge bit is sent for Host to device communication.
        Interrupt occurs if RXINTEN bit is set to 1.

        1 = Receive interrupt occurs

        0 = No interrupt

        Write 1 to clear this bit to 0.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXINT
      bit_offset: 1
      bit_width: 1
      description: "Transmit Interrupt \nThis bit is set to 1 after STOP bit is transmitted.
        Interrupt occur if TXINTEN bit is set to 1.\n1 = Transmit interrupt occurs\n0
        = No interrupt\nWrite 1 to clear this bit to 0."
      read_allowed: true
      write_allowed: true
- !Module
  name: RTC
  description: Registers group
  base_addr: 0x40008000
  size: 0x34
  registers:
  - !Register
    name: INIR
    addr: 0x40008000
    size_bits: 32
    description: RTC Initiation Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: Active
      bit_offset: 0
      bit_width: 1
      description: "RTC Active Status (Read only), \n0: RTC is at reset state\n1:
        RTC is at normal active state."
      read_allowed: true
      write_allowed: false
    - !Field
      name: INIR
      bit_offset: 0
      bit_width: 32
      description: "RTC Initiation \nWhen chip is power on, RTC timer counter is at
        unknown state because RTC timer counter reset is individual with chip reset;
        user has to write a number (0x a5eb1357) to INIR to reset RTC controller to
        initialize RTC controller."
      read_allowed: false
      write_allowed: true
  - !Register
    name: AER
    addr: 0x40008004
    size_bits: 32
    description: RTC Access Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AER
      bit_offset: 0
      bit_width: 16
      description: "RTC Register Access Enable Password (Write only)\n0xA965 = Enable
        RTC access \nOthers = Disable RTC access "
      read_allowed: false
      write_allowed: true
    - !Field
      name: ENF
      bit_offset: 16
      bit_width: 1
      description: "RTC Register Access Enable Flag (Read only)\n1 = RTC register
        read/write enable\n0 = RTC register read/write disable\nThis bit will be set
        after AER[15:0] register is load a 0xA965, and be clear automatically 512
        RTC clock or AER[15:0] is not 0xA965.Register\\AER.ENF\t1\t0\t\nINIR\tR/W\tR/W\t\nAER\tR/W\tR/W\t\nFCR\tR/W\t-\t\nTLR\tR/W\tR\t\nCLR\tR/W\tR\t\nTSSR\tR/W\tR/W\t\nDWR\tR/W\tR\t\nTAR\tR/W\t-\t\nCAR\tR/W\t-\t\nLIR\tR\tR\t\nRIER\tR/W\tR/W\t\nRIIR\tR/C\tR/C\t\nTTR\tR/W\t-\t"
      read_allowed: true
      write_allowed: false
  - !Register
    name: FCR
    addr: 0x40008008
    size_bits: 32
    description: RTC Frequency Compensation Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x700
    fields:
    - !Field
      name: FRACTION
      bit_offset: 0
      bit_width: 6
      description: 'Fraction Part

        Formula = (fraction part of detected value) x 60

        Note: Digit in FCR must be expressed as hexadecimal number. Refer to 5.8.4.4
        for the examples.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEGER
      bit_offset: 8
      bit_width: 4
      description: "Integer Part\nInteger part of detected value\tFCR[11:8]\tInteger
        part of detected value\tFCR[11:8]\t\n32776\t1111\t32768\t0111\t\n32775\t1110\t32767\t0110\t\n32774\t1101\t32766\t0101\t\n32773\t1100\t32765\t0100\t\n32772\t1011\t32764\t0011\t\n32771\t1010\t32763\t0010\t\n32770\t1001\t32762\t0001\t\n32769\t1000\t32761\t0000\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: TLR
    addr: 0x4000800c
    size_bits: 32
    description: Time Loading Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: _1SEC
      bit_offset: 0
      bit_width: 4
      description: 1 Sec Time Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10SEC
      bit_offset: 4
      bit_width: 3
      description: 10 Sec Time Digit (0~5)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1MIN
      bit_offset: 8
      bit_width: 4
      description: 1 Min Time Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10MIN
      bit_offset: 12
      bit_width: 3
      description: 10 Min Time Digit (0~5)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1HR
      bit_offset: 16
      bit_width: 4
      description: 1 Hour Time Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10HR
      bit_offset: 20
      bit_width: 2
      description: 10 Hour Time Digit (0~2)
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLR
    addr: 0x40008010
    size_bits: 32
    description: Calendar Loading Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x50101
    fields:
    - !Field
      name: _1DAY
      bit_offset: 0
      bit_width: 4
      description: 1-Day Calendar Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10DAY
      bit_offset: 4
      bit_width: 2
      description: 10-Day Calendar Digit (0~3)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1MON
      bit_offset: 8
      bit_width: 4
      description: 1-Month Calendar Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10MON
      bit_offset: 12
      bit_width: 1
      description: 10-Month Calendar Digit (0~1)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1YEAR
      bit_offset: 16
      bit_width: 4
      description: 1-Year Calendar Digit (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10YEAR
      bit_offset: 20
      bit_width: 4
      description: 10-Year Calendar Digit (0~9)
      read_allowed: true
      write_allowed: true
  - !Register
    name: TSSR
    addr: 0x40008014
    size_bits: 32
    description: Time Scale Selection Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: _24H_12H
      bit_offset: 0
      bit_width: 1
      description: "24-Hour / 12-Hour Time Scale Selection\nIt indicate that TLR and
        TAR are in 24-hour time mode or 12-hour time mode\n1 = select 24-hour time
        scale\n0 = select 12-hour time scale with AM and PM indication\n24-hour time
        scale\t12-hour time scale\t24-hour time scale\t12-hour time scale\n(PM time
        + 20)\t\n00\t12(AM12)\t12\t32(PM12)\t\n01\t01(AM01)\t13\t21(PM01)\t\n02\t02(AM02)\t14\t22(PM02)\t\n03\t03(AM03)\t15\t23(PM03)\t\n04\t04(AM04)\t16\t24(PM04)\t\n05\t05(AM05)\t17\t25(PM05)\t\n06\t06(AM06)\t18\t26(PM06)\t\n07\t07(AM07)\t19\t27(PM07)\t\n08\t08(AM08)\t20\t28(PM08)\t\n09\t09(AM09)\t21\t29(PM09)\t\n10\t10(AM10)\t22\t30(PM10)\t\n11\t11(AM11)\t23\t31(PM11)\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: DWR
    addr: 0x40008018
    size_bits: 32
    description: Day of the Week Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x6
    fields:
    - !Field
      name: DWR
      bit_offset: 0
      bit_width: 3
      description: "Day of the Week Register \nValue\tDay of the Week\t\n0\tSunday\t\n1\tMonday\t\n2\tTuesday\t\n3\tWednesday\t\n4\tThursday\t\n5\tFriday\t\n6\tSaturday\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: TAR
    addr: 0x4000801c
    size_bits: 32
    description: Time Alarm Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: _1SEC
      bit_offset: 0
      bit_width: 4
      description: 1 Sec Time Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10SEC
      bit_offset: 4
      bit_width: 3
      description: 10 Sec Time Digit of Alarm Setting (0~5)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1MIN
      bit_offset: 8
      bit_width: 4
      description: 1 Min Time Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10MIN
      bit_offset: 12
      bit_width: 3
      description: 10 Min Time Digit of Alarm Setting (0~5)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1HR
      bit_offset: 16
      bit_width: 4
      description: 1 Hour Time Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10HR
      bit_offset: 20
      bit_width: 2
      description: 10 Hour Time Digit of Alarm Setting (0~2)
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAR
    addr: 0x40008020
    size_bits: 32
    description: Calendar Alarm Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: _1DAY
      bit_offset: 0
      bit_width: 4
      description: 1-Day Calendar Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10DAY
      bit_offset: 4
      bit_width: 2
      description: 10-Day Calendar Digit of Alarm Setting (0~3)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1MON
      bit_offset: 8
      bit_width: 4
      description: 1-Month Calendar Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10MON
      bit_offset: 12
      bit_width: 1
      description: 10-Month Calendar Digit of Alarm Setting (0~1)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _1YEAR
      bit_offset: 16
      bit_width: 4
      description: 1-Year Calendar Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
    - !Field
      name: _10YEAR
      bit_offset: 20
      bit_width: 4
      description: 10-Year Calendar Digit of Alarm Setting (0~9)
      read_allowed: true
      write_allowed: true
  - !Register
    name: LIR
    addr: 0x40008024
    size_bits: 32
    description: RTC Leap year Indicator Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: LIR
      bit_offset: 0
      bit_width: 1
      description: 'Leap Year Indication REGISTER (Real only).

        1 = It indicate that this year is leap year

        0 = It indicate that this year is not a leap year'
      read_allowed: true
      write_allowed: false
  - !Register
    name: RIER
    addr: 0x40008028
    size_bits: 32
    description: RTC Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AIER
      bit_offset: 0
      bit_width: 1
      description: 'Alarm Interrupt Enable

        1 = RTC Alarm Interrupt is enabled

        0 = RTC Alarm Interrupt is disabled'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIER
      bit_offset: 1
      bit_width: 1
      description: 'Time Tick Interrupt Enable

        1 = RTC Time Tick Interrupt is enabled

        0 = RTC Time Tick Interrupt is disabled'
      read_allowed: true
      write_allowed: true
  - !Register
    name: RIIR
    addr: 0x4000802c
    size_bits: 32
    description: RTC Interrupt Indicator Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AIF
      bit_offset: 0
      bit_width: 1
      description: 'RTC Alarm Interrupt Flag

        When RTC Alarm Interrupt is enabled (RIER.AIER=1), RTC controller will set
        AIF to high once the RTC real time counters TLR and CLR reach the alarm setting
        time registers TAR and CAR. This bit is software clear by writing 1 to it.

        1 = Indicates RTC Alarm Interrupt is requested if RIER.AIER=1.

        0 = Indicates RTC Alarm Interrupt condition never occurred.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIF
      bit_offset: 1
      bit_width: 1
      description: 'RTC Time Tick Interrupt Flag

        When RTC Time Tick Interrupt is enabled (RIER.TIER=1), RTC controller will
        set TIF to high periodically in the period selected by TTR[2:0]. This bit
        is software clear by writing 1 to it.

        1 = Indicates RTC Time Tick Interrupt is requested if RIER.TIER=1.

        0 = Indicates RTC Time Tick Interrupt condition never occurred.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TTR
    addr: 0x40008030
    size_bits: 32
    description: RTC Time Tick Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TTR
      bit_offset: 0
      bit_width: 3
      description: "Time Tick Register\nThe RTC time tick period for Periodic Time
        Tick Interrupt request.\nTTR[2:0]\tTime tick (second)\t\n0\t1\t\n1\t1/2\t\n2\t1/4\t\n3\t1/8\t\n4\t1/16\t\n5\t1/32\t\n6\t1/64\t\n7\t1/128\t\n\nNote:
        This register can be read back after the RTC register access enable bit ENF(AER[16])
        is active."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TWKE
      bit_offset: 3
      bit_width: 1
      description: "RTC Timer Wakeup CPU Function Enable Bit\nIf TWKE is set before
        CPU is in power-down mode, when a RTC Time Tick occurs, CPU will be wakened
        up by RTC controller.\n1 = Enable the Wakeup function that CPU can be waken
        up from power-down mode by Time Tick.\n0 = Disable Wakeup CPU function by
        Time Tick.\nNote: \n1. Tick timer setting follows TTR[2:0] description. \n2.
        The CPU can also be wakeup by alarm match occur."
      read_allowed: true
      write_allowed: true
- !Module
  name: SCS
  description: Registers group
  base_addr: 0xe000e000
  size: 0xd24
  registers:
  - !Register
    name: SYST_CSR
    addr: 0xe000e010
    size_bits: 32
    description: SysTick Control and Status
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: '1 : the counter will operate in a multi-shot manner.

        0 : the counter is disabled'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TICKINT
      bit_offset: 1
      bit_width: 1
      description: '1 : counting down to 0 will cause the SysTick exception to be
        pended. Clearing the SysTick Current Value register by a register write in
        software will not cause SysTick to be pended.

        0 : counting down to 0 does not cause the SysTick exception to be pended.
        Software can use COUNTFLAG to determine if a count to zero has occurred.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKSRC
      bit_offset: 2
      bit_width: 1
      description: '1 : core clock used for SysTick.

        0 : clock source is (optional) external reference clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: COUNTFLAG
      bit_offset: 16
      bit_width: 1
      description: 'Returns 1 if timer counted to 0 since last time this register
        was read.

        COUNTFLAG is set by a count transition from 1 to 0.

        COUNTFLAG is cleared on read or by a write to the Current Value register.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SYST_RVR
    addr: 0xe000e014
    size_bits: 32
    description: SysTick Reload value
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOAD
      bit_offset: 0
      bit_width: 24
      description: Value to load into the Current Value register when the counter
        reaches 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SYST_CVR
    addr: 0xe000e018
    size_bits: 32
    description: SysTick Current value
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CURRENT
      bit_offset: 0
      bit_width: 24
      description: Current counter value. This is the value of the counter at the
        time it is sampled. The counter does not provide read-modify-write protection.
        The register is write-clear. A software write of any value will clear the
        register to 0. Unsupported bits RAZ (see SysTick Reload Value register).
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ISER
    addr: 0xe000e100
    size_bits: 32
    description: IRQ0 ~ IRQ31 Set-Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SETENA
      bit_offset: 0
      bit_width: 32
      description: "Enable one or more interrupts within a group of 32. Each bit represents
        an interrupt number from IRQ0 ~ IRQ31 (Vector number from 16 ~ 47). \nWriting
        1 will enable the associated interrupt.\nWriting 0 has no effect.\nThe register
        reads back with the current enable state."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICER
    addr: 0xe000e180
    size_bits: 32
    description: IRQ0 ~ IRQ31 Clear-Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRENA
      bit_offset: 0
      bit_width: 32
      description: "Disable one or more interrupts within a group of 32. Each bit
        represents an interrupt number from IRQ0 ~ IRQ31 (Vector number from 16 ~
        47). \nWriting 1 will disable the associated interrupt.\nWriting 0 has no
        effect.\nThe register reads back with the current enable state."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ISPR
    addr: 0xe000e200
    size_bits: 32
    description: IRQ0 ~ IRQ31 Set-Pending Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SETPEND
      bit_offset: 0
      bit_width: 32
      description: 'Writing 1 to a bit pends the associated interrupt under software
        control. Each bit represents an interrupt number from IRQ0 ~ IRQ31 (Vector
        number from 16 ~ 47).

        Writing 0 has no effect.

        The register reads back with the current pending state.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICPR
    addr: 0xe000e280
    size_bits: 32
    description: IRQ0 ~ IRQ31 Clear-Pending Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRPEND
      bit_offset: 0
      bit_width: 32
      description: 'Writing 1 to a bit un-pends the associated interrupt under software
        control. Each bit represents an interrupt number from IRQ0 ~ IRQ31 (Vector
        number from 16 ~ 47).

        Writing 0 has no effect.

        The register reads back with the current pending state.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR0
    addr: 0xe000e400
    size_bits: 32
    description: IRQ0 ~ IRQ3 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_0
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ0

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_1
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ1

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_2
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ2

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_3
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ3

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR1
    addr: 0xe000e404
    size_bits: 32
    description: IRQ4 ~ IRQ7 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_4
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ4

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_5
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ5

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_6
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ6

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_7
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ7

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR2
    addr: 0xe000e408
    size_bits: 32
    description: IRQ8 ~ IRQ11 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_8
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ8

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_9
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ9

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_10
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ10

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_11
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ11

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR3
    addr: 0xe000e40c
    size_bits: 32
    description: IRQ12 ~ IRQ15 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_12
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ12

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_13
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ13

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_14
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ14

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_15
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ15

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR4
    addr: 0xe000e410
    size_bits: 32
    description: IRQ16 ~ IRQ19 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_16
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ16

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_17
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ17

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_18
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ18

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_19
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ19

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR5
    addr: 0xe000e414
    size_bits: 32
    description: IRQ20 ~ IRQ23 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_20
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ20

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_21
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ21

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_22
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ22

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_23
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ23

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR6
    addr: 0xe000e418
    size_bits: 32
    description: IRQ24 ~ IRQ27 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_24
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ24

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_25
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ25

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_26
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ26

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_27
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ27

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR7
    addr: 0xe000e41c
    size_bits: 32
    description: IRQ28 ~ IRQ31 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_28
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ28

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_29
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ29

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_30
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ30

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_31
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ31

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CPUID
    addr: 0xe000ed00
    size_bits: 32
    description: CPUID Register
    read_allowed: true
    write_allowed: false
    reset_value: 0x410cc200
    fields:
    - !Field
      name: REVESION
      bit_offset: 0
      bit_width: 4
      description: Reads as 0x0
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNO
      bit_offset: 4
      bit_width: 12
      description: Reads as 0xC20
      read_allowed: true
      write_allowed: false
    - !Field
      name: PART
      bit_offset: 16
      bit_width: 4
      description: Reads as 0xC for ARMv6-M parts
      read_allowed: true
      write_allowed: false
    - !Field
      name: IMPLEMENTER
      bit_offset: 24
      bit_width: 8
      description: Implementer code assigned by ARM. ( ARM = 0x41)
      read_allowed: true
      write_allowed: false
  - !Register
    name: ICSR
    addr: 0xe000ed04
    size_bits: 32
    description: Interrupt Control State Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VECTACTIVE
      bit_offset: 0
      bit_width: 9
      description: '0 = Thread mode

        Value > 1 = the exception number for the current executing exception.This
        is a read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VECTPENDING
      bit_offset: 12
      bit_width: 9
      description: 'Indicates the exception number for the highest priority pending
        exception. The pending state includes the effect of memory-mapped enable and
        mask registers. It does not include the PRIMASK special-purpose register qualifier.
        A value of zero indicates no pending exceptions.

        This is a read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ISRPENDING
      bit_offset: 22
      bit_width: 1
      description: 'Indicates if an external configurable (NVIC generated) interrupt
        is pending.

        This is a read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ISRPREEMPT
      bit_offset: 23
      bit_width: 1
      description: 'If set, a pending exception will be serviced on exit from the
        debug halt state.

        This is a read only bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PENDSTCLR
      bit_offset: 25
      bit_width: 1
      description: Write 1 to clear a pending SysTick. This is a write only bit.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PENDSTSET
      bit_offset: 26
      bit_width: 1
      description: Set a pending SysTick. Reads back with current state (1 if Pending,
        0 if not).
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSVCLR
      bit_offset: 27
      bit_width: 1
      description: Write 1 to clear a pending PendSV interrupt. This is a write only
        bit.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PENDSVSET
      bit_offset: 28
      bit_width: 1
      description: Set a pending PendSV interrupt. This is normally used to request
        a context switch. Reads back with current state (1 if Pending, 0 if not).
      read_allowed: true
      write_allowed: true
    - !Field
      name: NMIPENDSET
      bit_offset: 31
      bit_width: 1
      description: Setting this bit will activate an NMI. Since NMI is the highest
        priority exception, it will activate as soon as it is registered. Reads back
        with current state (1 if Pending, 0 if not).
      read_allowed: true
      write_allowed: true
  - !Register
    name: AIRCR
    addr: 0xe000ed0c
    size_bits: 32
    description: Application Interrupt and Reset Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VECTCLRACTIVE
      bit_offset: 1
      bit_width: 1
      description: 'Set this bit to 1 will clears all active state information for
        fixed and configurable exceptions. The bit is a write only bit and can only
        be written when the core is halted. Note: It is the debugger''s responsibility
        to re-initialize the stack. '
      read_allowed: false
      write_allowed: true
    - !Field
      name: SYSRESETREQ
      bit_offset: 2
      bit_width: 1
      description: 'Writing this bit 1 will cause a reset signal to be asserted to
        the chip to indicate a reset is requested. The bit is a write only bit and
        self-clears as part of the reset sequence. '
      read_allowed: false
      write_allowed: true
    - !Field
      name: VECTORKEY
      bit_offset: 16
      bit_width: 16
      description: 'When write this register, this field should be 0x05FA, otherwise
        the write action will be unpredictable. '
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCR
    addr: 0xe000ed10
    size_bits: 32
    description: System Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SLEEPONEXIT
      bit_offset: 1
      bit_width: 1
      description: When set to 1, the core can enter a sleep state on an exception
        return to Thread mode. This is the mode and exception level entered at reset,
        the base level of execution.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEEPDEEP
      bit_offset: 2
      bit_width: 1
      description: A qualifying hint that indicates waking from sleep might take longer.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEVONPEND
      bit_offset: 4
      bit_width: 1
      description: When enabled, interrupt transitions from Inactive to Pending are
        included in the list of wakeup events for the WFE instruction.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHPR2
    addr: 0xe000ed1c
    size_bits: 32
    description: System Handler Priority Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_11
      bit_offset: 30
      bit_width: 2
      description: 'Priority of system handler 11 SVCall

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHPR3
    addr: 0xe000ed20
    size_bits: 32
    description: System Handler Priority Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_14
      bit_offset: 22
      bit_width: 2
      description: 'Priority of system handler 14 PendSV

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_15
      bit_offset: 30
      bit_width: 2
      description: 'Priority of system handler 15 SysTick

        "0" denotes the highest priority and "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI0
  description: Registers group
  base_addr: 0x40030000
  size: 0x3c
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x40030000
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TWOB
      bit_offset: 22
      bit_width: 1
      description: 'Two Bits Transfer Mode Active

        1 = Enable two-bit transfer mode.

        0 = disable two-bit transfer mode.

        Note that when enable TWOB, the serial transmitted 2-bit data output are from
        SPI_TX1/0, and the received 2-bit data input are put in SPI_RX1/0.

        Note that when enable TWOB, the setting of TX_NUM must be programmed as 0x00.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output
        frequency is variable. The output frequency is decided by the value of VARCLK,
        DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and
        decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN
        bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x40030004
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field
        is the frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode, the
        period of SPI clock driven by a master shall equal or over 5 times the period
        of PCLK. In other words, the maximum frequency of SPI clock is the fifth of
        the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field
        is the 2nd frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x40030008
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 2
      description: "Slave Select Register (master only)\nIf AUTOSS bit is cleared,
        writing 1 to any bit location of this field sets the proper SPISSx0/1 line
        to an active state and writing 0 sets the line back to inactive state.\nIf
        AUTOSS bit is set, writing 1 to any bit location of this field will select
        appropriate SPISSx0/1 line to be automatically driven to active state for
        the duration of the transmit/receive, and will be driven to inactive state
        for the rest of the time. (The active level of SPISSx0/1 is specified in SS_LVL).\nNote:
        \n1. This interface can only drive one device/slave at a given time. Therefore,
        the slave select pin of the selected device must be set to its active level
        before starting any read or write transfer. \n2. SPISSx0 is also defined as
        device/slave select input signal in slave mode. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave
        select signal (SPISSx0/1). \n1 = The slave select signal SPISSx0/1 is active
        at high-level/rising-edge.\n0 = The slave select signal SPISSx0/1 is active
        at low-level/falling-edge.."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx0/1 signals are generated automatically. It
        means that slave select signal, which is set in SSR[1:0] register is asserted
        by the SPI controller when transmit/receive is started by setting GO_BUSY,
        and is de-asserted after each transmit/receive is finished.

        0 = If this bit is cleared, slave select signals are asserted and de-asserted
        by setting and clearing related bits in SSR[1:0] register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x40030010
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x40030014
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x40030020
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x40030024
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x40030034
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency
        patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output
        frequency of SPICLK is according the value of DIVIDER. If the bit patterns
        of VARCLK are 1, the output frequency of SPICLK is according the value of
        DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DMA
    addr: 0x40030038
    size_bits: 32
    description: SPI DMA control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_DMA_GO
      bit_offset: 0
      bit_width: 1
      description: "Transmit DMA start\nSet this bit to 1 will start the transmit
        DMA process. SPI module will issue request to DMA module automatically. \nIf
        using DMA mode to transfer data, remember not to set GO_BUSY bit of SPI_CNTRL
        register. The DMA controller inside SPI module will set it automatically whenever
        necessary.\nHardware will clear this bit automatically after DMA transfer
        done."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DMA_GO
      bit_offset: 1
      bit_width: 1
      description: "Receive DMA start\nSet this bit to 1 will start the receive DMA
        process. SPI module will issue request to DMA module automatically. \nHardware
        will clear this bit automatically after DMA transfer done."
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI1
  description: Registers group
  base_addr: 0x40034000
  size: 0x3c
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x40034000
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TWOB
      bit_offset: 22
      bit_width: 1
      description: 'Two Bits Transfer Mode Active

        1 = Enable two-bit transfer mode.

        0 = disable two-bit transfer mode.

        Note that when enable TWOB, the serial transmitted 2-bit data output are from
        SPI_TX1/0, and the received 2-bit data input are put in SPI_RX1/0.

        Note that when enable TWOB, the setting of TX_NUM must be programmed as 0x00.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output
        frequency is variable. The output frequency is decided by the value of VARCLK,
        DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and
        decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN
        bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x40034004
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field
        is the frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode, the
        period of SPI clock driven by a master shall equal or over 5 times the period
        of PCLK. In other words, the maximum frequency of SPI clock is the fifth of
        the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field
        is the 2nd frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x40034008
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 2
      description: "Slave Select Register (master only)\nIf AUTOSS bit is cleared,
        writing 1 to any bit location of this field sets the proper SPISSx0/1 line
        to an active state and writing 0 sets the line back to inactive state.\nIf
        AUTOSS bit is set, writing 1 to any bit location of this field will select
        appropriate SPISSx0/1 line to be automatically driven to active state for
        the duration of the transmit/receive, and will be driven to inactive state
        for the rest of the time. (The active level of SPISSx0/1 is specified in SS_LVL).\nNote:
        \n1. This interface can only drive one device/slave at a given time. Therefore,
        the slave select pin of the selected device must be set to its active level
        before starting any read or write transfer. \n2. SPISSx0 is also defined as
        device/slave select input signal in slave mode. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave
        select signal (SPISSx0/1). \n1 = The slave select signal SPISSx0/1 is active
        at high-level/rising-edge.\n0 = The slave select signal SPISSx0/1 is active
        at low-level/falling-edge.."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx0/1 signals are generated automatically. It
        means that slave select signal, which is set in SSR[1:0] register is asserted
        by the SPI controller when transmit/receive is started by setting GO_BUSY,
        and is de-asserted after each transmit/receive is finished.

        0 = If this bit is cleared, slave select signals are asserted and de-asserted
        by setting and clearing related bits in SSR[1:0] register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x40034010
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x40034014
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x40034020
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x40034024
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x40034034
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency
        patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output
        frequency of SPICLK is according the value of DIVIDER. If the bit patterns
        of VARCLK are 1, the output frequency of SPICLK is according the value of
        DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DMA
    addr: 0x40034038
    size_bits: 32
    description: SPI DMA control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_DMA_GO
      bit_offset: 0
      bit_width: 1
      description: "Transmit DMA start\nSet this bit to 1 will start the transmit
        DMA process. SPI module will issue request to DMA module automatically. \nIf
        using DMA mode to transfer data, remember not to set GO_BUSY bit of SPI_CNTRL
        register. The DMA controller inside SPI module will set it automatically whenever
        necessary.\nHardware will clear this bit automatically after DMA transfer
        done."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DMA_GO
      bit_offset: 1
      bit_width: 1
      description: "Receive DMA start\nSet this bit to 1 will start the receive DMA
        process. SPI module will issue request to DMA module automatically. \nHardware
        will clear this bit automatically after DMA transfer done."
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI2
  description: Registers group
  base_addr: 0x40130000
  size: 0x3c
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x40130000
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TWOB
      bit_offset: 22
      bit_width: 1
      description: 'Two Bits Transfer Mode Active

        1 = Enable two-bit transfer mode.

        0 = disable two-bit transfer mode.

        Note that when enable TWOB, the serial transmitted 2-bit data output are from
        SPI_TX1/0, and the received 2-bit data input are put in SPI_RX1/0.

        Note that when enable TWOB, the setting of TX_NUM must be programmed as 0x00.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output
        frequency is variable. The output frequency is decided by the value of VARCLK,
        DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and
        decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN
        bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x40130004
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field
        is the frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode, the
        period of SPI clock driven by a master shall equal or over 5 times the period
        of PCLK. In other words, the maximum frequency of SPI clock is the fifth of
        the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field
        is the 2nd frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x40130008
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 2
      description: "Slave Select Register (master only)\nIf AUTOSS bit is cleared,
        writing 1 to any bit location of this field sets the proper SPISSx0/1 line
        to an active state and writing 0 sets the line back to inactive state.\nIf
        AUTOSS bit is set, writing 1 to any bit location of this field will select
        appropriate SPISSx0/1 line to be automatically driven to active state for
        the duration of the transmit/receive, and will be driven to inactive state
        for the rest of the time. (The active level of SPISSx0/1 is specified in SS_LVL).\nNote:
        \n1. This interface can only drive one device/slave at a given time. Therefore,
        the slave select pin of the selected device must be set to its active level
        before starting any read or write transfer. \n2. SPISSx0 is also defined as
        device/slave select input signal in slave mode. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave
        select signal (SPISSx0/1). \n1 = The slave select signal SPISSx0/1 is active
        at high-level/rising-edge.\n0 = The slave select signal SPISSx0/1 is active
        at low-level/falling-edge.."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx0/1 signals are generated automatically. It
        means that slave select signal, which is set in SSR[1:0] register is asserted
        by the SPI controller when transmit/receive is started by setting GO_BUSY,
        and is de-asserted after each transmit/receive is finished.

        0 = If this bit is cleared, slave select signals are asserted and de-asserted
        by setting and clearing related bits in SSR[1:0] register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x40130010
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x40130014
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x40130020
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x40130024
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x40130034
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency
        patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output
        frequency of SPICLK is according the value of DIVIDER. If the bit patterns
        of VARCLK are 1, the output frequency of SPICLK is according the value of
        DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DMA
    addr: 0x40130038
    size_bits: 32
    description: SPI DMA control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_DMA_GO
      bit_offset: 0
      bit_width: 1
      description: "Transmit DMA start\nSet this bit to 1 will start the transmit
        DMA process. SPI module will issue request to DMA module automatically. \nIf
        using DMA mode to transfer data, remember not to set GO_BUSY bit of SPI_CNTRL
        register. The DMA controller inside SPI module will set it automatically whenever
        necessary.\nHardware will clear this bit automatically after DMA transfer
        done."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DMA_GO
      bit_offset: 1
      bit_width: 1
      description: "Receive DMA start\nSet this bit to 1 will start the receive DMA
        process. SPI module will issue request to DMA module automatically. \nHardware
        will clear this bit automatically after DMA transfer done."
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI3
  description: Registers group
  base_addr: 0x40134000
  size: 0x3c
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x40134000
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TWOB
      bit_offset: 22
      bit_width: 1
      description: 'Two Bits Transfer Mode Active

        1 = Enable two-bit transfer mode.

        0 = disable two-bit transfer mode.

        Note that when enable TWOB, the serial transmitted 2-bit data output are from
        SPI_TX1/0, and the received 2-bit data input are put in SPI_RX1/0.

        Note that when enable TWOB, the setting of TX_NUM must be programmed as 0x00.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output
        frequency is variable. The output frequency is decided by the value of VARCLK,
        DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and
        decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN
        bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x40134004
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field
        is the frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode, the
        period of SPI clock driven by a master shall equal or over 5 times the period
        of PCLK. In other words, the maximum frequency of SPI clock is the fifth of
        the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field
        is the 2nd frequency divider of the system clock, PCLK, to generate the serial
        clock on the output SPICLK. The desired frequency is obtained according to
        the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x40134008
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 2
      description: "Slave Select Register (master only)\nIf AUTOSS bit is cleared,
        writing 1 to any bit location of this field sets the proper SPISSx0/1 line
        to an active state and writing 0 sets the line back to inactive state.\nIf
        AUTOSS bit is set, writing 1 to any bit location of this field will select
        appropriate SPISSx0/1 line to be automatically driven to active state for
        the duration of the transmit/receive, and will be driven to inactive state
        for the rest of the time. (The active level of SPISSx0/1 is specified in SS_LVL).\nNote:
        \n1. This interface can only drive one device/slave at a given time. Therefore,
        the slave select pin of the selected device must be set to its active level
        before starting any read or write transfer. \n2. SPISSx0 is also defined as
        device/slave select input signal in slave mode. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave
        select signal (SPISSx0/1). \n1 = The slave select signal SPISSx0/1 is active
        at high-level/rising-edge.\n0 = The slave select signal SPISSx0/1 is active
        at low-level/falling-edge.."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx0/1 signals are generated automatically. It
        means that slave select signal, which is set in SSR[1:0] register is asserted
        by the SPI controller when transmit/receive is started by setting GO_BUSY,
        and is de-asserted after each transmit/receive is finished.

        0 = If this bit is cleared, slave select signals are asserted and de-asserted
        by setting and clearing related bits in SSR[1:0] register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x40134010
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x40134014
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x40134020
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x40134024
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data
        to be transmitted in the next transfer. The number of valid bits depend on
        the transmit bit length field in the CNTRL register. \nFor example, if TX_BIT_LEN
        is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0] will be transmitted
        in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM is set to 0x1, the
        core will perform two successive 32-bit transmit/receive using the same setting
        (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x40134034
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency
        patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output
        frequency of SPICLK is according the value of DIVIDER. If the bit patterns
        of VARCLK are 1, the output frequency of SPICLK is according the value of
        DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DMA
    addr: 0x40134038
    size_bits: 32
    description: SPI DMA control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_DMA_GO
      bit_offset: 0
      bit_width: 1
      description: "Transmit DMA start\nSet this bit to 1 will start the transmit
        DMA process. SPI module will issue request to DMA module automatically. \nIf
        using DMA mode to transfer data, remember not to set GO_BUSY bit of SPI_CNTRL
        register. The DMA controller inside SPI module will set it automatically whenever
        necessary.\nHardware will clear this bit automatically after DMA transfer
        done."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DMA_GO
      bit_offset: 1
      bit_width: 1
      description: "Receive DMA start\nSet this bit to 1 will start the receive DMA
        process. SPI module will issue request to DMA module automatically. \nHardware
        will clear this bit automatically after DMA transfer done."
      read_allowed: true
      write_allowed: true
- !Module
  name: TMR0
  description: Registers group
  base_addr: 0x40010000
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x40010000
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)
        will be updated continuously with the 24-bit up-timer value as the timer is
        counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register
        update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTB
      bit_offset: 24
      bit_width: 1
      description: 'Counter Mode Enable Bit (Low Density only)

        This bit is the counter mode enable bit. When Timer is used as an event counter,
        this bit should be set to 1 and Timer will work as an event counter triggered
        by raising edge of external pin.

        1 = Enable counter mode

        0 = Disable counter mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer
        is operating in the one-shot mode. The associated interrupt signal is generated
        once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n01\tThe
        timer is operating in the periodic mode. The associated interrupt signal is
        generated periodically (if IE is enabled).\t\n10\tThe timer is operating in
        the toggle mode. The interrupt signal is generated periodically (if IE is
        enabled). And the associated signal (tout) is changing back and forth with
        50% duty cycle. (This mode only supported in Low Density)\t\n11\tThe timer
        is operating in auto-reload counting mode. The associated interrupt signal
        is generated when TDR = TCMPR (if IE is enabled); however, the 24-bit up-timer
        counts continuously without reset. (This mode only supported in Low Density)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable
        timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its interrupt
        signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x40010004
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x40010008
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0x4001000c
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR1
  description: Registers group
  base_addr: 0x40010020
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x40010020
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)
        will be updated continuously with the 24-bit up-timer value as the timer is
        counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register
        update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTB
      bit_offset: 24
      bit_width: 1
      description: 'Counter Mode Enable Bit (Low Density only)

        This bit is the counter mode enable bit. When Timer is used as an event counter,
        this bit should be set to 1 and Timer will work as an event counter triggered
        by raising edge of external pin.

        1 = Enable counter mode

        0 = Disable counter mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer
        is operating in the one-shot mode. The associated interrupt signal is generated
        once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n01\tThe
        timer is operating in the periodic mode. The associated interrupt signal is
        generated periodically (if IE is enabled).\t\n10\tThe timer is operating in
        the toggle mode. The interrupt signal is generated periodically (if IE is
        enabled). And the associated signal (tout) is changing back and forth with
        50% duty cycle. (This mode only supported in Low Density)\t\n11\tThe timer
        is operating in auto-reload counting mode. The associated interrupt signal
        is generated when TDR = TCMPR (if IE is enabled); however, the 24-bit up-timer
        counts continuously without reset. (This mode only supported in Low Density)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable
        timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its interrupt
        signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x40010024
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x40010028
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0x4001002c
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR2
  description: Registers group
  base_addr: 0x40110000
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x40110000
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)
        will be updated continuously with the 24-bit up-timer value as the timer is
        counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register
        update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTB
      bit_offset: 24
      bit_width: 1
      description: 'Counter Mode Enable Bit (Low Density only)

        This bit is the counter mode enable bit. When Timer is used as an event counter,
        this bit should be set to 1 and Timer will work as an event counter triggered
        by raising edge of external pin.

        1 = Enable counter mode

        0 = Disable counter mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer
        is operating in the one-shot mode. The associated interrupt signal is generated
        once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n01\tThe
        timer is operating in the periodic mode. The associated interrupt signal is
        generated periodically (if IE is enabled).\t\n10\tThe timer is operating in
        the toggle mode. The interrupt signal is generated periodically (if IE is
        enabled). And the associated signal (tout) is changing back and forth with
        50% duty cycle. (This mode only supported in Low Density)\t\n11\tThe timer
        is operating in auto-reload counting mode. The associated interrupt signal
        is generated when TDR = TCMPR (if IE is enabled); however, the 24-bit up-timer
        counts continuously without reset. (This mode only supported in Low Density)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable
        timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its interrupt
        signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x40110004
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x40110008
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0x4011000c
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR3
  description: Registers group
  base_addr: 0x40110020
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x40110020
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)
        will be updated continuously with the 24-bit up-timer value as the timer is
        counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register
        update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTB
      bit_offset: 24
      bit_width: 1
      description: 'Counter Mode Enable Bit (Low Density only)

        This bit is the counter mode enable bit. When Timer is used as an event counter,
        this bit should be set to 1 and Timer will work as an event counter triggered
        by raising edge of external pin.

        1 = Enable counter mode

        0 = Disable counter mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer
        is operating in the one-shot mode. The associated interrupt signal is generated
        once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n01\tThe
        timer is operating in the periodic mode. The associated interrupt signal is
        generated periodically (if IE is enabled).\t\n10\tThe timer is operating in
        the toggle mode. The interrupt signal is generated periodically (if IE is
        enabled). And the associated signal (tout) is changing back and forth with
        50% duty cycle. (This mode only supported in Low Density)\t\n11\tThe timer
        is operating in auto-reload counting mode. The associated interrupt signal
        is generated when TDR = TCMPR (if IE is enabled); however, the 24-bit up-timer
        counts continuously without reset. (This mode only supported in Low Density)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable
        timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its interrupt
        signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x40110024
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x40110028
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0x4011002c
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: UART0
  description: Registers group
  base_addr: 0x40050000
  size: 0x34
  registers:
  - !Register
    name: UA_RBR
    addr: 0x40050000
    size_bits: 32
    description: Receive Buffer Register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RBR
      bit_offset: 0
      bit_width: 8
      description: 'Receive Buffer Register

        By reading this register, the UART will return an 8-bit data received from
        Rx pin (LSB first).'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_THR
    addr: 0x40050000
    size_bits: 32
    description: Transmit Holding Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: THR
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Holding Register

        By writing to this register, the UART will send out an 8-bit data through
        the TX pin (LSB first).'
      read_allowed: false
      write_allowed: true
  - !Register
    name: UA_IER
    addr: 0x40050004
    size_bits: 32
    description: Interrupt Enable Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDA_IEN
      bit_offset: 0
      bit_width: 1
      description: 'Receive Data Available Interrupt Enable.

        0 = Mask off INT_RDA

        1 = Enable INT_RDA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: THRE_IEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Enable

        0 = Mask off INT_THRE

        1 = Enable INT_THRE'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RLS_IEN
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Status Interrupt Enable

        0 = Mask off INT_RLS

        1 = Enable INT_RLS'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODEM_IEN
      bit_offset: 3
      bit_width: 1
      description: 'Modem Status Interrupt Enable

        0 = Mask off INT_MODEM

        1 = Enable INT_MODEM'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTO_IEN
      bit_offset: 4
      bit_width: 1
      description: 'Rx Time out Interrupt Enable

        0 = Mask off INT_TOUT

        1 = Enable INT_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_ERR_IEN
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Enable

        0 = Mask off INT_Buf_ERR

        1 = Enable INT_Buf_ERR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKE_EN
      bit_offset: 6
      bit_width: 1
      description: 'Wake up CPU function enable

        0 = Disable UART wake up CPU function

        1 = Enable wake up function, when the system is in deep sleep mode, an external
        /CTS change will wake up CPU from deep sleep mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_BRK_IEN
      bit_offset: 8
      bit_width: 1
      description: 'LIN RX Break Field Detected Interrupt Enable

        0 = Mask off Lin bus Rx break filed interrupt.

        1 = Enable Lin bus Rx break filed interrupt.

        Note: This field is used for LIN function mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIME_OUT_EN
      bit_offset: 11
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable Time-out counter.

        0 = Disable Time-out counter.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_RTS_EN
      bit_offset: 12
      bit_width: 1
      description: 'RTS Auto Flow Control Enable

        1 = Enable RTS auto flow control.

        0 = Disable RTS auto flow control.

        When RTS auto-flow is enabled, if the number of bytes in the Rx FIFO equals
        the UA_FCR[RTS_Tri_Lev], the UART will de-assert RTS signal.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_CTS_EN
      bit_offset: 13
      bit_width: 1
      description: 'CTS Auto Flow Control Enable

        1 = Enable CTS auto flow control.

        0 = Disable CTS auto flow control.

        When CTS auto-flow is enabled, the UART will send data to external device
        when CTS input assert (UART will not send data to device until CTS is asserted).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_TX_EN
      bit_offset: 14
      bit_width: 1
      description: "TX DMA Enable \n1 = Enable TX DMA.\n0 = Disable TX DMA."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_RX_EN
      bit_offset: 15
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable RX DMA.

        0 = Disable RX DMA.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FCR
    addr: 0x40050008
    size_bits: 32
    description: FIFO Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RFR
      bit_offset: 1
      bit_width: 1
      description: 'Rx Field Software Reset

        When Rx_RST is set, all the bytes in the transmit FIFO and Rx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Rx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TFR
      bit_offset: 2
      bit_width: 1
      description: 'Tx Field Software Reset

        When Tx_RST is set, all the bytes in the transmit FIFO and Tx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Tx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFITL
      bit_offset: 4
      bit_width: 4
      description: "Rx FIFO Interrupt (INT_RDA) Trigger Level \nWhen the number of
        bytes in the receive FIFO equals the RFITL then the RDA_IF will be set (if
        IER [RDA_IEN] is enable, an interrupt will generated).\nRFITL\tINTR_RDA Trigger
        Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DIS
      bit_offset: 8
      bit_width: 1
      description: 'Receiver Disable register

        The receiver is disabled or not (set 1 is disable receiver)

        1 = Disable Receiver.

        0 = Enable Receiver.

        Note: This field is used for RS-485 Normal Multi-drop mode. It should be programmed
        before UA_ALT_CSR [RS-485_NMM] is programmed.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_TRI_LEV
      bit_offset: 16
      bit_width: 4
      description: "RTS Trigger Level for Auto-flow Control Use(not available in UART2
        channel)\nRTS_Tri_Lev\tTrigger Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_LCR
    addr: 0x4005000c
    size_bits: 32
    description: Line Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WLS
      bit_offset: 0
      bit_width: 2
      description: "Word Length Select\nWLS[1:0]\tCharacter length\t\n00\t5 bits\t\n01\t6
        bits\t\n10\t7 bits\t\n11\t8 bits\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: NSB
      bit_offset: 2
      bit_width: 1
      description: 'Number of "STOP bit"

        0= One "STOP bit" is generated in the transmitted data

        1= One and a half "STOP bit" is generated in the transmitted data when 5-bit
        word length is selected;

        Two "STOP bit" is generated when 6-, 7- and 8-bit word length is selected.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PBE
      bit_offset: 3
      bit_width: 1
      description: 'Parity Bit Enable

        0 = Parity bit is not generated (transmit data) or checked (receive data)
        during transfer.

        1 = Parity bit is generated or checked between the "last data word bit" and
        "stop bit" of the serial data.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPE
      bit_offset: 4
      bit_width: 1
      description: 'Even Parity Enable

        0 = Odd number of logic 1''s are transmitted or checked in the data word and
        parity bits.

        1 = Even number of logic 1''s are transmitted or checked in the data word
        and parity bits.

        This bit has effect only when bit 3 (parity bit enable) is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPE
      bit_offset: 5
      bit_width: 1
      description: "Stick Parity Enable \n0 = Disable stick parity \n1 = When bits
        PBE , EPE and SPE are set, the parity bit is transmitted and checked as cleared.
        When PBE and SPE are set and EPE is cleared, the parity bit is transmitted
        and checked as set."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCB
      bit_offset: 6
      bit_width: 1
      description: "Break Control Bit \nWhen this bit is set to logic 1, the serial
        data output (TX) is forced to the Spacing State (logic 0). This bit acts only
        on TX and has no effect on the transmitter logic."
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_MCR
    addr: 0x40050010
    size_bits: 32
    description: Modem Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RTS
      bit_offset: 1
      bit_width: 1
      description: 'RTS (Request-To-Send) Signal (not available in UART2 channel)

        0: Drive RTS pin to logic 1 (If the LEV_RTS set to low level triggered).

        1: Drive RTS pin to logic 0 (If the LEV_RTS set to low level triggered).

        0: Drive RTS pin to logic 0 (If the LEV_RTS set to hihg level triggered).

        1: Drive RTS pin to logic 1 (If the LEV_RTS set to high level triggered).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LEV_RTS
      bit_offset: 9
      bit_width: 1
      description: 'RTS Trigger Level (not available in UART2 channel)

        This bit can change the RTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_ST
      bit_offset: 13
      bit_width: 1
      description: 'RTS Pin State (not available in UART2 channel)

        This bit is the output pin status of RTS.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_MSR
    addr: 0x40050014
    size_bits: 32
    description: Modem Status Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DCTSF
      bit_offset: 0
      bit_width: 1
      description: 'Detect CTS State Change Flag (not available in UART2 channel)

        This bit is set whenever CTS input has change state, and it will generate
        Modem interrupt to CPU when UA_IER [Modem_IEN] is set to 1.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS_ST
      bit_offset: 4
      bit_width: 1
      description: 'CTS Pin Status (not available in UART2 channel)

        This bit is the pin status of CTS. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LEV_CTS
      bit_offset: 8
      bit_width: 1
      description: 'CTS Trigger Level (not available in UART2 channel)

        This bit can change the CTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FSR
    addr: 0x40050018
    size_bits: 32
    description: FIFO Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x10404000
    fields:
    - !Field
      name: RX_OVER_IF
      bit_offset: 0
      bit_width: 1
      description: "Rx overflow Error IF (Read Only) \nThis bit is set when Rx FIFO
        overflow.\nIf the number of bytes of received data is greater than Rx FIFO(UA_RBR)
        size, 64/16 bytes of (UA_RBR), this bit will be set.\nNOTE: This bit is read
        only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RS485_ADD_DETF
      bit_offset: 3
      bit_width: 1
      description: 'RS-485 Address Byte Detection Flag (Read Only) (Low Density Only)

        This bit is set to logic 1 and set UA_ALT_CSR [RS485_ADD_EN] whenever in RS-485
        mode the receiver detect any address byte received address byte character
        (bit9 = 1) bit, and it is reset whenever the CPU writes 1 to this bit.

        NOTE: This field is used for RS-485 function mode.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEF
      bit_offset: 4
      bit_width: 1
      description: 'Parity Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "parity bit", and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEF
      bit_offset: 5
      bit_width: 1
      description: 'Framing Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "stop bit" (that is, the stop bit following the last data bit or parity
        bit is detected as a logic 0), and is reset whenever the CPU writes 1 to this
        bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BIF
      bit_offset: 6
      bit_width: 1
      description: 'Break Interrupt Flag

        This bit is set to a logic 1 whenever the received data input(Rx) is held
        in the "spacing state" (logic 0) for longer than a full word transmission
        time (that is, the total time of "start bit" + data bits + parity + stop bits)
        and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_POINTER
      bit_offset: 8
      bit_width: 6
      description: 'Rx FIFO pointer (Read Only)

        This field indicates the Rx FIFO Buffer Pointer. When UART receives one byte
        from external device, Rx_Pointer increases one. When one byte of Rx FIFO is
        read by CPU, Rx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_EMPTY
      bit_offset: 14
      bit_width: 1
      description: 'Receiver FIFO Empty (Read Only)

        This bit initiate Rx FIFO empty or not.

        When the last byte of Rx FIFO has been read by CPU, hardware sets this bit
        high. It will be cleared when UART receives any new data.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_FULL
      bit_offset: 15
      bit_width: 1
      description: 'Receiver FIFO Full (Read Only)

        This bit initiates Rx FIFO full or not.

        This bit is set when RX_POINTER is equal to 64/16(UART0/UART1), otherwise
        is cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_POINTER
      bit_offset: 16
      bit_width: 6
      description: 'TX FIFO Pointer (Read Only)

        This field indicates the Tx FIFO Buffer Pointer. When CPU write one byte into
        UA_THR, Tx_Pointer increases one. When one byte of Tx FIFO is transferred
        to Transmitter Shift Register, Tx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_EMPTY
      bit_offset: 22
      bit_width: 1
      description: 'Transmitter FIFO Empty (Read Only)

        This bit indicates Tx FIFO empty or not.

        When the last byte of Tx FIFO has been transferred to Transmitter Shift Register,
        hardware sets this bit high. It will be cleared when writing data into THR
        (Tx FIFO not empty).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_FULL
      bit_offset: 23
      bit_width: 1
      description: 'Transmitter FIFO Full (Read Only)

        This bit indicates Tx FIFO full or not.

        This bit is set when Tx_Point is equal to 64/16(UART0/UART1), otherwise is
        cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_OVER_IF
      bit_offset: 24
      bit_width: 1
      description: "Tx Overflow Error Interrupt Flag (Read Only)\nIf Tx FIFO(UA_THR)
        is full, an additional write to UA_THR will cause this bit to logic 1. \nNOTE:
        This bit is read only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TE_FLAG
      bit_offset: 28
      bit_width: 1
      description: 'Transmitter Empty Flag (Read Only)

        Bit is set by hardware when Tx FIFO(UA_THR) is empty and the STOP bit of the
        last byte has been transmitted.

        Bit is cleared automatically when Tx FIFO is not empty or the last byte transmission
        has not completed.

        NOTE: This bit is read only. '
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_ISR
    addr: 0x4005001c
    size_bits: 32
    description: Interrupt Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x2
    fields:
    - !Field
      name: RDA_IF
      bit_offset: 0
      bit_width: 1
      description: "Receive Data Available Interrupt Flag (Read Only).\nWhen the number
        of bytes in the Rx FIFO equals the RFITL then the RDA_IF will be set. If IER[RDA_IEN]
        is enabled, the RDA interrupt will be generated. \nNOTE: This bit is read
        only and it will be cleared when the number of unread bytes of Rx FIFO drops
        below the threshold level (RFITL)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_IF
      bit_offset: 1
      bit_width: 1
      description: "Transmit Holding Register Empty Interrupt Flag (Read Only). \nThis
        bit is set when the last data of TX FIFO is transferred to Transmitter Shift
        Register. If UA_IER[THRE_IEN] is enabled, the THRE interrupt will be generated.\nNOTE:
        This bit is read only and it will be cleared when writing data into THR (TX
        FIFO not empty)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_IF
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Interrupt Flag (Read Only).

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.

        NOTE: When in RS-485 function mode, this field include "receiver detect any
        address byte received address byte character (bit9 = 1'') bit. "'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_IF
      bit_offset: 3
      bit_width: 1
      description: 'MODEM Interrupt Flag (Read Only) (not available in UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if UA_IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_IF
      bit_offset: 4
      bit_width: 1
      description: "Time Out Interrupt Flag (Read Only)\nThis bit is set when the
        RX FIFO is not empty and no activities occurres in the RX FIFO and the time
        out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout interrupt
        will be generated. \nNOTE: This bit is read only and user can read UA_RBR
        (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_IF
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Flag (Read Only)

        This bit is set when the TX or RX FIFO overflows (TX_Over_IF or RX_Over_IF
        is set). When BUF_ERR_IF is set, the transfer maybe is not correct. If UA_IER[BUF_ERR_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both TX_OVER_IF and RX_OVER_IF are cleared. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_IF
      bit_offset: 7
      bit_width: 1
      description: 'LIN Bus RX Break Field Detected Flag

        This bit is set when RX received LIN Break Field. If UA_IER[LIN_RX_BRK_IEN]
        is enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RDA_INT
      bit_offset: 8
      bit_width: 1
      description: 'Receive Data Available Interrupt Indicator (INT_RDA).

        This bit is set if RDA_IEN and RDA_IF are both set to 1.

        1 = The RDA interrupt is generated.

        0 = No RDA interrupt is generated .'
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_INT
      bit_offset: 9
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Indicator (INT_THRE).

        This bit is set if THRE_IEN and THRE_IF are both set to 1.

        1 = The THRE interrupt is generated.

        0 = No THRE interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_INT
      bit_offset: 10
      bit_width: 1
      description: 'Receive Line Status Interrupt Indicator to (INT_RLS).

        This bit is set if RLS_IEN and RLS_IF are both set to 1.

        1 = The RLS interrupt is generated.

        0 = No RLS interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_INT
      bit_offset: 11
      bit_width: 1
      description: 'MODEM Status Interrupt Indicator to (INT_MOS).

        This bit is set if MODEM_IEN and MODEM_IF are both set to 1..

        1 = The Modem interrupt is generated.

        0 = No Modem interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_INT
      bit_offset: 12
      bit_width: 1
      description: 'Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated.

        0 = No Tout interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_INT
      bit_offset: 13
      bit_width: 1
      description: 'Buffer Error Interrupt Indicator (INT_Buf_err)

        This bit is set if BUF_ERR_IEN and BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated.

        0 = No buffer error interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_INT
      bit_offset: 15
      bit_width: 1
      description: "LIN Bus Rx Break Field Detected Interrupt Indicator \nThis bit
        is set if LIN_RX_BRK_IEN and LIN_RX_BREAK_IF are both set to 1.\n1 = The LIN
        RX Break interrupt is generated.\n0 = No LIN RX Break interrupt is generated."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_IF
      bit_offset: 18
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Flag (Read Only)

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_IF
      bit_offset: 19
      bit_width: 1
      description: 'In DMA mode, MODEM Interrupt Flag (Read Only) (not available in
        UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_IF
      bit_offset: 20
      bit_width: 1
      description: "In DMA mode, Time out Interrupt Flag (Read Only)\nThis bit is
        set when the Rx FIFO is not empty and no activities occurres in the Rx FIFO
        and the time out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout
        interrupt will be generated. \nNOTE: This bit is read only and user can read
        UA_RBR (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_IF
      bit_offset: 21
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Flag (Read Only)

        This bit is set when the Tx or Rx FIFO overflows (Tx_Over_IF or Rx_Over_IF
        is set). When Buf_Err_IF is set, the transfer maybe is not correct. If IER[Buf_Err_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both Tx_Over_IF and Rx_Over_IF are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_IF
      bit_offset: 23
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detect Interrupt Flag

        This bit is set when Rx received LIN Break Field. If IER[LIN_RX_BRK_IEN] is
        enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_INT
      bit_offset: 26
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Interrupt Indicator (INT_RLS).

        This bit is set if RLS_IEN and HW_RLS_IF are both set to 1.

        1 = The RLS interrupt is generated in DMA mode.

        0 = No RLS interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_INT
      bit_offset: 27
      bit_width: 1
      description: 'In DMA mode, MODEM Status Interrupt Indicator (INT_MOS)(not available
        in UART2 channel).

        This bit is set if MODEM_IEN and HW_MODEM_IF are both set to 1.

        1 = The Modem interrupt is generated in DMA mode.

        0 = No Modem interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_INT
      bit_offset: 28
      bit_width: 1
      description: 'In DMA mode, Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and HW_TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated in DMA mode.

        0 = No Tout interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_INT
      bit_offset: 29
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Indicator(INT_Buf_err)

        This bit is set if BUF_ERR_IEN and HW_BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated in DMA mode.

        0 = No buffer error interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_INT
      bit_offset: 31
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detected Interrupt Indicator

        This bit is set if LIN_RX_BRK_IEN and HW_LIN_RX_BREAK_IF are both set to 1.

        1 = The LIN RX Break interrupt is generated in DMA mode.

        0 = No LIN RX Break interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_TOR
    addr: 0x40050020
    size_bits: 32
    description: Time Out Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TOIC
      bit_offset: 0
      bit_width: 7
      description: 'Time Out Interrupt Comparator

        The time out counter resets and starts counting (the counting clock = baud
        rate) whenever the RX FIFO receives a new data word. Once the content of time
        out counter (TOUT_CNT) is equal to that of time out interrupt comparator (TOIC),
        a receiver time out interrupt (INTR_TOUT) is generated if UA_IER [RTO_IEN].
        A new incoming data word or RX FIFO empty clears INTR_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DLY
      bit_offset: 8
      bit_width: 8
      description: 'TX Delay time value (Low Density Only)

        This field is use to programming the transfer delay time between the last
        stop bit and next start bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_BAUD
    addr: 0x40050024
    size_bits: 32
    description: Baud Rate Divisor Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: BRD
      bit_offset: 0
      bit_width: 16
      description: "Baud Rate Divider \nThe field indicated the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER_X
      bit_offset: 24
      bit_width: 4
      description: 'Divider X

        The baud rate divider M = X+1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_ONE
      bit_offset: 28
      bit_width: 1
      description: "Divider X equal 1\n0 = Divider M = X (the equation of M = X+1,
        but Divider_X[27:24] must > =8)\n1 = Divider M = 1 (the equation of M = 1,
        but BRD[15:0] must >=3).\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X \tBRD \tBaud
        rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1 \tEnable
        \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't Care\tA\tUART_CLK
        / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_EN
      bit_offset: 29
      bit_width: 1
      description: "Divider X Enable\nThe BRD = Baud Rate Divider, and the baud rate
        equation is \nBaud Rate = Clock / [ M * (BRD + 2) ] ; The default value of
        M is 16.\n0 = Disable divider X (the equation of M = 16)\n1 = Enable divider
        X (the equation of M = X+1, but Divider_X[27:24 must > =8).\nNOTE: When in
        IrDA mode, this bit must disable.\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X
        \tBRD \tBaud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1
        \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't
        Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_IRCR
    addr: 0x40050028
    size_bits: 32
    description: IrDA Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: TX_SELECT
      bit_offset: 1
      bit_width: 1
      description: 'Enable IrDA Receiver

        1: Enable IrDA transmitter

        0: Enable IrDA receiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_TX
      bit_offset: 5
      bit_width: 1
      description: 'INV_TX

        1= Inverse TX output signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_RX
      bit_offset: 6
      bit_width: 1
      description: 'INV_RX

        1= Inverse RX input signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_ALT_CSR
    addr: 0x4005002c
    size_bits: 32
    description: LIN Break Failed Count Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: UA_LIN_BKFL
      bit_offset: 0
      bit_width: 4
      description: 'UART LIN Break Field Length

        This field indicates a 4-bit LIN TX break field count.

        NOTE: This break field length is UA_LIN_BKFL + 2'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_EN
      bit_offset: 6
      bit_width: 1
      description: 'LIN RX Enable

        1 = Enable LIN RX mode.

        0 = Disable LIN RX mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_TX_EN
      bit_offset: 7
      bit_width: 1
      description: 'LIN TX Break Mode Enable

        1 = Enable LIN TX Break mode.

        0 = Disable LIN TX Break mode.

        NOTE: When TX break field transfer operation finish, this will be cleared
        automatically.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_NMM
      bit_offset: 8
      bit_width: 1
      description: 'RS-485 Normal Multi-drop Operation Mode (NMM) (Low Density Only)

        1 = Enable RS-485 Normal Multi-drop Operation Mode (NMM).

        0 = Disable RS-485 Normal Multi-drop Operation Mode (NMM).

        Note: It can''t be active with RS485_AAD operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AAD
      bit_offset: 9
      bit_width: 1
      description: 'RS-485 Auto Address Detection Operation Mode (AAD) (Low Density
        Only)

        1 = Enable RS-485 Auto Address Detection Operation Mode (AAD).

        0 = Disable RS-485 Auto Address Detection Operation Mode (AAD).

        Note: It can''t be active with RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AUD
      bit_offset: 10
      bit_width: 1
      description: 'RS-485 Auto Direction Mode (AUD) (Low Density Only)

        1 = Enable RS-485 Auto Direction Operation Mode (AUO).

        0 = Disable RS-485 Auto Direction Operation Mode (AUO).

        Note:This field is used for RS-485 any operation mode.

        Note: It can be active with RS-485_AAD or RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_ADD_EN
      bit_offset: 15
      bit_width: 1
      description: 'RS-485 Address Detection Enable (Low Density Only)

        1 = Enable address detection mode.

        0 = Disable address detection mode.

        Note: This field is used for RS485 any operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDR_MATCH
      bit_offset: 24
      bit_width: 8
      description: 'Address match value register (Low Density Only)

        This field contains the RS-485 address match values.

        Note: This field is used for RS-485 auto address detection mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FUN_SEL
    addr: 0x40050030
    size_bits: 32
    description: Function Select Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FUN_SEL
      bit_offset: 0
      bit_width: 2
      description: 'Function Select Enable

        00 = UART Function

        01 = Enable LIN Function

        10 = Enable IrDA Function

        11 = Enable RS-485 Function (Low Density Only)'
      read_allowed: true
      write_allowed: true
- !Module
  name: UART1
  description: Registers group
  base_addr: 0x40150000
  size: 0x34
  registers:
  - !Register
    name: UA_RBR
    addr: 0x40150000
    size_bits: 32
    description: Receive Buffer Register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RBR
      bit_offset: 0
      bit_width: 8
      description: 'Receive Buffer Register

        By reading this register, the UART will return an 8-bit data received from
        Rx pin (LSB first).'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_THR
    addr: 0x40150000
    size_bits: 32
    description: Transmit Holding Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: THR
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Holding Register

        By writing to this register, the UART will send out an 8-bit data through
        the TX pin (LSB first).'
      read_allowed: false
      write_allowed: true
  - !Register
    name: UA_IER
    addr: 0x40150004
    size_bits: 32
    description: Interrupt Enable Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDA_IEN
      bit_offset: 0
      bit_width: 1
      description: 'Receive Data Available Interrupt Enable.

        0 = Mask off INT_RDA

        1 = Enable INT_RDA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: THRE_IEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Enable

        0 = Mask off INT_THRE

        1 = Enable INT_THRE'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RLS_IEN
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Status Interrupt Enable

        0 = Mask off INT_RLS

        1 = Enable INT_RLS'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODEM_IEN
      bit_offset: 3
      bit_width: 1
      description: 'Modem Status Interrupt Enable

        0 = Mask off INT_MODEM

        1 = Enable INT_MODEM'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTO_IEN
      bit_offset: 4
      bit_width: 1
      description: 'Rx Time out Interrupt Enable

        0 = Mask off INT_TOUT

        1 = Enable INT_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_ERR_IEN
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Enable

        0 = Mask off INT_Buf_ERR

        1 = Enable INT_Buf_ERR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKE_EN
      bit_offset: 6
      bit_width: 1
      description: 'Wake up CPU function enable

        0 = Disable UART wake up CPU function

        1 = Enable wake up function, when the system is in deep sleep mode, an external
        /CTS change will wake up CPU from deep sleep mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_BRK_IEN
      bit_offset: 8
      bit_width: 1
      description: 'LIN RX Break Field Detected Interrupt Enable

        0 = Mask off Lin bus Rx break filed interrupt.

        1 = Enable Lin bus Rx break filed interrupt.

        Note: This field is used for LIN function mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIME_OUT_EN
      bit_offset: 11
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable Time-out counter.

        0 = Disable Time-out counter.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_RTS_EN
      bit_offset: 12
      bit_width: 1
      description: 'RTS Auto Flow Control Enable

        1 = Enable RTS auto flow control.

        0 = Disable RTS auto flow control.

        When RTS auto-flow is enabled, if the number of bytes in the Rx FIFO equals
        the UA_FCR[RTS_Tri_Lev], the UART will de-assert RTS signal.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_CTS_EN
      bit_offset: 13
      bit_width: 1
      description: 'CTS Auto Flow Control Enable

        1 = Enable CTS auto flow control.

        0 = Disable CTS auto flow control.

        When CTS auto-flow is enabled, the UART will send data to external device
        when CTS input assert (UART will not send data to device until CTS is asserted).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_TX_EN
      bit_offset: 14
      bit_width: 1
      description: "TX DMA Enable \n1 = Enable TX DMA.\n0 = Disable TX DMA."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_RX_EN
      bit_offset: 15
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable RX DMA.

        0 = Disable RX DMA.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FCR
    addr: 0x40150008
    size_bits: 32
    description: FIFO Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RFR
      bit_offset: 1
      bit_width: 1
      description: 'Rx Field Software Reset

        When Rx_RST is set, all the bytes in the transmit FIFO and Rx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Rx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TFR
      bit_offset: 2
      bit_width: 1
      description: 'Tx Field Software Reset

        When Tx_RST is set, all the bytes in the transmit FIFO and Tx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Tx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFITL
      bit_offset: 4
      bit_width: 4
      description: "Rx FIFO Interrupt (INT_RDA) Trigger Level \nWhen the number of
        bytes in the receive FIFO equals the RFITL then the RDA_IF will be set (if
        IER [RDA_IEN] is enable, an interrupt will generated).\nRFITL\tINTR_RDA Trigger
        Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DIS
      bit_offset: 8
      bit_width: 1
      description: 'Receiver Disable register

        The receiver is disabled or not (set 1 is disable receiver)

        1 = Disable Receiver.

        0 = Enable Receiver.

        Note: This field is used for RS-485 Normal Multi-drop mode. It should be programmed
        before UA_ALT_CSR [RS-485_NMM] is programmed.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_TRI_LEV
      bit_offset: 16
      bit_width: 4
      description: "RTS Trigger Level for Auto-flow Control Use(not available in UART2
        channel)\nRTS_Tri_Lev\tTrigger Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_LCR
    addr: 0x4015000c
    size_bits: 32
    description: Line Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WLS
      bit_offset: 0
      bit_width: 2
      description: "Word Length Select\nWLS[1:0]\tCharacter length\t\n00\t5 bits\t\n01\t6
        bits\t\n10\t7 bits\t\n11\t8 bits\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: NSB
      bit_offset: 2
      bit_width: 1
      description: 'Number of "STOP bit"

        0= One "STOP bit" is generated in the transmitted data

        1= One and a half "STOP bit" is generated in the transmitted data when 5-bit
        word length is selected;

        Two "STOP bit" is generated when 6-, 7- and 8-bit word length is selected.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PBE
      bit_offset: 3
      bit_width: 1
      description: 'Parity Bit Enable

        0 = Parity bit is not generated (transmit data) or checked (receive data)
        during transfer.

        1 = Parity bit is generated or checked between the "last data word bit" and
        "stop bit" of the serial data.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPE
      bit_offset: 4
      bit_width: 1
      description: 'Even Parity Enable

        0 = Odd number of logic 1''s are transmitted or checked in the data word and
        parity bits.

        1 = Even number of logic 1''s are transmitted or checked in the data word
        and parity bits.

        This bit has effect only when bit 3 (parity bit enable) is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPE
      bit_offset: 5
      bit_width: 1
      description: "Stick Parity Enable \n0 = Disable stick parity \n1 = When bits
        PBE , EPE and SPE are set, the parity bit is transmitted and checked as cleared.
        When PBE and SPE are set and EPE is cleared, the parity bit is transmitted
        and checked as set."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCB
      bit_offset: 6
      bit_width: 1
      description: "Break Control Bit \nWhen this bit is set to logic 1, the serial
        data output (TX) is forced to the Spacing State (logic 0). This bit acts only
        on TX and has no effect on the transmitter logic."
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_MCR
    addr: 0x40150010
    size_bits: 32
    description: Modem Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RTS
      bit_offset: 1
      bit_width: 1
      description: 'RTS (Request-To-Send) Signal (not available in UART2 channel)

        0: Drive RTS pin to logic 1 (If the LEV_RTS set to low level triggered).

        1: Drive RTS pin to logic 0 (If the LEV_RTS set to low level triggered).

        0: Drive RTS pin to logic 0 (If the LEV_RTS set to hihg level triggered).

        1: Drive RTS pin to logic 1 (If the LEV_RTS set to high level triggered).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LEV_RTS
      bit_offset: 9
      bit_width: 1
      description: 'RTS Trigger Level (not available in UART2 channel)

        This bit can change the RTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_ST
      bit_offset: 13
      bit_width: 1
      description: 'RTS Pin State (not available in UART2 channel)

        This bit is the output pin status of RTS.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_MSR
    addr: 0x40150014
    size_bits: 32
    description: Modem Status Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DCTSF
      bit_offset: 0
      bit_width: 1
      description: 'Detect CTS State Change Flag (not available in UART2 channel)

        This bit is set whenever CTS input has change state, and it will generate
        Modem interrupt to CPU when UA_IER [Modem_IEN] is set to 1.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS_ST
      bit_offset: 4
      bit_width: 1
      description: 'CTS Pin Status (not available in UART2 channel)

        This bit is the pin status of CTS. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LEV_CTS
      bit_offset: 8
      bit_width: 1
      description: 'CTS Trigger Level (not available in UART2 channel)

        This bit can change the CTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FSR
    addr: 0x40150018
    size_bits: 32
    description: FIFO Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x10404000
    fields:
    - !Field
      name: RX_OVER_IF
      bit_offset: 0
      bit_width: 1
      description: "Rx overflow Error IF (Read Only) \nThis bit is set when Rx FIFO
        overflow.\nIf the number of bytes of received data is greater than Rx FIFO(UA_RBR)
        size, 64/16 bytes of (UA_RBR), this bit will be set.\nNOTE: This bit is read
        only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RS485_ADD_DETF
      bit_offset: 3
      bit_width: 1
      description: 'RS-485 Address Byte Detection Flag (Read Only) (Low Density Only)

        This bit is set to logic 1 and set UA_ALT_CSR [RS485_ADD_EN] whenever in RS-485
        mode the receiver detect any address byte received address byte character
        (bit9 = 1) bit, and it is reset whenever the CPU writes 1 to this bit.

        NOTE: This field is used for RS-485 function mode.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEF
      bit_offset: 4
      bit_width: 1
      description: 'Parity Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "parity bit", and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEF
      bit_offset: 5
      bit_width: 1
      description: 'Framing Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "stop bit" (that is, the stop bit following the last data bit or parity
        bit is detected as a logic 0), and is reset whenever the CPU writes 1 to this
        bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BIF
      bit_offset: 6
      bit_width: 1
      description: 'Break Interrupt Flag

        This bit is set to a logic 1 whenever the received data input(Rx) is held
        in the "spacing state" (logic 0) for longer than a full word transmission
        time (that is, the total time of "start bit" + data bits + parity + stop bits)
        and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_POINTER
      bit_offset: 8
      bit_width: 6
      description: 'Rx FIFO pointer (Read Only)

        This field indicates the Rx FIFO Buffer Pointer. When UART receives one byte
        from external device, Rx_Pointer increases one. When one byte of Rx FIFO is
        read by CPU, Rx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_EMPTY
      bit_offset: 14
      bit_width: 1
      description: 'Receiver FIFO Empty (Read Only)

        This bit initiate Rx FIFO empty or not.

        When the last byte of Rx FIFO has been read by CPU, hardware sets this bit
        high. It will be cleared when UART receives any new data.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_FULL
      bit_offset: 15
      bit_width: 1
      description: 'Receiver FIFO Full (Read Only)

        This bit initiates Rx FIFO full or not.

        This bit is set when RX_POINTER is equal to 64/16(UART0/UART1), otherwise
        is cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_POINTER
      bit_offset: 16
      bit_width: 6
      description: 'TX FIFO Pointer (Read Only)

        This field indicates the Tx FIFO Buffer Pointer. When CPU write one byte into
        UA_THR, Tx_Pointer increases one. When one byte of Tx FIFO is transferred
        to Transmitter Shift Register, Tx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_EMPTY
      bit_offset: 22
      bit_width: 1
      description: 'Transmitter FIFO Empty (Read Only)

        This bit indicates Tx FIFO empty or not.

        When the last byte of Tx FIFO has been transferred to Transmitter Shift Register,
        hardware sets this bit high. It will be cleared when writing data into THR
        (Tx FIFO not empty).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_FULL
      bit_offset: 23
      bit_width: 1
      description: 'Transmitter FIFO Full (Read Only)

        This bit indicates Tx FIFO full or not.

        This bit is set when Tx_Point is equal to 64/16(UART0/UART1), otherwise is
        cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_OVER_IF
      bit_offset: 24
      bit_width: 1
      description: "Tx Overflow Error Interrupt Flag (Read Only)\nIf Tx FIFO(UA_THR)
        is full, an additional write to UA_THR will cause this bit to logic 1. \nNOTE:
        This bit is read only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TE_FLAG
      bit_offset: 28
      bit_width: 1
      description: 'Transmitter Empty Flag (Read Only)

        Bit is set by hardware when Tx FIFO(UA_THR) is empty and the STOP bit of the
        last byte has been transmitted.

        Bit is cleared automatically when Tx FIFO is not empty or the last byte transmission
        has not completed.

        NOTE: This bit is read only. '
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_ISR
    addr: 0x4015001c
    size_bits: 32
    description: Interrupt Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x2
    fields:
    - !Field
      name: RDA_IF
      bit_offset: 0
      bit_width: 1
      description: "Receive Data Available Interrupt Flag (Read Only).\nWhen the number
        of bytes in the Rx FIFO equals the RFITL then the RDA_IF will be set. If IER[RDA_IEN]
        is enabled, the RDA interrupt will be generated. \nNOTE: This bit is read
        only and it will be cleared when the number of unread bytes of Rx FIFO drops
        below the threshold level (RFITL)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_IF
      bit_offset: 1
      bit_width: 1
      description: "Transmit Holding Register Empty Interrupt Flag (Read Only). \nThis
        bit is set when the last data of TX FIFO is transferred to Transmitter Shift
        Register. If UA_IER[THRE_IEN] is enabled, the THRE interrupt will be generated.\nNOTE:
        This bit is read only and it will be cleared when writing data into THR (TX
        FIFO not empty)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_IF
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Interrupt Flag (Read Only).

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.

        NOTE: When in RS-485 function mode, this field include "receiver detect any
        address byte received address byte character (bit9 = 1'') bit. "'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_IF
      bit_offset: 3
      bit_width: 1
      description: 'MODEM Interrupt Flag (Read Only) (not available in UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if UA_IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_IF
      bit_offset: 4
      bit_width: 1
      description: "Time Out Interrupt Flag (Read Only)\nThis bit is set when the
        RX FIFO is not empty and no activities occurres in the RX FIFO and the time
        out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout interrupt
        will be generated. \nNOTE: This bit is read only and user can read UA_RBR
        (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_IF
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Flag (Read Only)

        This bit is set when the TX or RX FIFO overflows (TX_Over_IF or RX_Over_IF
        is set). When BUF_ERR_IF is set, the transfer maybe is not correct. If UA_IER[BUF_ERR_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both TX_OVER_IF and RX_OVER_IF are cleared. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_IF
      bit_offset: 7
      bit_width: 1
      description: 'LIN Bus RX Break Field Detected Flag

        This bit is set when RX received LIN Break Field. If UA_IER[LIN_RX_BRK_IEN]
        is enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RDA_INT
      bit_offset: 8
      bit_width: 1
      description: 'Receive Data Available Interrupt Indicator (INT_RDA).

        This bit is set if RDA_IEN and RDA_IF are both set to 1.

        1 = The RDA interrupt is generated.

        0 = No RDA interrupt is generated .'
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_INT
      bit_offset: 9
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Indicator (INT_THRE).

        This bit is set if THRE_IEN and THRE_IF are both set to 1.

        1 = The THRE interrupt is generated.

        0 = No THRE interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_INT
      bit_offset: 10
      bit_width: 1
      description: 'Receive Line Status Interrupt Indicator to (INT_RLS).

        This bit is set if RLS_IEN and RLS_IF are both set to 1.

        1 = The RLS interrupt is generated.

        0 = No RLS interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_INT
      bit_offset: 11
      bit_width: 1
      description: 'MODEM Status Interrupt Indicator to (INT_MOS).

        This bit is set if MODEM_IEN and MODEM_IF are both set to 1..

        1 = The Modem interrupt is generated.

        0 = No Modem interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_INT
      bit_offset: 12
      bit_width: 1
      description: 'Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated.

        0 = No Tout interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_INT
      bit_offset: 13
      bit_width: 1
      description: 'Buffer Error Interrupt Indicator (INT_Buf_err)

        This bit is set if BUF_ERR_IEN and BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated.

        0 = No buffer error interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_INT
      bit_offset: 15
      bit_width: 1
      description: "LIN Bus Rx Break Field Detected Interrupt Indicator \nThis bit
        is set if LIN_RX_BRK_IEN and LIN_RX_BREAK_IF are both set to 1.\n1 = The LIN
        RX Break interrupt is generated.\n0 = No LIN RX Break interrupt is generated."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_IF
      bit_offset: 18
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Flag (Read Only)

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_IF
      bit_offset: 19
      bit_width: 1
      description: 'In DMA mode, MODEM Interrupt Flag (Read Only) (not available in
        UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_IF
      bit_offset: 20
      bit_width: 1
      description: "In DMA mode, Time out Interrupt Flag (Read Only)\nThis bit is
        set when the Rx FIFO is not empty and no activities occurres in the Rx FIFO
        and the time out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout
        interrupt will be generated. \nNOTE: This bit is read only and user can read
        UA_RBR (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_IF
      bit_offset: 21
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Flag (Read Only)

        This bit is set when the Tx or Rx FIFO overflows (Tx_Over_IF or Rx_Over_IF
        is set). When Buf_Err_IF is set, the transfer maybe is not correct. If IER[Buf_Err_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both Tx_Over_IF and Rx_Over_IF are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_IF
      bit_offset: 23
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detect Interrupt Flag

        This bit is set when Rx received LIN Break Field. If IER[LIN_RX_BRK_IEN] is
        enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_INT
      bit_offset: 26
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Interrupt Indicator (INT_RLS).

        This bit is set if RLS_IEN and HW_RLS_IF are both set to 1.

        1 = The RLS interrupt is generated in DMA mode.

        0 = No RLS interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_INT
      bit_offset: 27
      bit_width: 1
      description: 'In DMA mode, MODEM Status Interrupt Indicator (INT_MOS)(not available
        in UART2 channel).

        This bit is set if MODEM_IEN and HW_MODEM_IF are both set to 1.

        1 = The Modem interrupt is generated in DMA mode.

        0 = No Modem interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_INT
      bit_offset: 28
      bit_width: 1
      description: 'In DMA mode, Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and HW_TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated in DMA mode.

        0 = No Tout interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_INT
      bit_offset: 29
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Indicator(INT_Buf_err)

        This bit is set if BUF_ERR_IEN and HW_BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated in DMA mode.

        0 = No buffer error interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_INT
      bit_offset: 31
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detected Interrupt Indicator

        This bit is set if LIN_RX_BRK_IEN and HW_LIN_RX_BREAK_IF are both set to 1.

        1 = The LIN RX Break interrupt is generated in DMA mode.

        0 = No LIN RX Break interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_TOR
    addr: 0x40150020
    size_bits: 32
    description: Time Out Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TOIC
      bit_offset: 0
      bit_width: 7
      description: 'Time Out Interrupt Comparator

        The time out counter resets and starts counting (the counting clock = baud
        rate) whenever the RX FIFO receives a new data word. Once the content of time
        out counter (TOUT_CNT) is equal to that of time out interrupt comparator (TOIC),
        a receiver time out interrupt (INTR_TOUT) is generated if UA_IER [RTO_IEN].
        A new incoming data word or RX FIFO empty clears INTR_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DLY
      bit_offset: 8
      bit_width: 8
      description: 'TX Delay time value (Low Density Only)

        This field is use to programming the transfer delay time between the last
        stop bit and next start bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_BAUD
    addr: 0x40150024
    size_bits: 32
    description: Baud Rate Divisor Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: BRD
      bit_offset: 0
      bit_width: 16
      description: "Baud Rate Divider \nThe field indicated the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER_X
      bit_offset: 24
      bit_width: 4
      description: 'Divider X

        The baud rate divider M = X+1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_ONE
      bit_offset: 28
      bit_width: 1
      description: "Divider X equal 1\n0 = Divider M = X (the equation of M = X+1,
        but Divider_X[27:24] must > =8)\n1 = Divider M = 1 (the equation of M = 1,
        but BRD[15:0] must >=3).\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X \tBRD \tBaud
        rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1 \tEnable
        \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't Care\tA\tUART_CLK
        / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_EN
      bit_offset: 29
      bit_width: 1
      description: "Divider X Enable\nThe BRD = Baud Rate Divider, and the baud rate
        equation is \nBaud Rate = Clock / [ M * (BRD + 2) ] ; The default value of
        M is 16.\n0 = Disable divider X (the equation of M = 16)\n1 = Enable divider
        X (the equation of M = X+1, but Divider_X[27:24 must > =8).\nNOTE: When in
        IrDA mode, this bit must disable.\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X
        \tBRD \tBaud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1
        \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't
        Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_IRCR
    addr: 0x40150028
    size_bits: 32
    description: IrDA Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: TX_SELECT
      bit_offset: 1
      bit_width: 1
      description: 'Enable IrDA Receiver

        1: Enable IrDA transmitter

        0: Enable IrDA receiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_TX
      bit_offset: 5
      bit_width: 1
      description: 'INV_TX

        1= Inverse TX output signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_RX
      bit_offset: 6
      bit_width: 1
      description: 'INV_RX

        1= Inverse RX input signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_ALT_CSR
    addr: 0x4015002c
    size_bits: 32
    description: LIN Break Failed Count Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: UA_LIN_BKFL
      bit_offset: 0
      bit_width: 4
      description: 'UART LIN Break Field Length

        This field indicates a 4-bit LIN TX break field count.

        NOTE: This break field length is UA_LIN_BKFL + 2'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_EN
      bit_offset: 6
      bit_width: 1
      description: 'LIN RX Enable

        1 = Enable LIN RX mode.

        0 = Disable LIN RX mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_TX_EN
      bit_offset: 7
      bit_width: 1
      description: 'LIN TX Break Mode Enable

        1 = Enable LIN TX Break mode.

        0 = Disable LIN TX Break mode.

        NOTE: When TX break field transfer operation finish, this will be cleared
        automatically.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_NMM
      bit_offset: 8
      bit_width: 1
      description: 'RS-485 Normal Multi-drop Operation Mode (NMM) (Low Density Only)

        1 = Enable RS-485 Normal Multi-drop Operation Mode (NMM).

        0 = Disable RS-485 Normal Multi-drop Operation Mode (NMM).

        Note: It can''t be active with RS485_AAD operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AAD
      bit_offset: 9
      bit_width: 1
      description: 'RS-485 Auto Address Detection Operation Mode (AAD) (Low Density
        Only)

        1 = Enable RS-485 Auto Address Detection Operation Mode (AAD).

        0 = Disable RS-485 Auto Address Detection Operation Mode (AAD).

        Note: It can''t be active with RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AUD
      bit_offset: 10
      bit_width: 1
      description: 'RS-485 Auto Direction Mode (AUD) (Low Density Only)

        1 = Enable RS-485 Auto Direction Operation Mode (AUO).

        0 = Disable RS-485 Auto Direction Operation Mode (AUO).

        Note:This field is used for RS-485 any operation mode.

        Note: It can be active with RS-485_AAD or RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_ADD_EN
      bit_offset: 15
      bit_width: 1
      description: 'RS-485 Address Detection Enable (Low Density Only)

        1 = Enable address detection mode.

        0 = Disable address detection mode.

        Note: This field is used for RS485 any operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDR_MATCH
      bit_offset: 24
      bit_width: 8
      description: 'Address match value register (Low Density Only)

        This field contains the RS-485 address match values.

        Note: This field is used for RS-485 auto address detection mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FUN_SEL
    addr: 0x40150030
    size_bits: 32
    description: Function Select Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FUN_SEL
      bit_offset: 0
      bit_width: 2
      description: 'Function Select Enable

        00 = UART Function

        01 = Enable LIN Function

        10 = Enable IrDA Function

        11 = Enable RS-485 Function (Low Density Only)'
      read_allowed: true
      write_allowed: true
- !Module
  name: UART2
  description: Registers group
  base_addr: 0x40154000
  size: 0x34
  registers:
  - !Register
    name: UA_RBR
    addr: 0x40154000
    size_bits: 32
    description: Receive Buffer Register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RBR
      bit_offset: 0
      bit_width: 8
      description: 'Receive Buffer Register

        By reading this register, the UART will return an 8-bit data received from
        Rx pin (LSB first).'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_THR
    addr: 0x40154000
    size_bits: 32
    description: Transmit Holding Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: THR
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Holding Register

        By writing to this register, the UART will send out an 8-bit data through
        the TX pin (LSB first).'
      read_allowed: false
      write_allowed: true
  - !Register
    name: UA_IER
    addr: 0x40154004
    size_bits: 32
    description: Interrupt Enable Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDA_IEN
      bit_offset: 0
      bit_width: 1
      description: 'Receive Data Available Interrupt Enable.

        0 = Mask off INT_RDA

        1 = Enable INT_RDA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: THRE_IEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Enable

        0 = Mask off INT_THRE

        1 = Enable INT_THRE'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RLS_IEN
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Status Interrupt Enable

        0 = Mask off INT_RLS

        1 = Enable INT_RLS'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODEM_IEN
      bit_offset: 3
      bit_width: 1
      description: 'Modem Status Interrupt Enable

        0 = Mask off INT_MODEM

        1 = Enable INT_MODEM'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTO_IEN
      bit_offset: 4
      bit_width: 1
      description: 'Rx Time out Interrupt Enable

        0 = Mask off INT_TOUT

        1 = Enable INT_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_ERR_IEN
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Enable

        0 = Mask off INT_Buf_ERR

        1 = Enable INT_Buf_ERR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKE_EN
      bit_offset: 6
      bit_width: 1
      description: 'Wake up CPU function enable

        0 = Disable UART wake up CPU function

        1 = Enable wake up function, when the system is in deep sleep mode, an external
        /CTS change will wake up CPU from deep sleep mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_BRK_IEN
      bit_offset: 8
      bit_width: 1
      description: 'LIN RX Break Field Detected Interrupt Enable

        0 = Mask off Lin bus Rx break filed interrupt.

        1 = Enable Lin bus Rx break filed interrupt.

        Note: This field is used for LIN function mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIME_OUT_EN
      bit_offset: 11
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable Time-out counter.

        0 = Disable Time-out counter.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_RTS_EN
      bit_offset: 12
      bit_width: 1
      description: 'RTS Auto Flow Control Enable

        1 = Enable RTS auto flow control.

        0 = Disable RTS auto flow control.

        When RTS auto-flow is enabled, if the number of bytes in the Rx FIFO equals
        the UA_FCR[RTS_Tri_Lev], the UART will de-assert RTS signal.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTO_CTS_EN
      bit_offset: 13
      bit_width: 1
      description: 'CTS Auto Flow Control Enable

        1 = Enable CTS auto flow control.

        0 = Disable CTS auto flow control.

        When CTS auto-flow is enabled, the UART will send data to external device
        when CTS input assert (UART will not send data to device until CTS is asserted).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_TX_EN
      bit_offset: 14
      bit_width: 1
      description: "TX DMA Enable \n1 = Enable TX DMA.\n0 = Disable TX DMA."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_RX_EN
      bit_offset: 15
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable RX DMA.

        0 = Disable RX DMA.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FCR
    addr: 0x40154008
    size_bits: 32
    description: FIFO Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RFR
      bit_offset: 1
      bit_width: 1
      description: 'Rx Field Software Reset

        When Rx_RST is set, all the bytes in the transmit FIFO and Rx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Rx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TFR
      bit_offset: 2
      bit_width: 1
      description: 'Tx Field Software Reset

        When Tx_RST is set, all the bytes in the transmit FIFO and Tx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Tx internal state machine and pointers.

        Note: This bit will auto clear needs at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFITL
      bit_offset: 4
      bit_width: 4
      description: "Rx FIFO Interrupt (INT_RDA) Trigger Level \nWhen the number of
        bytes in the receive FIFO equals the RFITL then the RDA_IF will be set (if
        IER [RDA_IEN] is enable, an interrupt will generated).\nRFITL\tINTR_RDA Trigger
        Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DIS
      bit_offset: 8
      bit_width: 1
      description: 'Receiver Disable register

        The receiver is disabled or not (set 1 is disable receiver)

        1 = Disable Receiver.

        0 = Enable Receiver.

        Note: This field is used for RS-485 Normal Multi-drop mode. It should be programmed
        before UA_ALT_CSR [RS-485_NMM] is programmed.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_TRI_LEV
      bit_offset: 16
      bit_width: 4
      description: "RTS Trigger Level for Auto-flow Control Use(not available in UART2
        channel)\nRTS_Tri_Lev\tTrigger Level (Bytes)\t\n0000\t01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t\n0100\t30/14
        (High Speed/Normal Speed)\t\n0101\t46/14 (High Speed/Normal Speed)\t\n0110\t62/14
        (High Speed/Normal Speed)\t\nothers\t62/14 (High Speed/Normal Speed)\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_LCR
    addr: 0x4015400c
    size_bits: 32
    description: Line Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WLS
      bit_offset: 0
      bit_width: 2
      description: "Word Length Select\nWLS[1:0]\tCharacter length\t\n00\t5 bits\t\n01\t6
        bits\t\n10\t7 bits\t\n11\t8 bits\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: NSB
      bit_offset: 2
      bit_width: 1
      description: 'Number of "STOP bit"

        0= One "STOP bit" is generated in the transmitted data

        1= One and a half "STOP bit" is generated in the transmitted data when 5-bit
        word length is selected;

        Two "STOP bit" is generated when 6-, 7- and 8-bit word length is selected.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PBE
      bit_offset: 3
      bit_width: 1
      description: 'Parity Bit Enable

        0 = Parity bit is not generated (transmit data) or checked (receive data)
        during transfer.

        1 = Parity bit is generated or checked between the "last data word bit" and
        "stop bit" of the serial data.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPE
      bit_offset: 4
      bit_width: 1
      description: 'Even Parity Enable

        0 = Odd number of logic 1''s are transmitted or checked in the data word and
        parity bits.

        1 = Even number of logic 1''s are transmitted or checked in the data word
        and parity bits.

        This bit has effect only when bit 3 (parity bit enable) is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPE
      bit_offset: 5
      bit_width: 1
      description: "Stick Parity Enable \n0 = Disable stick parity \n1 = When bits
        PBE , EPE and SPE are set, the parity bit is transmitted and checked as cleared.
        When PBE and SPE are set and EPE is cleared, the parity bit is transmitted
        and checked as set."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCB
      bit_offset: 6
      bit_width: 1
      description: "Break Control Bit \nWhen this bit is set to logic 1, the serial
        data output (TX) is forced to the Spacing State (logic 0). This bit acts only
        on TX and has no effect on the transmitter logic."
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_MCR
    addr: 0x40154010
    size_bits: 32
    description: Modem Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RTS
      bit_offset: 1
      bit_width: 1
      description: 'RTS (Request-To-Send) Signal (not available in UART2 channel)

        0: Drive RTS pin to logic 1 (If the LEV_RTS set to low level triggered).

        1: Drive RTS pin to logic 0 (If the LEV_RTS set to low level triggered).

        0: Drive RTS pin to logic 0 (If the LEV_RTS set to hihg level triggered).

        1: Drive RTS pin to logic 1 (If the LEV_RTS set to high level triggered).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LEV_RTS
      bit_offset: 9
      bit_width: 1
      description: 'RTS Trigger Level (not available in UART2 channel)

        This bit can change the RTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_ST
      bit_offset: 13
      bit_width: 1
      description: 'RTS Pin State (not available in UART2 channel)

        This bit is the output pin status of RTS.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_MSR
    addr: 0x40154014
    size_bits: 32
    description: Modem Status Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DCTSF
      bit_offset: 0
      bit_width: 1
      description: 'Detect CTS State Change Flag (not available in UART2 channel)

        This bit is set whenever CTS input has change state, and it will generate
        Modem interrupt to CPU when UA_IER [Modem_IEN] is set to 1.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS_ST
      bit_offset: 4
      bit_width: 1
      description: 'CTS Pin Status (not available in UART2 channel)

        This bit is the pin status of CTS. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LEV_CTS
      bit_offset: 8
      bit_width: 1
      description: 'CTS Trigger Level (not available in UART2 channel)

        This bit can change the CTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FSR
    addr: 0x40154018
    size_bits: 32
    description: FIFO Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x10404000
    fields:
    - !Field
      name: RX_OVER_IF
      bit_offset: 0
      bit_width: 1
      description: "Rx overflow Error IF (Read Only) \nThis bit is set when Rx FIFO
        overflow.\nIf the number of bytes of received data is greater than Rx FIFO(UA_RBR)
        size, 64/16 bytes of (UA_RBR), this bit will be set.\nNOTE: This bit is read
        only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RS485_ADD_DETF
      bit_offset: 3
      bit_width: 1
      description: 'RS-485 Address Byte Detection Flag (Read Only) (Low Density Only)

        This bit is set to logic 1 and set UA_ALT_CSR [RS485_ADD_EN] whenever in RS-485
        mode the receiver detect any address byte received address byte character
        (bit9 = 1) bit, and it is reset whenever the CPU writes 1 to this bit.

        NOTE: This field is used for RS-485 function mode.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEF
      bit_offset: 4
      bit_width: 1
      description: 'Parity Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "parity bit", and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEF
      bit_offset: 5
      bit_width: 1
      description: 'Framing Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "stop bit" (that is, the stop bit following the last data bit or parity
        bit is detected as a logic 0), and is reset whenever the CPU writes 1 to this
        bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BIF
      bit_offset: 6
      bit_width: 1
      description: 'Break Interrupt Flag

        This bit is set to a logic 1 whenever the received data input(Rx) is held
        in the "spacing state" (logic 0) for longer than a full word transmission
        time (that is, the total time of "start bit" + data bits + parity + stop bits)
        and is reset whenever the CPU writes 1 to this bit.

        NOTE: This bit is read only, but can be cleared by writing ''1'' to it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_POINTER
      bit_offset: 8
      bit_width: 6
      description: 'Rx FIFO pointer (Read Only)

        This field indicates the Rx FIFO Buffer Pointer. When UART receives one byte
        from external device, Rx_Pointer increases one. When one byte of Rx FIFO is
        read by CPU, Rx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_EMPTY
      bit_offset: 14
      bit_width: 1
      description: 'Receiver FIFO Empty (Read Only)

        This bit initiate Rx FIFO empty or not.

        When the last byte of Rx FIFO has been read by CPU, hardware sets this bit
        high. It will be cleared when UART receives any new data.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_FULL
      bit_offset: 15
      bit_width: 1
      description: 'Receiver FIFO Full (Read Only)

        This bit initiates Rx FIFO full or not.

        This bit is set when RX_POINTER is equal to 64/16(UART0/UART1), otherwise
        is cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_POINTER
      bit_offset: 16
      bit_width: 6
      description: 'TX FIFO Pointer (Read Only)

        This field indicates the Tx FIFO Buffer Pointer. When CPU write one byte into
        UA_THR, Tx_Pointer increases one. When one byte of Tx FIFO is transferred
        to Transmitter Shift Register, Tx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_EMPTY
      bit_offset: 22
      bit_width: 1
      description: 'Transmitter FIFO Empty (Read Only)

        This bit indicates Tx FIFO empty or not.

        When the last byte of Tx FIFO has been transferred to Transmitter Shift Register,
        hardware sets this bit high. It will be cleared when writing data into THR
        (Tx FIFO not empty).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_FULL
      bit_offset: 23
      bit_width: 1
      description: 'Transmitter FIFO Full (Read Only)

        This bit indicates Tx FIFO full or not.

        This bit is set when Tx_Point is equal to 64/16(UART0/UART1), otherwise is
        cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_OVER_IF
      bit_offset: 24
      bit_width: 1
      description: "Tx Overflow Error Interrupt Flag (Read Only)\nIf Tx FIFO(UA_THR)
        is full, an additional write to UA_THR will cause this bit to logic 1. \nNOTE:
        This bit is read only, but can be cleared by writing '1' to it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TE_FLAG
      bit_offset: 28
      bit_width: 1
      description: 'Transmitter Empty Flag (Read Only)

        Bit is set by hardware when Tx FIFO(UA_THR) is empty and the STOP bit of the
        last byte has been transmitted.

        Bit is cleared automatically when Tx FIFO is not empty or the last byte transmission
        has not completed.

        NOTE: This bit is read only. '
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_ISR
    addr: 0x4015401c
    size_bits: 32
    description: Interrupt Status Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x2
    fields:
    - !Field
      name: RDA_IF
      bit_offset: 0
      bit_width: 1
      description: "Receive Data Available Interrupt Flag (Read Only).\nWhen the number
        of bytes in the Rx FIFO equals the RFITL then the RDA_IF will be set. If IER[RDA_IEN]
        is enabled, the RDA interrupt will be generated. \nNOTE: This bit is read
        only and it will be cleared when the number of unread bytes of Rx FIFO drops
        below the threshold level (RFITL)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_IF
      bit_offset: 1
      bit_width: 1
      description: "Transmit Holding Register Empty Interrupt Flag (Read Only). \nThis
        bit is set when the last data of TX FIFO is transferred to Transmitter Shift
        Register. If UA_IER[THRE_IEN] is enabled, the THRE interrupt will be generated.\nNOTE:
        This bit is read only and it will be cleared when writing data into THR (TX
        FIFO not empty)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_IF
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Interrupt Flag (Read Only).

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.

        NOTE: When in RS-485 function mode, this field include "receiver detect any
        address byte received address byte character (bit9 = 1'') bit. "'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_IF
      bit_offset: 3
      bit_width: 1
      description: 'MODEM Interrupt Flag (Read Only) (not available in UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if UA_IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_IF
      bit_offset: 4
      bit_width: 1
      description: "Time Out Interrupt Flag (Read Only)\nThis bit is set when the
        RX FIFO is not empty and no activities occurres in the RX FIFO and the time
        out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout interrupt
        will be generated. \nNOTE: This bit is read only and user can read UA_RBR
        (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_IF
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Flag (Read Only)

        This bit is set when the TX or RX FIFO overflows (TX_Over_IF or RX_Over_IF
        is set). When BUF_ERR_IF is set, the transfer maybe is not correct. If UA_IER[BUF_ERR_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both TX_OVER_IF and RX_OVER_IF are cleared. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_IF
      bit_offset: 7
      bit_width: 1
      description: 'LIN Bus RX Break Field Detected Flag

        This bit is set when RX received LIN Break Field. If UA_IER[LIN_RX_BRK_IEN]
        is enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RDA_INT
      bit_offset: 8
      bit_width: 1
      description: 'Receive Data Available Interrupt Indicator (INT_RDA).

        This bit is set if RDA_IEN and RDA_IF are both set to 1.

        1 = The RDA interrupt is generated.

        0 = No RDA interrupt is generated .'
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_INT
      bit_offset: 9
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Indicator (INT_THRE).

        This bit is set if THRE_IEN and THRE_IF are both set to 1.

        1 = The THRE interrupt is generated.

        0 = No THRE interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_INT
      bit_offset: 10
      bit_width: 1
      description: 'Receive Line Status Interrupt Indicator to (INT_RLS).

        This bit is set if RLS_IEN and RLS_IF are both set to 1.

        1 = The RLS interrupt is generated.

        0 = No RLS interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MODEM_INT
      bit_offset: 11
      bit_width: 1
      description: 'MODEM Status Interrupt Indicator to (INT_MOS).

        This bit is set if MODEM_IEN and MODEM_IF are both set to 1..

        1 = The Modem interrupt is generated.

        0 = No Modem interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TOUT_INT
      bit_offset: 12
      bit_width: 1
      description: 'Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated.

        0 = No Tout interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_ERR_INT
      bit_offset: 13
      bit_width: 1
      description: 'Buffer Error Interrupt Indicator (INT_Buf_err)

        This bit is set if BUF_ERR_IEN and BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated.

        0 = No buffer error interrupt is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: LIN_RX_BREAK_INT
      bit_offset: 15
      bit_width: 1
      description: "LIN Bus Rx Break Field Detected Interrupt Indicator \nThis bit
        is set if LIN_RX_BRK_IEN and LIN_RX_BREAK_IF are both set to 1.\n1 = The LIN
        RX Break interrupt is generated.\n0 = No LIN RX Break interrupt is generated."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_IF
      bit_offset: 18
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Flag (Read Only)

        This bit is set when the Rx receive data have parity error, framing error
        or break error (at least one of 3 bits, BIF, FEF and PEF, is set). If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF and PEF
        are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_IF
      bit_offset: 19
      bit_width: 1
      description: 'In DMA mode, MODEM Interrupt Flag (Read Only) (not available in
        UART2 channel)

        This bit is set when the CTS pin has state change(DCTSF=1). if IER[Modem_IEN]
        is enabled, the Modem interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when bit DCTSF is cleared by a
        write 1 on DCTSF.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_IF
      bit_offset: 20
      bit_width: 1
      description: "In DMA mode, Time out Interrupt Flag (Read Only)\nThis bit is
        set when the Rx FIFO is not empty and no activities occurres in the Rx FIFO
        and the time out counter equal to TOIC. If IER[Tout_IEN] is enabled, the Tout
        interrupt will be generated. \nNOTE: This bit is read only and user can read
        UA_RBR (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_IF
      bit_offset: 21
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Flag (Read Only)

        This bit is set when the Tx or Rx FIFO overflows (Tx_Over_IF or Rx_Over_IF
        is set). When Buf_Err_IF is set, the transfer maybe is not correct. If IER[Buf_Err_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both Tx_Over_IF and Rx_Over_IF are cleared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_IF
      bit_offset: 23
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detect Interrupt Flag

        This bit is set when Rx received LIN Break Field. If IER[LIN_RX_BRK_IEN] is
        enabled the LIN RX Break interrupt will be generated.

        NOTE: This bit is read only and user can write 1 to clear it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_RLS_INT
      bit_offset: 26
      bit_width: 1
      description: 'In DMA mode, Receive Line Status Interrupt Indicator (INT_RLS).

        This bit is set if RLS_IEN and HW_RLS_IF are both set to 1.

        1 = The RLS interrupt is generated in DMA mode.

        0 = No RLS interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_MODEM_INT
      bit_offset: 27
      bit_width: 1
      description: 'In DMA mode, MODEM Status Interrupt Indicator (INT_MOS)(not available
        in UART2 channel).

        This bit is set if MODEM_IEN and HW_MODEM_IF are both set to 1.

        1 = The Modem interrupt is generated in DMA mode.

        0 = No Modem interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_TOUT_INT
      bit_offset: 28
      bit_width: 1
      description: 'In DMA mode, Time Out Interrupt Indicator (INT_Tout)

        This bit is set if TOUT_IEN and HW_TOUT_IF are both set to 1.

        1 = The Tout interrupt is generated in DMA mode.

        0 = No Tout interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_BUF_ERR_INT
      bit_offset: 29
      bit_width: 1
      description: 'In DMA mode, Buffer Error Interrupt Indicator(INT_Buf_err)

        This bit is set if BUF_ERR_IEN and HW_BUF_ERR_IF are both set to 1.

        1 = The buffer error interrupt is generated in DMA mode.

        0 = No buffer error interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HW_LIN_RX_BREAK_INT
      bit_offset: 31
      bit_width: 1
      description: 'In DMA mode, LIN Bus Rx Break Field Detected Interrupt Indicator

        This bit is set if LIN_RX_BRK_IEN and HW_LIN_RX_BREAK_IF are both set to 1.

        1 = The LIN RX Break interrupt is generated in DMA mode.

        0 = No LIN RX Break interrupt is generated in DMA mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_TOR
    addr: 0x40154020
    size_bits: 32
    description: Time Out Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TOIC
      bit_offset: 0
      bit_width: 7
      description: 'Time Out Interrupt Comparator

        The time out counter resets and starts counting (the counting clock = baud
        rate) whenever the RX FIFO receives a new data word. Once the content of time
        out counter (TOUT_CNT) is equal to that of time out interrupt comparator (TOIC),
        a receiver time out interrupt (INTR_TOUT) is generated if UA_IER [RTO_IEN].
        A new incoming data word or RX FIFO empty clears INTR_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DLY
      bit_offset: 8
      bit_width: 8
      description: 'TX Delay time value (Low Density Only)

        This field is use to programming the transfer delay time between the last
        stop bit and next start bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_BAUD
    addr: 0x40154024
    size_bits: 32
    description: Baud Rate Divisor Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: BRD
      bit_offset: 0
      bit_width: 16
      description: "Baud Rate Divider \nThe field indicated the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER_X
      bit_offset: 24
      bit_width: 4
      description: 'Divider X

        The baud rate divider M = X+1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_ONE
      bit_offset: 28
      bit_width: 1
      description: "Divider X equal 1\n0 = Divider M = X (the equation of M = X+1,
        but Divider_X[27:24] must > =8)\n1 = Divider M = 1 (the equation of M = 1,
        but BRD[15:0] must >=3).\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X \tBRD \tBaud
        rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1 \tEnable
        \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't Care\tA\tUART_CLK
        / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_EN
      bit_offset: 29
      bit_width: 1
      description: "Divider X Enable\nThe BRD = Baud Rate Divider, and the baud rate
        equation is \nBaud Rate = Clock / [ M * (BRD + 2) ] ; The default value of
        M is 16.\n0 = Disable divider X (the equation of M = 16)\n1 = Enable divider
        X (the equation of M = X+1, but Divider_X[27:24 must > =8).\nNOTE: When in
        IrDA mode, this bit must disable.\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X
        \tBRD \tBaud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n1
        \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t1\tDon't
        Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_IRCR
    addr: 0x40154028
    size_bits: 32
    description: IrDA Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: TX_SELECT
      bit_offset: 1
      bit_width: 1
      description: 'Enable IrDA Receiver

        1: Enable IrDA transmitter

        0: Enable IrDA receiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_TX
      bit_offset: 5
      bit_width: 1
      description: 'INV_TX

        1= Inverse TX output signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_RX
      bit_offset: 6
      bit_width: 1
      description: 'INV_RX

        1= Inverse RX input signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_ALT_CSR
    addr: 0x4015402c
    size_bits: 32
    description: LIN Break Failed Count Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: UA_LIN_BKFL
      bit_offset: 0
      bit_width: 4
      description: 'UART LIN Break Field Length

        This field indicates a 4-bit LIN TX break field count.

        NOTE: This break field length is UA_LIN_BKFL + 2'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_RX_EN
      bit_offset: 6
      bit_width: 1
      description: 'LIN RX Enable

        1 = Enable LIN RX mode.

        0 = Disable LIN RX mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIN_TX_EN
      bit_offset: 7
      bit_width: 1
      description: 'LIN TX Break Mode Enable

        1 = Enable LIN TX Break mode.

        0 = Disable LIN TX Break mode.

        NOTE: When TX break field transfer operation finish, this will be cleared
        automatically.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_NMM
      bit_offset: 8
      bit_width: 1
      description: 'RS-485 Normal Multi-drop Operation Mode (NMM) (Low Density Only)

        1 = Enable RS-485 Normal Multi-drop Operation Mode (NMM).

        0 = Disable RS-485 Normal Multi-drop Operation Mode (NMM).

        Note: It can''t be active with RS485_AAD operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AAD
      bit_offset: 9
      bit_width: 1
      description: 'RS-485 Auto Address Detection Operation Mode (AAD) (Low Density
        Only)

        1 = Enable RS-485 Auto Address Detection Operation Mode (AAD).

        0 = Disable RS-485 Auto Address Detection Operation Mode (AAD).

        Note: It can''t be active with RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_AUD
      bit_offset: 10
      bit_width: 1
      description: 'RS-485 Auto Direction Mode (AUD) (Low Density Only)

        1 = Enable RS-485 Auto Direction Operation Mode (AUO).

        0 = Disable RS-485 Auto Direction Operation Mode (AUO).

        Note:This field is used for RS-485 any operation mode.

        Note: It can be active with RS-485_AAD or RS485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS485_ADD_EN
      bit_offset: 15
      bit_width: 1
      description: 'RS-485 Address Detection Enable (Low Density Only)

        1 = Enable address detection mode.

        0 = Disable address detection mode.

        Note: This field is used for RS485 any operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDR_MATCH
      bit_offset: 24
      bit_width: 8
      description: 'Address match value register (Low Density Only)

        This field contains the RS-485 address match values.

        Note: This field is used for RS-485 auto address detection mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FUN_SEL
    addr: 0x40154030
    size_bits: 32
    description: Function Select Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FUN_SEL
      bit_offset: 0
      bit_width: 2
      description: 'Function Select Enable

        00 = UART Function

        01 = Enable LIN Function

        10 = Enable IrDA Function

        11 = Enable RS-485 Function (Low Density Only)'
      read_allowed: true
      write_allowed: true
- !Module
  name: USB
  description: Registers group
  base_addr: 0x40060000
  size: 0xa8
  registers:
  - !Register
    name: USB_INTEN
    addr: 0x40060000
    size_bits: 32
    description: Interrupt Enable Flag
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUS_IE
      bit_offset: 0
      bit_width: 1
      description: '1/0: Enable/disable BUS event interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB_IE
      bit_offset: 1
      bit_width: 1
      description: '1/0: Enable/disable USB event interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLDET_IE
      bit_offset: 2
      bit_width: 1
      description: '1/0: Enable/disable Floating detect Interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKEUP_IE
      bit_offset: 3
      bit_width: 1
      description: '1/0: Enable/disable Wakeup Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKEUP_EN
      bit_offset: 8
      bit_width: 1
      description: '1/0: Enable/Disable USB wakeup function'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INNAK_EN
      bit_offset: 15
      bit_width: 1
      description: '1 = The NAK status is updated into the endpoint status register,
        USB_EPSTS, when it is set to 1 and there is NAK response in IN token. It also
        enable the interrupt event when the device responds NAK after receiving IN
        token.

        0 = The NAK status doesn''t be updated into the endpoint status register when
        it was set to 0. It also disable the interrupt event when device responds
        NAK after receiving IN token'
      read_allowed: false
      write_allowed: true
  - !Register
    name: USB_INTSTS
    addr: 0x40060004
    size_bits: 32
    description: Interrupt Event Flag
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUS_STS
      bit_offset: 0
      bit_width: 1
      description: 'The BUS event means that there is one of the suspense or the resume
        function in the bus.

        1 = Bus event occurred; check USB_ATTR[3:0] to know which kind of bus event
        was occurred, cleared by write 1 to USB_INTSTS[0].

        0 = No any BUS event is occurred'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB_STS
      bit_offset: 1
      bit_width: 1
      description: 'The USB event includes the Setup Token, IN Token, OUT ACK, ISO
        IN, or ISO OUT events in the bus.

        1 = USB event occurred, check EPSTS0~5[2:0] to know which kind of USB event
        was occurred, cleared by write 1 to USB_INTSTS[1] or EPSTS0~5 and SETUP (USB_INTSTS[31])

        0 = No any USB event is occurred'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLDET_STS
      bit_offset: 2
      bit_width: 1
      description: '1 = There is attached/detached event in the USB bus and it is
        cleared by write 1 to USB_INTSTS[2].

        0 = There is not attached/detached event in the USB'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKEUP_STS
      bit_offset: 3
      bit_width: 1
      description: '1 = Wakeup event occurred, cleared by write 1 to USB_INTSTS[3]

        0 = No Wakeup event is occurred'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT0
      bit_offset: 16
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 0, check USB_EPSTS[10:8] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[16]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT1
      bit_offset: 17
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 1, check USB_EPSTS[13:11] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[17]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 1'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT2
      bit_offset: 18
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 2, check USB_EPSTS[16:14] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[18]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 2'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT3
      bit_offset: 19
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 3, check USB_EPSTS[19:17] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[19]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 3'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT4
      bit_offset: 20
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 4, check USB_EPSTS[22:20] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[20]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 4'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPEVT5
      bit_offset: 21
      bit_width: 1
      description: '1 = USB event occurred on Endpoint 5, check USB_EPSTS[25:23] to
        know which kind of USB event was occurred, cleared by write 1 to USB_INTSTS[21]
        or USB_INTSTS[1]

        0 = No event occurred in endpoint 5'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETUP
      bit_offset: 31
      bit_width: 1
      description: '1 = Setup event occurred, cleared by write 1 to USB_INTSTS[31]

        0 = No Setup event'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_FADDR
    addr: 0x40060008
    size_bits: 32
    description: Function Address
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FADDR
      bit_offset: 0
      bit_width: 7
      description: Function Address of this USB device.
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_EPSTS
    addr: 0x4006000c
    size_bits: 32
    description: System state
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: OVERRUN
      bit_offset: 7
      bit_width: 1
      description: 'It indicates that the received data is over the maximum payload
        number or not.

        1 = It indicates that the Out Data more than the Max Payload in MXPLD register
        or the Setup Data more than 8 Bytes

        0 = No overrun'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS0
      bit_offset: 8
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS1
      bit_offset: 11
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS2
      bit_offset: 14
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS3
      bit_offset: 17
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS4
      bit_offset: 20
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
    - !Field
      name: EPSTS5
      bit_offset: 23
      bit_width: 3
      description: 'These bits are used to indicate the current status of this endpoint

        000 = In ACK

        001 = In NAK

        010 = Out Packet Data0 ACK

        110 = Out Packet Data1 ACK

        011 = Setup ACK

        111 = Isochronous transfer end'
      read_allowed: true
      write_allowed: false
  - !Register
    name: USB_ATTR
    addr: 0x40060010
    size_bits: 32
    description: Bus state & attribution
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: USBRST
      bit_offset: 0
      bit_width: 1
      description: '1: Bus reset when SE0(single-ended 0) more than 2.5uS.

        0: Bus no reset.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: SUSPEND
      bit_offset: 1
      bit_width: 1
      description: '1: Bus idle more than 3mS, either cable is plugged off or host
        is sleeping.

        0: Bus no suspend.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RESUME
      bit_offset: 2
      bit_width: 1
      description: '1: Resume from suspension

        0: No bus resume.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TIMEOUT
      bit_offset: 3
      bit_width: 1
      description: '1: No response more than 18 bits time

        0: No time out.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PHY_EN
      bit_offset: 4
      bit_width: 1
      description: '1: Enable PHY transceiver function.

        0: Disable PHY transceiver function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RWAKEUP
      bit_offset: 5
      bit_width: 1
      description: '1: Force USB bus to K state, used for remote wake-up.

        0: Release the USB bus from K state.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB_EN
      bit_offset: 7
      bit_width: 1
      description: '1: Enable USB controller.

        0: Disable USB controller.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DPPU_EN
      bit_offset: 8
      bit_width: 1
      description: 'Pull-up resistor on USB_DP enable bit

        1: Enable

        0: Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWRDN
      bit_offset: 9
      bit_width: 1
      description: '1: Turn-on related circuit of PHY transceiver

        0: power-down related circuit of PHY transceiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BYTEM
      bit_offset: 10
      bit_width: 1
      description: '1: Byte Mode. The size of the transfer from CPU to USB SRAM can
        be Byte only.

        0: Word Mode. The size of the transfer from CPU to USB SRAM can be Word. only'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_FLDET
    addr: 0x40060014
    size_bits: 32
    description: Device Floating Detected
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: FLDET
      bit_offset: 0
      bit_width: 1
      description: '1: When the controller is attached into the BUS, this bit will
        be set as 1

        0: The controller didn''t attached into the USB host'
      read_allowed: true
      write_allowed: false
  - !Register
    name: USB_BUFSEG
    addr: 0x40060018
    size_bits: 32
    description: Buffer Segmentation
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for the Setup token
        with the USB SRAM starting address. The effective starting address is

        USB_SRAM address + { BUFSEG[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Note: It is used for Setup token only.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG0
    addr: 0x40060020
    size_bits: 32
    description: Buffer Segmentation of endpoint 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG0
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG0[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD0
    addr: 0x40060024
    size_bits: 32
    description: Maximal payload of endpoint 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG0
    addr: 0x40060028
    size_bits: 32
    description: Configuration of endpoint 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP0
    addr: 0x4006002c
    size_bits: 32
    description: stall control register and In/out ready clear flag of endpoint 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG1
    addr: 0x40060030
    size_bits: 32
    description: Buffer Segmentation of endpoint 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG1
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG1[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD1
    addr: 0x40060034
    size_bits: 32
    description: Maximal payload of endpoint 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG1
    addr: 0x40060038
    size_bits: 32
    description: Configuration of endpoint 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP1
    addr: 0x4006003c
    size_bits: 32
    description: stall control register and In/out ready clear flag of endpoint 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG2
    addr: 0x40060040
    size_bits: 32
    description: Buffer Segmentation of endpoint 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG2
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG2[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD2
    addr: 0x40060044
    size_bits: 32
    description: Maximal payload of endpoint 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG2
    addr: 0x40060048
    size_bits: 32
    description: Configuration of endpoint 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP2
    addr: 0x4006004c
    size_bits: 32
    description: stall control register and In/out ready clear flag of endpoint 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG3
    addr: 0x40060050
    size_bits: 32
    description: Buffer Segmentation of endpoint 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG3
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG3[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD3
    addr: 0x40060054
    size_bits: 32
    description: Maximal payload of endpoint 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG3
    addr: 0x40060058
    size_bits: 32
    description: Configuration of endpoint 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP3
    addr: 0x4006005c
    size_bits: 32
    description: stall control register and In/out ready clear flag of endpoint 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG4
    addr: 0x40060060
    size_bits: 32
    description: Buffer Segmentation of endpoint 4
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG4
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG4[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD4
    addr: 0x40060064
    size_bits: 32
    description: Maximal payload of endpoint 4
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG4
    addr: 0x40060068
    size_bits: 32
    description: Configuration of endpoint 4
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP4
    addr: 0x4006006c
    size_bits: 32
    description: stall control register and In/out ready clear flag of endpoint 4
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_BUFSEG5
    addr: 0x40060070
    size_bits: 32
    description: Buffer Segmentation of endpoint 5
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUFSEG5
      bit_offset: 3
      bit_width: 6
      description: 'It is used to indicate the offset address for each endpoint with
        the USB SRAM starting address. The effective starting address of the endpoint
        is:

        USB_SRAM address + { BUFSEG5[8:3], 3''b000}

        Where the USB_SRAM address = 0x40060100h.

        Refer to section 5.4.4.7 for the endpoint SRAM structure and its description.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MXPLD5
    addr: 0x40060074
    size_bits: 32
    description: Maximal payload of endpoint 5
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MXPLD
      bit_offset: 0
      bit_width: 9
      description: 'It is used to define the data length which is transmitted to host
        (IN token) or the actual data length which is received from the host (OUT
        token). It also used to indicate that the endpoint is ready to be transmitted
        in IN token or received in OUT token.

        (1). When the register is written by CPU, For IN token, the value of MXPLD
        is used to define the data length to be transmitted and indicate the data
        buffer is ready. For OUT token, it means that the controller is ready to receive
        data from the host and the value of MXPLD is the maximal data length comes
        from host.

        (2). When the register is read by CPU, For IN token, the value of MXPLD is
        indicated the data length be transmitted to host. For OUT token, the value
        of MXPLD is indicated the actual data length receiving from host.

        Note that once MXPLD is written, the data packets will be transmitted/received
        immediately after IN/OUT token arrived.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG5
    addr: 0x40060078
    size_bits: 32
    description: Configuration of endpoint 5
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_NUM
      bit_offset: 0
      bit_width: 4
      description: These bits are used to define the endpoint number of the current
        endpoint.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISOCH
      bit_offset: 4
      bit_width: 1
      description: 'This bit is used to set the endpoint as Isochronous endpoint,
        no handshake.

        1: Isochronous endpoint

        0: No Isochronous endpoint'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE
      bit_offset: 5
      bit_width: 2
      description: '00 = Endpoint is disabled

        01 = OUT endpoint

        10 = IN endpoint

        11 = Undefined'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSQ_SYNC
      bit_offset: 7
      bit_width: 1
      description: '1 = DATA1 PID

        0 = DATA0 PID

        It is used to specify the DATA0 or DATA1 PID in the following IN token transaction.
        H/W will toggle automatically in IN token base on the bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSTALL
      bit_offset: 9
      bit_width: 1
      description: '1 = Clear the device to response STALL handshake in setup stage

        0 = Disable the device to clear the STALL handshake in setup stage'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFGP5
    addr: 0x4006007c
    size_bits: 32
    description: In ready clear flag of endpoint 5
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRRDY
      bit_offset: 0
      bit_width: 1
      description: 'When the MXPLD register is set by user, it means that the endpoint
        is ready to transmit or receive data. If the user wants to turn off this transaction
        before the transaction start, users can set this bit to 1 to turn it off and
        it is auto clear to 0.

        For IN token, write 1 is used to clear the IN token had ready to transmit
        the data to USB.

        For OUT token, write 1 is used to clear the OUT token had ready to receive
        the data from USB.

        This bit is write 1 only and it is always 0 when it was read back.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSTALL
      bit_offset: 1
      bit_width: 1
      description: '1 = Set the device to respond STALL automatically

        0 = Disable the device to response STALL'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_DRVSE0
    addr: 0x40060090
    size_bits: 32
    description: Drive Single Ended Zero (SE0) in USB Bus
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DRVSE0
      bit_offset: 0
      bit_width: 1
      description: 'The Single Ended Zero (SE0) is when both lines (USB_DP and USB_DM)
        are being pulled low.

        1 = Force USB PHY transceiver to drive SE0

        0 = None'
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_PDMA
    addr: 0x400600a4
    size_bits: 32
    description: New description for register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PDMA_RW
      bit_offset: 0
      bit_width: 1
      description: '1 = The USB PDMA read data from USB buffer to memory

        0 = The USB PDMA write data from memory to USB buffer'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDMA_EN
      bit_offset: 1
      bit_width: 1
      description: '1 = The PDMA function in USB is enabled

        0 = The PDMA function in USB is disabled

        This bit will be automatically cleared after PDMA transfer done'
      read_allowed: true
      write_allowed: true
- !Module
  name: WDT
  description: Registers group
  base_addr: 0x40004000
  size: 0x4
  registers:
  - !Register
    name: WTCR
    addr: 0x40004000
    size_bits: 32
    description: Watchdog Timer Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x700
    fields:
    - !Field
      name: WTR
      bit_offset: 0
      bit_width: 1
      description: "Clear Watchdog Timer (write protection bit) \nSet this bit will
        clear the Watchdog timer. \n0 = Writing 0 to this bit has no effect\n1 = Reset
        the contents of the Watchdog timer\nNOTE: This bit will auto clear after few
        clock cycle"
      read_allowed: false
      write_allowed: true
    - !Field
      name: WTRE
      bit_offset: 1
      bit_width: 1
      description: 'Watchdog Timer Reset Enable (write protection bit)

        Setting this bit will enable the Watchdog timer reset function.

        0 = Disable Watchdog timer reset function

        1 = Enable Watchdog timer reset function'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTRF
      bit_offset: 2
      bit_width: 1
      description: 'Watchdog Timer Reset Flag

        When the Watchdog timer initiates a reset, the hardware will set this bit.
        This flag can be read by software to determine the source of reset. Software
        is responsible to clear it manually by writing 1 to it. If WTRE is disabled,
        then the Watchdog timer has no effect on this bit.

        0 = Watchdog timer reset did not occur

        1 = Watchdog timer reset occurs

        NOTE: This bit is cleared by writing 1 to this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIF
      bit_offset: 3
      bit_width: 1
      description: "Watchdog Timer Interrupt Flag\nIf the Watchdog timer interrupt
        is enabled, then the hardware will set this bit to indicate that the Watchdog
        timer interrupt has occurred. \n0 = Watchdog timer interrupt does not occur\n1
        = Watchdog timer interrupt occurs\nNOTE: This bit is cleared by writing 1
        to this bit."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTWKE
      bit_offset: 4
      bit_width: 1
      description: 'Watchdog Timer Wakeup Function Enable bit (write protection bit)

        0 : Disable Watchdog timer Wakeup CPU function.

        1 : Enable the Wakeup function that Watchdog timer timeout can wake up CPU
        from power-down mode.

        Note: CHIP can wakeup by WDT only if WDT clock source select RC10K.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTWKF
      bit_offset: 5
      bit_width: 1
      description: 'Watchdog Timer Wakeup Flag

        If Watchdog timer causes CPU wakes up from power-down mode, this bit will
        be set to high. It must be cleared by software with a write 1 to this bit.

        0 : Watchdog timer does not cause CPU wakeup.

        1 : CPU wake up from sleep or power-down mode by Watchdog timeout.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIE
      bit_offset: 6
      bit_width: 1
      description: 'Watchdog Timer Interrupt Enable (write protection bit)

        0 = Disable the Watchdog timer interrupt

        1 = Enable the Watchdog timer interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTE
      bit_offset: 7
      bit_width: 1
      description: 'Watchdog Timer Enable (write protection bit)

        0 = Disable the Watchdog timer (This action will reset the internal counter)

        1 = Enable the Watchdog timer'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIS
      bit_offset: 8
      bit_width: 3
      description: "Watchdog Timer Interval Select (write protection bit)\nThese three
        bits select the timeout interval for the Watchdog timer. \nWTIS\tTimeout Interval
        Selection\tInterrupt Period\tWTR Timeout Interval (WDT_CLK=12MHz)\t\n000\t2^4
        * WDT_CLK\t(2^4 + 1024) * WDT_CLK\t1.33 us ~ 86.67 us\t\n001\t2^6 * WDT_CLK\t(2^6
        + 1024) * WDT_CLK\t5.33 us ~ 90.67 us\t\n010\t2^8 * WDT_CLK\t(2^8 + 1024)
        * WDT_CLK\t21.33 us ~ 106.67 us\t\n011\t2^10 * WDT_CLK\t(2^10 + 1024) * WDT_CLK\t85.33
        us ~ 170.67 us\t\n100\t2^12 * WDT_CLK\t(2^12 + 1024) * WDT_CLK\t341.33 us
        ~ 426.67 us\t\n101\t2^14 * WDT_CLK\t(2^14 + 1024) * WDT_CLK\t1.36 ms ~ 1.45
        ms\t\n110\t2^16 * WDT_CLK\t(2^16 + 1024) * WDT_CLK\t5.46 ms ~ 5.55 ms\t\n111\t2^18
        * WDT_CLK\t(2^18 + 1024) * WDT_CLK\t21.84 ms ~ 21.93 ms\t"
      read_allowed: true
      write_allowed: true
