!Device
part_number: M05x_registers
architecture: ARM Cortex-M
bit_width: 32
modules:
- !Module
  name: ADC
  description: Registers group
  base_addr: 0x400e0000
  size: 0x38
  registers:
  - !Register
    name: ADDR0
    addr: 0x0
    size_bits: 32
    description: A/D Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR1
    addr: 0x4
    size_bits: 32
    description: A/D Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR2
    addr: 0x8
    size_bits: 32
    description: A/D Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR3
    addr: 0xc
    size_bits: 32
    description: A/D Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR4
    addr: 0x10
    size_bits: 32
    description: A/D Data Register 4
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR5
    addr: 0x14
    size_bits: 32
    description: A/D Data Register 5
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR6
    addr: 0x18
    size_bits: 32
    description: A/D Data Register 6
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADDR7
    addr: 0x1c
    size_bits: 32
    description: A/D Data Register 7
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RSLT
      bit_offset: 0
      bit_width: 12
      description: 'A/D Conversion Result

        This field contains 12 bits conversion result.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 1
      description: 'Over Run Flag

        1 = Data in RSLT[11:0] is overwrite.

        0 = Data in RSLT[11:0] is recent conversion result.

        If converted data in RSLT[11:0] has not been read before new conversion result
        is loaded to this register, OVERRUN is set to 1. It will be cleared by hardware
        after ADDR register is read.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 17
      bit_width: 1
      description: 'Valid Flag

        1 = Data in RSLT[11:0] bits is valid.

        0 = Data in RSLT[11:0] bits is not valid.

        This bit is set to 1 when corresponding channel analog input conversion is
        completed and cleared by hardware after ADDR register is read.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADCR
    addr: 0x20
    size_bits: 32
    description: A/D Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADEN
      bit_offset: 0
      bit_width: 1
      description: 'A/D Converter Enable

        1 = Enable

        0 = Disable

        Before starting A/D conversion function, this bit should be set to 1. Clear
        it to 0 to disable A/D converter analog circuit for saving power consumption.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADIE
      bit_offset: 1
      bit_width: 1
      description: 'A/D Interrupt Enable

        1 = Enable A/D interrupt function

        0 = Disable A/D interrupt function

        A/D conversion end interrupt request is generated if ADIE bit is set to 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADMD
      bit_offset: 2
      bit_width: 2
      description: 'A/D Converter Operation Mode

        00 = Single conversion

        01 = Burst conversion

        10 = Single-cycle scan

        11 = Continuous scan

        When changing the operation mode, software should disable ADST bit firstly.

        Note: In Burst Mode, the A/D result data always at Data Register 0.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGS
      bit_offset: 4
      bit_width: 2
      description: "Hardware Trigger Source\n00 = A/D conversion is started by external\
        \ STADC pin.\nOthers = Reserved\nSoftware should disable TRGE and ADST before\
        \ change TRGS. \nIn hardware trigger mode, the ADST bit is set by the external\
        \ trigger from STADC."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGCOND
      bit_offset: 6
      bit_width: 2
      description: 'External Trigger Condition

        These two bits decide external pin STADC trigger event is level or edge. The
        signal must be kept at stable state at least 8 PCLKs for level trigger and
        4 PCLKs at high and low state.

        00 = Low level

        01 = High level

        10 = Falling edge

        11 = Rising edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRGE
      bit_offset: 8
      bit_width: 1
      description: 'External Trigger Enable

        Enable or disable triggering of A/D conversion by external STADC pin.

        1= Enable

        0= Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIFFEN
      bit_offset: 10
      bit_width: 1
      description: 'A/D Differential Input Mode Enable

        1 = A/D is in differential analog input mode

        0 = A/D is in single-end analog input mode

        Differential input voltage (Vdiff) = Vplus - Vminus

        The Vplus of differential input paired channel 0 is from ADC0 pin; Vminus
        is from ADC1 pin.

        The Vplus of differential input paired channel 1 is from ADC2 pin; Vminus
        is from ADC3 pin.

        The Vplus of differential input paired channel 2 is from ADC4 pin; Vminus
        is from ADC5 pin.

        The Vplus of differential input paired channel 3 is from ADC6 pin; Vminus
        is from ADC7 pin.

        In differential input mode, only one of the two corresponding channels needs
        to be enabled in ADCHER. The conversion result will be placed to the corresponding
        data register of the enabled channel. If both channels of a differential input
        paired channel are enabled, the ADC will convert it twice in scan mode. And
        then write the conversion result to the two corresponding data registers.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADST
      bit_offset: 11
      bit_width: 1
      description: 'A/D Conversion Start

        1 = Conversion start.

        0 = Conversion stopped and A/D converter enter idle state.

        ADST bit can be controlled by two sources: software write and external pin
        STADC. ADST is cleared to 0 by hardware automatically at the ends of single
        mode and single-cycle scan mode on specified channels. In continuous scan
        mode, A/D conversion is continuously performed sequentially until this bit
        is cleared to 0 or chip reset.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCHER
    addr: 0x24
    size_bits: 32
    description: A/D Channel Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CHEN0
      bit_offset: 0
      bit_width: 1
      description: 'Analog Input Channel 0 Enable

        1 = Enable

        0 = Disable

        This channel is the default enabled channel if CHEN0~7 are set as 0s.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN1
      bit_offset: 1
      bit_width: 1
      description: 'Analog Input Channel 1 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN2
      bit_offset: 2
      bit_width: 1
      description: 'Analog Input Channel 2 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN3
      bit_offset: 3
      bit_width: 1
      description: 'Analog Input Channel 3 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN4
      bit_offset: 4
      bit_width: 1
      description: 'Analog Input Channel 4 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN5
      bit_offset: 5
      bit_width: 1
      description: 'Analog Input Channel 5 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN6
      bit_offset: 6
      bit_width: 1
      description: 'Analog Input Channel 6 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHEN7
      bit_offset: 7
      bit_width: 1
      description: 'Analog Input Channel 7 Enable

        1 = Enable

        0 = Disable'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRESEL
      bit_offset: 8
      bit_width: 2
      description: 'Analog Input Channel 7 select

        00: External analog input

        01: Internal bandgap voltage

        1x: Reserved'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCMPR0
    addr: 0x28
    size_bits: 32
    description: A/D Compare Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMPEN
      bit_offset: 0
      bit_width: 1
      description: 'Compare Enable

        1 = Enable compare.

        0 = Disable compare.

        Set this bit to 1 to enable compare CMPD[11:0] with specified channel conversion
        result when converted data is loaded into ADDR register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPIE
      bit_offset: 1
      bit_width: 1
      description: 'Compare Interrupt Enable

        1 = Enable compare function interrupt.

        0 = Disable compare function interrupt.

        If the compare function is enabled and the compare condition matches the settings
        of CMPCOND and CMPMATCNT, CMPF0 bit will be asserted. If CMPIE is set to 1,
        a compare interrupt request is generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCOND
      bit_offset: 2
      bit_width: 1
      description: 'Compare Condition

        1= Set the compare condition as that when a 12-bit A/D conversion result is
        greater or equal to the 12-bit CMPD(ADCMPR0[27:16]), the internal match counter
        will increase one.

        0= Set the compare condition as that when a 12-bit A/D conversion result is
        less than the 12-bit CMPD(ADCMPR0[27:16]), the internal match counter will
        increase one.

        Note: When the internal counter reaches the value to (CMPMATCNT +1), the CMPF0
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCH
      bit_offset: 3
      bit_width: 3
      description: 'Compare Channel Selection

        000 = Channel 0 conversion result is selected to be compared.

        001 = Channel 1 conversion result is selected to be compared.

        010 = Channel 2 conversion result is selected to be compared.

        011 = Channel 3 conversion result is selected to be compared.

        100 = Channel 4 conversion result is selected to be compared.

        101 = Channel 5 conversion result is selected to be compared.

        110 = Channel 6 conversion result is selected to be compared.

        111 = Channel 7 conversion result is selected to be compared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPMATCNT
      bit_offset: 8
      bit_width: 4
      description: 'Compare Match Count

        When the specified A/D channel analog conversion result matches the compare
        condition defined by CMPCOND[2], the internal match counter will increase
        1. When the internal counter reaches the value to (CMPMATCNT +1), the CMPF0
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPD
      bit_offset: 16
      bit_width: 12
      description: 'Comparison Data

        The 12 bits data is used to compare with conversion result of specified channel.
        Software can use it to monitor the external analog input pin voltage transition
        in scan mode without imposing a load on software.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADCMPR1
    addr: 0x2c
    size_bits: 32
    description: A/D Compare Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMPEN
      bit_offset: 0
      bit_width: 1
      description: 'Compare Enable

        1 = Enable compare.

        0 = Disable compare.

        Set this bit to 1 to enable compare CMPD[11:0] with specified channel conversion
        result when converted data is loaded into ADDR register.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPIE
      bit_offset: 1
      bit_width: 1
      description: 'Compare Interrupt Enable

        1 = Enable compare function interrupt.

        0 = Disable compare function interrupt.

        If the compare function is enabled and the compare condition matches the setting
        of CMPCOND and CMPMATCNT, CMPF1 bit will be asserted. If CMPIE is set to 1,
        a compare interrupt request is generated.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCOND
      bit_offset: 2
      bit_width: 1
      description: 'Compare Condition

        1= Set the compare condition as that when a 12-bit A/D conversion result is
        greater or equal to the 12-bit CMPD(ADCMPR1[27:16]), the internal match counter
        will increase one.

        0= Set the compare condition as that when a 12-bit A/D conversion result is
        less than the 12-bit CMPD(ADCMPR1[27:16]), the internal match counter will
        increase one.

        Note: When the internal counter reaches the value to (CMPMATCNT +1), the CMPF1
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPCH
      bit_offset: 3
      bit_width: 3
      description: 'Compare Channel Selection

        000 = Channel 0 conversion result is selected to be compared.

        001 = Channel 1 conversion result is selected to be compared.

        010 = Channel 2 conversion result is selected to be compared.

        011 = Channel 3 conversion result is selected to be compared.

        100 = Channel 4 conversion result is selected to be compared.

        101 = Channel 5 conversion result is selected to be compared.

        110 = Channel 6 conversion result is selected to be compared.

        111 = Channel 7 conversion result is selected to be compared.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPMATCNT
      bit_offset: 8
      bit_width: 4
      description: 'Compare Match Count

        When the specified A/D channel analog conversion result matches the compare
        condition defined by CMPCOND[2], the internal match counter will increase
        1. When the internal counter reaches the value to (CMPMATCNT +1), the CMPF1
        bit will be set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPD
      bit_offset: 16
      bit_width: 12
      description: 'Comparison Data

        The 12 bits data is used to compare with conversion result of specified channel.
        Software can use it to monitor the external analog input pin voltage transition
        in scan mode without imposing a load on software.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADSR
    addr: 0x30
    size_bits: 32
    description: A/D Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADF
      bit_offset: 0
      bit_width: 1
      description: 'A/D Conversion End Flag

        A status flag that indicates the end of A/D conversion.

        ADF is set to 1 at these two conditions:

        When A/D conversion ends in single mode

        When A/D conversion ends on all specified channels in scan mode.

        When more than 4 samples in FIFO in Burst mode.

        This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPF0
      bit_offset: 1
      bit_width: 1
      description: 'Compare Flag

        When the selected channel A/D conversion result meets the setting conditions
        of ADCMPR0 then this bit will be set to 1. And it can be cleared by writing
        1 to itself.

        1 = Conversion result in ADDR meets ADCMPR0 setting

        0 = Conversion result in ADDR does not meet ADCMPR0 setting'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPF1
      bit_offset: 2
      bit_width: 1
      description: 'Compare Flag

        When the selected channel A/D conversion result meets the setting conditions
        of ADCMPR1 then this bit will be set to 1. And it can be cleared by writing
        1 to itself.

        1 = Conversion result in ADDR meets ADCMPR1 setting

        0 = Conversion result in ADDR does not meet ADCMPR1 setting'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 3
      bit_width: 1
      description: 'BUSY/IDLE

        1 = A/D converter is busy at conversion.

        0 = A/D converter is in idle state.

        This bit is mirror of as ADST bit in ADCR.

        It is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CHANNEL
      bit_offset: 4
      bit_width: 3
      description: 'Current Conversion Channel

        This filed reflects current conversion channel when BUSY=1. When BUSY=0, it
        shows the next channel will be converted.

        It is read only.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VALID
      bit_offset: 8
      bit_width: 8
      description: 'Data Valid flag

        It is a mirror of VALID bit in ADDRx

        When ADC is in Burst Mode, and there is at least one valid conversion result
        in buffer, VALID[7:0] will all set to 1.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERRUN
      bit_offset: 16
      bit_width: 8
      description: 'Over Run flag

        It is a mirror to OVERRUN bit in ADDRx

        When ADC is in Burst Mode, and the buffer is overrun, OVERRUN[7:0] will all
        set to 1.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: ADCALR
    addr: 0x34
    size_bits: 32
    description: A/D Calibration Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CALEN
      bit_offset: 0
      bit_width: 1
      description: 'Self Calibration Enable

        1 = Enable self calibration

        0 = Disable self calibration

        Software can set this bit to 1 enables A/D converter to do self calibration
        function. It needs 127 ADC clocks to complete calibration. This bit must be
        kept at 1 after CALDONE asserted. Clearing this bit will disable self calibration
        function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CALDONE
      bit_offset: 1
      bit_width: 1
      description: 'Calibration is Done

        1 = A/D converter self calibration is done.

        0 = A/D converter has not been calibrated or calibration is in progress if
        CALEN bit is set.

        When 0 is written to CALEN bit, CALDONE bit is cleared by hardware immediately.
        It is a read only bit.'
      read_allowed: true
      write_allowed: false
- !Module
  name: CLK
  description: Registers group
  base_addr: 0x50000200
  size: 0x28
  registers:
  - !Register
    name: PWRCON
    addr: 0x0
    size_bits: 32
    description: System Power Down Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: XTL12M_EN
      bit_offset: 0
      bit_width: 1
      description: "External Crystal Oscillator Control\nThe bit default value is\
        \ set by flash controller user configuration register config0 [26:24]. When\
        \ the default clock source is from external crystal. The bit is auto set to\
        \ \"1\"\n1 = Crystal oscillation enable \n0 = Crystal oscillation disable "
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC22M_EN
      bit_offset: 2
      bit_width: 1
      description: "Internal 22.1184 MHz Oscillator Control\n1 = 22.1184 MHz Oscillation\
        \ enable \n0 = 22.1184 MHz Oscillation disable "
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC10K_EN
      bit_offset: 3
      bit_width: 1
      description: "Internal 10KHz Oscillator Control\n1 = 10KHz Oscillation enable\
        \ \n0 = 10KHz Oscillation disable "
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_DLY
      bit_offset: 4
      bit_width: 1
      description: 'Enable the wake up delay counter.

        When the chip wakes up from power down mode, the clock control will delay
        certain clock cycles to wait system clock stable.

        The delayed clock cycle is 4096 clock cycles when chip work at external crystal
        (4 ~ 24MHz), and 256 clock cycles when chip work at 22.1184 MHz oscillator.

        1 = Enable the clock cycle delay

        0 = Disable the clock cycle delay'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_INT_EN
      bit_offset: 5
      bit_width: 1
      description: 'Power down mode wake Up Interrupt Enable

        0 = Disable

        1 = Enable. The interrupt will occur when Power down mode (Deep Sleep Mode)
        wakeup.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WU_STS
      bit_offset: 6
      bit_width: 1
      description: "Chip power down wake up status flag\nSet by \"power down wake\
        \ up\", it indicates that resume from power down mode \nThe flag is set if\
        \ the GPIO(P0~P4), UART wakeup\nWrite 1 to clear the bit \nNote: This bit\
        \ is working only if PD_WU_INT_EN (PWRCON[5]) set to 1. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWR_DOWN_EN
      bit_offset: 7
      bit_width: 1
      description: "System power down enable bit\nWhen set this bit \"1\", the chip\
        \ power down mode is enabled and the chip power down active is depend on the\
        \ PD_WAIT_CPU bit\n(a) if the PD_WAIT_CPU is \"0\" then the chip power down\
        \ after the PWR_DOWN_EN bit set.\n(b) if the PD_WAIT_CPU is \"1\" then the\
        \ chip keep active till the CPU sleep mode also active and then the chip power\
        \ down\nWhen chip wake up from power down, this bit is auto cleared, user\
        \ need to set this bit again for next power down.\nWhen in power down mode,\
        \ external crystal (4~ 24MHz) and the 22.1184 MHz OSC will be disabled in\
        \ this mode, but the 10 kHz OSC is not controlled by power down mode. \nWhen\
        \ in power down mode, the PLL and system clock are disabled, and ignored the\
        \ clock source selection. The clocks of peripheral are not controlled by power\
        \ down mode, if the peripheral clock source is from 10 kHz oscillator.\n1\
        \ = Chip enter the power down mode instant or wait CPU sleep command WFI\n\
        0 = Chip operate in normal mode or CPU in idle mode (sleep mode) because of\
        \ WFI command"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_WAIT_CPU
      bit_offset: 8
      bit_width: 1
      description: 'This bit control the power down entry condition

        1 = Chip entry power down mode when the both PWR_DOWN and CPU run WFI instruction.

        0 = Chip entry power down mode when the PWR_DOWN bit is set to 1'
      read_allowed: true
      write_allowed: true
  - !Register
    name: AHBCLK
    addr: 0x4
    size_bits: 32
    description: AHB Devices Clock Enable Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: ISP_EN
      bit_offset: 2
      bit_width: 1
      description: 'Flash ISP Controller Clock Enable Control.

        1 = To enable the Flash ISP controller clock.

        0 = To disable the Flash ISP controller clock.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_EN
      bit_offset: 3
      bit_width: 1
      description: 'EBI Controller Clock Enable Control.

        1 = To enable the EBI Controller clock.

        0 = To disable the EBI Controller clock.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: APBCLK
    addr: 0x8
    size_bits: 32
    description: APB Devices Clock Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WDT_EN
      bit_offset: 0
      bit_width: 1
      description: 'Watch Dog Timer Clock Enable.

        This bit is the protected bit, program this need a open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        0 = Disable Watchdog Timer Clock

        1 = Enable Watchdog Timer Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_EN
      bit_offset: 2
      bit_width: 1
      description: 'Timer0 Clock Enable Control

        0 = Disable Timer0 Clock

        1 = Enable Timer0 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_EN
      bit_offset: 3
      bit_width: 1
      description: 'Timer1 Clock Enable Control

        0 = Disable Timer1 Clock

        1 = Enable Timer1 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_EN
      bit_offset: 4
      bit_width: 1
      description: 'Timer2 Clock Enable Control

        0 = Disable Timer2 Clock

        1 = Enable Timer2 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_EN
      bit_offset: 5
      bit_width: 1
      description: 'Timer3 Clock Enable Control

        0 = Disable Timer3 Clock

        1 = Enable Timer3 Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FDIV_EN
      bit_offset: 6
      bit_width: 1
      description: 'Clock Divider Clock Enable Control

        0 = Disable FDIV Clock

        1 = Enable FDIV Clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C_EN
      bit_offset: 8
      bit_width: 1
      description: "I2C Clock Enable Control. \n0 = Disable I2C Clock\n1 = Enable\
        \ I2C Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_EN
      bit_offset: 12
      bit_width: 1
      description: "SPI0 Clock Enable Control. \n0 = Disable SPI0 Clock\n1 = Enable\
        \ SPI0 Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_EN
      bit_offset: 13
      bit_width: 1
      description: "SPI1 Clock Enable Control. \n0 = Disable SPI1 Clock\n1 = Enable\
        \ SPI1 Clock"
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART0_EN
      bit_offset: 16
      bit_width: 1
      description: 'UART0 Clock Enable Control.

        1 = Enable UART0 clock

        0 = Disable UART0 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_EN
      bit_offset: 17
      bit_width: 1
      description: 'UART1 Clock Enable Control.

        1 = Enable UART1 clock

        0 = Disable UART1 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM01_EN
      bit_offset: 20
      bit_width: 1
      description: 'PWM_01 Clock Enable Control.

        1 = Enable PWM01 clock

        0 = Disable PWM01 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM23_EN
      bit_offset: 21
      bit_width: 1
      description: 'PWM_23 Clock Enable Control.

        1 = Enable PWM23 clock

        0 = Disable PWM23 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM45_EN
      bit_offset: 22
      bit_width: 1
      description: 'PWM_45 Clock Enable Control.

        1 = Enable PWM45 clock

        0 = Disable PWM45 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM67_EN
      bit_offset: 23
      bit_width: 1
      description: 'PWM_67 Clock Enable Control.

        1 = Enable PWM67 clock

        0 = Disable PWM67 clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_EN
      bit_offset: 28
      bit_width: 1
      description: 'Analog-Digital-Converter (ADC) Clock Enable Control.

        1 = Enable ADC clock

        0 = Disable ADC clock'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSTATUS
    addr: 0xc
    size_bits: 32
    description: Clock status monitor Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: XTL12M_STB
      bit_offset: 0
      bit_width: 1
      description: 'XTL12M clock source stable flag

        1 = External Crystal clock is stable

        0 = External Crystal clock is not stable or not enable'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PLL_STB
      bit_offset: 2
      bit_width: 1
      description: 'PLL clock source stable flag

        1 = PLL clock is stable

        0 = PLL clock is not stable or not enable'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC10K_STB
      bit_offset: 3
      bit_width: 1
      description: 'OSC10K clock source stable flag

        1 = OSC10K clock is stable

        0 = OSC10K clock is not stable or not enable'
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC22M_STB
      bit_offset: 4
      bit_width: 1
      description: 'OSC22M clock source stable flag

        1 = OSC22M clock is stable

        0 = OSC22M clock is not stable or not enable'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLK_SW_FAIL
      bit_offset: 7
      bit_width: 1
      description: 'Clock switch fail flag

        1 = Clock switch fail

        0 = Clock switch success

        This bit will be set when target switch clock source is not stable. Write
        1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL0
    addr: 0x10
    size_bits: 32
    description: Clock Source Select Control Register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: HCLK_S
      bit_offset: 0
      bit_width: 3
      description: 'HCLK clock source select.

        Note:

        Before clock switch the related clock sources (pre-select and new-select)
        must be turn on

        The 3-bit default value is reloaded with the value of Config0.CFOSC[26:24]
        in user configuration register in Flash controller by any reset. Therefore
        the default value is either 000b or 111b.

        These bits are protected bit, program this need an open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        000 = clock source from external crystal clock (4 ~ 24MHz)

        010 = clock source from PLL clock

        011 = clock source from internal 10KHz oscillator clock

        111 = clock source from internal 22.1184 MHz oscillator clock

        others = Reserved'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STCLK_S
      bit_offset: 3
      bit_width: 3
      description: 'MCU Cortex_M0 SysTick clock source select.

        These bits are protected bit, program this need an open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        000 = Clock source from external crystal clock (4 ~ 24MHz)

        010 = Clock source from external crystal clock (4 ~ 24MHz)/2

        011 = clock source from HCLK/2

        1xx = clock source from internal 22.1184 MHz oscillator clock/2'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL1
    addr: 0x14
    size_bits: 32
    description: Clock Source Select Control Register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: WDT_S
      bit_offset: 0
      bit_width: 2
      description: 'Watchdog Timer clock source select.

        These bits are protected bit, program this need a open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        00 = clock source from external crystal clock (4 ~ 24MHz).

        10 = clock source from HCLK/2048 clock

        11 = clock source from internal 10KHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_S
      bit_offset: 2
      bit_width: 2
      description: 'ADC clock source select.

        00 = clock source from external crystal clock (4 ~ 24MHz).

        01 = clock source from PLL clock

        1x = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_S
      bit_offset: 8
      bit_width: 3
      description: 'TIMER0 clock source select.

        000 = clock source from external crystal clock (4 ~ 24MHz)

        010 = clock source from HCLK

        011 = clock source from external trigger

        1xx = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_S
      bit_offset: 12
      bit_width: 3
      description: 'TIMER1 clock source select.

        000 = clock source from external crystal clock (4 ~ 24MHz)

        010 = clock source from HCLK

        011 = clock source from external trigger

        1xx = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_S
      bit_offset: 16
      bit_width: 3
      description: 'TIMER2 clock source select.

        000 = clock source from external crystal clock (4 ~ 24MHz)

        010 = clock source from HCLK

        011 = clock source from external trigger

        1xx = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_S
      bit_offset: 20
      bit_width: 3
      description: 'TIMER3 clock source select.

        000 = clock source from external crystal clock (4 ~ 24MHz)

        010 = clock source from HCLK

        011 = clock source from external trigger

        1xx = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART_S
      bit_offset: 24
      bit_width: 2
      description: 'UART clock source select.

        00 = clock source from external crystal clock (4 ~ 24MHz)

        01 = clock source from PLL clock

        1x = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM01_S
      bit_offset: 28
      bit_width: 2
      description: 'PWM0 and PWM1 clock source select.

        PWM0 and PWM1 uses the same Engine clock source, both of them with the same
        pre-scalar

        00 = clock source from external crystal clock (4 ~ 24MHz)

        10 = clock source from HCLK

        11 = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM23_S
      bit_offset: 30
      bit_width: 2
      description: 'PWM2 and PWM3 clock source select.

        PWM2 and PWM3 uses the same Engine clock source, both of them with the same
        pre-scalar

        00 = clock source from external crystal clock (4 ~ 24MHz)

        10 = clock source from HCLK

        11 = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKDIV
    addr: 0x18
    size_bits: 32
    description: Clock Divider Number Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: HCLK_N
      bit_offset: 0
      bit_width: 4
      description: 'HCLK clock divide number from HCLK clock source

        The HCLK clock frequency = (HCLK clock source frequency) / (HCLK_N + 1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART_N
      bit_offset: 8
      bit_width: 4
      description: 'UART clock divide number from UART clock source

        The UART clock frequency = (UART clock source frequency ) / (UART_N + 1)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_N
      bit_offset: 16
      bit_width: 8
      description: 'ADC clock divide number from ADC clock source

        The ADC clock frequency = (ADC clock source frequency ) / (ADC_N + 1)'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKSEL2
    addr: 0x1c
    size_bits: 32
    description: Clock Source Select Control Register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: FRQDIV_S
      bit_offset: 2
      bit_width: 2
      description: 'Clock Divider Clock Source Select

        00 = clock source from external crystal clock (4 ~ 24MHz)

        10 = clock source from HCLK

        11 = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM45_S
      bit_offset: 4
      bit_width: 2
      description: 'PWM4 and PWM5 clock source select. - PWM4 and PWM5 used the same
        Engine clock source, both of them with the same pre-scalar

        00 = clock source from external crystal clock (4 ~ 24MHz)

        10 = clock source from HCLK

        11 = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM67_S
      bit_offset: 6
      bit_width: 2
      description: 'PWM6 and PWM7 clock source select. - PWM6 and PWM7 used the same
        Engine clock source, both of them with the same pre-scalar

        00 = clock source from external crystal clock (4 ~ 24MHz)

        10 = clock source from HCLK

        11 = clock source from internal 22.1184 MHz oscillator clock'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PLLCON
    addr: 0x20
    size_bits: 32
    description: PLL Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5c22e
    fields:
    - !Field
      name: FB_DV
      bit_offset: 0
      bit_width: 9
      description: PLL Feedback Divider Control Pins (PLL_F[8:0])
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_DV
      bit_offset: 9
      bit_width: 5
      description: PLL Input Divider Control Pins (PLL_R[4:0])
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_DV
      bit_offset: 14
      bit_width: 2
      description: PLL Output Divider Control Pins (PLL_OD[1:0])
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD
      bit_offset: 16
      bit_width: 1
      description: "Power Down Mode. \nIf set the IDLE bit \"1\" in PWRCON register,\
        \ the PLL will enter power down mode too\n0 = PLL is in normal mode (default)\n\
        1 = PLL is in power-down mode"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BP
      bit_offset: 17
      bit_width: 1
      description: 'PLL Bypass Control

        0 = PLL is in normal mode (default)

        1 = PLL clock output is same as clock input (XTALin)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: OE
      bit_offset: 18
      bit_width: 1
      description: 'PLL OE (FOUT enable) pin Control

        0 = PLL FOUT enable

        1 = PLL FOUT is fixed low'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PLL_SRC
      bit_offset: 19
      bit_width: 1
      description: 'PLL Source Clock Select

        1 = PLL source clock from 22.1184 MHz oscillator

        0 = PLL source clock from external crystal clock (4 ~ 24 MHz)'
      read_allowed: true
      write_allowed: true
  - !Register
    name: FRQDIV
    addr: 0x24
    size_bits: 32
    description: Frequency Divider Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FSEL
      bit_offset: 0
      bit_width: 4
      description: "Divider Output Frequency Selection Bits\nThe formula of output\
        \ frequency is\nFout = Fin/2(N+1), \nwhere Fin is the input clock frequency,\
        \ Fout is the frequency of divider output clock, N is the 4-bit value of FSEL[3:0]."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER_EN
      bit_offset: 4
      bit_width: 1
      description: 'Frequency Divider Enable Bit

        0 = Disable Frequency Divider

        1 = Enable Frequency Divider'
      read_allowed: true
      write_allowed: true
- !Module
  name: EBI_CTL
  description: Registers group
  base_addr: 0x50010000
  size: 0x8
  registers:
  - !Register
    name: EBICON
    addr: 0x0
    size_bits: 32
    description: External Bus Interface General Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ExtEN
      bit_offset: 0
      bit_width: 1
      description: 'EBI Enable

        This bit is the functional enable bit for EBI.

        0 = EBI function is disabled

        1 = EBI function is enabled'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtBW16
      bit_offset: 1
      bit_width: 1
      description: 'EBI data width 16 bit

        This bit defines if the data bus is 8-bit or 16-bit.

        0 = EBI data width is 8 bit

        1 = EBI data width is 16 bit'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MCLKDIV
      bit_offset: 8
      bit_width: 3
      description: "External Output Clock Divider\nThe frequency of EBI output clock\
        \ is controlled by MCLKDIV.\n\nMCLKDIV\tOutput clock (MCLK)\t\n000\tHCLK/1\t\
        \n001\tHCLK/2\t\n010\tHCLK/4\t\n011\tHCLK/8\t\n100\tHCLK/16\t\n101\tHCKL/32\t\
        \n11X\tdefault\t\n\nNotice: Default value of output clock is HCLK/1"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExttALE
      bit_offset: 16
      bit_width: 3
      description: 'Expand Time of ALE

        The ALE width (tALE) to latch the address can be controlled by ExttALE.

        tALE = (ExttALE + 1) * MCLK'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EXTIME
    addr: 0x4
    size_bits: 32
    description: External Bus Interface 0 Timing Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ExttACC
      bit_offset: 3
      bit_width: 5
      description: 'EBI Data Accesss Time

        ExttACC define data access time (tACC).

        tACC = (ExttACC + 1) * MCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExttAHD
      bit_offset: 8
      bit_width: 3
      description: 'EBI Data Access Hold Time

        ExttAHD define data access hold time (tAHD).

        tAHD = (ExttAHD + 1) * MCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtIW2X
      bit_offset: 12
      bit_width: 4
      description: 'Idle State Cycle After Write

        When write action is finish, idle state is inserted and nCS return to high
        if ExtIW2X is not zero.

        Idle state cycle = (ExtIW2X * MCLK)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ExtIR2R
      bit_offset: 24
      bit_width: 4
      description: 'Idle State Cycle Between Read-Read

        When read action is finish and next action is going to read, idle state is
        inserted and nCS return to high if ExtIR2R is not zero.

        Idle state cycle = (ExtIR2R * MCLK)'
      read_allowed: true
      write_allowed: true
- !Module
  name: FMC
  description: Registers group
  base_addr: 0x5000c000
  size: 0x1c
  registers:
  - !Register
    name: ISPCON
    addr: 0x0
    size_bits: 32
    description: ISP Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPEN
      bit_offset: 0
      bit_width: 1
      description: 'ISP Enable

        This bit is protected bit. ISP function enable bit. Set this bit to enable
        ISP function.

        1 = Enable ISP function

        0 = Disable ISP function'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BS
      bit_offset: 1
      bit_width: 1
      description: "Boot Select \nThis bit is protected bit. Set/clear this bit to\
        \ select next booting from LDROM/APROM, respectively. This bit also functions\
        \ as MCU booting status flag, which can be used to check where MCU booted\
        \ from. This bit is initiated with the inversed value of CBS in Config0 after\
        \ power-on reset; It keeps the same value at other reset.\n1 = boot from LDROM\n\
        0 = boot from APROM"
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFGUEN
      bit_offset: 4
      bit_width: 1
      description: "Config Update Enable\nWriting this bit to 1 enables s/w to update\
        \ Config value by ISP procedure regardless of program code is running in APROM\
        \ or LDROM.\n1 = Config update enable \n0 = Config update disable"
      read_allowed: true
      write_allowed: true
    - !Field
      name: LDUEN
      bit_offset: 5
      bit_width: 1
      description: "LDROM Update Enable\nLDROM update enable bit. \n1 = LDROM can\
        \ be updated when the MCU runs in APROM.\n0 = LDROM cannot be updated"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISPFF
      bit_offset: 6
      bit_width: 1
      description: "ISP Fail Flag\nThis bit is set by hardware when a triggered ISP\
        \ meets any of the following conditions:\n(1) APROM writes to itself.\n(2)\
        \ LDROM writes to itself. \n(3) Destination address is illegal, such as over\
        \ an available range.\nWrite 1 to clear."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWRST
      bit_offset: 7
      bit_width: 1
      description: "Software Reset\nWriting 1 to this bit to start software reset.\
        \ \nIt is cleared by hardware after reset is finished."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PT
      bit_offset: 8
      bit_width: 3
      description: "Flash Program Time\nPT[2]\tPT[1]\tPT[0]\tProgram Time (us)\t\n\
        0\t0\t0\t40\t\n0\t0\t1\t45\t\n0\t1\t0\t50\t\n0\t1\t1\t55\t\n1\t0\t0\t20\t\n\
        1\t0\t1\t25\t\n1\t1\t0\t30\t\n1\t1\t1\t35\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ET
      bit_offset: 12
      bit_width: 3
      description: "Flash Erase Time\nET[2]\tET[1]\tET[0]\tErase Time (ms)\t\n0\t\
        0\t0\t20 (default)\t\n0\t0\t1\t25\t\n0\t1\t0\t30\t\n0\t1\t1\t35\t\n1\t0\t\
        0\t3\t\n1\t0\t1\t5\t\n1\t1\t0\t10\t\n1\t1\t1\t15\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPADR
    addr: 0x4
    size_bits: 32
    description: ISP Address Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPADR
      bit_offset: 0
      bit_width: 32
      description: "ISP Address \nNuMicro M051 series equips with a maximum 16kx32\
        \ embedded flash, it supports word program only. ISPARD[1:0] must be kept\
        \ 2'b00 for ISP operation. "
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPDAT
    addr: 0x8
    size_bits: 32
    description: ISP Data Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPDAT
      bit_offset: 0
      bit_width: 32
      description: "ISP Data \nWrite data to this register before ISP program operation\n\
        Read data from this register after ISP read operation"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPCMD
    addr: 0xc
    size_bits: 32
    description: ISP Command Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FOEN_FCEN_FCTRL
      bit_offset: 0
      bit_width: 6
      description: "ISP Command \nISP command table is shown below:\nOperation Mode\t\
        FOEN\tFCEN\tFCTRL[3:0]\t\nRead\t0\t0\t0\t0\t0\t0\t\nProgram\t1\t0\t0\t0\t\
        0\t1\t\nPage Erase\t1\t0\t0\t0\t1\t0\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISPTRG
    addr: 0x10
    size_bits: 32
    description: ISP Trigger Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISPGO
      bit_offset: 0
      bit_width: 1
      description: 'ISP start trigger

        Write 1 to start ISP operation and this bit will be cleared to 0 by hardware
        automatically when ISP operation is finish.


        1 = ISP is on going


        0 = ISP done'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DFBADR
    addr: 0x14
    size_bits: 32
    description: Data Flash Base Address
    read_allowed: true
    write_allowed: false
    reset_value: 0x1f000
    fields:
    - !Field
      name: DFBA
      bit_offset: 0
      bit_width: 32
      description: 'Data Flash Base Address

        This register indicates data flash start address.


        It is a read only register.


        For 8/16/32/64kB flash memory device, the data flash size is 4kB and it start
        address is fixed at 0x01F000 by hardware internally.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: FATCON
    addr: 0x18
    size_bits: 32
    description: Flash Access Time Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FPSEN
      bit_offset: 0
      bit_width: 1
      description: 'Flash Power Save Enable

        If CPU clock is slower than 24 MHz, then s/w can enable flash power saving
        function.

        1 = Enable flash power saving

        0 = Disable flash power saving'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FATS
      bit_offset: 1
      bit_width: 3
      description: "Flash Access Time Window Select\nThese bits are used to decide\
        \ flash sense amplifier active duration.\n\n\n\nFATS\tAccess Time window (ns)\t\
        \n000\t40\t\n001\t50\t\n010\t60\t\n011\t70\t\n100\t80\t\n101\t90\t\n110\t\
        100\t\n111\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: L_SPEED
      bit_offset: 4
      bit_width: 1
      description: "Flash Low Speed Mode Enable\n1 = Flash access always no wait state\
        \ (zero wait state)\n0 = Insert wait state while Flash access discontinued\
        \ address. \nNote: Set this bit only when HCLK <= 25MHz. If HCLK > 25MHz,\
        \ CPU will fetch wrong code and cause fail result."
      read_allowed: true
      write_allowed: true
- !Module
  name: GCR
  description: Registers group
  base_addr: 0x50000000
  size: 0x10
  registers:
  - !Register
    name: PDID
    addr: 0x0
    size_bits: 32
    description: Part Device Identification number Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDID
      bit_offset: 0
      bit_width: 32
      description: This register reflects device part number code. S/W can read this
        register to identify which device is used.
      read_allowed: true
      write_allowed: false
  - !Register
    name: RSTSRC
    addr: 0x4
    size_bits: 32
    description: System Reset Source Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RSTS_POR
      bit_offset: 0
      bit_width: 1
      description: 'The RSTS_POR flag is set by the "reset signal" which is from the
        Power-On Reset (POR) module or bit CHIP_RST (IPRSTC1[0]) is set, to indicate
        the previous reset source.

        1= The Power-On-Reset(POR) or CHIP_RST=1 had issued the reset signal to reset
        the system.

        0= No reset from POR

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_RESET
      bit_offset: 1
      bit_width: 1
      description: 'The RSTS_RESET flag is set by the "reset signal" from the /RESET
        pin to indicate the previous reset source.

        1= The Pin /RESET had issued the reset signal to reset the system.

        0= No reset from Pin /RESET

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_WDT
      bit_offset: 2
      bit_width: 1
      description: 'The RSTS_WDT flag is set by the "reset signal" from the Watch
        Dog Timer to indicate the previous reset source.

        1= The Watch Dog Timer had issued the reset signal to reset the system.

        0= No reset from Watch-Dog

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_LVR
      bit_offset: 3
      bit_width: 1
      description: 'The RSTS_LVR flag is set by the "reset signal" from the Low-Voltage-Reset
        module to indicate the previous reset source.

        1= The LVR module had issued the reset signal to reset the system.

        0= No reset from LVR

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_BOD
      bit_offset: 4
      bit_width: 1
      description: 'The RSTS_BOD flag is set by the "reset signal" from the Brown-Out-Detected
        module to indicate the previous reset source.

        1= The Brown-Out-Detected module had issued the reset signal to reset the
        system.

        0= No reset from BOD

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_MCU
      bit_offset: 5
      bit_width: 1
      description: 'The RSTS_MCU flag is set by the "reset signal" from the MCU Cortex_M0
        kernel to indicate the previous reset source.

        1= The MCU Cortex_M0 had issued the reset signal to reset the system by software
        writing 1 to bit SYSRESTREQ(AIRCR[2], Application Interrupt and Reset Control
        Register) in system control registers of Cortex_M0 kernel.

        0= No reset from MCU

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSTS_CPU
      bit_offset: 7
      bit_width: 1
      description: 'The RSTS_CPU flag is set by hardware if software writes CPU_RST
        (IPRSTC1[1]) with a "1" to rest Cortex-M0 CPU kernel and Flash memory controller(FMC).

        1= The Cortex-M0 CPU kernel and FMC are reset by software set CPU_RST to 1.

        0= No reset from CPU

        This bit is cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IPRSTC1
    addr: 0x8
    size_bits: 32
    description: IP Reset Control Resister1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CHIP_RST
      bit_offset: 0
      bit_width: 1
      description: 'CHIP one shot reset.

        Set this bit will reset the CHIP, including CPU kernel and all peripherals,
        and this bit will automatically return to "0" after the 2 clock cycles.

        The CHIP_RST is same as the POR reset , all the chip module is reset and the
        chip setting from flash are also reload

        This bit is the protected bit, program this need an open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        0= Normal

        1= Reset CHIP'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CPU_RST
      bit_offset: 1
      bit_width: 1
      description: 'CPU kernel one shot reset.

        Set this bit will reset the Cortex-M0 CPU kernel and Flash memory controller
        (FMC). This bit will automatically return to "0" after the 2 clock cycles

        This bit is the protected bit, program this need an open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        0= Normal

        1= Reset CPU'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EBI_RST
      bit_offset: 3
      bit_width: 1
      description: 'EBI Controller Reset

        Set these bit "1" will generate a reset signal to the EBI. User need to set
        this bit to "0" to release from the reset state

        This bit is the protected bit, program this need an open lock sequence, write
        "59h","16h","88h" to address 0x5000_0100 to un-lock this bit. Reference the
        register REGWRPROT at address GCR_BA + 0x100

        0= Normal operation

        1= EBI IP reset'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IPRSTC2
    addr: 0xc
    size_bits: 32
    description: IP Reset Control Resister 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GPIO_RST
      bit_offset: 1
      bit_width: 1
      description: 'GPIO (P0~P4) controller Reset

        0= GPIO controller normal operation

        1= GPIO controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR0_RST
      bit_offset: 2
      bit_width: 1
      description: 'Timer0 controller Reset

        0= Timer0 controller normal operation

        1= Timer0 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR1_RST
      bit_offset: 3
      bit_width: 1
      description: 'Timer1 controller Reset

        0= Timer1 controller normal operation

        1= Timer1 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR2_RST
      bit_offset: 4
      bit_width: 1
      description: 'Timer2 controller Reset

        0= Timer2 controller normal operation

        1= Timer2 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMR3_RST
      bit_offset: 5
      bit_width: 1
      description: 'Timer3 controller Reset

        0= Timer3 controller normal operation

        1= Timer3 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2C_RST
      bit_offset: 8
      bit_width: 1
      description: 'I2C controller Reset

        0= I2C controller normal operation

        1= I2C controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI0_RST
      bit_offset: 12
      bit_width: 1
      description: 'SPI0 controller Reset

        0= SPI0 controller normal operation

        1= SPI0 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI1_RST
      bit_offset: 13
      bit_width: 1
      description: 'SPI1 controller Reset

        0= SPI1 controller normal operation

        1= SPI1 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART0_RST
      bit_offset: 16
      bit_width: 1
      description: 'UART0 controller Reset

        0= UART0 controller Normal operation

        1= UART0 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UART1_RST
      bit_offset: 17
      bit_width: 1
      description: 'UART1 controller Reset

        0 = UART1 controller normal operation

        1 = UART1 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM03_RST
      bit_offset: 20
      bit_width: 1
      description: 'PWM0~3 controller Reset

        0= PWM0~3 controller normal operation

        1= PWM0~3 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM47_RST
      bit_offset: 21
      bit_width: 1
      description: 'PWM4~7 controller Reset

        0= PWM4~7 controller normal operation

        1= PWM4~7 controller reset'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_RST
      bit_offset: 28
      bit_width: 1
      description: 'ADC Controller Reset

        0= ADC controller normal operation

        1= ADC controller reset'
      read_allowed: true
      write_allowed: true
  - !Register
    name: BODCR
    addr: 0x18
    size_bits: 32
    description: Brown Out Detector Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x80
    fields:
    - !Field
      name: BOD_EN
      bit_offset: 0
      bit_width: 1
      description: 'Brown Out Detector Enable (initiated & write-protected bit)

        The default value is set by flash controller user configuration register config0
        bit[23]

        1= Brown Out Detector function is enabled

        0= Brown Out Detector function is disabled'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_VL
      bit_offset: 1
      bit_width: 2
      description: "Brown Out Detector Threshold Voltage Selection (initiated & write-protected\
        \ bit)\nThe default value is set by flash controller user configuration register\
        \ config0 bit[22:21]\nBOV_VL[1]\tBOV_VL[0]\tBrown out voltage\t\n1\t1\t4.5V\t\
        \n1\t0\t3.8V\t\n0\t1\t2.7V\t\n0\t0\t2.2V\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_RSTEN
      bit_offset: 3
      bit_width: 1
      description: 'Brown Out Reset Enable (initiated & write-protected bit)

        1= Enable the Brown Out "RESET" function, when the Brown Out Detector function
        is enable and the detected voltage is lower than the threshold then assert
        a signal to reset the chip

        The default value is set by flash controller user configuration register config0
        bit[20]

        0= Enable the Brown Out "INTERRUPT" function, when the Brown Out Detector
        function is enable and the detected voltage is lower than the threshold then
        assert a signal to interrupt the MCU Cortex-M0

        When the BOD_EN is enabled and the interrupt is assert, the interrupt will
        keep till to the BOD_EN set to "0". The interrupt for CPU can be blocked by
        disable the NVIC in CPU for BOD interrupt or disable the interrupt source
        by disable the BOD_EN and then re-enable the BOD_EN function if the BOD function
        is required'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_INTF
      bit_offset: 4
      bit_width: 1
      description: 'Brown Out Detector Interrupt Flag

        1= When Brown Out Detector detects the VDD is dropped through the voltage
        of BOD_VL setting or the VDD is raised up through the voltage of BOD_VL setting,
        this bit is set to "1" and the brown out interrupt is requested if brown out
        interrupt is enabled.

        0= Brown Out Detector does not detect any voltage draft at VDD down through
        or up through the voltage of BOD_VL setting.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_LPM
      bit_offset: 5
      bit_width: 1
      description: 'Brown Out Detector Low power Mode (write-protected bit)

        1= Enable the BOD low power mode

        0= BOD operate in normal mode (default)

        The BOD consumes about 100uA in normal mode, the low power mode can reduce
        the current to about 1/10 but slow the BOD response.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_OUT
      bit_offset: 6
      bit_width: 1
      description: 'The status for Brown Out Detector output state

        1= Brown Out Detector status output is 1, the detected voltage is lower than
        BOD_VL setting. If the BOD_EN is "0"(disabled), this bit always response "0"

        0= Brown Out Detector status output is 0, the detected voltage is higher than
        BOD_VL setting'
      read_allowed: true
      write_allowed: false
    - !Field
      name: LVR_EN
      bit_offset: 7
      bit_width: 1
      description: 'Low Voltage Reset Enable (write-protected bit)

        The LVR function reset the chip when the input power voltage is lower than
        LVR circuit setting. LVR function is enabled in default.

        1= Enabled Low Voltage Reset function - After enable the bit, the LVR function
        will active with 100uS delay for LVR output stable.(default).

        0= Disabled Low Voltage Reset function'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PORCR
    addr: 0x24
    size_bits: 32
    description: Power-On-Reset Controller Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: POR_DIS_CODE
      bit_offset: 0
      bit_width: 16
      description: "The register is used for the Power-On-Reset enable control. \n\
        When power on, the POR circuit generates a reset signal to reset the whole\
        \ chip function, but noise on the power may cause the POR active again. If\
        \ set the POR_DIS_CODE equal to 0x5AA5, the POR reset function will be disabled\
        \ and the POR function will re-active till the power voltage is lower to set\
        \ the POR_DIS_CODE to another value or reset by chip other reset function.\
        \ Include:\nPIN reset, Watch dog, LVR reset BOD reset, ICE reset command and\
        \ the software-chip reset function\nThis register is the protected register,\
        \ program this need an open lock sequence, write \"59h\",\"16h\",\"88h\" to\
        \ address 0x5000_0100 to un-lock this bit. Reference the register REGWRPROT\
        \ at address GCR_BA + 0x100"
      read_allowed: true
      write_allowed: true
  - !Register
    name: P0_MFP
    addr: 0x30
    size_bits: 32
    description: P0 multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: P0_MFP
      bit_offset: 0
      bit_width: 8
      description: 'P0 multiple function Selection

        The pin function of P0 is depending on P0_MFP and P0_ALT.

        Refer to P0_ALT descriptions in detail.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT0
      bit_offset: 8
      bit_width: 1
      description: "P0.0 alternate function Selection\nThe pin function of P0.0 is\
        \ depend on P0_MFP[0] and P0_ALT[0].\nP0_ALT[0]\tP0_MFP[0]\tP0.0function\t\
        \n0\t0\tP0.0\t\n0\t1\tAD0(EBI)\t\n1\t0\tCTS1(UART1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT1
      bit_offset: 9
      bit_width: 1
      description: "P0.1 alternate function Selection\nThe pin function of P0.1 is\
        \ depend on P0_MFP[1] and P0_ALT[1].\nP0_ALT[1]\tP0_MFP[1]\tP0.1function\t\
        \n0\t0\tP0.1\t\n0\t1\tAD1(EBI)\t\n1\t0\tRTS1(UART1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT2
      bit_offset: 10
      bit_width: 1
      description: "P0.2 alternate function Selection\nThe pin function of P0.2 is\
        \ depend on P0_MFP[2] and P0_ALT[2].\nP0_ALT[2]\tP0_MFP[2]\tP0.2function\t\
        \n0\t0\tP0.2\t\n0\t1\tAD2(EBI)\t\n1\t0\tCTS0(UART0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT3
      bit_offset: 11
      bit_width: 1
      description: "P0.3 alternate function Selection\nThe pin function of P0.3 is\
        \ depend on P0_MFP[3] and P0_ALT[3].\nP0_ALT[3]\tP0_MFP[3]\tP0.3function\t\
        \n0\t0\tP0.3\t\n0\t1\tAD3(EBI)\t\n1\t0\tRTS0(UART0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT4
      bit_offset: 12
      bit_width: 1
      description: "P0.4 alternate function Selection\nThe pin function of P0.4 is\
        \ depend on P0_MFP[4] and P0_ALT[4].\nP0_ALT[4]\tP0_MFP[4]\tP0.4function\t\
        \n0\t0\tP0.4\t\n0\t1\tAD4(EBI)\t\n1\t0\tSPISS1(SPI1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT5
      bit_offset: 13
      bit_width: 1
      description: "P0.5 alternate function Selection\nThe pin function of P0.5 is\
        \ depend on P0_MFP[5] and P0_ALT[5].\nP0_ALT[5]\tP0_MFP[5]\tP0.5 function\t\
        \n0\t0\tP0.5\t\n0\t1\tAD5(EBI)\t\n1\t0\tMOSI_1(SPI1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT6
      bit_offset: 14
      bit_width: 1
      description: "P0.6 alternate function Selection\nThe pin function of P0.6 is\
        \ depend on P0_MFP[6] and P0_ALT[6].\nP0_ALT[6]\tP0_MFP[6]\tP0.6 function\t\
        \n0\t0\tP0.6\t\n0\t1\tAD6(EBI)\t\n1\t0\tMISO_1(SPI1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_ALT7
      bit_offset: 15
      bit_width: 1
      description: "P0.7 alternate function Selection\nThe pin function of P0.7 is\
        \ depend on P0_MFP[7] and P0_ALT[7].\nP0_ALT[7]\tP0_MFP[7]\tP0.7 function\t\
        \n0\t0\tP0.7\t\n0\t1\tAD7(EBI)\t\n1\t0\tSPICLK1(SPI1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P0_TYPEn
      bit_offset: 16
      bit_width: 8
      description: 'P0[7:0] input Schmitt Trigger function Enable

        1= P0[7:0] I/O input Schmitt Trigger function enable

        0= P0[7:0] I/O input Schmitt Trigger function disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: P1_MFP
    addr: 0x34
    size_bits: 32
    description: P1 multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: P1_MFP
      bit_offset: 0
      bit_width: 8
      description: 'P1 multiple function Selection

        The pin function of P1 is depending on P1_MFP and P1_ALT.

        Refer to P1_ALT descriptions in detail.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT0
      bit_offset: 8
      bit_width: 1
      description: "P1.0 alternate function Selection\nThe pin function of P1.0 is\
        \ depend on P1_MFP[0] and P1_ALT[0].\nP1_ALT[0]\tP1_MFP[0]\tP1.0function\t\
        \n0\t0\tP1.0\t\n0\t1\tAIN0(ADC)\t\n1\t0\tT2(Timer2)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT1
      bit_offset: 9
      bit_width: 1
      description: "P1.1 alternate function Selection\nThe pin function of P1.1 is\
        \ depend on P1_MFP[1] and P1_ALT[1].\nP1_ALT[1]\tP1_MFP[1]\tP1.1function\t\
        \n0\t0\tP1.1\t\n0\t1\tAIN1(ADC)\t\n1\t0\tT3(Timer3)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT2
      bit_offset: 10
      bit_width: 1
      description: "P1.2 alternate function Selection\nThe pin function of P1.2 is\
        \ depend on P1_MFP[2] and P1_ALT[2].\nP1_ALT[2]\tP1_MFP[2]\tP1.2function\t\
        \n0\t0\tP1.2\t\n0\t1\tAIN2(ADC)\t\n1\t0\tRXD1(UART1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT3
      bit_offset: 11
      bit_width: 1
      description: "P1.3 alternate function Selection\nThe pin function of P1.3 is\
        \ depend on P1_MFP[3] and P1_ALT[3].\nP1_ALT[3]\tP1_MFP[3]\tP1.3function\t\
        \n0\t0\tP1.3\t\n0\t1\tAIN3(ADC)\t\n1\t0\tTXD1(UART1)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT4
      bit_offset: 12
      bit_width: 1
      description: "P1.4 alternate function Selection\nThe pin function of P1.4 is\
        \ depend on P1_MFP[4] and P1_ALT[4].\nP1_ALT[4]\tP1_MFP[4]\tP1.4function\t\
        \n0\t0\tP1.4\t\n0\t1\tAIN4(ADC)\t\n1\t0\tSPISS0(SPI0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT5
      bit_offset: 13
      bit_width: 1
      description: "P1.5 alternate function Selection\nThe pin function of P1.5 is\
        \ depend on P1_MFP[5] and P1_ALT[5].\nP1_ALT[5]\tP1_MFP[5]\tP1.5 function\t\
        \n0\t0\tP1.5\t\n0\t1\tAIN5(ADC)\t\n1\t0\tMOSI_0(SPI0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT6
      bit_offset: 14
      bit_width: 1
      description: "P1.6 alternate function Selection\nThe pin function of P1.6 is\
        \ depend on P1_MFP[6] and P1_ALT[6].\nP1_ALT[6]\tP1_MFP[6]\tP1.6 function\t\
        \n0\t0\tP1.6\t\n0\t1\tAIN6(ADC)\t\n1\t0\tMISO_0(SPI0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_ALT7
      bit_offset: 15
      bit_width: 1
      description: "P1.7 alternate function Selection\nThe pin function of P1.7 is\
        \ depend on P1_MFP[7] and P1_ALT[7].\nP1_ALT[7]\tP1_MFP[7]\tP1.7 function\t\
        \n0\t0\tP1.7\t\n0\t1\tAIN7(ADC)\t\n1\t0\tSPICLK0(SPI0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P1_TYPEn
      bit_offset: 16
      bit_width: 8
      description: 'P1[7:0] input Schmitt Trigger function Enable

        1= P1[7:0] I/O input Schmitt Trigger function enable

        0= P1[7:0] I/O input Schmitt Trigger function disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: P2_MFP
    addr: 0x38
    size_bits: 32
    description: P2 multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: P2_MFP
      bit_offset: 0
      bit_width: 8
      description: 'P2 multiple function Selection

        The pin function of P2 is depending on P2_MFP and P2_ALT.

        Refer to P2_ALT descriptions in detail.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT0
      bit_offset: 8
      bit_width: 1
      description: "P2.0 alternate function Selection\nThe pin function of P2.0 is\
        \ depend on P2_MFP[0] and P2_ALT[0].\nP2_ALT[0]\tP2_MFP[0]\tP2.0function\t\
        \n0\t0\tP2.0\t\n0\t1\tAD8(EBI)\t\n1\t0\tPWM0(PWM generator 0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT1
      bit_offset: 9
      bit_width: 1
      description: "P2.1 alternate function Selection\nThe pin function of P2.1 is\
        \ depend on P2_MFP[1] and P2_ALT[1].\nP2_ALT[1]\tP2_MFP[1]\tP2.1function\t\
        \n0\t0\tP2.1\t\n0\t1\tAD9(EBI)\t\n1\t0\tPWM1(PWM generator 0)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT2
      bit_offset: 10
      bit_width: 1
      description: "P2.2 alternate function Selection\nThe pin function of P2.2 is\
        \ depend on P2_MFP[2] and P2_ALT[2].\nP2_ALT[2]\tP2_MFP[2]\tP2.2function\t\
        \n0\t0\tP2.2\t\n0\t1\tAD10(EBI)\t\n1\t0\tPWM2(PWM generator 2)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT3
      bit_offset: 11
      bit_width: 1
      description: "P2.3 alternate function Selection\nThe pin function of P2.3 is\
        \ depend on P2_MFP[3] and P2_ALT[3].\nP2_ALT[3]\tP2_MFP[3]\tP2.3function\t\
        \n0\t0\tP2.3\t\n0\t1\tAD11(EBI)\t\n1\t0\tPWM3(PWM generator 2)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT4
      bit_offset: 12
      bit_width: 1
      description: "P2.4 alternate function Selection\nThe pin function of P2.4 is\
        \ depend on P2_MFP[4] and P2_ALT[4].\nP2_ALT[4]\tP2_MFP[4]\tP0.4function\t\
        \n0\t0\tP0.4\t\n0\t1\tAD12(EBI)\t\n1\t0\tPWM4(PWM generator 4)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT5
      bit_offset: 13
      bit_width: 1
      description: "P2.5 alternate function Selection\nThe pin function of P2.5 is\
        \ depend on P2_MFP[5] and P2_ALT[5].\nP2_ALT[5]\tP2_MFP[5]\tP2.5 function\t\
        \n0\t0\tP2.5\t\n0\t1\tAD13(EBI)\t\n1\t0\tPWM5(PWM generator 4)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT6
      bit_offset: 14
      bit_width: 1
      description: "P2.6 alternate function Selection\nThe pin function of P2.6 is\
        \ depend on P2_MFP[6] and P2_ALT[6].\nP2_ALT[6]\tP2_MFP[6]\tP2.6 function\t\
        \n0\t0\tP2.6\t\n0\t1\tAD14(EBI)\t\n1\t0\tPWM6(PWM generator 6)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_ALT7
      bit_offset: 15
      bit_width: 1
      description: "P2.7 alternate function Selection\nThe pin function of P2.7 is\
        \ depend on P2_MFP[7] and P2_ALT[7].\nP2_ALT[7]\tP2_MFP[7]\tP2.7 function\t\
        \n0\t0\tP2.7\t\n0\t1\tAD15(EBI)\t\n1\t0\tPWM7(PWM generator 6)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P2_TYPEn
      bit_offset: 16
      bit_width: 8
      description: 'P2[7:0] input Schmitt Trigger function Enable

        1= P2[7:0] I/O input Schmitt Trigger function enable

        0= P2[7:0] I/O input Schmitt Trigger function disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: P3_MFP
    addr: 0x3c
    size_bits: 32
    description: P3 multiple function and input type control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: P3_MFP
      bit_offset: 0
      bit_width: 8
      description: 'P3 multiple function Selection

        The pin function of P3 is depending on P3_MFP and P3_ALT.

        Refer to P3_ALT descriptions in detail.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT0
      bit_offset: 8
      bit_width: 1
      description: "P3.0 alternate function Selection\nThe pin function of P3.0 is\
        \ depend on P3_MFP[0] and P3_ALT[0].\nP3_ALT[0]\tP3_MFP[0]\tP3.0function\t\
        \n0\t0\tP3.0\t\n0\t1\tRXD(UART0)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT1
      bit_offset: 9
      bit_width: 1
      description: "P3.1 alternate function Selection\nThe pin function of P3.1 is\
        \ depend on P3_MFP[1] and P3_ALT[1].\nP3_ALT[1]\tP3_MFP[1]\tP3.1function\t\
        \n0\t0\tP3.1\t\n0\t1\tTXD(UART0)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT2
      bit_offset: 10
      bit_width: 1
      description: "P3.2 alternate function Selection\nThe pin function of P3.2 is\
        \ depend on P3_MFP[2] and P3_ALT[2].\nP3_ALT[2]\tP3_MFP[2]\tP3.2function\t\
        \n0\t0\tP3.2\t\n0\t1\t/INT0\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT3
      bit_offset: 11
      bit_width: 1
      description: "P3.3 alternate function Selection\nThe pin function of P3.3 is\
        \ depend on P3_MFP[3] and P3_ALT[3].\nP3_ALT[3]\tP3_MFP[3]\tP3.3function\t\
        \n0\t0\tP3.3\t\n0\t1\t/INT1\t\n1\t0\tMCLK(EBI)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT4
      bit_offset: 12
      bit_width: 1
      description: "P3.4 alternate function Selection\nThe pin function of P3.4 is\
        \ depend on P3_MFP[4] and P3_ALT[4].\nP3_ALT[4]\tP3_MFP[4]\tP3.4function\t\
        \n0\t0\tP3.4\t\n0\t1\tT0(Timer0)\t\n1\t0\tSDA(I2C)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT5
      bit_offset: 13
      bit_width: 1
      description: "P3.5 alternate function Selection\nThe pin function of P3.5 is\
        \ depend on P3_MFP[5] and P3_ALT[5].\nP3_ALT[5]\tP3_MFP[5]\tP3.5 function\t\
        \n0\t0\tP3.5\t\n0\t1\tT1(Timer1)\t\n1\t0\tSCL(I2C)\t\n1\t1\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT6
      bit_offset: 14
      bit_width: 1
      description: "P3.6 alternate function Selection\nThe pin function of P3.6 is\
        \ depend on P3_MFP[6] and P3_ALT[6].\nP3_ALT[6]\tP3_MFP[6]\tP3.6 function\t\
        \n0\t0\tP3.6\t\n0\t1\tWR(EBI)\t\n1\t0\tCKO(Clock Driver output)\t\n1\t1\t\
        Reserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_ALT7
      bit_offset: 15
      bit_width: 1
      description: "P3.7 alternate function Selection\nThe pin function of P3.7 is\
        \ depend on P3_MFP[7] and P3_ALT[7].\nP3_ALT[7]\tP3_MFP[7]\tP3.7 function\t\
        \n0\t0\tP3.7\t\n0\t1\tRD(EBI)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P3_TYPEn
      bit_offset: 16
      bit_width: 8
      description: 'P3[7:0] input Schmitt Trigger function Enable

        1= P3[7:0] I/O input Schmitt Trigger function enable

        0= P3[7:0] I/O input Schmitt Trigger function disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: P4_MFP
    addr: 0x40
    size_bits: 32
    description: P4 input type control register
    read_allowed: true
    write_allowed: true
    reset_value: 0xc0
    fields:
    - !Field
      name: P4_MFP
      bit_offset: 0
      bit_width: 8
      description: 'P4 multiple function Selection

        The pin function of P4 is depending on P4_MFP and P4_ALT.

        Refer to P4_ALT descriptions in detail.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT0
      bit_offset: 8
      bit_width: 1
      description: "P4.0 alternate function Selection\nThe pin function of P4.0 is\
        \ depend on P4_MFP[0] and P4_ALT[0].\nP4_ALT[0]\tP4_MFP[0]\tP4.0function\t\
        \n0\t0\tP4.0\t\n0\t1\tPWM0(PWM generator 0)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT1
      bit_offset: 9
      bit_width: 1
      description: "P4.1 alternate function Selection\nThe pin function of P4.1 is\
        \ depend on P4_MFP[1] and P4_ALT[1].\nP4_ALT[1]\tP4_MFP[1]\tP4.1function\t\
        \n0\t0\tP4.1\t\n0\t1\tPWM1(PWM generator 0)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT2
      bit_offset: 10
      bit_width: 1
      description: "P4.2 alternate function Selection\nThe pin function of P4.2 is\
        \ depend on P4_MFP[2] and P4_ALT[2].\nP4_ALT[2]\tP4_MFP[2]\tP4.2function\t\
        \n0\t0\tP4.2\t\n0\t1\tPWM2(PWM generator 2)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT3
      bit_offset: 11
      bit_width: 1
      description: "P4.3 alternate function Selection\nThe pin function of P4.3 is\
        \ depend on P4_MFP[3] and P4_ALT[3].\nP4_ALT[3]\tP4_MFP[3]\tP4.3function\t\
        \n0\t0\tP4.3\t\n0\t1\tPWM3(PWM generator 2)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT4
      bit_offset: 12
      bit_width: 1
      description: "P4.4 alternate function Selection\nThe pin function of P4.4 is\
        \ depend on P4_MFP[4] and P4_ALT[4].\nP4_ALT[4]\tP4_MFP[4]\tP4.4function\t\
        \n0\t0\tP4.4\t\n0\t1\t/CS(EBI)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT5
      bit_offset: 13
      bit_width: 1
      description: "P4.5 alternate function Selection\nThe pin function of P4.5 is\
        \ depend on P4_MFP[5] and P4_ALT[5].\nP4_ALT[5]\tP4_MFP[5]\tP4.5 function\t\
        \n0\t0\tP4.5\t\n0\t1\tALE(EBI)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT6
      bit_offset: 14
      bit_width: 1
      description: "P4.6 alternate function Selection\nThe pin function of P4.6 is\
        \ depend on P4_MFP[6] and P4_ALT[6].\nP4_ALT[6]\tP4_MFP[6]\tP4.6 function\t\
        \n0\t0\tP4.6\t\n0\t1\tICE_CLK(ICE)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_ALT7
      bit_offset: 15
      bit_width: 1
      description: "P4.7 alternate function Selection\nThe pin function of P4.7 is\
        \ depend on P4_MFP[7] and P4_ALT[7].\nP4_ALT[7]\tP4_MFP[7]\tP4.7 function\t\
        \n0\t0\tP4.7\t\n0\t1\tICE_DAT(ICE)\t\n1\tx\tReserved\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: P4_TYPEn
      bit_offset: 16
      bit_width: 8
      description: 'P4[7:0] input Schmitt Trigger function Enable

        1= P4[7:0] I/O input Schmitt Trigger function enable

        0= P4[7:0] I/O input Schmitt Trigger function disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: REGWRPROT
    addr: 0x100
    size_bits: 32
    description: Register Lock Key address
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: REGWRPROT
      bit_offset: 0
      bit_width: 8
      description: 'Register Write-Protected Code (Write Only)

        Some write-protected registers have to be disabled the protected function
        by writing the sequence value "59h", "16h", "88h" to this field. After this
        sequence is completed, the REGPROTDIS bit will be set to 1 and write-protected
        registers can be normal write.'
      read_allowed: false
      write_allowed: true
    - !Field
      name: REGPROTDIS
      bit_offset: 0
      bit_width: 1
      description: "Register Write-Protected Disable index (Read only)\n1 = Protection\
        \ is disabled for writing protected registers\n0 = Protection is enabled for\
        \ writing protected registers. Any write to the protected register is ignored.\n\
        The Write-Protected registers list are below table:\nRegisters\tAddress\t\
        Note\t\nIPRSTC1\t0x5000_0008\tNone\t\nBODCR\t0x5000_0018\tNone\t\nPORCR\t\
        0x5000_001C\tNone\t\nPWRCON\t0x5000_0200\tbit[6] is not protected for power\
        \ wake-up interrupt clear\t\nAPBCLK bit[0]\t0x5000_0208\tbit[0] is watch dog\
        \ clock enable\t\nCLKSEL0\t0x5000_0210\tHCLK and CPU STCLK clock source select\t\
        \nCLK_SEL1 bit[1:0]\t0x5000_0214\tWatch dog clock source select\t\nISPCON\t\
        0x5000_C000\tFlash ISP Control register\t\nWTCR\t0x4000_4000\tNone\t\nFATCON\t\
        0x5000_C018\tNone\t"
      read_allowed: true
      write_allowed: false
- !Module
  name: GP0
  description: Registers group
  base_addr: 0x50004000
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x0
    size_bits: 32
    description: Bit Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: 'P0 I/O Pin[0] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[0] pin is in INPUT mode.

        01 = P0[0] pin is in OUTPUT mode.

        10 = P0[0] pin is in Open-Drain mode.

        11 = P0[0] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: 'P0 I/O Pin[1] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[1] pin is in INPUT mode.

        01 = P0[1] pin is in OUTPUT mode.

        10 = P0[1] pin is in Open-Drain mode.

        11 = P0[1] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: 'P0 I/O Pin[2] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[2] pin is in INPUT mode.

        01 = P0[2] pin is in OUTPUT mode.

        10 = P0[2] pin is in Open-Drain mode.

        11 = P0[2] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: 'P0 I/O Pin[3] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[3] pin is in INPUT mode.

        01 = P0[3] pin is in OUTPUT mode.

        10 = P0[3] pin is in Open-Drain mode.

        11 = P0[3] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: 'P0 I/O Pin[4] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[4] pin is in INPUT mode.

        01 = P0[4] pin is in OUTPUT mode.

        10 = P0[4] pin is in Open-Drain mode.

        11 = P0[4] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: 'P0 I/O Pin[5] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[5] pin is in INPUT mode.

        01 = P0[5] pin is in OUTPUT mode.

        10 = P0[5] pin is in Open-Drain mode.

        11 = P0[5] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: 'P0 I/O Pin[6] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[6] pin is in INPUT mode.

        01 = P0[6] pin is in OUTPUT mode.

        10 = P0[6] pin is in Open-Drain mode.

        11 = P0[6] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: 'P0 I/O Pin[7] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[7] pin is in INPUT mode.

        01 = P0[7] pin is in OUTPUT mode.

        10 = P0[7] pin is in Open-Drain mode.

        11 = P0[7] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x4
    size_bits: 32
    description: Bit OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 8
      description: 'OFFD: P0 Pin OFF digital input path Enable

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x8
    size_bits: 32
    description: Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin[0] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[0] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[0] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin[1] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[1] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[1] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin[2] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[2] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[2] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin[3] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[3] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[3] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin[4] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[4] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[4] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin[5] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[5] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[5] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin[6] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[6] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[6] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin[7] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[7] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[7] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0xc
    size_bits: 32
    description: Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[0].
        When set the DMASK bit[0] to "1", the corresponding DOUT0 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[0] bit can be updated

        1 = The corresponding P0_DOUT[0] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[1].
        When set the DMASK bit[1] to "1", the corresponding DOUT1 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[1] bit can be updated

        1 = The corresponding P0_DOUT[1] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[2].
        When set the DMASK bit[2] to "1", the corresponding DOUT2 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[2] bit can be updated

        1 = The corresponding P0_DOUT[2] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[3].
        When set the DMASK bit[3] to "1", the corresponding DOUT3 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[3] bit can be updated

        1 = The corresponding P0_DOUT[3] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[4].
        When set the DMASK bit[4] to "1", the corresponding DOUT4 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[4] bit can be updated

        1 = The corresponding P0_DOUT[4] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[7].
        When set the DMASK bit[7] to "1", the corresponding DOUT7 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[7] bit can be updated

        1 = The corresponding P0_DOUT[7] bit is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x10
    size_bits: 32
    description: Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[0].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[1].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[2].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[3].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[4].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[5].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[6].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[7].'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x14
    size_bits: 32
    description: De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[0] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[0] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[0] de-bounce function is disabled

        1 = The bit[0] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[1] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[1] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[1] de-bounce function is disabled

        1 = The bit[1] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[2] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[2] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[2] de-bounce function is disabled

        1 = The bit[2] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[3] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[3] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[3] de-bounce function is disabled

        1 = The bit[3] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[4] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[4] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[4] de-bounce function is disabled

        1 = The bit[4] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[5] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[5] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[5] de-bounce function is disabled

        1 = The bit[5] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[6] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[6] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[6] de-bounce function is disabled

        1 = The bit[6] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[7] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[7] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[7] de-bounce function is disabled

        1 = The bit[7] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x18
    size_bits: 32
    description: Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[0] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[1] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[2] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[3] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[4] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[5] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[6] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[7] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x1c
    size_bits: 32
    description: Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[0] state low-level or high-to-low change interrupt

        0 = Disable the P0[0] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[1] state low-level or high-to-low change interrupt

        0 = Disable the P0[1] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[2] state low-level or high-to-low change interrupt

        0 = Disable the P0[2] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[3] state low-level or high-to-low change interrupt

        0 = Disable the P0[3] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[4] state low-level or high-to-low change interrupt

        0 = Disable the P0[4] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[5] state low-level or high-to-low change interrupt

        0 = Disable the P0[5] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[6] state low-level or high-to-low change interrupt

        0 = Disable the P0[6] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[7] state low-level or high-to-low change interrupt

        0 = Disable the P0[7] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[0] level-high or low-to-high interrupt

        0 = Disable the P0[0] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[1] level-high or low-to-high interrupt

        0 = Disable the P0[1] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[2] level-high or low-to-high interrupt

        0 = Disable the P0[2] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[3] level-high or low-to-high interrupt

        0 = Disable the P0[3] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[4] level-high or low-to-high interrupt

        0 = Disable the P0[4] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[5] level-high or low-to-high interrupt

        0 = Disable the P0[5] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[6] level-high or low-to-high interrupt

        0 = Disable the P0[6] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[7] level-high or low-to-high interrupt

        0 = Disable the P0[7] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x20
    size_bits: 32
    description: Interrupt Trigger Source
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[0] generate an interrupt

        0 = No interrupt at P0[0]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[1] generate an interrupt

        0 = No interrupt at P0[1]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[2] generate an interrupt

        0 = No interrupt at P0[2]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[3] generate an interrupt

        0 = No interrupt at P0[3]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[4] generate an interrupt

        0 = No interrupt at P0[4]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[5] generate an interrupt

        0 = No interrupt at P0[5]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[6] generate an interrupt

        0 = No interrupt at P0[6]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[7] generate an interrupt

        0 = No interrupt at P0[7]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP1
  description: Registers group
  base_addr: 0x50004040
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x0
    size_bits: 32
    description: Bit Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: 'P0 I/O Pin[0] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[0] pin is in INPUT mode.

        01 = P0[0] pin is in OUTPUT mode.

        10 = P0[0] pin is in Open-Drain mode.

        11 = P0[0] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: 'P0 I/O Pin[1] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[1] pin is in INPUT mode.

        01 = P0[1] pin is in OUTPUT mode.

        10 = P0[1] pin is in Open-Drain mode.

        11 = P0[1] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: 'P0 I/O Pin[2] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[2] pin is in INPUT mode.

        01 = P0[2] pin is in OUTPUT mode.

        10 = P0[2] pin is in Open-Drain mode.

        11 = P0[2] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: 'P0 I/O Pin[3] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[3] pin is in INPUT mode.

        01 = P0[3] pin is in OUTPUT mode.

        10 = P0[3] pin is in Open-Drain mode.

        11 = P0[3] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: 'P0 I/O Pin[4] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[4] pin is in INPUT mode.

        01 = P0[4] pin is in OUTPUT mode.

        10 = P0[4] pin is in Open-Drain mode.

        11 = P0[4] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: 'P0 I/O Pin[5] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[5] pin is in INPUT mode.

        01 = P0[5] pin is in OUTPUT mode.

        10 = P0[5] pin is in Open-Drain mode.

        11 = P0[5] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: 'P0 I/O Pin[6] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[6] pin is in INPUT mode.

        01 = P0[6] pin is in OUTPUT mode.

        10 = P0[6] pin is in Open-Drain mode.

        11 = P0[6] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: 'P0 I/O Pin[7] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[7] pin is in INPUT mode.

        01 = P0[7] pin is in OUTPUT mode.

        10 = P0[7] pin is in Open-Drain mode.

        11 = P0[7] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x4
    size_bits: 32
    description: Bit OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 8
      description: 'OFFD: P0 Pin OFF digital input path Enable

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x8
    size_bits: 32
    description: Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin[0] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[0] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[0] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin[1] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[1] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[1] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin[2] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[2] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[2] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin[3] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[3] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[3] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin[4] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[4] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[4] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin[5] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[5] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[5] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin[6] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[6] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[6] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin[7] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[7] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[7] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0xc
    size_bits: 32
    description: Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[0].
        When set the DMASK bit[0] to "1", the corresponding DOUT0 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[0] bit can be updated

        1 = The corresponding P0_DOUT[0] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[1].
        When set the DMASK bit[1] to "1", the corresponding DOUT1 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[1] bit can be updated

        1 = The corresponding P0_DOUT[1] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[2].
        When set the DMASK bit[2] to "1", the corresponding DOUT2 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[2] bit can be updated

        1 = The corresponding P0_DOUT[2] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[3].
        When set the DMASK bit[3] to "1", the corresponding DOUT3 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[3] bit can be updated

        1 = The corresponding P0_DOUT[3] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[4].
        When set the DMASK bit[4] to "1", the corresponding DOUT4 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[4] bit can be updated

        1 = The corresponding P0_DOUT[4] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[7].
        When set the DMASK bit[7] to "1", the corresponding DOUT7 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[7] bit can be updated

        1 = The corresponding P0_DOUT[7] bit is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x10
    size_bits: 32
    description: Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[0].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[1].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[2].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[3].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[4].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[5].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[6].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[7].'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x14
    size_bits: 32
    description: De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[0] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[0] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[0] de-bounce function is disabled

        1 = The bit[0] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[1] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[1] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[1] de-bounce function is disabled

        1 = The bit[1] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[2] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[2] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[2] de-bounce function is disabled

        1 = The bit[2] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[3] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[3] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[3] de-bounce function is disabled

        1 = The bit[3] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[4] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[4] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[4] de-bounce function is disabled

        1 = The bit[4] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[5] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[5] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[5] de-bounce function is disabled

        1 = The bit[5] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[6] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[6] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[6] de-bounce function is disabled

        1 = The bit[6] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[7] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[7] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[7] de-bounce function is disabled

        1 = The bit[7] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x18
    size_bits: 32
    description: Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[0] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[1] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[2] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[3] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[4] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[5] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[6] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[7] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x1c
    size_bits: 32
    description: Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[0] state low-level or high-to-low change interrupt

        0 = Disable the P0[0] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[1] state low-level or high-to-low change interrupt

        0 = Disable the P0[1] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[2] state low-level or high-to-low change interrupt

        0 = Disable the P0[2] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[3] state low-level or high-to-low change interrupt

        0 = Disable the P0[3] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[4] state low-level or high-to-low change interrupt

        0 = Disable the P0[4] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[5] state low-level or high-to-low change interrupt

        0 = Disable the P0[5] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[6] state low-level or high-to-low change interrupt

        0 = Disable the P0[6] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[7] state low-level or high-to-low change interrupt

        0 = Disable the P0[7] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[0] level-high or low-to-high interrupt

        0 = Disable the P0[0] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[1] level-high or low-to-high interrupt

        0 = Disable the P0[1] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[2] level-high or low-to-high interrupt

        0 = Disable the P0[2] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[3] level-high or low-to-high interrupt

        0 = Disable the P0[3] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[4] level-high or low-to-high interrupt

        0 = Disable the P0[4] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[5] level-high or low-to-high interrupt

        0 = Disable the P0[5] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[6] level-high or low-to-high interrupt

        0 = Disable the P0[6] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[7] level-high or low-to-high interrupt

        0 = Disable the P0[7] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x20
    size_bits: 32
    description: Interrupt Trigger Source
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[0] generate an interrupt

        0 = No interrupt at P0[0]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[1] generate an interrupt

        0 = No interrupt at P0[1]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[2] generate an interrupt

        0 = No interrupt at P0[2]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[3] generate an interrupt

        0 = No interrupt at P0[3]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[4] generate an interrupt

        0 = No interrupt at P0[4]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[5] generate an interrupt

        0 = No interrupt at P0[5]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[6] generate an interrupt

        0 = No interrupt at P0[6]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[7] generate an interrupt

        0 = No interrupt at P0[7]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP2
  description: Registers group
  base_addr: 0x50004080
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x0
    size_bits: 32
    description: Bit Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: 'P0 I/O Pin[0] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[0] pin is in INPUT mode.

        01 = P0[0] pin is in OUTPUT mode.

        10 = P0[0] pin is in Open-Drain mode.

        11 = P0[0] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: 'P0 I/O Pin[1] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[1] pin is in INPUT mode.

        01 = P0[1] pin is in OUTPUT mode.

        10 = P0[1] pin is in Open-Drain mode.

        11 = P0[1] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: 'P0 I/O Pin[2] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[2] pin is in INPUT mode.

        01 = P0[2] pin is in OUTPUT mode.

        10 = P0[2] pin is in Open-Drain mode.

        11 = P0[2] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: 'P0 I/O Pin[3] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[3] pin is in INPUT mode.

        01 = P0[3] pin is in OUTPUT mode.

        10 = P0[3] pin is in Open-Drain mode.

        11 = P0[3] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: 'P0 I/O Pin[4] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[4] pin is in INPUT mode.

        01 = P0[4] pin is in OUTPUT mode.

        10 = P0[4] pin is in Open-Drain mode.

        11 = P0[4] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: 'P0 I/O Pin[5] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[5] pin is in INPUT mode.

        01 = P0[5] pin is in OUTPUT mode.

        10 = P0[5] pin is in Open-Drain mode.

        11 = P0[5] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: 'P0 I/O Pin[6] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[6] pin is in INPUT mode.

        01 = P0[6] pin is in OUTPUT mode.

        10 = P0[6] pin is in Open-Drain mode.

        11 = P0[6] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: 'P0 I/O Pin[7] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[7] pin is in INPUT mode.

        01 = P0[7] pin is in OUTPUT mode.

        10 = P0[7] pin is in Open-Drain mode.

        11 = P0[7] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x4
    size_bits: 32
    description: Bit OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 8
      description: 'OFFD: P0 Pin OFF digital input path Enable

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x8
    size_bits: 32
    description: Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin[0] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[0] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[0] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin[1] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[1] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[1] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin[2] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[2] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[2] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin[3] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[3] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[3] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin[4] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[4] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[4] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin[5] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[5] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[5] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin[6] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[6] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[6] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin[7] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[7] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[7] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0xc
    size_bits: 32
    description: Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[0].
        When set the DMASK bit[0] to "1", the corresponding DOUT0 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[0] bit can be updated

        1 = The corresponding P0_DOUT[0] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[1].
        When set the DMASK bit[1] to "1", the corresponding DOUT1 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[1] bit can be updated

        1 = The corresponding P0_DOUT[1] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[2].
        When set the DMASK bit[2] to "1", the corresponding DOUT2 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[2] bit can be updated

        1 = The corresponding P0_DOUT[2] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[3].
        When set the DMASK bit[3] to "1", the corresponding DOUT3 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[3] bit can be updated

        1 = The corresponding P0_DOUT[3] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[4].
        When set the DMASK bit[4] to "1", the corresponding DOUT4 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[4] bit can be updated

        1 = The corresponding P0_DOUT[4] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[7].
        When set the DMASK bit[7] to "1", the corresponding DOUT7 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[7] bit can be updated

        1 = The corresponding P0_DOUT[7] bit is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x10
    size_bits: 32
    description: Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[0].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[1].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[2].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[3].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[4].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[5].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[6].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[7].'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x14
    size_bits: 32
    description: De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[0] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[0] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[0] de-bounce function is disabled

        1 = The bit[0] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[1] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[1] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[1] de-bounce function is disabled

        1 = The bit[1] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[2] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[2] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[2] de-bounce function is disabled

        1 = The bit[2] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[3] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[3] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[3] de-bounce function is disabled

        1 = The bit[3] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[4] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[4] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[4] de-bounce function is disabled

        1 = The bit[4] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[5] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[5] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[5] de-bounce function is disabled

        1 = The bit[5] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[6] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[6] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[6] de-bounce function is disabled

        1 = The bit[6] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[7] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[7] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[7] de-bounce function is disabled

        1 = The bit[7] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x18
    size_bits: 32
    description: Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[0] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[1] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[2] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[3] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[4] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[5] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[6] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[7] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x1c
    size_bits: 32
    description: Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[0] state low-level or high-to-low change interrupt

        0 = Disable the P0[0] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[1] state low-level or high-to-low change interrupt

        0 = Disable the P0[1] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[2] state low-level or high-to-low change interrupt

        0 = Disable the P0[2] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[3] state low-level or high-to-low change interrupt

        0 = Disable the P0[3] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[4] state low-level or high-to-low change interrupt

        0 = Disable the P0[4] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[5] state low-level or high-to-low change interrupt

        0 = Disable the P0[5] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[6] state low-level or high-to-low change interrupt

        0 = Disable the P0[6] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[7] state low-level or high-to-low change interrupt

        0 = Disable the P0[7] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[0] level-high or low-to-high interrupt

        0 = Disable the P0[0] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[1] level-high or low-to-high interrupt

        0 = Disable the P0[1] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[2] level-high or low-to-high interrupt

        0 = Disable the P0[2] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[3] level-high or low-to-high interrupt

        0 = Disable the P0[3] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[4] level-high or low-to-high interrupt

        0 = Disable the P0[4] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[5] level-high or low-to-high interrupt

        0 = Disable the P0[5] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[6] level-high or low-to-high interrupt

        0 = Disable the P0[6] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[7] level-high or low-to-high interrupt

        0 = Disable the P0[7] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x20
    size_bits: 32
    description: Interrupt Trigger Source
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[0] generate an interrupt

        0 = No interrupt at P0[0]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[1] generate an interrupt

        0 = No interrupt at P0[1]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[2] generate an interrupt

        0 = No interrupt at P0[2]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[3] generate an interrupt

        0 = No interrupt at P0[3]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[4] generate an interrupt

        0 = No interrupt at P0[4]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[5] generate an interrupt

        0 = No interrupt at P0[5]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[6] generate an interrupt

        0 = No interrupt at P0[6]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[7] generate an interrupt

        0 = No interrupt at P0[7]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP3
  description: Registers group
  base_addr: 0x500040c0
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x0
    size_bits: 32
    description: Bit Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: 'P0 I/O Pin[0] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[0] pin is in INPUT mode.

        01 = P0[0] pin is in OUTPUT mode.

        10 = P0[0] pin is in Open-Drain mode.

        11 = P0[0] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: 'P0 I/O Pin[1] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[1] pin is in INPUT mode.

        01 = P0[1] pin is in OUTPUT mode.

        10 = P0[1] pin is in Open-Drain mode.

        11 = P0[1] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: 'P0 I/O Pin[2] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[2] pin is in INPUT mode.

        01 = P0[2] pin is in OUTPUT mode.

        10 = P0[2] pin is in Open-Drain mode.

        11 = P0[2] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: 'P0 I/O Pin[3] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[3] pin is in INPUT mode.

        01 = P0[3] pin is in OUTPUT mode.

        10 = P0[3] pin is in Open-Drain mode.

        11 = P0[3] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: 'P0 I/O Pin[4] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[4] pin is in INPUT mode.

        01 = P0[4] pin is in OUTPUT mode.

        10 = P0[4] pin is in Open-Drain mode.

        11 = P0[4] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: 'P0 I/O Pin[5] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[5] pin is in INPUT mode.

        01 = P0[5] pin is in OUTPUT mode.

        10 = P0[5] pin is in Open-Drain mode.

        11 = P0[5] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: 'P0 I/O Pin[6] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[6] pin is in INPUT mode.

        01 = P0[6] pin is in OUTPUT mode.

        10 = P0[6] pin is in Open-Drain mode.

        11 = P0[6] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: 'P0 I/O Pin[7] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[7] pin is in INPUT mode.

        01 = P0[7] pin is in OUTPUT mode.

        10 = P0[7] pin is in Open-Drain mode.

        11 = P0[7] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x4
    size_bits: 32
    description: Bit OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 8
      description: 'OFFD: P0 Pin OFF digital input path Enable

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x8
    size_bits: 32
    description: Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin[0] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[0] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[0] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin[1] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[1] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[1] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin[2] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[2] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[2] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin[3] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[3] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[3] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin[4] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[4] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[4] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin[5] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[5] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[5] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin[6] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[6] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[6] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin[7] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[7] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[7] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0xc
    size_bits: 32
    description: Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[0].
        When set the DMASK bit[0] to "1", the corresponding DOUT0 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[0] bit can be updated

        1 = The corresponding P0_DOUT[0] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[1].
        When set the DMASK bit[1] to "1", the corresponding DOUT1 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[1] bit can be updated

        1 = The corresponding P0_DOUT[1] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[2].
        When set the DMASK bit[2] to "1", the corresponding DOUT2 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[2] bit can be updated

        1 = The corresponding P0_DOUT[2] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[3].
        When set the DMASK bit[3] to "1", the corresponding DOUT3 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[3] bit can be updated

        1 = The corresponding P0_DOUT[3] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[4].
        When set the DMASK bit[4] to "1", the corresponding DOUT4 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[4] bit can be updated

        1 = The corresponding P0_DOUT[4] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[7].
        When set the DMASK bit[7] to "1", the corresponding DOUT7 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[7] bit can be updated

        1 = The corresponding P0_DOUT[7] bit is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x10
    size_bits: 32
    description: Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[0].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[1].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[2].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[3].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[4].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[5].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[6].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[7].'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x14
    size_bits: 32
    description: De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[0] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[0] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[0] de-bounce function is disabled

        1 = The bit[0] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[1] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[1] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[1] de-bounce function is disabled

        1 = The bit[1] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[2] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[2] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[2] de-bounce function is disabled

        1 = The bit[2] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[3] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[3] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[3] de-bounce function is disabled

        1 = The bit[3] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[4] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[4] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[4] de-bounce function is disabled

        1 = The bit[4] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[5] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[5] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[5] de-bounce function is disabled

        1 = The bit[5] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[6] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[6] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[6] de-bounce function is disabled

        1 = The bit[6] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[7] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[7] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[7] de-bounce function is disabled

        1 = The bit[7] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x18
    size_bits: 32
    description: Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[0] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[1] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[2] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[3] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[4] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[5] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[6] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[7] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x1c
    size_bits: 32
    description: Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[0] state low-level or high-to-low change interrupt

        0 = Disable the P0[0] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[1] state low-level or high-to-low change interrupt

        0 = Disable the P0[1] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[2] state low-level or high-to-low change interrupt

        0 = Disable the P0[2] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[3] state low-level or high-to-low change interrupt

        0 = Disable the P0[3] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[4] state low-level or high-to-low change interrupt

        0 = Disable the P0[4] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[5] state low-level or high-to-low change interrupt

        0 = Disable the P0[5] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[6] state low-level or high-to-low change interrupt

        0 = Disable the P0[6] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[7] state low-level or high-to-low change interrupt

        0 = Disable the P0[7] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[0] level-high or low-to-high interrupt

        0 = Disable the P0[0] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[1] level-high or low-to-high interrupt

        0 = Disable the P0[1] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[2] level-high or low-to-high interrupt

        0 = Disable the P0[2] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[3] level-high or low-to-high interrupt

        0 = Disable the P0[3] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[4] level-high or low-to-high interrupt

        0 = Disable the P0[4] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[5] level-high or low-to-high interrupt

        0 = Disable the P0[5] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[6] level-high or low-to-high interrupt

        0 = Disable the P0[6] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[7] level-high or low-to-high interrupt

        0 = Disable the P0[7] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x20
    size_bits: 32
    description: Interrupt Trigger Source
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[0] generate an interrupt

        0 = No interrupt at P0[0]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[1] generate an interrupt

        0 = No interrupt at P0[1]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[2] generate an interrupt

        0 = No interrupt at P0[2]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[3] generate an interrupt

        0 = No interrupt at P0[3]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[4] generate an interrupt

        0 = No interrupt at P0[4]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[5] generate an interrupt

        0 = No interrupt at P0[5]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[6] generate an interrupt

        0 = No interrupt at P0[6]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[7] generate an interrupt

        0 = No interrupt at P0[7]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP4
  description: Registers group
  base_addr: 0x50004100
  size: 0x24
  registers:
  - !Register
    name: PMD
    addr: 0x0
    size_bits: 32
    description: Bit Mode Control
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: PMD0
      bit_offset: 0
      bit_width: 2
      description: 'P0 I/O Pin[0] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[0] pin is in INPUT mode.

        01 = P0[0] pin is in OUTPUT mode.

        10 = P0[0] pin is in Open-Drain mode.

        11 = P0[0] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD1
      bit_offset: 2
      bit_width: 2
      description: 'P0 I/O Pin[1] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[1] pin is in INPUT mode.

        01 = P0[1] pin is in OUTPUT mode.

        10 = P0[1] pin is in Open-Drain mode.

        11 = P0[1] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD2
      bit_offset: 4
      bit_width: 2
      description: 'P0 I/O Pin[2] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[2] pin is in INPUT mode.

        01 = P0[2] pin is in OUTPUT mode.

        10 = P0[2] pin is in Open-Drain mode.

        11 = P0[2] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD3
      bit_offset: 6
      bit_width: 2
      description: 'P0 I/O Pin[3] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[3] pin is in INPUT mode.

        01 = P0[3] pin is in OUTPUT mode.

        10 = P0[3] pin is in Open-Drain mode.

        11 = P0[3] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD4
      bit_offset: 8
      bit_width: 2
      description: 'P0 I/O Pin[4] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[4] pin is in INPUT mode.

        01 = P0[4] pin is in OUTPUT mode.

        10 = P0[4] pin is in Open-Drain mode.

        11 = P0[4] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD5
      bit_offset: 10
      bit_width: 2
      description: 'P0 I/O Pin[5] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[5] pin is in INPUT mode.

        01 = P0[5] pin is in OUTPUT mode.

        10 = P0[5] pin is in Open-Drain mode.

        11 = P0[5] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD6
      bit_offset: 12
      bit_width: 2
      description: 'P0 I/O Pin[6] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[6] pin is in INPUT mode.

        01 = P0[6] pin is in OUTPUT mode.

        10 = P0[6] pin is in Open-Drain mode.

        11 = P0[6] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMD7
      bit_offset: 14
      bit_width: 2
      description: 'P0 I/O Pin[7] Mode Control

        Determine each I/O type of P0 pins

        00 = P0[7] pin is in INPUT mode.

        01 = P0[7] pin is in OUTPUT mode.

        10 = P0[7] pin is in Open-Drain mode.

        11 = P0[7] pin is in Quasi-bidirectional mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: OFFD
    addr: 0x4
    size_bits: 32
    description: Bit OFF Digital Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFD
      bit_offset: 16
      bit_width: 8
      description: 'OFFD: P0 Pin OFF digital input path Enable

        1 = Disable IO digital input path (digital input tied to low)

        0 = Enable IO digital input path'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DOUT
    addr: 0x8
    size_bits: 32
    description: Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0xff
    fields:
    - !Field
      name: DOUT0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin[0] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[0] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[0] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin[1] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[1] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[1] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin[2] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[2] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[2] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin[3] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[3] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[3] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin[4] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[4] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[4] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin[5] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[5] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[5] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin[6] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[6] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[6] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin[7] Output Value

        Each of these bits control the status of a P0 pin when the P0 pin is configures
        as output, open-drain and quasi-mode.

        1 = P0 Pin[7] will drive High if the corresponding output mode enabling bit
        is set.

        0 = P0 Pin[7] will drive Low if the corresponding output mode enabling bit
        is set.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMASK
    addr: 0xc
    size_bits: 32
    description: Data Output Write Mask
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DMASK0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[0].
        When set the DMASK bit[0] to "1", the corresponding DOUT0 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[0] bit can be updated

        1 = The corresponding P0_DOUT[0] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[1].
        When set the DMASK bit[1] to "1", the corresponding DOUT1 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[1] bit can be updated

        1 = The corresponding P0_DOUT[1] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[2].
        When set the DMASK bit[2] to "1", the corresponding DOUT2 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[2] bit can be updated

        1 = The corresponding P0_DOUT[2] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[3].
        When set the DMASK bit[3] to "1", the corresponding DOUT3 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[3] bit can be updated

        1 = The corresponding P0_DOUT[3] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[4].
        When set the DMASK bit[4] to "1", the corresponding DOUT4 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[4] bit can be updated

        1 = The corresponding P0_DOUT[4] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[6].
        When set the DMASK bit[6] to "1", the corresponding DOUT6 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[6] bit can be updated

        1 = The corresponding P0_DOUT[6] bit is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMASK7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Data Output Write Mask

        These bits are used to protect the corresponding register of P0_DOUT bit[7].
        When set the DMASK bit[7] to "1", the corresponding DOUT7 bit is protected.
        The write signal is masked, write data to the protect bit is ignored

        0 = The corresponding P0_DOUT[7] bit can be updated

        1 = The corresponding P0_DOUT[7] bit is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIN
    addr: 0x10
    size_bits: 32
    description: Pin Value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PIN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[0].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[1].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[2].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[3].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[4].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[5].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[6].'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PIN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Pin Values

        The value read from each of these bit reflects the actual status of the respective
        P0 Pin[7].'
      read_allowed: true
      write_allowed: false
  - !Register
    name: DBEN
    addr: 0x14
    size_bits: 32
    description: De-bounce Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DBEN0
      bit_offset: 0
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[0] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[0] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[0] de-bounce function is disabled

        1 = The bit[0] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN1
      bit_offset: 1
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[1] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[1] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[1] de-bounce function is disabled

        1 = The bit[1] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN2
      bit_offset: 2
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[2] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[2] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[2] de-bounce function is disabled

        1 = The bit[2] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN3
      bit_offset: 3
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[3] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[3] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[3] de-bounce function is disabled

        1 = The bit[3] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN4
      bit_offset: 4
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[4] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[4] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[4] de-bounce function is disabled

        1 = The bit[4] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN5
      bit_offset: 5
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[5] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[5] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[5] de-bounce function is disabled

        1 = The bit[5] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN6
      bit_offset: 6
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[6] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[6] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[6] de-bounce function is disabled

        1 = The bit[6] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBEN7
      bit_offset: 7
      bit_width: 1
      description: 'P0 Input Signal De-bounce Enable

        DBEN[7] used to enable the de-bounce function for each corresponding bit.
        if the input signal pulse width can''t be sampled by continuous two de-bounce
        sample cycle. The input signal transition is seen as the signal bounce and
        will not trigger the interrupt.

        The DBEN[7] is used for "edge-trigger" interrupt only, and ignored for "level
        trigger" interrupt

        0 = The bit[7] de-bounce function is disabled

        1 = The bit[7] de-bounce function is enabled

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IMD
    addr: 0x18
    size_bits: 32
    description: Interrupt Mode Control
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IMD0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[0] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[1] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[2] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[3] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[4] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[5] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[6] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMD7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Mode Control

        IMD[7] used to control the interrupt is by level trigger or by edge trigger.
        If the interrupt is by edge trigger, the trigger souce is control de-bounce.
        If the interrupt is by level trigger, the input source is sampled by one clock
        and the generate the interrupt

        0 = Edge trigger interrupt

        1 = Level trigger interrupt

        if set pin as the level trigger interrupt, then only one level can be set
        on the registers P0_IEN.

        if set both the level to trigger interrupt, the setting is ignored and no
        interrupt will occur.

        The de-bounce function is valid for edge triggered interrupt. if the interrupt
        mode is level triggered, the de-bounce enable bit is ignored.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IEN
    addr: 0x1c
    size_bits: 32
    description: Interrupt Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IF_EN0
      bit_offset: 0
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[0] state low-level or high-to-low change interrupt

        0 = Disable the P0[0] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN1
      bit_offset: 1
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[1] state low-level or high-to-low change interrupt

        0 = Disable the P0[1] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN2
      bit_offset: 2
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[2] state low-level or high-to-low change interrupt

        0 = Disable the P0[2] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN3
      bit_offset: 3
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[3] state low-level or high-to-low change interrupt

        0 = Disable the P0[3] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN4
      bit_offset: 4
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[4] state low-level or high-to-low change interrupt

        0 = Disable the P0[4] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN5
      bit_offset: 5
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[5] state low-level or high-to-low change interrupt

        0 = Disable the P0[5] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN6
      bit_offset: 6
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[6] state low-level or high-to-low change interrupt

        0 = Disable the P0[6] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF_EN7
      bit_offset: 7
      bit_width: 1
      description: 'Port0 Interrupt Enable by Input Falling Edge or Input Level Low

        IF_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IF_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "low"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "high-to-low"
        will generate the interrupt.

        1 = Enable the P0[7] state low-level or high-to-low change interrupt

        0 = Disable the P0[7] state low-level or high-to-low change interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN0
      bit_offset: 16
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[0] used to enable the interrupt for each of the corresponding input
        P0[0]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[0] bit "1":

        If the interrupt is level mode trigger, the input P0[0] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[0] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[0] level-high or low-to-high interrupt

        0 = Disable the P0[0] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN1
      bit_offset: 17
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[1] used to enable the interrupt for each of the corresponding input
        P0[1]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[1] bit "1":

        If the interrupt is level mode trigger, the input P0[1] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[1] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[1] level-high or low-to-high interrupt

        0 = Disable the P0[1] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN2
      bit_offset: 18
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[2] used to enable the interrupt for each of the corresponding input
        P0[2]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[2] bit "1":

        If the interrupt is level mode trigger, the input P0[2] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[2] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[2] level-high or low-to-high interrupt

        0 = Disable the P0[2] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN3
      bit_offset: 19
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[3] used to enable the interrupt for each of the corresponding input
        P0[3]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[3] bit "1":

        If the interrupt is level mode trigger, the input P0[3] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[3] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[3] level-high or low-to-high interrupt

        0 = Disable the P0[3] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN4
      bit_offset: 20
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[4] used to enable the interrupt for each of the corresponding input
        P0[4]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[4] bit "1":

        If the interrupt is level mode trigger, the input P0[4] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[4] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[4] level-high or low-to-high interrupt

        0 = Disable the P0[4] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN5
      bit_offset: 21
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[5] used to enable the interrupt for each of the corresponding input
        P0[5]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[5] bit "1":

        If the interrupt is level mode trigger, the input P0[5] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[5] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[5] level-high or low-to-high interrupt

        0 = Disable the P0[5] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN6
      bit_offset: 22
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[6] used to enable the interrupt for each of the corresponding input
        P0[6]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[6] bit "1":

        If the interrupt is level mode trigger, the input P0[6] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[6] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[6] level-high or low-to-high interrupt

        0 = Disable the P0[6] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IR_EN7
      bit_offset: 23
      bit_width: 1
      description: 'Port 0 Interrupt Enable by Input Rising Edge or Input Level High

        IR_EN[7] used to enable the interrupt for each of the corresponding input
        P0[7]. Set bit "1" also enable the pin wakeup function.

        When set the IR_EN[7] bit "1":

        If the interrupt is level mode trigger, the input P0[7] state at level "high"
        will generate the interrupt.

        If the interrupt is edge mode trigger, the input P0[7] state change from "low-to-high"
        will generate the interrupt.

        1 = Enable the P0[7] level-high or low-to-high interrupt

        0 = Disable the P0[7] level-high or low-to-high interrupt'
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISRC
    addr: 0x20
    size_bits: 32
    description: Interrupt Trigger Source
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ISRC0
      bit_offset: 0
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[0] generate an interrupt

        0 = No interrupt at P0[0]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC1
      bit_offset: 1
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[1] generate an interrupt

        0 = No interrupt at P0[1]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC2
      bit_offset: 2
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[2] generate an interrupt

        0 = No interrupt at P0[2]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC3
      bit_offset: 3
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[3] generate an interrupt

        0 = No interrupt at P0[3]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC4
      bit_offset: 4
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[4] generate an interrupt

        0 = No interrupt at P0[4]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC5
      bit_offset: 5
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[5] generate an interrupt

        0 = No interrupt at P0[5]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC6
      bit_offset: 6
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[6] generate an interrupt

        0 = No interrupt at P0[6]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRC7
      bit_offset: 7
      bit_width: 1
      description: 'Port 0 Interrupt Trigger Source Indicator

        Read:

        1 = Indicates P0[7] generate an interrupt

        0 = No interrupt at P0[7]

        Write:

        1 = Clear the correspond pending interrupt

        0 = No action'
      read_allowed: true
      write_allowed: true
- !Module
  name: GPIO
  description: Registers group
  base_addr: 0x50004180
  size: 0x4
  registers:
  - !Register
    name: DBNCECON
    addr: 0x0
    size_bits: 32
    description: Interrupt De-bounce Cycle Control
    read_allowed: true
    write_allowed: true
    reset_value: 0x20
    fields:
    - !Field
      name: DBCLKSEL
      bit_offset: 0
      bit_width: 4
      description: "De-bounce sampling cycle selection\nDBCLKSEL\tDescription\t\n\
        0\tSample interrupt input once per 1 clocks\t\n1\tSample interrupt input once\
        \ per 2 clocks\t\n2\tSample interrupt input once per 4 clocks\t\n3\tSample\
        \ interrupt input once per 8 clocks\t\n4\tSample interrupt input once per\
        \ 16 clocks\t\n5\tSample interrupt input once per 32 clocks\t\n6\tSample interrupt\
        \ input once per 64 clocks\t\n7\tSample interrupt input once per 128 clocks\t\
        \n8\tSample interrupt input once per 256 clocks\t\n9\tSample interrupt input\
        \ once per 2*256 clocks\t\n10\tSample interrupt input once per 4*256clocks\t\
        \n11\tSample interrupt input once per 8*256 clocks\t\n12\tSample interrupt\
        \ input once per 16*256 clocks\t\n13\tSample interrupt input once per 32*256\
        \ clocks\t\n14\tSample interrupt input once per 64*256 clocks\t\n15\tSample\
        \ interrupt input once per 128*256 clocks\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBCLKSRC
      bit_offset: 4
      bit_width: 1
      description: 'De-bounce counter clock source select

        1 = De-bounce counter clock source is the internal 10KHz clock

        0 = De-bounce counter clock source is the HCLK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ICLK_ON
      bit_offset: 5
      bit_width: 1
      description: "Interrupt clock On mode\nSet this bit \"0\" will disable the interrupt\
        \ generate circuit clock, if the pin[n] interrupt is disabled\n0 = disable\
        \ the clock if the P0/1/2/3/4[n] interrupt is disabled\n1 = interrupt generated\
        \ circuit clock always enable \nn=0~7"
      read_allowed: true
      write_allowed: true
- !Module
  name: GP0_BITS
  description: Registers group
  base_addr: 0x50004200
  size: 0x20
  registers:
  - !Register
    name: Px0_DOUT
    addr: 0x200
    size_bits: 32
    description: Px.0 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.0 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px1_DOUT
    addr: 0x204
    size_bits: 32
    description: Px.1 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.1 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px2_DOUT
    addr: 0x208
    size_bits: 32
    description: Px.2 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.2 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px3_DOUT
    addr: 0x20c
    size_bits: 32
    description: Px.3 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.3 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px4_DOUT
    addr: 0x210
    size_bits: 32
    description: Px.4 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.4 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px5_DOUT
    addr: 0x214
    size_bits: 32
    description: Px.5 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.5 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px6_DOUT
    addr: 0x218
    size_bits: 32
    description: Px.6 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.6 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px7_DOUT
    addr: 0x21c
    size_bits: 32
    description: Px.7 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.7 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP1_BITS
  description: Registers group
  base_addr: 0x50004220
  size: 0x20
  registers:
  - !Register
    name: Px0_DOUT
    addr: 0x200
    size_bits: 32
    description: Px.0 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.0 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px1_DOUT
    addr: 0x204
    size_bits: 32
    description: Px.1 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.1 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px2_DOUT
    addr: 0x208
    size_bits: 32
    description: Px.2 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.2 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px3_DOUT
    addr: 0x20c
    size_bits: 32
    description: Px.3 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.3 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px4_DOUT
    addr: 0x210
    size_bits: 32
    description: Px.4 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.4 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px5_DOUT
    addr: 0x214
    size_bits: 32
    description: Px.5 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.5 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px6_DOUT
    addr: 0x218
    size_bits: 32
    description: Px.6 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.6 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px7_DOUT
    addr: 0x21c
    size_bits: 32
    description: Px.7 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.7 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP2_BITS
  description: Registers group
  base_addr: 0x50004240
  size: 0x20
  registers:
  - !Register
    name: Px0_DOUT
    addr: 0x200
    size_bits: 32
    description: Px.0 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.0 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px1_DOUT
    addr: 0x204
    size_bits: 32
    description: Px.1 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.1 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px2_DOUT
    addr: 0x208
    size_bits: 32
    description: Px.2 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.2 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px3_DOUT
    addr: 0x20c
    size_bits: 32
    description: Px.3 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.3 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px4_DOUT
    addr: 0x210
    size_bits: 32
    description: Px.4 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.4 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px5_DOUT
    addr: 0x214
    size_bits: 32
    description: Px.5 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.5 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px6_DOUT
    addr: 0x218
    size_bits: 32
    description: Px.6 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.6 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px7_DOUT
    addr: 0x21c
    size_bits: 32
    description: Px.7 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.7 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP3_BITS
  description: Registers group
  base_addr: 0x50004260
  size: 0x20
  registers:
  - !Register
    name: Px0_DOUT
    addr: 0x200
    size_bits: 32
    description: Px.0 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.0 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px1_DOUT
    addr: 0x204
    size_bits: 32
    description: Px.1 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.1 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px2_DOUT
    addr: 0x208
    size_bits: 32
    description: Px.2 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.2 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px3_DOUT
    addr: 0x20c
    size_bits: 32
    description: Px.3 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.3 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px4_DOUT
    addr: 0x210
    size_bits: 32
    description: Px.4 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.4 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px5_DOUT
    addr: 0x214
    size_bits: 32
    description: Px.5 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.5 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px6_DOUT
    addr: 0x218
    size_bits: 32
    description: Px.6 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.6 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px7_DOUT
    addr: 0x21c
    size_bits: 32
    description: Px.7 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.7 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
- !Module
  name: GP4_BITS
  description: Registers group
  base_addr: 0x50004280
  size: 0x20
  registers:
  - !Register
    name: Px0_DOUT
    addr: 0x200
    size_bits: 32
    description: Px.0 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.0 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px1_DOUT
    addr: 0x204
    size_bits: 32
    description: Px.1 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.1 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px2_DOUT
    addr: 0x208
    size_bits: 32
    description: Px.2 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.2 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px3_DOUT
    addr: 0x20c
    size_bits: 32
    description: Px.3 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.3 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px4_DOUT
    addr: 0x210
    size_bits: 32
    description: Px.4 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.4 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px5_DOUT
    addr: 0x214
    size_bits: 32
    description: Px.5 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.5 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px6_DOUT
    addr: 0x218
    size_bits: 32
    description: Px.6 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.6 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
  - !Register
    name: Px7_DOUT
    addr: 0x21c
    size_bits: 32
    description: Px.7 Data Output Value
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: DOUT
      bit_offset: 0
      bit_width: 1
      description: 'P0.7 I/O Pin Bit Output Control

        Set this bit can control one GPIO pin output value

        1 = Set corresponding GPIO bit to high

        0 = Set corresponding GPIO bit to low'
      read_allowed: true
      write_allowed: true
- !Module
  name: I2C
  description: Registers group
  base_addr: 0x40020000
  size: 0x34
  registers:
  - !Register
    name: I2CON
    addr: 0x0
    size_bits: 32
    description: I2C Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AA
      bit_offset: 2
      bit_width: 1
      description: "Assert Acknowledge control bit. \nWhen AA=1 prior to address or\
        \ data received, an acknowledged (low level to SDA) will be returned during\
        \ the acknowledge clock pulse on the SCL line when 1.) A slave is acknowledging\
        \ the address sent from master, 2.) The receiver devices are acknowledging\
        \ the data sent by transmitter. When AA=0 prior to address or data received,\
        \ a Not acknowledged (high level to SDA) will be returned during the acknowledge\
        \ clock pulse on the SCL line."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SI
      bit_offset: 3
      bit_width: 1
      description: "I2C Interrupt Flag. \nWhen a new SIO state is present in the I2CSTATUS\
        \ register, the SI flag is set by hardware, and if bit EI (I2CON [7]) is set,\
        \ the I2C interrupt is requested. SI must be cleared by software. Clear SI\
        \ is by writing one to this bit."
      read_allowed: true
      write_allowed: true
    - !Field
      name: STO
      bit_offset: 4
      bit_width: 1
      description: "I2C STOP Flag. \nIn master mode, setting STO to transmit a STOP\
        \ condition to bus then I2C hardware will check the bus condition if a STOP\
        \ condition is detected this flag will be cleared by hardware automatically.\n\
        In a slave mode, setting STO resets I2C hardware to the defined \"not addressed\"\
        \ slave mode. This means it is NO LONGER in the slave receiver mode to receive\
        \ data from the master transmit device."
      read_allowed: true
      write_allowed: true
    - !Field
      name: STA
      bit_offset: 5
      bit_width: 1
      description: "I2C START Flag. \nSetting STA to logic 1 to enter master mode,\
        \ the I2C hardware sends a START or repeat START condition to bus when the\
        \ bus is free."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENSI
      bit_offset: 6
      bit_width: 1
      description: 'I2C controller is enabled/disable

        1 = Enable

        0 = Disable

        Set to enable I2C serial function block. When ENS=1 the I2C serial function
        enables. The multi-function pin function of SDA and SCL must set to I2C function
        first.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EI
      bit_offset: 7
      bit_width: 1
      description: "Enable interrupt. \n1 = Enable I2C interrupt.\n0 = Disable I2C\
        \ interrupt. "
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR0
    addr: 0x4
    size_bits: 32
    description: I2C slave Address Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address Register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CDAT
    addr: 0x8
    size_bits: 32
    description: I2C DATA Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CDAT
      bit_offset: 0
      bit_width: 8
      description: 'I2C Data Register

        Bit[7:0] is located with the 8-bit transferred data of I2C serial port. '
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CSTATUS
    addr: 0xc
    size_bits: 32
    description: I2C Status Register
    read_allowed: true
    write_allowed: false
    reset_value: 0xf8
    fields:
    - !Field
      name: I2CSTATUS
      bit_offset: 0
      bit_width: 8
      description: "I2C Status Register \nThe status register of I2C:\nThe three least\
        \ significant bits are always 0. The five most significant bits contain the\
        \ status code. There are 26 possible status codes. When I2STATUS contains\
        \ F8H, no serial interrupt is requested. All other I2STATUS values correspond\
        \ to defined I2C states. When each of these states is entered, a status interrupt\
        \ is requested (SI = 1). A valid status code is present in I2STATUS one machine\
        \ cycle after SI is set by hardware and is still present one machine cycle\
        \ after SI has been reset by software. In addition, states 00H stands for\
        \ a Bus Error. A Bus Error occurs when a START or STOP condition is present\
        \ at an illegal position in the formation frame. Example of illegal position\
        \ are during the serial transfer of an address byte, a data byte or an acknowledge\
        \ bit."
      read_allowed: true
      write_allowed: false
  - !Register
    name: I2CLK
    addr: 0x10
    size_bits: 32
    description: I2C clock divided Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2CLK
      bit_offset: 0
      bit_width: 8
      description: 'I2C clock divided Register

        The I2C clock rate bits: Data Baud Rate of I2C = PCLK /(4x(I2CLK+1)).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CTOC
    addr: 0x14
    size_bits: 32
    description: I2C Time out control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: "Time-Out flag. \n1 = Time-Out falg is set by H/W. It can interrupt\
        \ CPU.\n0 = S/W can clear the flag."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV4
      bit_offset: 1
      bit_width: 1
      description: "Time-Out counter input clock is divider by 4 \n1 = Enable\n0 =\
        \ Disable\nWhen Enable, The time-Out period is prolong 4 times."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENTI
      bit_offset: 2
      bit_width: 1
      description: 'Time-out counter is enabled/disable

        1 = Enable

        0 = Disable

        When Enable, the 14 bit time-out counter will start counting when SI is clear.
        Setting flag SI to high will reset counter and re-start up counting after
        SI is cleared.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR1
    addr: 0x18
    size_bits: 32
    description: I2C slave Address Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address Register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR2
    addr: 0x1c
    size_bits: 32
    description: I2C slave Address Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address Register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADDR3
    addr: 0x20
    size_bits: 32
    description: I2C slave Address Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: GC
      bit_offset: 0
      bit_width: 1
      description: 'General Call Function

        0 = Disable General Call Function.

        1 = Enable General Call Function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: I2CADDR
      bit_offset: 1
      bit_width: 7
      description: 'I2C Address Register

        The content of this register is irrelevant when I2C is in master mode. In
        the slave mode, the seven most significant bits must be loaded with the MCU''s
        own address. The I2C hardware will react if either of the address is matched.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM0
    addr: 0x24
    size_bits: 32
    description: I2C Slave address Mask Register0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2ADMx
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding\
        \ address bit is don't care.)\n0 = Mask disable (the received corresponding\
        \ register bit should be exact the same as address register.) \nI2C bus controllers\
        \ support multiple address recognition with four address mask register. When\
        \ the bit in the address mask register is set to one, it means the received\
        \ corresponding address bit is don't-care. If the bit is set to zero, that\
        \ means the received corresponding register bit should be exact the same as\
        \ address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM1
    addr: 0x28
    size_bits: 32
    description: I2C Slave address Mask Register1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2ADMx
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding\
        \ address bit is don't care.)\n0 = Mask disable (the received corresponding\
        \ register bit should be exact the same as address register.) \nI2C bus controllers\
        \ support multiple address recognition with four address mask register. When\
        \ the bit in the address mask register is set to one, it means the received\
        \ corresponding address bit is don't-care. If the bit is set to zero, that\
        \ means the received corresponding register bit should be exact the same as\
        \ address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM2
    addr: 0x2c
    size_bits: 32
    description: I2C Slave address Mask Register2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2ADMx
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding\
        \ address bit is don't care.)\n0 = Mask disable (the received corresponding\
        \ register bit should be exact the same as address register.) \nI2C bus controllers\
        \ support multiple address recognition with four address mask register. When\
        \ the bit in the address mask register is set to one, it means the received\
        \ corresponding address bit is don't-care. If the bit is set to zero, that\
        \ means the received corresponding register bit should be exact the same as\
        \ address register."
      read_allowed: true
      write_allowed: true
  - !Register
    name: I2CADM3
    addr: 0x30
    size_bits: 32
    description: I2C Slave address Mask Register3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: I2ADMx
      bit_offset: 1
      bit_width: 7
      description: "I2C Address Mask register\n1 = Mask enable (the received corresponding\
        \ address bit is don't care.)\n0 = Mask disable (the received corresponding\
        \ register bit should be exact the same as address register.) \nI2C bus controllers\
        \ support multiple address recognition with four address mask register. When\
        \ the bit in the address mask register is set to one, it means the received\
        \ corresponding address bit is don't-care. If the bit is set to zero, that\
        \ means the received corresponding register bit should be exact the same as\
        \ address register."
      read_allowed: true
      write_allowed: true
- !Module
  name: INT
  description: Registers group
  base_addr: 0x50000300
  size: 0x40
  registers:
  - !Register
    name: IRQ0_SRC
    addr: 0x0
    size_bits: 32
    description: MCU IRQ0 (BOD) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: BOD_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ1_SRC
    addr: 0x4
    size_bits: 32
    description: MCU IRQ1 (WDT) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: WDT_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ2_SRC
    addr: 0x8
    size_bits: 32
    description: MCU IRQ2 ((EINT0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: EINT0 - external interrupt 0 from P3.2'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ3_SRC
    addr: 0xc
    size_bits: 32
    description: MCU IRQ3 (EINT1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: EINT1 - external interrupt 1 from P3.3'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ4_SRC
    addr: 0x10
    size_bits: 32
    description: MCU IRQ4 (P0/1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1: P1_INT

        Bit0: P0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ5_SRC
    addr: 0x14
    size_bits: 32
    description: MCU IRQ5 (P2/3/4) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2: P4_INT

        Bit1: P3_INT

        Bit0: P2_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ6_SRC
    addr: 0x18
    size_bits: 32
    description: MCU IRQ6 (PWMA) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 4
      description: 'Bit3: PWM3_INT

        Bit2: PWM2_INT

        Bit1: PWM1_INT

        Bit0: PWM0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ7_SRC
    addr: 0x1c
    size_bits: 32
    description: MCU IRQ7 (PWMB) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 4
      description: 'Bit3: PWM7_INT

        Bit2: PWM6_INT

        Bit1: PWM5_INT

        Bit0: PWM4_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ8_SRC
    addr: 0x20
    size_bits: 32
    description: MCU IRQ8 (TMR0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: TMR0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ9_SRC
    addr: 0x24
    size_bits: 32
    description: MCU IRQ9 (TMR1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: TMR1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ10_SRC
    addr: 0x28
    size_bits: 32
    description: MCU IRQ10 (TMR2) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: TMR2_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ11_SRC
    addr: 0x2c
    size_bits: 32
    description: MCU IRQ11 (TMR3) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: TMR3_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ12_SRC
    addr: 0x30
    size_bits: 32
    description: MCU IRQ12 (URT0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: URT0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ13_SRC
    addr: 0x34
    size_bits: 32
    description: MCU IRQ13 (URT1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: URT1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ14_SRC
    addr: 0x38
    size_bits: 32
    description: MCU IRQ14 (SPI0) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: SPI0_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ15_SRC
    addr: 0x3c
    size_bits: 32
    description: MCU IRQ15 (SPI1) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: SPI1_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ18_SRC
    addr: 0x48
    size_bits: 32
    description: MCU IRQ18 (I2C) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: I2C_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ21_SRC
    addr: 0x54
    size_bits: 32
    description: MCU IRQ21 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ22_SRC
    addr: 0x58
    size_bits: 32
    description: MCU IRQ22 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ28_SRC
    addr: 0x70
    size_bits: 32
    description: MCU IRQ28 (PWRWU) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: PWRWU_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ29_SRC
    addr: 0x74
    size_bits: 32
    description: MCU IRQ29 (ADC) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: 'Bit2 = 0

        Bit1 = 0

        Bit0: ADC_INT'
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ30_SRC
    addr: 0x78
    size_bits: 32
    description: MCU IRQ30 (Reserved) interrupt source identify
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: INT_SRC
      bit_offset: 0
      bit_width: 3
      description: Reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: NMI_SEL
    addr: 0x80
    size_bits: 32
    description: NMI source interrupt select control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: NMI_SEL
      bit_offset: 0
      bit_width: 5
      description: 'The NMI interrupt to Cortex-M0 can be selected from one of the
        interrupt[31:0]

        The NMI_SEL bit[4:0] used to select the NMI interrupt source'
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCU_IRQ
    addr: 0x84
    size_bits: 32
    description: MCU IRQ Number identify register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MCU_IRQ
      bit_offset: 0
      bit_width: 32
      description: "MCU IRQ Source Register \nThe MCU_IRQ collect all the interrupts\
        \ from the peripherals and generate the synchronous interrupt to MCU Cortex-M0.\
        \ There are two modes to generate interrupt to MCU Cortex-M0, the normal mode\
        \ and test mode.\nThe MCU_IRQ collects all interrupts from each peripheral\
        \ and synchronizes them then interrupts the Cortex-M0. \nWhen the MCU_IRQ[n]\
        \ is \"0\": Set MCU_IRQ[n] \"1\" will generate an interrupt to Cortex_M0 NVIC[n].\n\
        When the MCU_IRQ[n] is \"1\"(mean an interrupt is assert) set 1 the MCU_bit[n]\
        \ will clear the interrupt\nSet MCU_IRQ[n] \"0\": no any effect"
      read_allowed: true
      write_allowed: true
- !Module
  name: PWMA
  description: Registers group
  base_addr: 0x40040000
  size: 0x3c
  registers:
  - !Register
    name: PPR
    addr: 0x0
    size_bits: 32
    description: PWM Pre-scalar Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CP01
      bit_offset: 0
      bit_width: 8
      description: 'Clock pre-scalar 0(PWM counter 0 & 1 for group A and PWM counter
        4 & 5 for group B)

        Clock input is divided by (CP01 + 1) before it is fed to the corresponding
        PWM counter

        If CP01=0, then the pre-scalar 0 output clock will be stopped. So corresponding
        PWM counter will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CP23
      bit_offset: 8
      bit_width: 8
      description: 'Clock pre-scalar 2(PWM counter 2 & 3 for group A and PWM counter
        6 & 7 for group B)

        Clock input is divided by (CP23 + 1) before it is fed to the corresponding
        PWM counter

        If CP23=0, then the pre-scalar 2 output clock will be stopped. So corresponding
        PWM counter will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI01
      bit_offset: 16
      bit_width: 8
      description: 'Dead zone interval register for pair of channel 0 and channel
        1(PWM0 and PWM1 pair for PWM group A, PWM4 and PWM5 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI23
      bit_offset: 24
      bit_width: 8
      description: 'Dead zone interval register for pair of channel 2 and channel
        3(PWM2 and PWM3 pair for PWM group A, PWM6 and PWM7 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CSR
    addr: 0x4
    size_bits: 32
    description: PWM Clock Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CSR0
      bit_offset: 0
      bit_width: 3
      description: 'Timer 0 Clock Source Selection(PWM timer 0 for group A and PWM
        timer 4 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR1
      bit_offset: 4
      bit_width: 3
      description: 'Timer 1 Clock Source Selection(PWM timer 1 for group A and PWM
        timer 5 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR2
      bit_offset: 8
      bit_width: 3
      description: 'Timer 2 Clock Source Selection(PWM timer 2 for group A and PWM
        timer 6 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR3
      bit_offset: 12
      bit_width: 3
      description: "Timer 3 Clock Source Selection (PWM timer 3 for group A and PWM\
        \ timer 7 for group B)\nSelect clock input for timer.\nCSR3 [14:12]\tInput\
        \ clock divided by\t\n100\t1\t\n011\t16\t\n010\t8\t\n001\t4\t\n000\t2\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PCR
    addr: 0x8
    size_bits: 32
    description: PWM Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CH0EN
      bit_offset: 0
      bit_width: 1
      description: 'PWM-Timer 0 Enable/Disable Start Run (PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0INV
      bit_offset: 2
      bit_width: 1
      description: 'PWM-Timer 0 Output Inverter ON/OFF(PWM timer 0 for group A and
        PWM timer 4 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0MOD
      bit_offset: 3
      bit_width: 1
      description: 'PWM-Timer 0 Auto-reload/One-Shot Mode(PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR0 and
        CMR0 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN01
      bit_offset: 4
      bit_width: 1
      description: 'Dead-Zone 0 Generator Enable/Disable(PWM0 and PWM1 pair for PWM
        group A, PWM4 and PWM5 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM0 and PWM1 becomes
        a complementary pair for PWM group A and the pair of PWM4 and PWM5 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN23
      bit_offset: 5
      bit_width: 1
      description: 'Dead-Zone 2 Generator Enable/Disable(PWM2 and PWM3 pair for PWM
        group A, PWM6 and PWM7 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM2 and PWM3 becomes
        a complementary pair for PWM group A and the pair of PWM6 and PWM7 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1EN
      bit_offset: 8
      bit_width: 1
      description: 'PWM-Timer 1 Enable/Disable Start Run (PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1INV
      bit_offset: 10
      bit_width: 1
      description: 'PWM-Timer 1 Output Inverter ON/OFF(PWM timer 1 for group A and
        PWM timer 5 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1MOD
      bit_offset: 11
      bit_width: 1
      description: 'PWM-Timer 1 Auto-reload/One-Shot Mode(PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR1 and
        CMR1 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2EN
      bit_offset: 16
      bit_width: 1
      description: 'PWM-Timer 2 Enable/Disable Start Run (PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2INV
      bit_offset: 18
      bit_width: 1
      description: 'PWM-Timer 2 Output Inverter ON/OFF(PWM timer 2 for group A and
        PWM timer 6 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2MOD
      bit_offset: 19
      bit_width: 1
      description: 'PWM-Timer 2 Auto-reload/One-Shot Mode(PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR2 and
        CMR2 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3EN
      bit_offset: 24
      bit_width: 1
      description: 'PWM-Timer 3 Enable/Disable Start Run (PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3INV
      bit_offset: 26
      bit_width: 1
      description: 'PWM-Timer 3 Output Inverter ON/OFF(PWM timer 3 for group A and
        PWM timer 7 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3MOD
      bit_offset: 27
      bit_width: 1
      description: 'PWM-Timer 3 Auto-reload/One-Shot Mode(PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR3 and
        CMR3 be clear.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CNR0
    addr: 0xc
    size_bits: 32
    description: PWM Counter Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR0
    addr: 0x10
    size_bits: 32
    description: PWM Comparator Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR0
    addr: 0x14
    size_bits: 32
    description: PWM Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR1
    addr: 0x18
    size_bits: 32
    description: PWM Counter Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR1
    addr: 0x1c
    size_bits: 32
    description: PWM Comparator Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR1
    addr: 0x20
    size_bits: 32
    description: PWM Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR2
    addr: 0x24
    size_bits: 32
    description: PWM Counter Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR2
    addr: 0x28
    size_bits: 32
    description: PWM Comparator Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR2
    addr: 0x2c
    size_bits: 32
    description: PWM Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR3
    addr: 0x30
    size_bits: 32
    description: PWM Counter Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR3
    addr: 0x34
    size_bits: 32
    description: PWM Comparator Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR3
    addr: 0x38
    size_bits: 32
    description: PWM Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PIER
    addr: 0x40
    size_bits: 32
    description: PWM Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIE0
      bit_offset: 0
      bit_width: 1
      description: 'PWM channel 0 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE1
      bit_offset: 1
      bit_width: 1
      description: 'PWM channel 1 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM channel 2 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE3
      bit_offset: 3
      bit_width: 1
      description: 'PWM channel 3 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIIR
    addr: 0x44
    size_bits: 32
    description: PWM Interrupt Indication Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIF0
      bit_offset: 0
      bit_width: 1
      description: 'PWM channel 0 Interrupt Status

        Flag is set by hardware when PWM0 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF1
      bit_offset: 1
      bit_width: 1
      description: 'PWM channel 1 Interrupt Status

        Flag is set by hardware when PWM1 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF2
      bit_offset: 2
      bit_width: 1
      description: 'PWM channel 2 Interrupt Status

        Flag is set by hardware when PWM2 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF3
      bit_offset: 3
      bit_width: 1
      description: 'PWM channel 3 Interrupt Status

        Flag is set by hardware when PWM3 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR0
    addr: 0x50
    size_bits: 32
    description: Capture Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Group Channel 0 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE0
      bit_offset: 1
      bit_width: 1
      description: 'PWM Group Channel 0 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 0 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE0
      bit_offset: 2
      bit_width: 1
      description: 'PWM Group Channel 0 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 0 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH0EN
      bit_offset: 3
      bit_width: 1
      description: 'Capture Channel 0 transition Enable/Disable

        1 = Enable capture function on PWM group channel 0.

        0 = Disable capture function on PWM group channel 0

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 0 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF0
      bit_offset: 4
      bit_width: 1
      description: 'Capture0 Interrupt Indication Flag


        If PWM group channel 0 rising latch interrupt is enabled (CRL_IE0=1), a rising
        transition occurs at PWM group channel 0 will result in CAPIF0 to high; Similarly,
        a falling transition will cause CAPIF0 to be set high if PWM group channel
        0 falling latch interrupt is enabled (CFL_IE0=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI0
      bit_offset: 6
      bit_width: 1
      description: 'CRLR0 Latched Indicator Bit


        When PWM group input channel 0 has a rising transition, CRLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI0
      bit_offset: 7
      bit_width: 1
      description: 'CFLR0 Latched Indicator Bit


        When PWM group input channel 0 has a falling transition, CFLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV1
      bit_offset: 16
      bit_width: 1
      description: 'PWM Group Channel 1 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE1
      bit_offset: 17
      bit_width: 1
      description: 'PWM Group Channel 1 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 1 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE1
      bit_offset: 18
      bit_width: 1
      description: 'PWM Group Channel 1 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 1 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH1EN
      bit_offset: 19
      bit_width: 1
      description: 'Capture Channel 1 transition Enable/Disable

        1 = Enable capture function on PWM group channel 1.

        0 = Disable capture function on PWM group channel 1

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 1 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF1
      bit_offset: 20
      bit_width: 1
      description: 'Capture1 Interrupt Indication Flag


        If PWM group channel 1 rising latch interrupt is enabled (CRL_IE1=1), a rising
        transition occurs at PWM group channel 1 will result in CAPIF1 to high; Similarly,
        a falling transition will cause CAPIF1 to be set high if PWM group channel
        1 falling latch interrupt is enabled (CFL_IE1=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI1
      bit_offset: 22
      bit_width: 1
      description: 'CRLR1 Latched Indicator Bit


        When PWM group input channel 1 has a rising transition, CRLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI1
      bit_offset: 23
      bit_width: 1
      description: 'CFLR1 Latched Indicator Bit


        When PWM group input channel 1 has a falling transition, CFLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR2
    addr: 0x54
    size_bits: 32
    description: Capture Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV2
      bit_offset: 0
      bit_width: 1
      description: 'PWM Group Channel 2 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE2
      bit_offset: 1
      bit_width: 1
      description: 'PWM Group Channel 2 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 2 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Group Channel 2 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 2 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH2EN
      bit_offset: 3
      bit_width: 1
      description: 'Capture Channel 2 transition Enable/Disable

        1 = Enable capture function on PWM group channel 2.

        0 = Disable capture function on PWM group channel 2

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 2 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF2
      bit_offset: 4
      bit_width: 1
      description: 'Capture2 Interrupt Indication Flag


        If PWM group channel 2 rising latch interrupt is enabled (CRL_IE2=1), a rising
        transition occurs at PWM group channel 2 will result in CAPIF2 to high; Similarly,
        a falling transition will cause CAPIF2 to be set high if PWM group channel
        2 falling latch interrupt is enabled (CFL_IE2=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI2
      bit_offset: 6
      bit_width: 1
      description: 'CRLR2 Latched Indicator Bit


        When PWM group input channel 2 has a rising transition, CRLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI2
      bit_offset: 7
      bit_width: 1
      description: 'CFLR2 Latched Indicator Bit


        When PWM group input channel 2 has a falling transition, CFLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV3
      bit_offset: 16
      bit_width: 1
      description: 'PWM Group Channel 3 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE3
      bit_offset: 17
      bit_width: 1
      description: 'PWM Group Channel 3 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 3 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE3
      bit_offset: 18
      bit_width: 1
      description: 'PWM Group Channel 3 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 3 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH3EN
      bit_offset: 19
      bit_width: 1
      description: 'Capture Channel 3 transition Enable/Disable

        1 = Enable capture function on PWM group channel 3.

        0 = Disable capture function on PWM group channel 3

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 3 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF3
      bit_offset: 20
      bit_width: 1
      description: 'Capture3 Interrupt Indication Flag


        If PWM group channel 3 rising latch interrupt is enabled (CRL_IE3=1), a rising
        transition occurs at PWM group channel 3 will result in CAPIF3 to high; Similarly,
        a falling transition will cause CAPIF3 to be set high if PWM group channel
        3 falling latch interrupt is enabled (CFL_IE3=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI3
      bit_offset: 22
      bit_width: 1
      description: 'CRLR3 Latched Indicator Bit


        When PWM group input channel 3 has a rising transition, CRLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI3
      bit_offset: 23
      bit_width: 1
      description: 'CFLR3 Latched Indicator Bit


        When PWM group input channel 3 has a falling transition, CFLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CRLR0
    addr: 0x58
    size_bits: 32
    description: Capture Rising Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR0
    addr: 0x5c
    size_bits: 32
    description: Capture Falling Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 01/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR1
    addr: 0x60
    size_bits: 32
    description: Capture Rising Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR1
    addr: 0x64
    size_bits: 32
    description: Capture Falling Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 01/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR2
    addr: 0x68
    size_bits: 32
    description: Capture Rising Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR2
    addr: 0x6c
    size_bits: 32
    description: Capture Falling Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR3
    addr: 0x70
    size_bits: 32
    description: Capture Rising Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR3
    addr: 0x74
    size_bits: 32
    description: Capture Falling Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAPENR
    addr: 0x78
    size_bits: 32
    description: Capture Input Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPENR
      bit_offset: 0
      bit_width: 4
      description: "Capture Input Enable Register\nThere are four capture inputs from\
        \ pad. Bit0~Bit3 are used to control each inputs ON or OFF. \n0 = OFF (PWMx\
        \ multi-function pin input does not affect input capture function.)\n1 = (PWMx\
        \ multi-function pin input will affect its input capture function.)\n\n\n\n\
        CAPENR\nBit 3210 for PWM group A\nBit xxx1 -> Capture channel 0 is from P2\
        \ [0] \nBit xx1x -> Capture channel 1 is from P2 [1] \nBit x1xx -> Capture\
        \ channel 2 is from P2 [2]\nBit 1xxx -> Capture channel 3 is from P2 [3]\n\
        Bit 3210 for PWM group B\nBit xxx1 -> Capture channel 0 is from P2 [4] \n\
        Bit xx1x -> Capture channel 1 is from P2 [5] \nBit x1xx -> Capture channel\
        \ 2 is from P2 [6]\nBit 1xxx -> Capture channel 3 is from P2 [7]"
      read_allowed: true
      write_allowed: true
  - !Register
    name: POE
    addr: 0x7c
    size_bits: 32
    description: PWM Output Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWM0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Output Enable Register

        1 = Enable PWM channel 0 output to pin.

        0 = Disable PWM channel 0 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Output Enable Register

        1 = Enable PWM channel 1 output to pin.

        0 = Disable PWM channel 1 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Output Enable Register

        1 = Enable PWM channel 2 output to pin.

        0 = Disable PWM channel 2 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Output Enable Register

        1 = Enable PWM channel 3 output to pin.

        0 = Disable PWM channel 3 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
- !Module
  name: PWMB
  description: Registers group
  base_addr: 0x40140000
  size: 0x3c
  registers:
  - !Register
    name: PPR
    addr: 0x0
    size_bits: 32
    description: PWM Pre-scalar Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CP01
      bit_offset: 0
      bit_width: 8
      description: 'Clock pre-scalar 0(PWM counter 0 & 1 for group A and PWM counter
        4 & 5 for group B)

        Clock input is divided by (CP01 + 1) before it is fed to the corresponding
        PWM counter

        If CP01=0, then the pre-scalar 0 output clock will be stopped. So corresponding
        PWM counter will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CP23
      bit_offset: 8
      bit_width: 8
      description: 'Clock pre-scalar 2(PWM counter 2 & 3 for group A and PWM counter
        6 & 7 for group B)

        Clock input is divided by (CP23 + 1) before it is fed to the corresponding
        PWM counter

        If CP23=0, then the pre-scalar 2 output clock will be stopped. So corresponding
        PWM counter will be stopped also.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI01
      bit_offset: 16
      bit_width: 8
      description: 'Dead zone interval register for pair of channel 0 and channel
        1(PWM0 and PWM1 pair for PWM group A, PWM4 and PWM5 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZI23
      bit_offset: 24
      bit_width: 8
      description: 'Dead zone interval register for pair of channel 2 and channel
        3(PWM2 and PWM3 pair for PWM group A, PWM6 and PWM7 pair for PWM group B)

        These 8 bits determine dead zone length.

        The unit time of dead zone length is received from corresponding CSR bits.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CSR
    addr: 0x4
    size_bits: 32
    description: PWM Clock Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CSR0
      bit_offset: 0
      bit_width: 3
      description: 'Timer 0 Clock Source Selection(PWM timer 0 for group A and PWM
        timer 4 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR1
      bit_offset: 4
      bit_width: 3
      description: 'Timer 1 Clock Source Selection(PWM timer 1 for group A and PWM
        timer 5 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR2
      bit_offset: 8
      bit_width: 3
      description: 'Timer 2 Clock Source Selection(PWM timer 2 for group A and PWM
        timer 6 for group B)

        Select clock input for timer.

        (Table is the same as CSR3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSR3
      bit_offset: 12
      bit_width: 3
      description: "Timer 3 Clock Source Selection (PWM timer 3 for group A and PWM\
        \ timer 7 for group B)\nSelect clock input for timer.\nCSR3 [14:12]\tInput\
        \ clock divided by\t\n100\t1\t\n011\t16\t\n010\t8\t\n001\t4\t\n000\t2\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PCR
    addr: 0x8
    size_bits: 32
    description: PWM Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CH0EN
      bit_offset: 0
      bit_width: 1
      description: 'PWM-Timer 0 Enable/Disable Start Run (PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0INV
      bit_offset: 2
      bit_width: 1
      description: 'PWM-Timer 0 Output Inverter ON/OFF(PWM timer 0 for group A and
        PWM timer 4 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0MOD
      bit_offset: 3
      bit_width: 1
      description: 'PWM-Timer 0 Auto-reload/One-Shot Mode(PWM timer 0 for group A
        and PWM timer 4 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR0 and
        CMR0 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN01
      bit_offset: 4
      bit_width: 1
      description: 'Dead-Zone 0 Generator Enable/Disable(PWM0 and PWM1 pair for PWM
        group A, PWM4 and PWM5 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM0 and PWM1 becomes
        a complementary pair for PWM group A and the pair of PWM4 and PWM5 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DZEN23
      bit_offset: 5
      bit_width: 1
      description: 'Dead-Zone 2 Generator Enable/Disable(PWM2 and PWM3 pair for PWM
        group A, PWM6 and PWM7 pair for PWM group B)

        1 = Enable

        0 = Disable

        Note: When Dead-Zone Generator is enabled, the pair of PWM2 and PWM3 becomes
        a complementary pair for PWM group A and the pair of PWM6 and PWM7 becomes
        a complementary pair for PWM group B.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1EN
      bit_offset: 8
      bit_width: 1
      description: 'PWM-Timer 1 Enable/Disable Start Run (PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1INV
      bit_offset: 10
      bit_width: 1
      description: 'PWM-Timer 1 Output Inverter ON/OFF(PWM timer 1 for group A and
        PWM timer 5 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1MOD
      bit_offset: 11
      bit_width: 1
      description: 'PWM-Timer 1 Auto-reload/One-Shot Mode(PWM timer 1 for group A
        and PWM timer 5 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR1 and
        CMR1 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2EN
      bit_offset: 16
      bit_width: 1
      description: 'PWM-Timer 2 Enable/Disable Start Run (PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2INV
      bit_offset: 18
      bit_width: 1
      description: 'PWM-Timer 2 Output Inverter ON/OFF(PWM timer 2 for group A and
        PWM timer 6 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2MOD
      bit_offset: 19
      bit_width: 1
      description: 'PWM-Timer 2 Auto-reload/One-Shot Mode(PWM timer 2 for group A
        and PWM timer 6 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR2 and
        CMR2 be clear.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3EN
      bit_offset: 24
      bit_width: 1
      description: 'PWM-Timer 3 Enable/Disable Start Run (PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Enable corresponding PWM-Timer Start Run

        0 = Stop corresponding PWM-Timer Running'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3INV
      bit_offset: 26
      bit_width: 1
      description: 'PWM-Timer 3 Output Inverter ON/OFF(PWM timer 3 for group A and
        PWM timer 7 for group B)

        1 = Inverter ON

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3MOD
      bit_offset: 27
      bit_width: 1
      description: 'PWM-Timer 3 Auto-reload/One-Shot Mode(PWM timer 3 for group A
        and PWM timer 7 for group B)

        1 = Auto-reload Mode

        0 = One-Shot Mode

        Note: If there is a rising transition at this bit, it will cause CNR3 and
        CMR3 be clear.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CNR0
    addr: 0xc
    size_bits: 32
    description: PWM Counter Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR0
    addr: 0x10
    size_bits: 32
    description: PWM Comparator Register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR0
    addr: 0x14
    size_bits: 32
    description: PWM Data Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR1
    addr: 0x18
    size_bits: 32
    description: PWM Counter Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR1
    addr: 0x1c
    size_bits: 32
    description: PWM Comparator Register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR1
    addr: 0x20
    size_bits: 32
    description: PWM Data Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR2
    addr: 0x24
    size_bits: 32
    description: PWM Counter Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR2
    addr: 0x28
    size_bits: 32
    description: PWM Comparator Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR2
    addr: 0x2c
    size_bits: 32
    description: PWM Data Register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNR3
    addr: 0x30
    size_bits: 32
    description: PWM Counter Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Counter/Timer Loaded Value

        CNR determines the PWM period.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMR3
    addr: 0x34
    size_bits: 32
    description: PWM Comparator Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CMR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Comparator Register

        CNR determines the PWM duty.


        PWM frequency = PWMxy_CLK/(prescale+1)/(clock divider)/(CNR+1); where xy,
        could be 01, 23, 45 or 67, depends on selected PWM channel.


        Duty ratio = (CMR+1)/(CNR+1).


        CMR >= CNR: PWM output is always high.


        CMR < CNR: PWM low width = (CNR-CMR) unit; PWM high width = (CMR+1) unit.


        CMR = 0: PWM low width = (CNR) unit; PWM high width = 1 unit


        (Unit = one PWM clock cycle)

        Note: Any write to CNR will take effect in next PWM cycle.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PDR3
    addr: 0x38
    size_bits: 32
    description: PWM Data Register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PDR
      bit_offset: 0
      bit_width: 16
      description: 'PWM Data Register

        User can monitor PDR to know the current value in 16-bit down counter.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: PIER
    addr: 0x40
    size_bits: 32
    description: PWM Interrupt Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIE0
      bit_offset: 0
      bit_width: 1
      description: 'PWM channel 0 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE1
      bit_offset: 1
      bit_width: 1
      description: 'PWM channel 1 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM channel 2 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIE3
      bit_offset: 3
      bit_width: 1
      description: 'PWM channel 3 Interrupt Enable

        1 = Enable

        0 = Disable '
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIIR
    addr: 0x44
    size_bits: 32
    description: PWM Interrupt Indication Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMIF0
      bit_offset: 0
      bit_width: 1
      description: 'PWM channel 0 Interrupt Status

        Flag is set by hardware when PWM0 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF1
      bit_offset: 1
      bit_width: 1
      description: 'PWM channel 1 Interrupt Status

        Flag is set by hardware when PWM1 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF2
      bit_offset: 2
      bit_width: 1
      description: 'PWM channel 2 Interrupt Status

        Flag is set by hardware when PWM2 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWMIF3
      bit_offset: 3
      bit_width: 1
      description: 'PWM channel 3 Interrupt Status

        Flag is set by hardware when PWM3 down counter reaches zero, software can
        clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR0
    addr: 0x50
    size_bits: 32
    description: Capture Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Group Channel 0 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE0
      bit_offset: 1
      bit_width: 1
      description: 'PWM Group Channel 0 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 0 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE0
      bit_offset: 2
      bit_width: 1
      description: 'PWM Group Channel 0 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 0 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH0EN
      bit_offset: 3
      bit_width: 1
      description: 'Capture Channel 0 transition Enable/Disable

        1 = Enable capture function on PWM group channel 0.

        0 = Disable capture function on PWM group channel 0

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 0 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF0
      bit_offset: 4
      bit_width: 1
      description: 'Capture0 Interrupt Indication Flag


        If PWM group channel 0 rising latch interrupt is enabled (CRL_IE0=1), a rising
        transition occurs at PWM group channel 0 will result in CAPIF0 to high; Similarly,
        a falling transition will cause CAPIF0 to be set high if PWM group channel
        0 falling latch interrupt is enabled (CFL_IE0=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI0
      bit_offset: 6
      bit_width: 1
      description: 'CRLR0 Latched Indicator Bit


        When PWM group input channel 0 has a rising transition, CRLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI0
      bit_offset: 7
      bit_width: 1
      description: 'CFLR0 Latched Indicator Bit


        When PWM group input channel 0 has a falling transition, CFLR0 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV1
      bit_offset: 16
      bit_width: 1
      description: 'PWM Group Channel 1 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE1
      bit_offset: 17
      bit_width: 1
      description: 'PWM Group Channel 1 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 1 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE1
      bit_offset: 18
      bit_width: 1
      description: 'PWM Group Channel 1 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 1 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH1EN
      bit_offset: 19
      bit_width: 1
      description: 'Capture Channel 1 transition Enable/Disable

        1 = Enable capture function on PWM group channel 1.

        0 = Disable capture function on PWM group channel 1

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 1 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF1
      bit_offset: 20
      bit_width: 1
      description: 'Capture1 Interrupt Indication Flag


        If PWM group channel 1 rising latch interrupt is enabled (CRL_IE1=1), a rising
        transition occurs at PWM group channel 1 will result in CAPIF1 to high; Similarly,
        a falling transition will cause CAPIF1 to be set high if PWM group channel
        1 falling latch interrupt is enabled (CFL_IE1=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI1
      bit_offset: 22
      bit_width: 1
      description: 'CRLR1 Latched Indicator Bit


        When PWM group input channel 1 has a rising transition, CRLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI1
      bit_offset: 23
      bit_width: 1
      description: 'CFLR1 Latched Indicator Bit


        When PWM group input channel 1 has a falling transition, CFLR1 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR2
    addr: 0x54
    size_bits: 32
    description: Capture Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INV2
      bit_offset: 0
      bit_width: 1
      description: 'PWM Group Channel 2 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE2
      bit_offset: 1
      bit_width: 1
      description: 'PWM Group Channel 2 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 2 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Group Channel 2 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 2 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH2EN
      bit_offset: 3
      bit_width: 1
      description: 'Capture Channel 2 transition Enable/Disable

        1 = Enable capture function on PWM group channel 2.

        0 = Disable capture function on PWM group channel 2

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 2 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF2
      bit_offset: 4
      bit_width: 1
      description: 'Capture2 Interrupt Indication Flag


        If PWM group channel 2 rising latch interrupt is enabled (CRL_IE2=1), a rising
        transition occurs at PWM group channel 2 will result in CAPIF2 to high; Similarly,
        a falling transition will cause CAPIF2 to be set high if PWM group channel
        2 falling latch interrupt is enabled (CFL_IE2=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI2
      bit_offset: 6
      bit_width: 1
      description: 'CRLR2 Latched Indicator Bit


        When PWM group input channel 2 has a rising transition, CRLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI2
      bit_offset: 7
      bit_width: 1
      description: 'CFLR2 Latched Indicator Bit


        When PWM group input channel 2 has a falling transition, CFLR2 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV3
      bit_offset: 16
      bit_width: 1
      description: 'PWM Group Channel 3 Inverter ON/OFF


        1 = Inverter ON. Reverse the input signal from GPIO before fed to Capture
        timer

        0 = Inverter OFF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRL_IE3
      bit_offset: 17
      bit_width: 1
      description: 'PWM Group Channel 3 Rising Latch Interrupt Enable ON/OFF

        1 = Enable rising latch interrupt

        0 = Disable rising latch interrupt

        When Enable, if Capture detects PWM group channel 3 has rising transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFL_IE3
      bit_offset: 18
      bit_width: 1
      description: 'PWM Group Channel 3 Falling Latch Interrupt Enable ON/OFF

        1 = Enable falling latch interrupt

        0 = Disable falling latch interrupt

        When Enable, if Capture detects PWM group channel 3 has falling transition,
        Capture issues an Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCH3EN
      bit_offset: 19
      bit_width: 1
      description: 'Capture Channel 3 transition Enable/Disable

        1 = Enable capture function on PWM group channel 3.

        0 = Disable capture function on PWM group channel 3

        When Enable, Capture latched the PWM-counter value and saved to CRLR (Rising
        latch) and CFLR (Falling latch).

        When Disable, Capture does not update CRLR and CFLR, and disable PWM group
        channel 3 Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPIF3
      bit_offset: 20
      bit_width: 1
      description: 'Capture3 Interrupt Indication Flag


        If PWM group channel 3 rising latch interrupt is enabled (CRL_IE3=1), a rising
        transition occurs at PWM group channel 3 will result in CAPIF3 to high; Similarly,
        a falling transition will cause CAPIF3 to be set high if PWM group channel
        3 falling latch interrupt is enabled (CFL_IE3=1). This flag is clear by software
        with a write 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRLRI3
      bit_offset: 22
      bit_width: 1
      description: 'CRLR3 Latched Indicator Bit


        When PWM group input channel 3 has a rising transition, CRLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFLRI3
      bit_offset: 23
      bit_width: 1
      description: 'CFLR3 Latched Indicator Bit


        When PWM group input channel 3 has a falling transition, CFLR3 was latched
        with the value of PWM down-counter and this bit is set by hardware.


        Clear this bit by writing a one to it.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CRLR0
    addr: 0x58
    size_bits: 32
    description: Capture Rising Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR0
    addr: 0x5c
    size_bits: 32
    description: Capture Falling Latch Register (Channel 0)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 01/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR1
    addr: 0x60
    size_bits: 32
    description: Capture Rising Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR1
    addr: 0x64
    size_bits: 32
    description: Capture Falling Latch Register (Channel 1)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 01/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR2
    addr: 0x68
    size_bits: 32
    description: Capture Rising Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR2
    addr: 0x6c
    size_bits: 32
    description: Capture Falling Latch Register (channel 2)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CRLR3
    addr: 0x70
    size_bits: 32
    description: Capture Rising Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CRLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Rising Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has rising transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CFLR3
    addr: 0x74
    size_bits: 32
    description: Capture Falling Latch Register (channel 3)
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CFLR
      bit_offset: 0
      bit_width: 16
      description: 'Capture Falling Latch Register

        Latch the PWM counter when Channel 0/1/2/3 has Falling transition.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: CAPENR
    addr: 0x78
    size_bits: 32
    description: Capture Input Enable Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPENR
      bit_offset: 0
      bit_width: 4
      description: "Capture Input Enable Register\nThere are four capture inputs from\
        \ pad. Bit0~Bit3 are used to control each inputs ON or OFF. \n0 = OFF (PWMx\
        \ multi-function pin input does not affect input capture function.)\n1 = (PWMx\
        \ multi-function pin input will affect its input capture function.)\n\n\n\n\
        CAPENR\nBit 3210 for PWM group A\nBit xxx1 -> Capture channel 0 is from P2\
        \ [0] \nBit xx1x -> Capture channel 1 is from P2 [1] \nBit x1xx -> Capture\
        \ channel 2 is from P2 [2]\nBit 1xxx -> Capture channel 3 is from P2 [3]\n\
        Bit 3210 for PWM group B\nBit xxx1 -> Capture channel 0 is from P2 [4] \n\
        Bit xx1x -> Capture channel 1 is from P2 [5] \nBit x1xx -> Capture channel\
        \ 2 is from P2 [6]\nBit 1xxx -> Capture channel 3 is from P2 [7]"
      read_allowed: true
      write_allowed: true
  - !Register
    name: POE
    addr: 0x7c
    size_bits: 32
    description: PWM Output Enable
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWM0
      bit_offset: 0
      bit_width: 1
      description: 'PWM Channel 0 Output Enable Register

        1 = Enable PWM channel 0 output to pin.

        0 = Disable PWM channel 0 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM1
      bit_offset: 1
      bit_width: 1
      description: 'PWM Channel 1 Output Enable Register

        1 = Enable PWM channel 1 output to pin.

        0 = Disable PWM channel 1 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM2
      bit_offset: 2
      bit_width: 1
      description: 'PWM Channel 2 Output Enable Register

        1 = Enable PWM channel 2 output to pin.

        0 = Disable PWM channel 2 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWM3
      bit_offset: 3
      bit_width: 1
      description: 'PWM Channel 3 Output Enable Register

        1 = Enable PWM channel 3 output to pin.

        0 = Disable PWM channel 3 output to pin.

        Note: The corresponding GPIO pin also must be switched to PWM function.'
      read_allowed: true
      write_allowed: true
- !Module
  name: SCS
  description: Registers group
  base_addr: 0xe000e000
  size: 0xc
  registers:
  - !Register
    name: SYST_CSR
    addr: 0x10
    size_bits: 32
    description: SysTick Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: '1 = The counter will operate in a multi-shot manner.

        0 = The counter is disabled'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TICKINT
      bit_offset: 1
      bit_width: 1
      description: '1 = Counting down to 0 will cause the SysTick exception to be
        pended. Clearing the SysTick Current Value register by a register write in
        software will not cause SysTick to be pended.

        0 = Counting down to 0 does not cause the SysTick exception to be pended.
        Software can use COUNTFLAG to determine if a count to zero has occurred.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKSRC
      bit_offset: 2
      bit_width: 1
      description: '1 = Core clock used for SysTick.

        0 = Clock source is optional, refer to STCLK_S.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: COUNTFLAG
      bit_offset: 16
      bit_width: 1
      description: 'Returns 1 if timer counted to 0 since last time this register
        was read.

        COUNTFLAG is set by a count transition from 1 to 0.

        COUNTFLAG is cleared on read or by a write to the Current Value register.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SYST_RVR
    addr: 0x14
    size_bits: 32
    description: SysTick Reload value Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOAD
      bit_offset: 0
      bit_width: 24
      description: Value to load into the Current Value register when the counter
        reaches 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SYST_CVR
    addr: 0x18
    size_bits: 32
    description: SysTick Current value Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CURRENT
      bit_offset: 0
      bit_width: 24
      description: Current counter value. This is the value of the counter at the
        time it is sampled. The counter does not provide read-modify-write protection.
        The register is write-clear. A software write of any value will clear the
        register to 0. Unsupported bits RAZ (see SysTick Reload Value register).
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ISER
    addr: 0x100
    size_bits: 32
    description: IRQ0 ~ IRQ31 Set-Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SETENA
      bit_offset: 0
      bit_width: 32
      description: "Enable one or more interrupts within a group of 32. Each bit represents\
        \ an interrupt number from IRQ0 ~ IRQ31 (Vector number from 16 ~ 47). \nWriting\
        \ 1 will enable the associated interrupt.\nWriting 0 has no effect.\nThe register\
        \ reads back with the current enable state."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICER
    addr: 0x180
    size_bits: 32
    description: IRQ0 ~ IRQ31 Clear-Enable Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRENA
      bit_offset: 0
      bit_width: 32
      description: "Disable one or more interrupts within a group of 32. Each bit\
        \ represents an interrupt number from IRQ0 ~ IRQ31 (Vector number from 16\
        \ ~ 47). \nWriting 1 will disable the associated interrupt.\nWriting 0 has\
        \ no effect.\nThe register reads back with the current enable state."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ISPR
    addr: 0x200
    size_bits: 32
    description: IRQ0 ~ IRQ31 Set-Pending Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SETPEND
      bit_offset: 0
      bit_width: 32
      description: 'Writing 1 to a bit pends the associated interrupt under software
        control. Each bit represents an interrupt number from IRQ0 ~ IRQ31 (Vector
        number from 16 ~ 47).

        Writing 0 has no effect.

        The register reads back with the current pending state.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICPR
    addr: 0x280
    size_bits: 32
    description: IRQ0 ~ IRQ31 Clear-Pending Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLRPEND
      bit_offset: 0
      bit_width: 32
      description: 'Writing 1 to a bit un-pends the associated interrupt under software
        control. Each bit represents an interrupt number from IRQ0 ~ IRQ31 (Vector
        number from 16 ~ 47).

        Writing 0 has no effect.

        The register reads back with the current pending state.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR0
    addr: 0x400
    size_bits: 32
    description: IRQ0 ~ IRQ3 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_0
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ0

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_1
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ1

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_2
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ2

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_3
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ3

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR1
    addr: 0x404
    size_bits: 32
    description: IRQ4 ~ IRQ7 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_4
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ4

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_5
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ5

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_6
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ6

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_7
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ7

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR2
    addr: 0x408
    size_bits: 32
    description: IRQ8 ~ IRQ11 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_8
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ8

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_9
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ9

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_10
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ10

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_11
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ11

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR3
    addr: 0x40c
    size_bits: 32
    description: IRQ12 ~ IRQ15 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_12
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ12

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_13
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ13

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_14
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ14

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_15
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ15

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR4
    addr: 0x410
    size_bits: 32
    description: IRQ16 ~ IRQ19 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_16
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ16

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_17
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ17

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_18
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ18

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_19
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ19

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR5
    addr: 0x414
    size_bits: 32
    description: IRQ20 ~ IRQ23 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_20
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ20

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_21
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ21

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_22
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ22

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_23
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ23

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR6
    addr: 0x418
    size_bits: 32
    description: IRQ24 ~ IRQ27 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_24
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ24

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_25
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ25

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_26
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ26

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_27
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ27

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR7
    addr: 0x41c
    size_bits: 32
    description: IRQ28 ~ IRQ31 Priority Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_28
      bit_offset: 6
      bit_width: 2
      description: 'Priority of IRQ28

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_29
      bit_offset: 14
      bit_width: 2
      description: 'Priority of IRQ29

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_30
      bit_offset: 22
      bit_width: 2
      description: 'Priority of IRQ30

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_31
      bit_offset: 30
      bit_width: 2
      description: 'Priority of IRQ31

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CPUID
    addr: 0xd00
    size_bits: 32
    description: CPUID Base Register
    read_allowed: true
    write_allowed: false
    reset_value: 0x410cc200
    fields:
    - !Field
      name: REVISION
      bit_offset: 0
      bit_width: 4
      description: Reads as 0x0
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNO
      bit_offset: 4
      bit_width: 12
      description: Reads as 0xC20.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PART
      bit_offset: 16
      bit_width: 4
      description: Reads as 0xC for ARMv6-M parts
      read_allowed: true
      write_allowed: false
    - !Field
      name: IMPLEMENTER
      bit_offset: 24
      bit_width: 8
      description: Implementer code assigned by ARM. ( ARM = 0x41)
      read_allowed: true
      write_allowed: false
  - !Register
    name: ICSR
    addr: 0xd04
    size_bits: 32
    description: Interrupt Control State Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VECTACTIVE
      bit_offset: 0
      bit_width: 9
      description: '0 = Thread mode

        value > 1: the exception number for the current executing exception.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VECTPENDING
      bit_offset: 12
      bit_width: 9
      description: Indicates the exception number for the highest priority pending
        exception. The pending state includes the effect of memory-mapped enable and
        mask registers. It does not include the PRIMASK special-purpose register qualifier.
        A value of zero indicates no pending exceptions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ISRPENDING
      bit_offset: 22
      bit_width: 1
      description: Indicates if an external configurable (NVIC generated) interrupt
        is pending.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ISRPREEMPT
      bit_offset: 23
      bit_width: 1
      description: If set, a pending exception will be serviced on exit from the debug
        halt state.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PENDSTCLR
      bit_offset: 25
      bit_width: 1
      description: Write 1 to clear a pending SysTick.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PENDSTSET
      bit_offset: 26
      bit_width: 1
      description: Set a pending SysTick. Reads back with current state (1 if Pending,
        0 if not).
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSVCLR
      bit_offset: 27
      bit_width: 1
      description: Write 1 to clear a pending PendSV interrupt.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PENDSVSET
      bit_offset: 28
      bit_width: 1
      description: Set a pending PendSV interrupt. This is normally used to request
        a context switch. Reads back with current state (1 if Pending, 0 if not).
      read_allowed: true
      write_allowed: true
    - !Field
      name: NMIPENDSET
      bit_offset: 31
      bit_width: 1
      description: Setting this bit will activate an NMI. Since NMI is the highest
        priority exception, it will activate as soon as it is registered. Reads back
        with current state (1 if Pending, 0 if not).
      read_allowed: true
      write_allowed: true
  - !Register
    name: AIRCR
    addr: 0xd0c
    size_bits: 32
    description: Application Interrupt and Reset Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VECTCLRACTIVE
      bit_offset: 1
      bit_width: 1
      description: 'Set this bit to 1 will clears all active state information for
        fixed and configurable exceptions. The bit is a write only bit and can only
        be written when the core is halted. Note: It is the debugger''s responsibility
        to re-initialize the stack. '
      read_allowed: false
      write_allowed: true
    - !Field
      name: SYSRESETREQ
      bit_offset: 2
      bit_width: 1
      description: 'Writing this bit 1 will cause a reset signal to be asserted to
        the chip to indicate a reset is requested. The bit is a write only bit and
        self-clears as part of the reset sequence. '
      read_allowed: false
      write_allowed: true
    - !Field
      name: VECTORKEY
      bit_offset: 16
      bit_width: 16
      description: 'When write this register, this field should be 0x05FA, otherwise
        the write action will be unpredictable. '
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCR
    addr: 0xd10
    size_bits: 32
    description: System Control Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SLEEPONEXIT
      bit_offset: 1
      bit_width: 1
      description: When set to 1, the core can enter a sleep state on an exception
        return to Thread mode. This is the mode and exception level entered at reset,
        the base level of execution.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEEPDEEP
      bit_offset: 2
      bit_width: 1
      description: A qualifying hint that indicates waking from sleep might take longer.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEVONPEND
      bit_offset: 4
      bit_width: 1
      description: When enabled, interrupt transitions from Inactive to Pending are
        included in the list of wakeup events for the WFE instruction.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHPR2
    addr: 0xd1c
    size_bits: 32
    description: System Handler Priority Register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_11
      bit_offset: 30
      bit_width: 2
      description: 'Priority of system handler 11 - SVCall

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHPR3
    addr: 0xd20
    size_bits: 32
    description: System Handler Priority Register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRI_14
      bit_offset: 22
      bit_width: 2
      description: 'Priority of system handler 14 - PendSV

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_15
      bit_offset: 30
      bit_width: 2
      description: 'Priority of system handler 15 - SysTick

        "0" denotes the highest priority & "3" denotes lowest priority'
      read_allowed: true
      write_allowed: true
- !Module
  name: TMR0
  description: Registers group
  base_addr: 0x40010000
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x0
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)\
        \ will be updated continuously with the 24-bit up-timer value as the timer\
        \ is counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register\
        \ update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer\
        \ is operating in the one-shot mode. The associated interrupt signal is generated\
        \ once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n\
        01\tThe timer is operating in the periodic mode. The associated interrupt\
        \ signal is generated periodically (if IE is enabled).\t\n10\tThe timer is\
        \ operating in the toggle mode. The interrupt signal is generated periodically\
        \ (if IE is enabled). And the associated signal (tout) is changing back and\
        \ forth with 50% duty cycle.\t\n11\tReserved \t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable\
        \ timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its\
        \ interrupt signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x4
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x8
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0xc
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR1
  description: Registers group
  base_addr: 0x40010020
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x0
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)\
        \ will be updated continuously with the 24-bit up-timer value as the timer\
        \ is counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register\
        \ update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer\
        \ is operating in the one-shot mode. The associated interrupt signal is generated\
        \ once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n\
        01\tThe timer is operating in the periodic mode. The associated interrupt\
        \ signal is generated periodically (if IE is enabled).\t\n10\tThe timer is\
        \ operating in the toggle mode. The interrupt signal is generated periodically\
        \ (if IE is enabled). And the associated signal (tout) is changing back and\
        \ forth with 50% duty cycle.\t\n11\tReserved \t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable\
        \ timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its\
        \ interrupt signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x4
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x8
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0xc
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR2
  description: Registers group
  base_addr: 0x40110000
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x0
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)\
        \ will be updated continuously with the 24-bit up-timer value as the timer\
        \ is counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register\
        \ update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer\
        \ is operating in the one-shot mode. The associated interrupt signal is generated\
        \ once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n\
        01\tThe timer is operating in the periodic mode. The associated interrupt\
        \ signal is generated periodically (if IE is enabled).\t\n10\tThe timer is\
        \ operating in the toggle mode. The interrupt signal is generated periodically\
        \ (if IE is enabled). And the associated signal (tout) is changing back and\
        \ forth with 50% duty cycle.\t\n11\tReserved \t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable\
        \ timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its\
        \ interrupt signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x4
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x8
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0xc
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: TMR3
  description: Registers group
  base_addr: 0x40110020
  size: 0x10
  registers:
  - !Register
    name: TCSR
    addr: 0x0
    size_bits: 32
    description: Timer0 Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5
    fields:
    - !Field
      name: PRESCALE
      bit_offset: 0
      bit_width: 8
      description: 'Pre-scale Counter

        Clock input is divided by PRESCALE+1 before it is fed to the counter. If PRESCALE=0,
        then there is no scaling.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TDR_EN
      bit_offset: 16
      bit_width: 1
      description: "Data Load Enable\nWhen TDR_EN is set, TDR (Timer Data Register)\
        \ will be updated continuously with the 24-bit up-timer value as the timer\
        \ is counting. \n1 = Timer Data Register update enable.\n0 = Timer Data Register\
        \ update disable. "
      read_allowed: true
      write_allowed: true
    - !Field
      name: CACT
      bit_offset: 25
      bit_width: 1
      description: 'Timer Active Status Bit (Read only)

        This bit indicates the up-timer status.

        0 = Timer is not active.

        1 = Timer is active.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRST
      bit_offset: 26
      bit_width: 1
      description: 'Timer Reset Bit

        Set this bit will reset the 24-bit up-timer, 8-bit pre-scale counter and also
        force CEN to 0.

        0 = No effect.

        1 = Reset Timer''s 8-bit pre-scale counter, internal 24-bit up-timer and CEN
        bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE
      bit_offset: 27
      bit_width: 2
      description: "Timer Operating Mode\nMODE\tTimer Operating Mode\t\n00\tThe timer\
        \ is operating in the one-shot mode. The associated interrupt signal is generated\
        \ once (if IE is enabled) and CEN is automatically cleared by hardware.\t\n\
        01\tThe timer is operating in the periodic mode. The associated interrupt\
        \ signal is generated periodically (if IE is enabled).\t\n10\tThe timer is\
        \ operating in the toggle mode. The interrupt signal is generated periodically\
        \ (if IE is enabled). And the associated signal (tout) is changing back and\
        \ forth with 50% duty cycle.\t\n11\tReserved \t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 29
      bit_width: 1
      description: "Interrupt Enable Bit\n1 = Enable timer Interrupt.\n0 = Disable\
        \ timer Interrupt. \nIf timer interrupt is enabled, the timer asserts its\
        \ interrupt signal when the associated up-timer value is equal to TCMPR."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CEN
      bit_offset: 30
      bit_width: 1
      description: 'Timer Enable Bit

        1 = Starts counting

        0 = Stops/Suspends counting

        Note1: In stop status, and then set CEN to 1 will enables the 24-bit up-timer
        keeps up counting from the last stop counting value.

        Note2: This bit is auto-cleared by hardware in one-shot mode (MODE[28:27]=00)
        when the associated timer interrupt is generated (IE[29]=1).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCMPR
    addr: 0x4
    size_bits: 32
    description: Timer0 Compare Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCMP
      bit_offset: 0
      bit_width: 24
      description: 'Timer Compared Value

        TCMP is a 24-bit compared register. When the internal 24-bit up-timer counts
        and its value is equal to TCMP value, a Timer Interrupt is requested if the
        timer interrupt is enabled with TCSR.IE[29]=1. The TCMP value defines the
        timer counting cycle time.

        Time out period = (Period of timer clock input) * (8-bit PRESCALE + 1) * (24-bit
        TCMP)

        NOTE1: Never write 0x0 or 0x1 in TCMP, or the core will run into unknown state.

        NOTE2: No matter CEN is 0 or 1, whenever software write a new value into this
        register, TIMER will restart counting using this new value and abort previous
        count.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TISR
    addr: 0x8
    size_bits: 32
    description: Timer0 Interrupt Status Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF
      bit_offset: 0
      bit_width: 1
      description: 'Timer Interrupt Flag

        This bit indicates the interrupt status of Timer.

        TIF bit is set by hardware when the up counting value of internal 24-bit timer
        matches the timer compared value (TCMP). It is cleared by writing 1 to this
        bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: TDR
    addr: 0xc
    size_bits: 32
    description: Timer0 Data Register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TDR
      bit_offset: 0
      bit_width: 24
      description: 'Timer Data Register

        When TCSR.TDR_EN is set to 1, the internal 24-bit up-timer value will be loaded
        into TDR. User can read this register for the up-timer value.'
      read_allowed: true
      write_allowed: false
- !Module
  name: WDT
  description: Registers group
  base_addr: 0x40004000
  size: 0x4
  registers:
  - !Register
    name: WTCR
    addr: 0x0
    size_bits: 32
    description: Watchdog Timer Control Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x700
    fields:
    - !Field
      name: WTR
      bit_offset: 0
      bit_width: 1
      description: "Clear Watchdog Timer \nSet this bit will clear the Watchdog timer.\
        \ \n0= Writing 0 to this bit has no effect\n1= Reset the contents of the Watchdog\
        \ timer\nNOTE: This bit will auto clear after few clock cycle"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTRE
      bit_offset: 1
      bit_width: 1
      description: 'Watchdog Timer Reset Enable

        Setting this bit will enable the Watchdog timer reset function.

        0= Disable Watchdog timer reset function

        1= Enable Watchdog timer reset function'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTRF
      bit_offset: 2
      bit_width: 1
      description: 'Watchdog Timer Reset Flag

        When the Watchdog timer initiates a reset, the hardware will set this bit.
        This flag can be read by software to determine the source of reset. Software
        is responsible to clear it manually by writing 1 to it. If WTRE is disabled,
        then the Watchdog timer has no effect on this bit.

        0= Watchdog timer reset does not occur

        1= Watchdog timer reset occurs

        NOTE: This bit is cleared by writing 1 to this bit.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIF
      bit_offset: 3
      bit_width: 1
      description: 'Watchdog Timer Interrupt Flag

        If the Watchdog timer interrupt is enabled, then the hardware will set this
        bit to indicate that the Watchdog timer interrupt has occurred. If the Watchdog
        timer interrupt is not enabled, then this bit indicates that a timeout period
        has elapsed.

        0= Watchdog timer interrupt does not occur

        1= Watchdog timer interrupt occurs

        NOTE: Write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTWKE
      bit_offset: 4
      bit_width: 1
      description: 'Watchdog Timer Wakeup Function Enable bit

        0 = Disable Watchdog timer Wakeup CPU function.

        1 = Enable the Wakeup function that Watchdog timer timeout can wake up CPU
        from power-down mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTWKF
      bit_offset: 5
      bit_width: 1
      description: 'Watchdog Timer Wakeup Flag

        If Watchdog timer causes CPU wakes up from power-down mode, this bit will
        be set to high. It must be cleared by software with a write 1 to this bit.

        1 = CPU wake up from sleep or power-down mode by Watchdog timeout.

        0 = Watchdog timer does not cause CPU wakeup.

        NOTE: Write 1 to clear this bit to zero.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIE
      bit_offset: 6
      bit_width: 1
      description: 'Watchdog Timer Interrupt Enable

        0= Disable the Watchdog timer interrupt

        1= Enable the Watchdog timer interrupt'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTE
      bit_offset: 7
      bit_width: 1
      description: 'Watchdog Timer Enable

        0= Disable the Watchdog timer (This action will reset the internal counter)

        1= Enable the Watchdog timer'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WTIS
      bit_offset: 8
      bit_width: 3
      description: "Watchdog Timer Interval Select (write protection bit)\nThese three\
        \ bits select the timeout interval for the Watchdog timer. \nWTIS\tTimeout\
        \ Interval Selection\tInterrupt Period\tWTR Timeout Interval (WDT_CLK=12MHz)\t\
        \n000\t2^4 * WDT_CLK\t(2^4 + 1024) * WDT_CLK\t1.33 us ~ 86.67 us\t\n001\t\
        2^6 * WDT_CLK\t(2^6 + 1024) * WDT_CLK\t5.33 us ~ 90.67 us\t\n010\t2^8 * WDT_CLK\t\
        (2^8 + 1024) * WDT_CLK\t21.33 us ~ 106.67 us\t\n011\t2^10 * WDT_CLK\t(2^10\
        \ + 1024) * WDT_CLK\t85.33 us ~ 170.67 us\t\n100\t2^12 * WDT_CLK\t(2^12 +\
        \ 1024) * WDT_CLK\t341.33 us ~ 426.67 us\t\n101\t2^14 * WDT_CLK\t(2^14 + 1024)\
        \ * WDT_CLK\t1.36 ms ~ 1.45 ms\t\n110\t2^16 * WDT_CLK\t(2^16 + 1024) * WDT_CLK\t\
        5.46 ms ~ 5.55 ms\t\n111\t2^18 * WDT_CLK\t(2^18 + 1024) * WDT_CLK\t21.84 ms\
        \ ~ 21.93 ms\t"
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI0
  description: Registers group
  base_addr: 0x40030000
  size: 0xc
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x0
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output\
        \ frequency is variable. The output frequency is decided by the value of VARCLK,\
        \ DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and\
        \ decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN\
        \ bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x4
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field\
        \ is the frequency divider of the system clock, PCLK, to generate the serial\
        \ clock on the output SPICLK. The desired frequency is obtained according\
        \ to the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode,\
        \ the period of SPI clock driven by a master shall equal or over 5 times the\
        \ period of PCLK. In other words, the maximum frequency of SPI clock is the\
        \ fifth of the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field\
        \ is the 2nd frequency divider of the system clock, PCLK, to generate the\
        \ serial clock on the output SPICLK. The desired frequency is obtained according\
        \ to the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x8
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 1
      description: 'Slave Select Register (master only)

        If AUTOSS bit is cleared, writing 1 to this bit sets the SPISSx line to active
        state and writing 0 sets the line back to inactive state.

        If AUTOSS bit is set, writing 1 to this bit will select the SPISSx line to
        be automatically driven to active state for the duration of the transmit/receive,
        and will be driven to inactive state for the rest of the time. (The active
        level of SPISSx0/1 is specified in SS_LVL).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave\
        \ select signal (SPISSx). \n1 = The slave select signal SPISSx is active at\
        \ high-level/rising-edge.\n0 = The slave select signal SPISSx is active at\
        \ low-level/falling-edge."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx signal is generated automatically. It means
        that slave select signal will be asserted by the SPI controller when transmit/receive
        is started by setting GO_BUSY, and is de-asserted after each transmit/receive
        is finished.

        0 = If this bit is cleared, slave select signal will be asserted and de-asserted
        by setting and clearing SSR[0].'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x10
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x14
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x20
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data\
        \ to be transmitted in the next transfer. The number of valid bits depend\
        \ on the transmit bit length field in the CNTRL register. \nFor example, if\
        \ TX_BIT_LEN is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0]\
        \ will be transmitted in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM\
        \ is set to 0x1, the core will perform two successive 32-bit transmit/receive\
        \ using the same setting (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x24
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data\
        \ to be transmitted in the next transfer. The number of valid bits depend\
        \ on the transmit bit length field in the CNTRL register. \nFor example, if\
        \ TX_BIT_LEN is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0]\
        \ will be transmitted in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM\
        \ is set to 0x1, the core will perform two successive 32-bit transmit/receive\
        \ using the same setting (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x34
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency\
        \ patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output\
        \ frequency of SPICLK is according the value of DIVIDER. If the bit patterns\
        \ of VARCLK are 1, the output frequency of SPICLK is according the value of\
        \ DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
- !Module
  name: SPI1
  description: Registers group
  base_addr: 0x40034000
  size: 0xc
  registers:
  - !Register
    name: SPI_CNTRL
    addr: 0x0
    size_bits: 32
    description: Control and Status Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4
    fields:
    - !Field
      name: GO_BUSY
      bit_offset: 0
      bit_width: 1
      description: 'Go and Busy Status

        1 = In master mode, writing 1 to this bit to start the SPI data transfer;
        in slave mode, writing 1 to this bit indicates that the slave is ready to
        communicate with a master.

        0 = Writing 0 to this bit to stop data transfer if SPI is transferring.

        During the data transfer, this bit keeps the value of 1. As the transfer is
        finished, this bit will be cleared automatically.

        NOTE: All registers should be set before writing 1 to this GO_BUSY bit. The
        transfer result will be unpredictable if software changes related settings
        when GO_BUSY bit is 1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_NEG
      bit_offset: 1
      bit_width: 1
      description: 'Receive At Negative Edge

        1 = The received data input signal is latched at the falling edge of SPICLK.

        0 = The received data input signal is latched at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NEG
      bit_offset: 2
      bit_width: 1
      description: 'Transmit At Negative Edge

        1 = The transmitted data output signal is changed at the falling edge of SPICLK.

        0 = The transmitted data output signal is changed at the rising edge of SPICLK.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_BIT_LEN
      bit_offset: 3
      bit_width: 5
      description: 'Transmit Bit Length

        This field specifies how many bits are transmitted in one transaction. Up
        to 32 bits can be transmitted.

        TX_BIT_LEN = 0x01 ... 1 bit

        TX_BIT_LEN = 0x02 ... 2 bits

        ......

        TX_BIT_LEN = 0x1f ... 31 bits

        TX_BIT_LEN = 0x00 .. 32 bits'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_NUM
      bit_offset: 8
      bit_width: 2
      description: 'Numbers of Transmit/Receive Word

        This field specifies how many transmit/receive word numbers should be executed
        in one transfer.

        00 = Only one transmit/receive word will be executed in one transfer.

        01 = Two successive transmit/receive words will be executed in one transfer.
        (burst mode)

        10 = Reserved.

        11 = Reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LSB
      bit_offset: 10
      bit_width: 1
      description: 'LSB First

        1 = The LSB is sent first on the line (bit 0 of SPI_TX0/1), and the first
        bit received from the line will be put in the LSB position of the RX register
        (bit 0 of SPI_RX0/1).

        0 = The MSB is transmitted/received first (which bit in SPI_TX0/1 and SPI_RX0/1
        register that is depends on the TX_BIT_LEN field).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLKP
      bit_offset: 11
      bit_width: 1
      description: 'Clock Polarity

        1 = SPICLK idle high.

        0 = SPICLK idle low.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SP_CYCLE
      bit_offset: 12
      bit_width: 4
      description: 'Suspend Interval (master only)

        These four bits provide configurable suspend interval between two successive
        transmit/receive transactions in a transfer. The suspend interval is from
        the last falling clock edge of the current transaction to the first rising
        clock edge of the successive transaction if CLKP = 0. If CLKP = 1, the interval
        is from the rising clock edge to the falling clock edge. The default value
        is 0x0. When TX_NUM = 00b, setting this field has no effect on transfer. The
        desired suspend interval is obtained according to the following equation:

        (SP_CYCLE[3:0] + 2)*period of SPI clock

        SP_CYCLE = 0x0 ... 2 SPICLK clock cycle

        SP_CYCLE = 0x1 ... 3 SPICLK clock cycle

        ......

        SP_CYCLE = 0xe ... 16 SPICLK clock cycle

        SP_CYCLE = 0xf ... 17 SPICLK clock cycle'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IF
      bit_offset: 16
      bit_width: 1
      description: 'Interrupt Flag

        1 = It indicates that the transfer is done. The interrupt flag is set if it
        was enable.

        0 = It indicates that the transfer does not finish yet.

        NOTE: This bit can be cleared by writing 1 to itself.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 17
      bit_width: 1
      description: 'Interrupt Enable

        1 = Enable MICROWIRE/SPI Interrupt.

        0 = Disable MICROWIRE/SPI Interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLAVE
      bit_offset: 18
      bit_width: 1
      description: 'SLAVE Mode Indication

        1 = Slave mode.

        0 = Master mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: REORDER
      bit_offset: 19
      bit_width: 2
      description: 'Reorder Mode Select

        00 = Disable both byte reorder and byte suspend functions.

        01 = Enable byte reorder function and insert a byte suspend interval (2~17
        SPICLK cycles) among each byte. The setting of TX_BIT_LEN must be configured
        as 0x00. (32 bits/word).

        10 = Enable byte reorder function, but disable byte suspend function.

        11 = Disable byte reorder function, but insert a suspend interval (2~17 SPICLK
        cycles) among each byte. The setting of TX_BIT_LEN must be configured as 0x00.
        (32 bits/word).

        Byte reorder function is only available if TX_BIT_LEN is defined as 16, 24
        and 32.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VARCLK_EN
      bit_offset: 23
      bit_width: 1
      description: "Variable Clock Enable (master only)\n1 = The serial clock output\
        \ frequency is variable. The output frequency is decided by the value of VARCLK,\
        \ DIVIDER, and DIVIDER2.\n0 = The serial clock output frequency is fixed and\
        \ decided only by the value of DIVIDER. \nNote that when enable this VARCLK_EN\
        \ bit, the setting of TX_BIT_LEN must be programmed as 0x10 (16 bits mode)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_DIVIDER
    addr: 0x4
    size_bits: 32
    description: Clock Divider Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDER
      bit_offset: 0
      bit_width: 16
      description: "Clock Divider Register (master only) \nThe value in this field\
        \ is the frequency divider of the system clock, PCLK, to generate the serial\
        \ clock on the output SPICLK. The desired frequency is obtained according\
        \ to the following equation:\nfsclk = fpclk / ((DIVIDER+1)*2)\nIn slave mode,\
        \ the period of SPI clock driven by a master shall equal or over 5 times the\
        \ period of PCLK. In other words, the maximum frequency of SPI clock is the\
        \ fifth of the frequency of slave's PCLK."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVIDER2
      bit_offset: 16
      bit_width: 16
      description: "Clock Divider 2 Register (master only) \nThe value in this field\
        \ is the 2nd frequency divider of the system clock, PCLK, to generate the\
        \ serial clock on the output SPICLK. The desired frequency is obtained according\
        \ to the following equation:\nfsclk = fpclk / ((DIVIDER2+1)*2)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_SSR
    addr: 0x8
    size_bits: 32
    description: Slave Select Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSR
      bit_offset: 0
      bit_width: 1
      description: 'Slave Select Register (master only)

        If AUTOSS bit is cleared, writing 1 to this bit sets the SPISSx line to active
        state and writing 0 sets the line back to inactive state.

        If AUTOSS bit is set, writing 1 to this bit will select the SPISSx line to
        be automatically driven to active state for the duration of the transmit/receive,
        and will be driven to inactive state for the rest of the time. (The active
        level of SPISSx0/1 is specified in SS_LVL).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LVL
      bit_offset: 2
      bit_width: 1
      description: "Slave Select Active Level\nIt defines the active level of slave\
        \ select signal (SPISSx). \n1 = The slave select signal SPISSx is active at\
        \ high-level/rising-edge.\n0 = The slave select signal SPISSx is active at\
        \ low-level/falling-edge."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOSS
      bit_offset: 3
      bit_width: 1
      description: 'Automatic Slave Select (master only)

        1 = If this bit is set, SPISSx signal is generated automatically. It means
        that slave select signal will be asserted by the SPI controller when transmit/receive
        is started by setting GO_BUSY, and is de-asserted after each transmit/receive
        is finished.

        0 = If this bit is cleared, slave select signal will be asserted and de-asserted
        by setting and clearing SSR[0].'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SS_LTRIG
      bit_offset: 4
      bit_width: 1
      description: 'Slave Select Level Trigger (slave only)

        1: The slave select signal will be level-trigger. It depends on SS_LVL to
        decide the signal is active low or active high.

        0: The input slave select signal is edge-trigger. This is default value.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LTRIG_FLAG
      bit_offset: 5
      bit_width: 1
      description: 'Level Trigger Flag

        When the SS_LTRIG bit is set in slave mode, this bit can be read to indicate
        the received bit number is met the requirement or not.

        1 = The transaction number and the transferred bit length met the specified
        requirements which defined in TX_NUM and TX_BIT_LEN.

        0 = The transaction number or the transferred bit length of one transaction
        doesn''t meet the specified requirements.

        Note: This bit is READ only'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX0
    addr: 0x10
    size_bits: 32
    description: Data Receive Register 0
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_RX1
    addr: 0x14
    size_bits: 32
    description: Data Receive Register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX
      bit_offset: 0
      bit_width: 32
      description: 'Data Receive Register

        The Data Receive Registers hold the value of received data of the last executed
        transfer. The number of valid bits depend on the transmit bit length field
        in the SPI_CNTRL register. For example, if TX_BIT_LEN is set to 0x08 and TX_NUM
        is set to 0x0, bit RX0[7:0] holds the received data.

        NOTE: The Data Receive Registers are read only registers.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SPI_TX0
    addr: 0x20
    size_bits: 32
    description: Data Transmit Register 0
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data\
        \ to be transmitted in the next transfer. The number of valid bits depend\
        \ on the transmit bit length field in the CNTRL register. \nFor example, if\
        \ TX_BIT_LEN is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0]\
        \ will be transmitted in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM\
        \ is set to 0x1, the core will perform two successive 32-bit transmit/receive\
        \ using the same setting (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_TX1
    addr: 0x24
    size_bits: 32
    description: Data Transmit Register 1
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TX
      bit_offset: 0
      bit_width: 32
      description: "Data Transmit Register\nThe Data Transmit Registers hold the data\
        \ to be transmitted in the next transfer. The number of valid bits depend\
        \ on the transmit bit length field in the CNTRL register. \nFor example, if\
        \ TX_BIT_LEN is set to 0x08 and the TX_NUM is set to 0x0, the bit TX0[7:0]\
        \ will be transmitted in next transfer. If TX_BIT_LEN is set to 0x00 and TX_NUM\
        \ is set to 0x1, the core will perform two successive 32-bit transmit/receive\
        \ using the same setting (the order is TX0[31:0], TX1[31:0])."
      read_allowed: false
      write_allowed: true
  - !Register
    name: SPI_VARCLK
    addr: 0x34
    size_bits: 32
    description: Variable Clock Pattern Register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff87
    fields:
    - !Field
      name: VARCLK
      bit_offset: 0
      bit_width: 32
      description: "Variable Clock Pattern \nThe value in this field is the frequency\
        \ patterns of the SPI clock. If the bit patterns of VARCLK are 0, the output\
        \ frequency of SPICLK is according the value of DIVIDER. If the bit patterns\
        \ of VARCLK are 1, the output frequency of SPICLK is according the value of\
        \ DIVIDER2. Refer to register SPI_DIVIDER."
      read_allowed: true
      write_allowed: true
- !Module
  name: UART0
  description: Registers group
  base_addr: 0x40050000
  size: 0x34
  registers:
  - !Register
    name: UA_RBR
    addr: 0x0
    size_bits: 32
    description: UART0 Receive Buffer Register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: _8_bitReceivedData
      bit_offset: 0
      bit_width: 8
      description: 'Receive Buffer Register

        By reading this register, the UART will return an 8-bit data received from
        Rx pin (LSB first).'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_THR
    addr: 0x0
    size_bits: 32
    description: UART0 Transmit Holding Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: _8_bitTransmittedData
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Holding Register

        By writing to this register, the UART will send out an 8-bit data through
        the Tx pin (LSB first).'
      read_allowed: false
      write_allowed: true
  - !Register
    name: UA_IER
    addr: 0x4
    size_bits: 32
    description: UART0 Interrupt Enable Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDA_IEN
      bit_offset: 0
      bit_width: 1
      description: 'Receive Data Available Interrupt Enable.

        0 = Mask off INT_RDA

        1 = Enable INT_RDA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: THRE_IEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Enable

        0 = Mask off INT_THRE

        1 = Enable INT_THRE'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RLS_IEN
      bit_offset: 2
      bit_width: 1
      description: "Receive Line Status Interrupt Enable \n0 = Mask off INT_RLS\n\
        1 = Enable INT_RLS"
      read_allowed: true
      write_allowed: true
    - !Field
      name: Modem_IEN
      bit_offset: 3
      bit_width: 1
      description: "Modem Status Interrupt Enable \n0 = Mask off INT_MOS\n1 = Enable\
        \ INT_MOS"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTO_IEN
      bit_offset: 4
      bit_width: 1
      description: 'Rx Time out Interrupt Enable

        0 = Mask off INT_tout

        1 = Enable INT_tout '
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_ERR_IEN
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Enable

        0 = Mask off INT_Buf_err

        1 = Enable INT_Buf_err'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Wake_EN
      bit_offset: 6
      bit_width: 1
      description: "Wake up CPU function enable \n0 = Disable UART wake up CPU function\n\
        1 = Enable wake up function, when the system is in deep sleep mode, an external\
        \ /CTS change will wake up CPU from deep sleep mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Time_Out_EN
      bit_offset: 11
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable Time-out counter.

        0 = Disable Time-out counter.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Auto_RTS_EN
      bit_offset: 12
      bit_width: 1
      description: "RTS Auto Flow Control Enable \n1 = Enable RTS auto flow control.\n\
        0 = Disable RTS auto flow control.\nWhen RTS auto-flow is enabled, if the\
        \ number of bytes in the Rx FIFO equals the UA_FCR [RTS_Tri_Lev], the UART\
        \ will dessert RTS signal."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Auto_CTS_EN
      bit_offset: 13
      bit_width: 1
      description: 'CTS Auto Flow Control Enable

        1 = Enable CTS auto flow control.

        0 = Disable CTS auto flow control.

        When CTS auto-flow is enabled, the UART will send data to external device
        when CTS input assert (UART will not send data to device until CTS is asserted).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FCR
    addr: 0x8
    size_bits: 32
    description: UART0 FIFO Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101
    fields:
    - !Field
      name: RFR
      bit_offset: 1
      bit_width: 1
      description: 'Rx Software Reset

        When Rx_RST is set, all the bytes in the transmit FIFO and Rx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Rx internal state machine and pointers.

        Note: This bit will auto clear and takes at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TFR
      bit_offset: 2
      bit_width: 1
      description: 'Tx Software Reset

        When Tx_RST is set, all the bytes in the transmit FIFO and Tx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Tx internal state machine and pointers.

        Note: This bit will auto clear and takes at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFITL
      bit_offset: 4
      bit_width: 4
      description: "Word Length Select\nRFITL\tINTR_RDA Tigger Level(Bytes)\t\n0000\t\
        01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DIS
      bit_offset: 8
      bit_width: 1
      description: 'Receiver Disable register.

        The receiver is disabled or not (set 1 is disable receiver)

        1: Disable Receiver

        0: Enable Receiver

        Note: This field is used for RS-485 Normal Multi-drop mode. It should be programmed
        before RS-485 enable function in UA_FUN_SEL. FUN_SEL is programmed.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_Tri_Lev
      bit_offset: 16
      bit_width: 4
      description: "Word Length Select\nRTS_Tri_Lev\tTrigger Level(Bytes)\t\n0000\t\
        01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_LCR
    addr: 0xc
    size_bits: 32
    description: UART0 Line Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WLS
      bit_offset: 0
      bit_width: 2
      description: "Word Length Select\nWLS[1:0]\tCharacter length\t\n00\t5 bits\t\
        \n01\t6 bits\t\n10\t7 bits\t\n11\t8 bits\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: NSB
      bit_offset: 2
      bit_width: 1
      description: 'Number of "STOP bit"

        0= One "STOP bit" is generated in the transmitted data

        1= One and a half "STOP bit" is generated in the transmitted data when 5-bit
        word length is selected;

        Two "STOP bit" is generated when 6-, 7- and 8-bit word length is selected.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PBE
      bit_offset: 3
      bit_width: 1
      description: 'Parity Bit Enable

        0 = Parity bit is not generated (transmit data) or checked (receive data)
        during transfer.

        1 = Parity bit is generated or checked between the "last data word bit" and
        "stop bit" of the serial data.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPE
      bit_offset: 4
      bit_width: 1
      description: 'Even Parity Enable

        0 = Odd number of logic 1''s are transmitted or checked in the data word and
        parity bits.

        1 = Even number of logic 1''s are transmitted or checked in the data word
        and parity bits.

        This bit has effect only when bit 3 (parity bit enable) is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPE
      bit_offset: 5
      bit_width: 1
      description: "Stick Parity Enable \n0 = Disable stick parity \n1 = When bits\
        \ PBE , EPE and SPE are set, the parity bit is transmitted and checked as\
        \ cleared. When PBE and SPE are set and EPE is cleared, the parity bit is\
        \ transmitted and checked as set."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCB
      bit_offset: 6
      bit_width: 1
      description: "Break Control Bit \nWhen this bit is set to logic 1, the serial\
        \ data output (Tx) is forced to the Spacing State (logic 0). This bit acts\
        \ only on Tx and has no effect on the transmitter logic."
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_MCR
    addr: 0x10
    size_bits: 32
    description: UART0 Modem Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RTS
      bit_offset: 1
      bit_width: 1
      description: "RTS (Request-To-Send) Signal \n0: Drive RTS pin to logic 1 (If\
        \ the Lev_RTS set to low level triggered).\n1: Drive RTS pin to logic 0 (If\
        \ the Lev_RTS set to low level triggered).\n0: Drive RTS pin to logic 0 (If\
        \ the Lev_RTS set to high level triggered).\n1: Drive RTS pin to logic 1 (If\
        \ the Lev_RTS set to high level triggered)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Lev_RTS
      bit_offset: 9
      bit_width: 1
      description: "RTS Trigger Level \nThis bit can change the RTS trigger level.\n\
        0= low level triggered\n1= high level triggered"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_St
      bit_offset: 13
      bit_width: 1
      description: "RTS Pin State \nThis bit is the pin status of RTS."
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_MSR
    addr: 0x14
    size_bits: 32
    description: UART0 Modem Status Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DCTSF
      bit_offset: 0
      bit_width: 1
      description: "Detect CTS State Change Flag \nThis bit is set whenever CTS input\
        \ has change state, and it will generate Modem interrupt to CPU when IER [Modem_IEN].\n\
        NOTE: This bit is cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS_St
      bit_offset: 4
      bit_width: 1
      description: "CTS Pin Status \nThis bit is the pin status of CTS. "
      read_allowed: true
      write_allowed: false
    - !Field
      name: Lev_CTS
      bit_offset: 8
      bit_width: 1
      description: 'CTS Trigger Level

        This bit can change the CTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FSR
    addr: 0x18
    size_bits: 32
    description: UART0 FIFO Status Register.
    read_allowed: true
    write_allowed: false
    reset_value: 0x10404000
    fields:
    - !Field
      name: Rx_Over_IF
      bit_offset: 0
      bit_width: 1
      description: "Rx overflow Error IF (Read Only) \nThis bit is set when Rx FIFO\
        \ overflow.\nIf the number of bytes of received data is greater than Rx FIFO(UA_RBR)\
        \ size, 16 bytes of UART0/UART1, this bit will be set.\nNOTE: This bit is\
        \ cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RS_485_Add_Det
      bit_offset: 3
      bit_width: 1
      description: 'RS-485 Address Byte Detection Flag

        This bit is set to logic 1 and set UA_RS-485_CSR [RS-485_Add_EN] whenever
        in RS-485 mode the receiver detect any address byte received address byte
        character (bit9 = ''1'') bit", and it is reset whenever the CPU writes 1 to
        this bit.

        Note: This field is used for RS-485 mode.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEF
      bit_offset: 4
      bit_width: 1
      description: 'Parity Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "parity bit", and is reset whenever the CPU writes 1 to this bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEF
      bit_offset: 5
      bit_width: 1
      description: 'Framing Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "stop bit" (that is, the stop bit following the last data bit or parity
        bit is detected as a logic 0), and is reset whenever the CPU writes 1 to this
        bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BIF
      bit_offset: 6
      bit_width: 1
      description: 'Break Interrupt Flag

        This bit is set to a logic 1 whenever the received data input(Rx) is held
        in the "spacing state" (logic 0) for longer than a full word transmission
        time (that is, the total time of "start bit" + data bits + parity + stop bits)
        and is reset whenever the CPU writes 1 to this bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Pointer
      bit_offset: 8
      bit_width: 6
      description: 'Rx FIFO pointer (Read Only)

        This field indicates the Rx FIFO Buffer Pointer. When UART receives one byte
        from external device, Rx_Pointer increases one. When one byte of Rx FIFO is
        read by CPU, Rx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Empty
      bit_offset: 14
      bit_width: 1
      description: 'Receiver FIFO Empty (Read Only)

        This bit initiate Rx FIFO empty or not.

        When the last byte of Rx FIFO has been read by CPU, hardware sets this bit
        high. It will be cleared when UART receives any new data.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Full
      bit_offset: 15
      bit_width: 1
      description: 'Receiver FIFO Full (Read Only)

        This bit initiates Rx FIFO full or not.

        This bit is set when Rx_Pointer is equal to 16(UART0/UART1), otherwise is
        cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Pointer
      bit_offset: 16
      bit_width: 6
      description: 'TX FIFO Pointer (Read Only)

        This field indicates the Tx FIFO Buffer Pointer. When CPU write one byte into
        UA_THR, Tx_Pointer increases one. When one byte of Tx FIFO is transferred
        to Transmitter Shift Register, Tx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Empty
      bit_offset: 22
      bit_width: 1
      description: 'Transmitter FIFO Empty (Read Only)

        This bit indicates Tx FIFO empty or not.

        When the last byte of Tx FIFO has been transferred to Transmitter Shift Register,
        hardware sets this bit high. It will be cleared when writing data into THR
        (Tx FIFO not empty).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Full
      bit_offset: 23
      bit_width: 1
      description: 'Transmitter FIFO Full (Read Only)

        This bit indicates Tx FIFO full or not.

        This bit is set when Tx_Pointer is equal to 64/16(UART0/UART1), otherwise
        is cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Over_IF
      bit_offset: 24
      bit_width: 1
      description: "Tx Overflow Error Interrupt Flag (Read Only)\nIf Tx FIFO(UA_THR)\
        \ is full, an additional write to UA_THR will cause this bit to logic 1. \n\
        NOTE: This bit is cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TE_Flag
      bit_offset: 28
      bit_width: 1
      description: 'Transmitter Empty Flag (Read Only)

        Bit is set by hardware when Tx FIFO(UA_THR) is empty and the STOP bit of the
        last byte has been transmitted.

        Bit is cleared automatically when Tx FIFO is not empty or the last byte transmission
        has not completed.

        NOTE: This bit is read only. '
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_ISR
    addr: 0x1c
    size_bits: 32
    description: UART0 Interrupt Status Register.
    read_allowed: true
    write_allowed: false
    reset_value: 0x42
    fields:
    - !Field
      name: RDA_IF
      bit_offset: 0
      bit_width: 1
      description: "Receive Data Available Interrupt Flag (Read Only).\nWhen the number\
        \ of bytes in the Rx FIFO equals the RFITL then the RDA_IF will be set. If\
        \ IER[RDA_IEN] is enabled, the RDA interrupt will be generated. \nNOTE: This\
        \ bit is read only and it will be cleared when the number of unread bytes\
        \ of Rx FIFO drops below the threshold level (RFITL)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_IF
      bit_offset: 1
      bit_width: 1
      description: "Transmit Holding Register Empty Interrupt Flag (Read Only). \n\
        This bit is set when the last data of Tx FIFO is transferred to Transmitter\
        \ Shift Register. If IER[THRE_IEN] is enabled, the THRE interrupt will be\
        \ generated.\nNOTE: This bit is read only and it will be cleared when writing\
        \ data into THR (Tx FIFO not empty)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_IF
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Interrupt Flag (Read Only).

        In UART mode this bit is set when the Rx receive data have parity error, framing
        error or break error (at least one of 3 bits, BIF, FEF and PEF, is set). In
        RS-485 mode, the field includes RS-485 Address Byte Detection Flag. If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF, PEF
        and RS-485_Add_Det are cleared.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Modem_IF
      bit_offset: 3
      bit_width: 1
      description: "MODEM Interrupt Flag (Read Only) \nThis bit is set when the CTS\
        \ pin has state change (DCTSF=1). If IER[Modem_IEN] is enabled, the Modem\
        \ interrupt will be generated.\nNOTE: This bit is read only and reset to 0\
        \ when bit DCTSF is cleared by a write 1 on DCTSF."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tout_IF
      bit_offset: 4
      bit_width: 1
      description: "Time Out Interrupt Flag (Read Only)\nThis bit is set when the\
        \ Rx FIFO is not empty and no activities occur in the Rx FIFO and the time\
        \ out counter equal to TOIC. If IER [Tout_IEN] is enabled, the Tout interrupt\
        \ will be generated. \nNOTE: This bit is read only and user can read UA_RBR\
        \ (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Buf_Err_IF
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Flag (Read Only)

        This bit is set when the Tx or Rx FIFO overflows (Tx_Over_IF or Rx_Over_IF
        is set). When Buf_Err_IF is set, the transfer maybe not correct. If IER[Buf_Err_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both Tx_Over_IF and Rx_Over_IF are cleared. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: RDA_INT
      bit_offset: 8
      bit_width: 1
      description: 'Receive Data Available Interrupt Indicator to Interrupt Controller
        (INT_RDA).

        An AND output with inputs of RDA_IEN and RDA_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_INT
      bit_offset: 9
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Indicator to Interrupt
        Controller (INT_THRE).

        An AND output with inputs of THRE_IEN and THRE_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_INT
      bit_offset: 10
      bit_width: 1
      description: "Receive Line Status Interrupt Indicator to Interrupt Controller\
        \ (INT_RLS). \nAn AND output with inputs of RLS_IEN and RLS_IF\nNote: In RS-485\
        \ mode, the field includes RS-485 Address Byte Detection Flag."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Modem_INT
      bit_offset: 11
      bit_width: 1
      description: "MODEM Status Interrupt Indicator to Interrupt Controller (INT_MOS).\
        \ \nAn AND output with inputs of Modem_IEN and Modem_IF"
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tout_INT
      bit_offset: 12
      bit_width: 1
      description: 'Time Out Interrupt Indicator to Interrupt Controller (INT_Tout)

        An AND output with inputs of RTO_IEN and Tout_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Buf_Err_INT
      bit_offset: 13
      bit_width: 1
      description: 'Buffer Error Interrupt Indicator to Interrupt Controller (INT_Buf_err)

        An AND output with inputs of BUF_ERR_IEN and Buf_Err_IF'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_TOR
    addr: 0x20
    size_bits: 32
    description: UART0 Time Out Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TOIC
      bit_offset: 0
      bit_width: 7
      description: 'Time Out Interrupt Comparator

        The time out counter resets and starts counting (the counting clock = baud
        rate) whenever the RX FIFO receives a new data word. Once the content of time
        out counter (TOUT_CNT) is equal to that of time out interrupt comparator (TOIC),
        a receiver time out interrupt (INT_TOUT) is generated if UA_IER [RTO_IEN].
        A new incoming data word or RX FIFO empty clears INT_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DLY
      bit_offset: 8
      bit_width: 8
      description: 'TX Delay time value

        This field is use to programming the transfer delay time between the last
        stop bit leaving the TX-FIFO and the de-assertion of by setting UA_TOR. DLY
        register.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_BAUD
    addr: 0x24
    size_bits: 32
    description: UART0 Baud Rate Divisor Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: BRD_LowByte
      bit_offset: 0
      bit_width: 8
      description: "Baud Rate Divider \nThe low byte of the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BRD_HighByte
      bit_offset: 8
      bit_width: 8
      description: "Baud Rate Divider \nThe high byte of the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: Divider_X
      bit_offset: 24
      bit_width: 4
      description: 'Divider X

        The baud rate divider M = X+1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_ONE
      bit_offset: 28
      bit_width: 1
      description: "Divider X equal 1\n0 = Divider M = X (the equation of M = X+1,\
        \ but Divider_X[27:24] must > 8)\n1 = Divider M = 1 (the equation of M = 1,\
        \ but BRD[15:0] must > 3).\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X \tBRD \t\
        Baud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n\
        1 \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t\
        1\tDon't Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_EN
      bit_offset: 29
      bit_width: 1
      description: "Divider X Enable\nThe BRD = Baud Rate Divider, and the baud rate\
        \ equation is \nBaud Rate = Clock / [ M * (BRD + 2) ] ; The default value\
        \ of M is 16.\n0 = Disable divider X (the equation of M = 16)\n1 = Enable\
        \ divider X (the equation of M = X+1, but Divider_X[27:24 must > 8).\nNOTE:\
        \ When in IrDA mode, this bit must disable.\nMode\tDIV_X_EN \tDIV_X_ONE \t\
        DIVIDER X \tBRD \tBaud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK\
        \ / [16 * (A+2)]\t\n1 \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >=\
        \ 8\t\n2 \tEnable \t1\tDon't Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_IRCR
    addr: 0x28
    size_bits: 32
    description: UART0 IrDA Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: Tx_SELECT
      bit_offset: 1
      bit_width: 1
      description: 'Tx_SELECT

        1: Enable IrDA transmitter

        0: Enable IrDA receiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LB
      bit_offset: 2
      bit_width: 1
      description: 'IrDA loop back mode for self test.

        1: Enable IrDA loop back mode

        0: Disable IrDA loop back mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_Tx
      bit_offset: 5
      bit_width: 1
      description: 'INV_Tx

        1= Inverse Tx output signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_Rx
      bit_offset: 6
      bit_width: 1
      description: 'INV_Rx

        1= Inverse Rx input signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_ACT_CSR
    addr: 0x2c
    size_bits: 32
    description: UART0 RS485 Control State Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RS_485_NMM
      bit_offset: 8
      bit_width: 1
      description: 'RS-485 Normal Multi-drop Operation Mode (NMM)

        1: Enable RS-485 Normal Multi-drop Operation Mode (NMM)

        0: Disable RS-485 Normal Multi-drop Operation Mode (NMM)

        Note: It can''t be active with RS-485_AAD operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_AAD
      bit_offset: 9
      bit_width: 1
      description: 'RS-485 Auto Address Detection Operation Mode (AAD)

        1: Enable RS-485 Auto Address Detection Operation Mode (AAD)

        0: Disable RS-485 Auto Address Detection Operation Mode (AAD)

        Note: It can''t be active with RS-485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_AUD
      bit_offset: 10
      bit_width: 1
      description: 'RS-485 Auto Direction Mode (AUD)

        1: Enable RS-485 Auto Direction Mode (AUD)

        0: Disable RS-485 Auto Direction Mode (AUD)

        Note: It can be active with RS-485_AAD or RS-485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_Add_EN
      bit_offset: 15
      bit_width: 1
      description: "RS-485 Address Detection Enable\nThis bit is use to enable RS-485\
        \ address detection mode. \n1: Enable address detection mode\n0: Disable address\
        \ detection mode \nNote: This field is used for RS-485 any operation mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDR_MATCH
      bit_offset: 24
      bit_width: 8
      description: 'Address match value register

        This field contains the RS-485 address match values.

        Note: This field is used for RS-485 auto address detection mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FUN_SEL
    addr: 0x30
    size_bits: 32
    description: UART0 Function Select Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FUN_SEL
      bit_offset: 0
      bit_width: 2
      description: 'Function Select Enable

        00 = UART Function.

        01 = Reserved.

        10 = Enable IrDA Function.

        11 = Enable RS-485 Function.'
      read_allowed: true
      write_allowed: true
- !Module
  name: UART1
  description: Registers group
  base_addr: 0x40150000
  size: 0x34
  registers:
  - !Register
    name: UA_RBR
    addr: 0x0
    size_bits: 32
    description: UART0 Receive Buffer Register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: _8_bitReceivedData
      bit_offset: 0
      bit_width: 8
      description: 'Receive Buffer Register

        By reading this register, the UART will return an 8-bit data received from
        Rx pin (LSB first).'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_THR
    addr: 0x0
    size_bits: 32
    description: UART0 Transmit Holding Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: _8_bitTransmittedData
      bit_offset: 0
      bit_width: 8
      description: 'Transmit Holding Register

        By writing to this register, the UART will send out an 8-bit data through
        the Tx pin (LSB first).'
      read_allowed: false
      write_allowed: true
  - !Register
    name: UA_IER
    addr: 0x4
    size_bits: 32
    description: UART0 Interrupt Enable Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDA_IEN
      bit_offset: 0
      bit_width: 1
      description: 'Receive Data Available Interrupt Enable.

        0 = Mask off INT_RDA

        1 = Enable INT_RDA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: THRE_IEN
      bit_offset: 1
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Enable

        0 = Mask off INT_THRE

        1 = Enable INT_THRE'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RLS_IEN
      bit_offset: 2
      bit_width: 1
      description: "Receive Line Status Interrupt Enable \n0 = Mask off INT_RLS\n\
        1 = Enable INT_RLS"
      read_allowed: true
      write_allowed: true
    - !Field
      name: Modem_IEN
      bit_offset: 3
      bit_width: 1
      description: "Modem Status Interrupt Enable \n0 = Mask off INT_MOS\n1 = Enable\
        \ INT_MOS"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTO_IEN
      bit_offset: 4
      bit_width: 1
      description: 'Rx Time out Interrupt Enable

        0 = Mask off INT_tout

        1 = Enable INT_tout '
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_ERR_IEN
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Enable

        0 = Mask off INT_Buf_err

        1 = Enable INT_Buf_err'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Wake_EN
      bit_offset: 6
      bit_width: 1
      description: "Wake up CPU function enable \n0 = Disable UART wake up CPU function\n\
        1 = Enable wake up function, when the system is in deep sleep mode, an external\
        \ /CTS change will wake up CPU from deep sleep mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Time_Out_EN
      bit_offset: 11
      bit_width: 1
      description: 'Time-Out Counter Enable

        1 = Enable Time-out counter.

        0 = Disable Time-out counter.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: Auto_RTS_EN
      bit_offset: 12
      bit_width: 1
      description: "RTS Auto Flow Control Enable \n1 = Enable RTS auto flow control.\n\
        0 = Disable RTS auto flow control.\nWhen RTS auto-flow is enabled, if the\
        \ number of bytes in the Rx FIFO equals the UA_FCR [RTS_Tri_Lev], the UART\
        \ will dessert RTS signal."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Auto_CTS_EN
      bit_offset: 13
      bit_width: 1
      description: 'CTS Auto Flow Control Enable

        1 = Enable CTS auto flow control.

        0 = Disable CTS auto flow control.

        When CTS auto-flow is enabled, the UART will send data to external device
        when CTS input assert (UART will not send data to device until CTS is asserted).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FCR
    addr: 0x8
    size_bits: 32
    description: UART0 FIFO Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101
    fields:
    - !Field
      name: RFR
      bit_offset: 1
      bit_width: 1
      description: 'Rx Software Reset

        When Rx_RST is set, all the bytes in the transmit FIFO and Rx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Rx internal state machine and pointers.

        Note: This bit will auto clear and takes at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TFR
      bit_offset: 2
      bit_width: 1
      description: 'Tx Software Reset

        When Tx_RST is set, all the bytes in the transmit FIFO and Tx internal state
        machine are cleared.

        0 = Writing 0 to this bit has no effect.

        1 = Writing 1 to this bit will reset the Tx internal state machine and pointers.

        Note: This bit will auto clear and takes at least 3 UART engine clock cycles.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFITL
      bit_offset: 4
      bit_width: 4
      description: "Word Length Select\nRFITL\tINTR_RDA Tigger Level(Bytes)\t\n0000\t\
        01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_DIS
      bit_offset: 8
      bit_width: 1
      description: 'Receiver Disable register.

        The receiver is disabled or not (set 1 is disable receiver)

        1: Disable Receiver

        0: Enable Receiver

        Note: This field is used for RS-485 Normal Multi-drop mode. It should be programmed
        before RS-485 enable function in UA_FUN_SEL. FUN_SEL is programmed.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_Tri_Lev
      bit_offset: 16
      bit_width: 4
      description: "Word Length Select\nRTS_Tri_Lev\tTrigger Level(Bytes)\t\n0000\t\
        01\t\n0001\t04\t\n0010\t08\t\n0011\t14\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_LCR
    addr: 0xc
    size_bits: 32
    description: UART0 Line Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: WLS
      bit_offset: 0
      bit_width: 2
      description: "Word Length Select\nWLS[1:0]\tCharacter length\t\n00\t5 bits\t\
        \n01\t6 bits\t\n10\t7 bits\t\n11\t8 bits\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: NSB
      bit_offset: 2
      bit_width: 1
      description: 'Number of "STOP bit"

        0= One "STOP bit" is generated in the transmitted data

        1= One and a half "STOP bit" is generated in the transmitted data when 5-bit
        word length is selected;

        Two "STOP bit" is generated when 6-, 7- and 8-bit word length is selected.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PBE
      bit_offset: 3
      bit_width: 1
      description: 'Parity Bit Enable

        0 = Parity bit is not generated (transmit data) or checked (receive data)
        during transfer.

        1 = Parity bit is generated or checked between the "last data word bit" and
        "stop bit" of the serial data.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPE
      bit_offset: 4
      bit_width: 1
      description: 'Even Parity Enable

        0 = Odd number of logic 1''s are transmitted or checked in the data word and
        parity bits.

        1 = Even number of logic 1''s are transmitted or checked in the data word
        and parity bits.

        This bit has effect only when bit 3 (parity bit enable) is set.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPE
      bit_offset: 5
      bit_width: 1
      description: "Stick Parity Enable \n0 = Disable stick parity \n1 = When bits\
        \ PBE , EPE and SPE are set, the parity bit is transmitted and checked as\
        \ cleared. When PBE and SPE are set and EPE is cleared, the parity bit is\
        \ transmitted and checked as set."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BCB
      bit_offset: 6
      bit_width: 1
      description: "Break Control Bit \nWhen this bit is set to logic 1, the serial\
        \ data output (Tx) is forced to the Spacing State (logic 0). This bit acts\
        \ only on Tx and has no effect on the transmitter logic."
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_MCR
    addr: 0x10
    size_bits: 32
    description: UART0 Modem Control Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RTS
      bit_offset: 1
      bit_width: 1
      description: "RTS (Request-To-Send) Signal \n0: Drive RTS pin to logic 1 (If\
        \ the Lev_RTS set to low level triggered).\n1: Drive RTS pin to logic 0 (If\
        \ the Lev_RTS set to low level triggered).\n0: Drive RTS pin to logic 0 (If\
        \ the Lev_RTS set to high level triggered).\n1: Drive RTS pin to logic 1 (If\
        \ the Lev_RTS set to high level triggered)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: Lev_RTS
      bit_offset: 9
      bit_width: 1
      description: "RTS Trigger Level \nThis bit can change the RTS trigger level.\n\
        0= low level triggered\n1= high level triggered"
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS_St
      bit_offset: 13
      bit_width: 1
      description: "RTS Pin State \nThis bit is the pin status of RTS."
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_MSR
    addr: 0x14
    size_bits: 32
    description: UART0 Modem Status Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DCTSF
      bit_offset: 0
      bit_width: 1
      description: "Detect CTS State Change Flag \nThis bit is set whenever CTS input\
        \ has change state, and it will generate Modem interrupt to CPU when IER [Modem_IEN].\n\
        NOTE: This bit is cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS_St
      bit_offset: 4
      bit_width: 1
      description: "CTS Pin Status \nThis bit is the pin status of CTS. "
      read_allowed: true
      write_allowed: false
    - !Field
      name: Lev_CTS
      bit_offset: 8
      bit_width: 1
      description: 'CTS Trigger Level

        This bit can change the CTS trigger level.

        0= low level triggered

        1= high level triggered'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FSR
    addr: 0x18
    size_bits: 32
    description: UART0 FIFO Status Register.
    read_allowed: true
    write_allowed: false
    reset_value: 0x10404000
    fields:
    - !Field
      name: Rx_Over_IF
      bit_offset: 0
      bit_width: 1
      description: "Rx overflow Error IF (Read Only) \nThis bit is set when Rx FIFO\
        \ overflow.\nIf the number of bytes of received data is greater than Rx FIFO(UA_RBR)\
        \ size, 16 bytes of UART0/UART1, this bit will be set.\nNOTE: This bit is\
        \ cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RS_485_Add_Det
      bit_offset: 3
      bit_width: 1
      description: 'RS-485 Address Byte Detection Flag

        This bit is set to logic 1 and set UA_RS-485_CSR [RS-485_Add_EN] whenever
        in RS-485 mode the receiver detect any address byte received address byte
        character (bit9 = ''1'') bit", and it is reset whenever the CPU writes 1 to
        this bit.

        Note: This field is used for RS-485 mode.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEF
      bit_offset: 4
      bit_width: 1
      description: 'Parity Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "parity bit", and is reset whenever the CPU writes 1 to this bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEF
      bit_offset: 5
      bit_width: 1
      description: 'Framing Error Flag

        This bit is set to logic 1 whenever the received character does not have a
        valid "stop bit" (that is, the stop bit following the last data bit or parity
        bit is detected as a logic 0), and is reset whenever the CPU writes 1 to this
        bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BIF
      bit_offset: 6
      bit_width: 1
      description: 'Break Interrupt Flag

        This bit is set to a logic 1 whenever the received data input(Rx) is held
        in the "spacing state" (logic 0) for longer than a full word transmission
        time (that is, the total time of "start bit" + data bits + parity + stop bits)
        and is reset whenever the CPU writes 1 to this bit.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Pointer
      bit_offset: 8
      bit_width: 6
      description: 'Rx FIFO pointer (Read Only)

        This field indicates the Rx FIFO Buffer Pointer. When UART receives one byte
        from external device, Rx_Pointer increases one. When one byte of Rx FIFO is
        read by CPU, Rx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Empty
      bit_offset: 14
      bit_width: 1
      description: 'Receiver FIFO Empty (Read Only)

        This bit initiate Rx FIFO empty or not.

        When the last byte of Rx FIFO has been read by CPU, hardware sets this bit
        high. It will be cleared when UART receives any new data.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Rx_Full
      bit_offset: 15
      bit_width: 1
      description: 'Receiver FIFO Full (Read Only)

        This bit initiates Rx FIFO full or not.

        This bit is set when Rx_Pointer is equal to 16(UART0/UART1), otherwise is
        cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Pointer
      bit_offset: 16
      bit_width: 6
      description: 'TX FIFO Pointer (Read Only)

        This field indicates the Tx FIFO Buffer Pointer. When CPU write one byte into
        UA_THR, Tx_Pointer increases one. When one byte of Tx FIFO is transferred
        to Transmitter Shift Register, Tx_Pointer decreases one.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Empty
      bit_offset: 22
      bit_width: 1
      description: 'Transmitter FIFO Empty (Read Only)

        This bit indicates Tx FIFO empty or not.

        When the last byte of Tx FIFO has been transferred to Transmitter Shift Register,
        hardware sets this bit high. It will be cleared when writing data into THR
        (Tx FIFO not empty).'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Full
      bit_offset: 23
      bit_width: 1
      description: 'Transmitter FIFO Full (Read Only)

        This bit indicates Tx FIFO full or not.

        This bit is set when Tx_Pointer is equal to 64/16(UART0/UART1), otherwise
        is cleared by hardware.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tx_Over_IF
      bit_offset: 24
      bit_width: 1
      description: "Tx Overflow Error Interrupt Flag (Read Only)\nIf Tx FIFO(UA_THR)\
        \ is full, an additional write to UA_THR will cause this bit to logic 1. \n\
        NOTE: This bit is cleared by writing 1 to itself."
      read_allowed: true
      write_allowed: false
    - !Field
      name: TE_Flag
      bit_offset: 28
      bit_width: 1
      description: 'Transmitter Empty Flag (Read Only)

        Bit is set by hardware when Tx FIFO(UA_THR) is empty and the STOP bit of the
        last byte has been transmitted.

        Bit is cleared automatically when Tx FIFO is not empty or the last byte transmission
        has not completed.

        NOTE: This bit is read only. '
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_ISR
    addr: 0x1c
    size_bits: 32
    description: UART0 Interrupt Status Register.
    read_allowed: true
    write_allowed: false
    reset_value: 0x42
    fields:
    - !Field
      name: RDA_IF
      bit_offset: 0
      bit_width: 1
      description: "Receive Data Available Interrupt Flag (Read Only).\nWhen the number\
        \ of bytes in the Rx FIFO equals the RFITL then the RDA_IF will be set. If\
        \ IER[RDA_IEN] is enabled, the RDA interrupt will be generated. \nNOTE: This\
        \ bit is read only and it will be cleared when the number of unread bytes\
        \ of Rx FIFO drops below the threshold level (RFITL)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_IF
      bit_offset: 1
      bit_width: 1
      description: "Transmit Holding Register Empty Interrupt Flag (Read Only). \n\
        This bit is set when the last data of Tx FIFO is transferred to Transmitter\
        \ Shift Register. If IER[THRE_IEN] is enabled, the THRE interrupt will be\
        \ generated.\nNOTE: This bit is read only and it will be cleared when writing\
        \ data into THR (Tx FIFO not empty)."
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_IF
      bit_offset: 2
      bit_width: 1
      description: 'Receive Line Interrupt Flag (Read Only).

        In UART mode this bit is set when the Rx receive data have parity error, framing
        error or break error (at least one of 3 bits, BIF, FEF and PEF, is set). In
        RS-485 mode, the field includes RS-485 Address Byte Detection Flag. If IER[RLS_IEN]
        is enabled, the RLS interrupt will be generated.

        NOTE: This bit is read only and reset to 0 when all bits of BIF, FEF, PEF
        and RS-485_Add_Det are cleared.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Modem_IF
      bit_offset: 3
      bit_width: 1
      description: "MODEM Interrupt Flag (Read Only) \nThis bit is set when the CTS\
        \ pin has state change (DCTSF=1). If IER[Modem_IEN] is enabled, the Modem\
        \ interrupt will be generated.\nNOTE: This bit is read only and reset to 0\
        \ when bit DCTSF is cleared by a write 1 on DCTSF."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tout_IF
      bit_offset: 4
      bit_width: 1
      description: "Time Out Interrupt Flag (Read Only)\nThis bit is set when the\
        \ Rx FIFO is not empty and no activities occur in the Rx FIFO and the time\
        \ out counter equal to TOIC. If IER [Tout_IEN] is enabled, the Tout interrupt\
        \ will be generated. \nNOTE: This bit is read only and user can read UA_RBR\
        \ (Rx is in active) to clear it."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Buf_Err_IF
      bit_offset: 5
      bit_width: 1
      description: 'Buffer Error Interrupt Flag (Read Only)

        This bit is set when the Tx or Rx FIFO overflows (Tx_Over_IF or Rx_Over_IF
        is set). When Buf_Err_IF is set, the transfer maybe not correct. If IER[Buf_Err_IEN]
        is enabled, the buffer error interrupt will be generated.

        NOTE: This bit is cleared when both Tx_Over_IF and Rx_Over_IF are cleared. '
      read_allowed: true
      write_allowed: false
    - !Field
      name: RDA_INT
      bit_offset: 8
      bit_width: 1
      description: 'Receive Data Available Interrupt Indicator to Interrupt Controller
        (INT_RDA).

        An AND output with inputs of RDA_IEN and RDA_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: THRE_INT
      bit_offset: 9
      bit_width: 1
      description: 'Transmit Holding Register Empty Interrupt Indicator to Interrupt
        Controller (INT_THRE).

        An AND output with inputs of THRE_IEN and THRE_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RLS_INT
      bit_offset: 10
      bit_width: 1
      description: "Receive Line Status Interrupt Indicator to Interrupt Controller\
        \ (INT_RLS). \nAn AND output with inputs of RLS_IEN and RLS_IF\nNote: In RS-485\
        \ mode, the field includes RS-485 Address Byte Detection Flag."
      read_allowed: true
      write_allowed: false
    - !Field
      name: Modem_INT
      bit_offset: 11
      bit_width: 1
      description: "MODEM Status Interrupt Indicator to Interrupt Controller (INT_MOS).\
        \ \nAn AND output with inputs of Modem_IEN and Modem_IF"
      read_allowed: true
      write_allowed: false
    - !Field
      name: Tout_INT
      bit_offset: 12
      bit_width: 1
      description: 'Time Out Interrupt Indicator to Interrupt Controller (INT_Tout)

        An AND output with inputs of RTO_IEN and Tout_IF'
      read_allowed: true
      write_allowed: false
    - !Field
      name: Buf_Err_INT
      bit_offset: 13
      bit_width: 1
      description: 'Buffer Error Interrupt Indicator to Interrupt Controller (INT_Buf_err)

        An AND output with inputs of BUF_ERR_IEN and Buf_Err_IF'
      read_allowed: true
      write_allowed: false
  - !Register
    name: UA_TOR
    addr: 0x20
    size_bits: 32
    description: UART0 Time Out Register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TOIC
      bit_offset: 0
      bit_width: 7
      description: 'Time Out Interrupt Comparator

        The time out counter resets and starts counting (the counting clock = baud
        rate) whenever the RX FIFO receives a new data word. Once the content of time
        out counter (TOUT_CNT) is equal to that of time out interrupt comparator (TOIC),
        a receiver time out interrupt (INT_TOUT) is generated if UA_IER [RTO_IEN].
        A new incoming data word or RX FIFO empty clears INT_TOUT.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DLY
      bit_offset: 8
      bit_width: 8
      description: 'TX Delay time value

        This field is use to programming the transfer delay time between the last
        stop bit leaving the TX-FIFO and the de-assertion of by setting UA_TOR. DLY
        register.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_BAUD
    addr: 0x24
    size_bits: 32
    description: UART0 Baud Rate Divisor Register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: BRD_LowByte
      bit_offset: 0
      bit_width: 8
      description: "Baud Rate Divider \nThe low byte of the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BRD_HighByte
      bit_offset: 8
      bit_width: 8
      description: "Baud Rate Divider \nThe high byte of the baud rate divider"
      read_allowed: true
      write_allowed: true
    - !Field
      name: Divider_X
      bit_offset: 24
      bit_width: 4
      description: 'Divider X

        The baud rate divider M = X+1.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_ONE
      bit_offset: 28
      bit_width: 1
      description: "Divider X equal 1\n0 = Divider M = X (the equation of M = X+1,\
        \ but Divider_X[27:24] must > 8)\n1 = Divider M = 1 (the equation of M = 1,\
        \ but BRD[15:0] must > 3).\nMode\tDIV_X_EN \tDIV_X_ONE \tDIVIDER X \tBRD \t\
        Baud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK / [16 * (A+2)]\t\n\
        1 \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >= 8\t\n2 \tEnable \t\
        1\tDon't Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_X_EN
      bit_offset: 29
      bit_width: 1
      description: "Divider X Enable\nThe BRD = Baud Rate Divider, and the baud rate\
        \ equation is \nBaud Rate = Clock / [ M * (BRD + 2) ] ; The default value\
        \ of M is 16.\n0 = Disable divider X (the equation of M = 16)\n1 = Enable\
        \ divider X (the equation of M = X+1, but Divider_X[27:24 must > 8).\nNOTE:\
        \ When in IrDA mode, this bit must disable.\nMode\tDIV_X_EN \tDIV_X_ONE \t\
        DIVIDER X \tBRD \tBaud rate equation \t\n0 \tDisable \t0 \tB\tA\tUART_CLK\
        \ / [16 * (A+2)]\t\n1 \tEnable \t0 \tB\tA\tUART_CLK/[(B+1)*(A+2)],B must >=\
        \ 8\t\n2 \tEnable \t1\tDon't Care\tA\tUART_CLK / (A+2), A must >=3\t"
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_IRCR
    addr: 0x28
    size_bits: 32
    description: UART0 IrDA Control Register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x40
    fields:
    - !Field
      name: Tx_SELECT
      bit_offset: 1
      bit_width: 1
      description: 'Tx_SELECT

        1: Enable IrDA transmitter

        0: Enable IrDA receiver'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LB
      bit_offset: 2
      bit_width: 1
      description: 'IrDA loop back mode for self test.

        1: Enable IrDA loop back mode

        0: Disable IrDA loop back mode'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_Tx
      bit_offset: 5
      bit_width: 1
      description: 'INV_Tx

        1= Inverse Tx output signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_Rx
      bit_offset: 6
      bit_width: 1
      description: 'INV_Rx

        1= Inverse Rx input signal

        0= No inversion'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_ACT_CSR
    addr: 0x2c
    size_bits: 32
    description: UART0 RS485 Control State Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RS_485_NMM
      bit_offset: 8
      bit_width: 1
      description: 'RS-485 Normal Multi-drop Operation Mode (NMM)

        1: Enable RS-485 Normal Multi-drop Operation Mode (NMM)

        0: Disable RS-485 Normal Multi-drop Operation Mode (NMM)

        Note: It can''t be active with RS-485_AAD operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_AAD
      bit_offset: 9
      bit_width: 1
      description: 'RS-485 Auto Address Detection Operation Mode (AAD)

        1: Enable RS-485 Auto Address Detection Operation Mode (AAD)

        0: Disable RS-485 Auto Address Detection Operation Mode (AAD)

        Note: It can''t be active with RS-485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_AUD
      bit_offset: 10
      bit_width: 1
      description: 'RS-485 Auto Direction Mode (AUD)

        1: Enable RS-485 Auto Direction Mode (AUD)

        0: Disable RS-485 Auto Direction Mode (AUD)

        Note: It can be active with RS-485_AAD or RS-485_NMM operation mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RS_485_Add_EN
      bit_offset: 15
      bit_width: 1
      description: "RS-485 Address Detection Enable\nThis bit is use to enable RS-485\
        \ address detection mode. \n1: Enable address detection mode\n0: Disable address\
        \ detection mode \nNote: This field is used for RS-485 any operation mode."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDR_MATCH
      bit_offset: 24
      bit_width: 8
      description: 'Address match value register

        This field contains the RS-485 address match values.

        Note: This field is used for RS-485 auto address detection mode.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UA_FUN_SEL
    addr: 0x30
    size_bits: 32
    description: UART0 Function Select Register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FUN_SEL
      bit_offset: 0
      bit_width: 2
      description: 'Function Select Enable

        00 = UART Function.

        01 = Reserved.

        10 = Enable IrDA Function.

        11 = Enable RS-485 Function.'
      read_allowed: true
      write_allowed: true
