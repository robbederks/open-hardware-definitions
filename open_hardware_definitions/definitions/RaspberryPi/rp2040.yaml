!Device
manufacturer: Raspberry Pi
part_number: RP2040
architecture: ARM Cortex-M
bit_width: 32
endianness: little
modules:
- !Module
  name: XIP_CTRL
  description: QSPI flash execute-in-place block
  base_addr: 0x14000000
  size: 0x20
  registers:
  - !Register
    name: CTRL
    addr: 0x14000000
    size_bits: 32
    description: Cache control
    reset_value: 0x3
    fields:
    - !Field
      name: POWER_DOWN
      bit_offset: 3
      bit_width: 1
      description: "When 1, the cache memories are powered down. They retain state,\\n\n
        \               but can not be accessed. This reduces static power dissipation.\\n\n
        \               Writing 1 to this bit forces CTRL_EN to 0, i.e. the cache
        cannot\\n\n                be enabled when powered down.\\n\n                Cache-as-SRAM
        accesses will produce a bus error response when\\n\n                the cache
        is powered down."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERR_BADWRITE
      bit_offset: 1
      bit_width: 1
      description: "When 1, writes to any alias other than 0x0 (caching, allocating)\\n\n
        \               will produce a bus fault. When 0, these writes are silently
        ignored.\\n\n                In either case, writes to the 0x0 alias will
        deallocate on tag match,\\n\n                as usual."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "When 1, enable the cache. When the cache is disabled, all XIP
        accesses\\n\n                will go straight to the flash, without querying
        the cache. When enabled,\\n\n                cacheable XIP accesses will query
        the cache, and the flash will\\n\n                not be accessed if the tag
        matches and the valid bit is set.\\n\\n\n                If the cache is enabled,
        cache-as-SRAM accesses have no effect on the\\n\n                cache data
        RAM, and will produce a bus error response."
      read_allowed: true
      write_allowed: true
  - !Register
    name: FLUSH
    addr: 0x14000004
    size_bits: 32
    description: Cache Flush control
    fields:
    - !Field
      name: FLUSH
      bit_offset: 0
      bit_width: 1
      description: "Write 1 to flush the cache. This clears the tag memory, but\\n\n
        \               the data memory retains its contents. (This means cache-as-SRAM\\n\n
        \               contents is not affected by flush or reset.)\\n\n                Reading
        will hold the bus (stall the processor) until the flush\\n\n                completes.
        Alternatively STAT can be polled until completion."
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x14000008
    size_bits: 32
    description: Cache Status
    reset_value: 0x2
    fields:
    - !Field
      name: FIFO_FULL
      bit_offset: 2
      bit_width: 1
      description: "When 1, indicates the XIP streaming FIFO is completely full.\\n\n
        \               The streaming FIFO is 2 entries deep, so the full and empty\\n\n
        \               flag allow its level to be ascertained."
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIFO_EMPTY
      bit_offset: 1
      bit_width: 1
      description: When 1, indicates the XIP streaming FIFO is completely empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FLUSH_READY
      bit_offset: 0
      bit_width: 1
      description: "Reads as 0 while a cache flush is in progress, and 1 otherwise.\\n\n
        \               The cache is flushed whenever the XIP block is reset, and
        also\\n\n                when requested via the FLUSH register."
      read_allowed: true
      write_allowed: false
  - !Register
    name: CTR_HIT
    addr: 0x1400000c
    size_bits: 32
    description: "Cache Hit counter\\n\n            A 32 bit saturating counter that
      increments upon each cache hit,\\n\n            i.e. when an XIP access is serviced
      directly from cached data.\\n\n            Write any value to clear."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CTR_ACC
    addr: 0x14000010
    size_bits: 32
    description: "Cache Access counter\\n\n            A 32 bit saturating counter
      that increments upon each XIP access,\\n\n            whether the cache is hit
      or not. This includes noncacheable accesses.\\n\n            Write any value
      to clear."
    read_allowed: true
    write_allowed: true
  - !Register
    name: STREAM_ADDR
    addr: 0x14000014
    size_bits: 32
    description: FIFO stream address
    fields:
    - !Field
      name: STREAM_ADDR
      bit_offset: 2
      bit_width: 30
      description: "The address of the next word to be streamed from flash to the
        streaming FIFO.\\n\n                Increments automatically after each flash
        access.\\n\n                Write the initial access address here before starting
        a streaming read."
      read_allowed: true
      write_allowed: true
  - !Register
    name: STREAM_CTR
    addr: 0x14000018
    size_bits: 32
    description: FIFO stream control
    fields:
    - !Field
      name: STREAM_CTR
      bit_offset: 0
      bit_width: 22
      description: "Write a nonzero value to start a streaming read. This will then\\n\n
        \               progress in the background, using flash idle cycles to transfer\\n\n
        \               a linear data block from flash to the streaming FIFO.\\n\n
        \               Decrements automatically (1 at a time) as the stream\\n\n
        \               progresses, and halts on reaching 0.\\n\n                Write
        0 to halt an in-progress stream, and discard any in-flight\\n\n                read,
        so that a new stream can immediately be started (after\\n\n                draining
        the FIFO and reinitialising STREAM_ADDR)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: STREAM_FIFO
    addr: 0x1400001c
    size_bits: 32
    description: "FIFO stream data\\n\n            Streamed data is buffered here,
      for retrieval by the system DMA.\\n\n            This FIFO can also be accessed
      via the XIP_AUX slave, to avoid exposing\\n\n            the DMA to bus stalls
      caused by other XIP traffic."
    read_allowed: true
    write_allowed: false
- !Module
  name: XIP_SSI
  description: "DW_apb_ssi has the following features:\\n\n        * APB interface
    \u2013 Allows for easy integration into a DesignWare Synthesizable Components
    for AMBA 2 implementation.\\n\n        * APB3 and APB4 protocol support.\\n\n
    \       * Scalable APB data bus width \u2013 Supports APB data bus widths of 8,
    16, and 32 bits.\\n\n        * Serial-master or serial-slave operation \u2013
    Enables serial communication with serial-master or serial-slave peripheral devices.\\n\n
    \       * Programmable Dual/Quad/Octal SPI support in Master Mode.\\n\n        *
    Dual Data Rate (DDR) and Read Data Strobe (RDS) Support - Enables the DW_apb_ssi
    master to perform operations with the device in DDR and RDS modes when working
    in Dual/Quad/Octal mode of operation.\\n\n        * Data Mask Support - Enables
    the DW_apb_ssi to selectively update the bytes in the device. This feature is
    applicable only in enhanced SPI modes.\\n\n        * eXecute-In-Place (XIP) support
    - Enables the DW_apb_ssi master to behave as a memory mapped I/O and fetches the
    data from the device based on the APB read request. This feature is applicable
    only in enhanced SPI modes.\\n\n        * DMA Controller Interface \u2013 Enables
    the DW_apb_ssi to interface to a DMA controller over the bus using a handshaking
    interface for transfer requests.\\n\n        * Independent masking of interrupts
    \u2013 Master collision, transmit FIFO overflow, transmit FIFO empty, receive
    FIFO full, receive FIFO underflow, and receive FIFO overflow interrupts can all
    be masked independently.\\n\n        * Multi-master contention detection \u2013
    Informs the processor of multiple serial-master accesses on the serial bus.\\n\n
    \       * Bypass of meta-stability flip-flops for synchronous clocks \u2013 When
    the APB clock (pclk) and the DW_apb_ssi serial clock (ssi_clk) are synchronous,
    meta-stable flip-flops are not used when transferring control signals across these
    clock domains.\\n\n        * Programmable delay on the sample time of the received
    serial data bit (rxd); enables programmable control of routing delays resulting
    in higher serial data-bit rates.\\n\n        * Programmable features:\\n\n        -
    Serial interface operation \u2013 Choice of Motorola SPI, Texas Instruments Synchronous
    Serial Protocol or National Semiconductor Microwire.\\n\n        - Clock bit-rate
    \u2013 Dynamic control of the serial bit rate of the data transfer; used in only
    serial-master mode of operation.\\n\n        - Data Item size (4 to 32 bits) \u2013
    Item size of each data transfer under the control of the programmer.\\n\n        *
    Configured features:\\n\n        - FIFO depth \u2013 16 words deep. The FIFO width
    is fixed at 32 bits.\\n\n        - 1 slave select output.\\n\n        - Hardware
    slave-select \u2013 Dedicated hardware slave-select line.\\n\n        - Combined
    interrupt line - one combined interrupt line from the DW_apb_ssi to the interrupt
    controller.\\n\n        - Interrupt polarity \u2013 active high interrupt lines.\\n\n
    \       - Serial clock polarity \u2013 low serial-clock polarity directly after
    reset.\\n\n        - Serial clock phase \u2013 capture on first edge of serial-clock
    directly after reset."
  base_addr: 0x18000000
  size: 0xfc
  registers:
  - !Register
    name: CTRLR0
    addr: 0x18000000
    size_bits: 32
    description: Control register 0
    fields:
    - !Field
      name: SSTE
      bit_offset: 24
      bit_width: 1
      description: Slave select toggle enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI_FRF
      bit_offset: 21
      bit_width: 2
      description: SPI frame format
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STD
        1: DUAL
        2: QUAD
    - !Field
      name: DFS_32
      bit_offset: 16
      bit_width: 5
      description: "Data frame size in 32b transfer mode\\n\n                Value
        of n -> n+1 clocks per frame."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFS
      bit_offset: 12
      bit_width: 4
      description: "Control frame size\\n\n                Value of n -> n+1 clocks
        per frame."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRL
      bit_offset: 11
      bit_width: 1
      description: Shift register loop (test mode)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLV_OE
      bit_offset: 10
      bit_width: 1
      description: Slave output enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: TMOD
      bit_offset: 8
      bit_width: 2
      description: Transfer mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TX_AND_RX
        1: TX_ONLY
        2: RX_ONLY
        3: EEPROM_READ
    - !Field
      name: SCPOL
      bit_offset: 7
      bit_width: 1
      description: Serial clock polarity
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCPH
      bit_offset: 6
      bit_width: 1
      description: Serial clock phase
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRF
      bit_offset: 4
      bit_width: 2
      description: Frame format
      read_allowed: true
      write_allowed: true
    - !Field
      name: DFS
      bit_offset: 0
      bit_width: 4
      description: Data frame size
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRLR1
    addr: 0x18000004
    size_bits: 32
    description: Master Control register 1
    fields:
    - !Field
      name: NDF
      bit_offset: 0
      bit_width: 16
      description: Number of data frames
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSIENR
    addr: 0x18000008
    size_bits: 32
    description: SSI Enable
    fields:
    - !Field
      name: SSI_EN
      bit_offset: 0
      bit_width: 1
      description: SSI enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: MWCR
    addr: 0x1800000c
    size_bits: 32
    description: Microwire Control
    fields:
    - !Field
      name: MHS
      bit_offset: 2
      bit_width: 1
      description: Microwire handshaking
      read_allowed: true
      write_allowed: true
    - !Field
      name: MDD
      bit_offset: 1
      bit_width: 1
      description: Microwire control
      read_allowed: true
      write_allowed: true
    - !Field
      name: MWMOD
      bit_offset: 0
      bit_width: 1
      description: Microwire transfer mode
      read_allowed: true
      write_allowed: true
  - !Register
    name: SER
    addr: 0x18000010
    size_bits: 32
    description: Slave enable
    fields:
    - !Field
      name: SER
      bit_offset: 0
      bit_width: 1
      description: "For each bit:\\n\n                0 -> slave not selected\\n\n
        \               1 -> slave selected"
      read_allowed: true
      write_allowed: true
  - !Register
    name: BAUDR
    addr: 0x18000014
    size_bits: 32
    description: Baud rate
    fields:
    - !Field
      name: SCKDV
      bit_offset: 0
      bit_width: 16
      description: SSI clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: TXFTLR
    addr: 0x18000018
    size_bits: 32
    description: TX FIFO threshold level
    fields:
    - !Field
      name: TFT
      bit_offset: 0
      bit_width: 8
      description: Transmit FIFO threshold
      read_allowed: true
      write_allowed: true
  - !Register
    name: RXFTLR
    addr: 0x1800001c
    size_bits: 32
    description: RX FIFO threshold level
    fields:
    - !Field
      name: RFT
      bit_offset: 0
      bit_width: 8
      description: Receive FIFO threshold
      read_allowed: true
      write_allowed: true
  - !Register
    name: TXFLR
    addr: 0x18000020
    size_bits: 32
    description: TX FIFO level
    fields:
    - !Field
      name: TFTFL
      bit_offset: 0
      bit_width: 8
      description: Transmit FIFO level
      read_allowed: true
      write_allowed: false
  - !Register
    name: RXFLR
    addr: 0x18000024
    size_bits: 32
    description: RX FIFO level
    fields:
    - !Field
      name: RXTFL
      bit_offset: 0
      bit_width: 8
      description: Receive FIFO level
      read_allowed: true
      write_allowed: false
  - !Register
    name: SR
    addr: 0x18000028
    size_bits: 32
    description: Status register
    fields:
    - !Field
      name: DCOL
      bit_offset: 6
      bit_width: 1
      description: Data collision error
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXE
      bit_offset: 5
      bit_width: 1
      description: Transmission error
      read_allowed: true
      write_allowed: false
    - !Field
      name: RFF
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO full
      read_allowed: true
      write_allowed: false
    - !Field
      name: RFNE
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO not empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: TFE
      bit_offset: 2
      bit_width: 1
      description: Transmit FIFO empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: TFNF
      bit_offset: 1
      bit_width: 1
      description: Transmit FIFO not full
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUSY
      bit_offset: 0
      bit_width: 1
      description: SSI busy flag
      read_allowed: true
      write_allowed: false
  - !Register
    name: IMR
    addr: 0x1800002c
    size_bits: 32
    description: Interrupt mask
    fields:
    - !Field
      name: MSTIM
      bit_offset: 5
      bit_width: 1
      description: Multi-master contention interrupt mask
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXFIM
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO full interrupt mask
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXOIM
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO overflow interrupt mask
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXUIM
      bit_offset: 2
      bit_width: 1
      description: Receive FIFO underflow interrupt mask
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXOIM
      bit_offset: 1
      bit_width: 1
      description: Transmit FIFO overflow interrupt mask
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXEIM
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO empty interrupt mask
      read_allowed: true
      write_allowed: true
  - !Register
    name: ISR
    addr: 0x18000030
    size_bits: 32
    description: Interrupt status
    fields:
    - !Field
      name: MSTIS
      bit_offset: 5
      bit_width: 1
      description: Multi-master contention interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFIS
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO full interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXOIS
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO overflow interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXUIS
      bit_offset: 2
      bit_width: 1
      description: Receive FIFO underflow interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXOIS
      bit_offset: 1
      bit_width: 1
      description: Transmit FIFO overflow interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEIS
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO empty interrupt status
      read_allowed: true
      write_allowed: false
  - !Register
    name: RISR
    addr: 0x18000034
    size_bits: 32
    description: Raw interrupt status
    fields:
    - !Field
      name: MSTIR
      bit_offset: 5
      bit_width: 1
      description: Multi-master contention raw interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFIR
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO full raw interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXOIR
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO overflow raw interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXUIR
      bit_offset: 2
      bit_width: 1
      description: Receive FIFO underflow raw interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXOIR
      bit_offset: 1
      bit_width: 1
      description: Transmit FIFO overflow raw interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEIR
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO empty raw interrupt status
      read_allowed: true
      write_allowed: false
  - !Register
    name: TXOICR
    addr: 0x18000038
    size_bits: 32
    description: TX FIFO overflow interrupt clear
    fields:
    - !Field
      name: TXOICR
      bit_offset: 0
      bit_width: 1
      description: Clear-on-read transmit FIFO overflow interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: RXOICR
    addr: 0x1800003c
    size_bits: 32
    description: RX FIFO overflow interrupt clear
    fields:
    - !Field
      name: RXOICR
      bit_offset: 0
      bit_width: 1
      description: Clear-on-read receive FIFO overflow interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: RXUICR
    addr: 0x18000040
    size_bits: 32
    description: RX FIFO underflow interrupt clear
    fields:
    - !Field
      name: RXUICR
      bit_offset: 0
      bit_width: 1
      description: Clear-on-read receive FIFO underflow interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: MSTICR
    addr: 0x18000044
    size_bits: 32
    description: Multi-master interrupt clear
    fields:
    - !Field
      name: MSTICR
      bit_offset: 0
      bit_width: 1
      description: Clear-on-read multi-master contention interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: ICR
    addr: 0x18000048
    size_bits: 32
    description: Interrupt clear
    fields:
    - !Field
      name: ICR
      bit_offset: 0
      bit_width: 1
      description: Clear-on-read all active interrupts
      read_allowed: true
      write_allowed: false
  - !Register
    name: DMACR
    addr: 0x1800004c
    size_bits: 32
    description: DMA control
    fields:
    - !Field
      name: TDMAE
      bit_offset: 1
      bit_width: 1
      description: Transmit DMA enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RDMAE
      bit_offset: 0
      bit_width: 1
      description: Receive DMA enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMATDLR
    addr: 0x18000050
    size_bits: 32
    description: DMA TX data level
    fields:
    - !Field
      name: DMATDL
      bit_offset: 0
      bit_width: 8
      description: Transmit data watermark level
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMARDLR
    addr: 0x18000054
    size_bits: 32
    description: DMA RX data level
    fields:
    - !Field
      name: DMARDL
      bit_offset: 0
      bit_width: 8
      description: Receive data watermark level (DMARDLR+1)
      read_allowed: true
      write_allowed: true
  - !Register
    name: IDR
    addr: 0x18000058
    size_bits: 32
    description: Identification register
    reset_value: 0x51535049
    fields:
    - !Field
      name: IDCODE
      bit_offset: 0
      bit_width: 32
      description: Peripheral dentification code
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSI_VERSION_ID
    addr: 0x1800005c
    size_bits: 32
    description: Version ID
    reset_value: 0x3430312a
    fields:
    - !Field
      name: SSI_COMP_VERSION
      bit_offset: 0
      bit_width: 32
      description: SNPS component version (format X.YY)
      read_allowed: true
      write_allowed: false
  - !Register
    name: DR0
    addr: 0x18000060
    size_bits: 32
    description: Data Register 0 (of 36)
    fields:
    - !Field
      name: DR
      bit_offset: 0
      bit_width: 32
      description: First data register of 36
      read_allowed: true
      write_allowed: true
  - !Register
    name: RX_SAMPLE_DLY
    addr: 0x180000f0
    size_bits: 32
    description: RX sample delay
    fields:
    - !Field
      name: RSD
      bit_offset: 0
      bit_width: 8
      description: RXD sample delay (in SCLK cycles)
      read_allowed: true
      write_allowed: true
  - !Register
    name: SPI_CTRLR0
    addr: 0x180000f4
    size_bits: 32
    description: SPI control
    reset_value: 0x3000000
    fields:
    - !Field
      name: XIP_CMD
      bit_offset: 24
      bit_width: 8
      description: SPI Command to send in XIP mode (INST_L = 8-bit) or to append to
        Address (INST_L = 0-bit)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI_RXDS_EN
      bit_offset: 18
      bit_width: 1
      description: Read data strobe enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INST_DDR_EN
      bit_offset: 17
      bit_width: 1
      description: Instruction DDR transfer enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPI_DDR_EN
      bit_offset: 16
      bit_width: 1
      description: SPI DDR transfer enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAIT_CYCLES
      bit_offset: 11
      bit_width: 5
      description: Wait cycles between control frame transmit and data reception (in
        SCLK cycles)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INST_L
      bit_offset: 8
      bit_width: 2
      description: Instruction length (0/4/8/16b)
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NONE
        1: 4B
        2: 8B
        3: 16B
    - !Field
      name: ADDR_L
      bit_offset: 2
      bit_width: 4
      description: Address length (0b-60b in 4b increments)
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANS_TYPE
      bit_offset: 0
      bit_width: 2
      description: Address and instruction transfer format
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 1C1A
        1: 1C2A
        2: 2C2A
  - !Register
    name: TXD_DRIVE_EDGE
    addr: 0x180000f8
    size_bits: 32
    description: TX drive edge
    fields:
    - !Field
      name: TDE
      bit_offset: 0
      bit_width: 8
      description: TXD drive edge
      read_allowed: true
      write_allowed: true
- !Module
  name: SYSINFO
  base_addr: 0x40000000
  size: 0x44
  registers:
  - !Register
    name: CHIP_ID
    addr: 0x40000000
    size_bits: 32
    description: JEDEC JEP-106 compliant chip identifier.
    fields:
    - !Field
      name: REVISION
      bit_offset: 28
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: PART
      bit_offset: 12
      bit_width: 16
      read_allowed: true
      write_allowed: false
    - !Field
      name: MANUFACTURER
      bit_offset: 0
      bit_width: 12
      read_allowed: true
      write_allowed: false
  - !Register
    name: PLATFORM
    addr: 0x40000004
    size_bits: 32
    description: Platform register. Allows software to know what environment it is
      running in.
    fields:
    - !Field
      name: ASIC
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: FPGA
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: GITREF_RP2040
    addr: 0x40000040
    size_bits: 32
    description: Git hash of the chip source. Used to identify chip version.
    read_allowed: true
    write_allowed: false
- !Module
  name: SYSCFG
  description: Register block for various chip control signals
  base_addr: 0x40004000
  size: 0x1c
  registers:
  - !Register
    name: PROC0_NMI_MASK
    addr: 0x40004000
    size_bits: 32
    description: "Processor core 0 NMI source mask\\n\n            Set a bit high
      to enable NMI from that IRQ"
    read_allowed: true
    write_allowed: true
  - !Register
    name: PROC1_NMI_MASK
    addr: 0x40004004
    size_bits: 32
    description: "Processor core 1 NMI source mask\\n\n            Set a bit high
      to enable NMI from that IRQ"
    read_allowed: true
    write_allowed: true
  - !Register
    name: PROC_CONFIG
    addr: 0x40004008
    size_bits: 32
    description: Configuration for processors
    reset_value: 0x10000000
    fields:
    - !Field
      name: PROC1_DAP_INSTID
      bit_offset: 28
      bit_width: 4
      description: "Configure proc1 DAP instance ID.\\n\n                Recommend
        that this is NOT changed until you require debug access in multi-chip environment\\n\n
        \               WARNING: do not set to 15 as this is reserved for RescueDP"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC0_DAP_INSTID
      bit_offset: 24
      bit_width: 4
      description: "Configure proc0 DAP instance ID.\\n\n                Recommend
        that this is NOT changed until you require debug access in multi-chip environment\\n\n
        \               WARNING: do not set to 15 as this is reserved for RescueDP"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC1_HALTED
      bit_offset: 1
      bit_width: 1
      description: Indication that proc1 has halted
      read_allowed: true
      write_allowed: false
    - !Field
      name: PROC0_HALTED
      bit_offset: 0
      bit_width: 1
      description: Indication that proc0 has halted
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC_IN_SYNC_BYPASS
    addr: 0x4000400c
    size_bits: 32
    description: "For each bit, if 1, bypass the input synchronizer between that GPIO\\n\n
      \           and the GPIO input register in the SIO. The input synchronizers
      should\\n\n            generally be unbypassed, to avoid injecting metastabilities
      into processors.\\n\n            If you're feeling brave, you can bypass to
      save two cycles of input\\n\n            latency. This register applies to GPIO
      0...29."
    fields:
    - !Field
      name: PROC_IN_SYNC_BYPASS
      bit_offset: 0
      bit_width: 30
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC_IN_SYNC_BYPASS_HI
    addr: 0x40004010
    size_bits: 32
    description: "For each bit, if 1, bypass the input synchronizer between that GPIO\\n\n
      \           and the GPIO input register in the SIO. The input synchronizers
      should\\n\n            generally be unbypassed, to avoid injecting metastabilities
      into processors.\\n\n            If you're feeling brave, you can bypass to
      save two cycles of input\\n\n            latency. This register applies to GPIO
      30...35 (the QSPI IOs)."
    fields:
    - !Field
      name: PROC_IN_SYNC_BYPASS_HI
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: true
  - !Register
    name: DBGFORCE
    addr: 0x40004014
    size_bits: 32
    description: Directly control the SWD debug port of either processor
    reset_value: 0x66
    fields:
    - !Field
      name: PROC1_ATTACH
      bit_offset: 7
      bit_width: 1
      description: Attach processor 1 debug port to syscfg controls, and disconnect
        it from external SWD pads.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC1_SWCLK
      bit_offset: 6
      bit_width: 1
      description: Directly drive processor 1 SWCLK, if PROC1_ATTACH is set
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC1_SWDI
      bit_offset: 5
      bit_width: 1
      description: Directly drive processor 1 SWDIO input, if PROC1_ATTACH is set
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC1_SWDO
      bit_offset: 4
      bit_width: 1
      description: Observe the value of processor 1 SWDIO output.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PROC0_ATTACH
      bit_offset: 3
      bit_width: 1
      description: Attach processor 0 debug port to syscfg controls, and disconnect
        it from external SWD pads.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC0_SWCLK
      bit_offset: 2
      bit_width: 1
      description: Directly drive processor 0 SWCLK, if PROC0_ATTACH is set
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC0_SWDI
      bit_offset: 1
      bit_width: 1
      description: Directly drive processor 0 SWDIO input, if PROC0_ATTACH is set
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC0_SWDO
      bit_offset: 0
      bit_width: 1
      description: Observe the value of processor 0 SWDIO output.
      read_allowed: true
      write_allowed: false
  - !Register
    name: MEMPOWERDOWN
    addr: 0x40004018
    size_bits: 32
    description: "Control power downs to memories. Set high to power down memories.\\n\n
      \           Use with extreme caution"
    fields:
    - !Field
      name: ROM
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRAM0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
- !Module
  name: CLOCKS
  base_addr: 0x40008000
  size: 0xc8
  registers:
  - !Register
    name: CLK_GPOUT0_CTRL
    addr: 0x40008000
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC50
      bit_offset: 12
      bit_width: 1
      description: Enables duty cycle correction for odd divisors
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 4
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_sys
        1: clksrc_gpin0
        2: clksrc_gpin1
        3: clksrc_pll_usb
        4: rosc_clksrc
        5: xosc_clksrc
        6: clk_sys
        7: clk_usb
        8: clk_adc
        9: clk_rtc
        10: clk_ref
  - !Register
    name: CLK_GPOUT0_DIV
    addr: 0x40008004
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_GPOUT0_SELECTED
    addr: 0x40008008
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_GPOUT1_CTRL
    addr: 0x4000800c
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC50
      bit_offset: 12
      bit_width: 1
      description: Enables duty cycle correction for odd divisors
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 4
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_sys
        1: clksrc_gpin0
        2: clksrc_gpin1
        3: clksrc_pll_usb
        4: rosc_clksrc
        5: xosc_clksrc
        6: clk_sys
        7: clk_usb
        8: clk_adc
        9: clk_rtc
        10: clk_ref
  - !Register
    name: CLK_GPOUT1_DIV
    addr: 0x40008010
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_GPOUT1_SELECTED
    addr: 0x40008014
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_GPOUT2_CTRL
    addr: 0x40008018
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC50
      bit_offset: 12
      bit_width: 1
      description: Enables duty cycle correction for odd divisors
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 4
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_sys
        1: clksrc_gpin0
        2: clksrc_gpin1
        3: clksrc_pll_usb
        4: rosc_clksrc_ph
        5: xosc_clksrc
        6: clk_sys
        7: clk_usb
        8: clk_adc
        9: clk_rtc
        10: clk_ref
  - !Register
    name: CLK_GPOUT2_DIV
    addr: 0x4000801c
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_GPOUT2_SELECTED
    addr: 0x40008020
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_GPOUT3_CTRL
    addr: 0x40008024
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC50
      bit_offset: 12
      bit_width: 1
      description: Enables duty cycle correction for odd divisors
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 4
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_sys
        1: clksrc_gpin0
        2: clksrc_gpin1
        3: clksrc_pll_usb
        4: rosc_clksrc_ph
        5: xosc_clksrc
        6: clk_sys
        7: clk_usb
        8: clk_adc
        9: clk_rtc
        10: clk_ref
  - !Register
    name: CLK_GPOUT3_DIV
    addr: 0x40008028
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_GPOUT3_SELECTED
    addr: 0x4000802c
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_REF_CTRL
    addr: 0x40008030
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 2
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_usb
        1: clksrc_gpin0
        2: clksrc_gpin1
    - !Field
      name: SRC
      bit_offset: 0
      bit_width: 2
      description: Selects the clock source glitchlessly, can be changed on-the-fly
      read_allowed: true
      write_allowed: true
      enum_values:
        0: rosc_clksrc_ph
        1: clksrc_clk_ref_aux
        2: xosc_clksrc
  - !Register
    name: CLK_REF_DIV
    addr: 0x40008034
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 2
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_REF_SELECTED
    addr: 0x40008038
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_SYS_CTRL
    addr: 0x4000803c
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 3
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_sys
        1: clksrc_pll_usb
        2: rosc_clksrc
        3: xosc_clksrc
        4: clksrc_gpin0
        5: clksrc_gpin1
    - !Field
      name: SRC
      bit_offset: 0
      bit_width: 1
      description: Selects the clock source glitchlessly, can be changed on-the-fly
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clk_ref
        1: clksrc_clk_sys_aux
  - !Register
    name: CLK_SYS_DIV
    addr: 0x40008040
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_SYS_SELECTED
    addr: 0x40008044
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_PERI_CTRL
    addr: 0x40008048
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 3
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clk_sys
        1: clksrc_pll_sys
        2: clksrc_pll_usb
        3: rosc_clksrc_ph
        4: xosc_clksrc
        5: clksrc_gpin0
        6: clksrc_gpin1
  - !Register
    name: CLK_PERI_SELECTED
    addr: 0x40008050
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_USB_CTRL
    addr: 0x40008054
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 3
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_usb
        1: clksrc_pll_sys
        2: rosc_clksrc_ph
        3: xosc_clksrc
        4: clksrc_gpin0
        5: clksrc_gpin1
  - !Register
    name: CLK_USB_DIV
    addr: 0x40008058
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 2
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_USB_SELECTED
    addr: 0x4000805c
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_ADC_CTRL
    addr: 0x40008060
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 3
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_usb
        1: clksrc_pll_sys
        2: rosc_clksrc_ph
        3: xosc_clksrc
        4: clksrc_gpin0
        5: clksrc_gpin1
  - !Register
    name: CLK_ADC_DIV
    addr: 0x40008064
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 2
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_ADC_SELECTED
    addr: 0x40008068
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_RTC_CTRL
    addr: 0x4000806c
    size_bits: 32
    description: Clock control, can be changed on-the-fly (except for auxsrc)
    fields:
    - !Field
      name: NUDGE
      bit_offset: 20
      bit_width: 1
      description: "An edge on this signal shifts the phase of the output by 1 cycle
        of the input clock\\n\n                This can be done at any time"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHASE
      bit_offset: 16
      bit_width: 2
      description: "This delays the enable signal by up to 3 cycles of the input clock\\n\n
        \               This must be set before the clock is enabled to have any effect"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 11
      bit_width: 1
      description: Starts and stops the clock generator cleanly
      read_allowed: true
      write_allowed: true
    - !Field
      name: KILL
      bit_offset: 10
      bit_width: 1
      description: Asynchronously kills the clock generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUXSRC
      bit_offset: 5
      bit_width: 3
      description: Selects the auxiliary clock source, will glitch when switching
      read_allowed: true
      write_allowed: true
      enum_values:
        0: clksrc_pll_usb
        1: clksrc_pll_sys
        2: rosc_clksrc_ph
        3: xosc_clksrc
        4: clksrc_gpin0
        5: clksrc_gpin1
  - !Register
    name: CLK_RTC_DIV
    addr: 0x40008070
    size_bits: 32
    description: Clock divisor, can be changed on-the-fly
    reset_value: 0x100
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 24
      description: Integer component of the divisor, 0 -> divide by 2^16
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional component of the divisor
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_RTC_SELECTED
    addr: 0x40008074
    size_bits: 32
    description: Indicates which src is currently selected (one-hot)
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
  - !Register
    name: CLK_SYS_RESUS_CTRL
    addr: 0x40008078
    size_bits: 32
    reset_value: 0xff
    fields:
    - !Field
      name: CLEAR
      bit_offset: 16
      bit_width: 1
      description: For clearing the resus after the fault that triggered it has been
        corrected
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRCE
      bit_offset: 12
      bit_width: 1
      description: Force a resus, for test purposes only
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 8
      bit_width: 1
      description: Enable resus
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIMEOUT
      bit_offset: 0
      bit_width: 8
      description: "This is expressed as a number of clk_ref cycles\\n\n                and
        must be >= 2x clk_ref_freq/min_clk_tst_freq"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_SYS_RESUS_STATUS
    addr: 0x4000807c
    size_bits: 32
    fields:
    - !Field
      name: RESUSSED
      bit_offset: 0
      bit_width: 1
      description: Clock has been resuscitated, correct the error then send ctrl_clear=1
      read_allowed: true
      write_allowed: false
  - !Register
    name: FC0_REF_KHZ
    addr: 0x40008080
    size_bits: 32
    description: Reference clock frequency in kHz
    fields:
    - !Field
      name: FC0_REF_KHZ
      bit_offset: 0
      bit_width: 20
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC0_MIN_KHZ
    addr: 0x40008084
    size_bits: 32
    description: Minimum pass frequency in kHz. This is optional. Set to 0 if you
      are not using the pass/fail flags
    fields:
    - !Field
      name: FC0_MIN_KHZ
      bit_offset: 0
      bit_width: 25
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC0_MAX_KHZ
    addr: 0x40008088
    size_bits: 32
    description: Maximum pass frequency in kHz. This is optional. Set to 0x1ffffff
      if you are not using the pass/fail flags
    reset_value: 0x1ffffff
    fields:
    - !Field
      name: FC0_MAX_KHZ
      bit_offset: 0
      bit_width: 25
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC0_DELAY
    addr: 0x4000808c
    size_bits: 32
    description: "Delays the start of frequency counting to allow the mux to settle\\n\n
      \           Delay is measured in multiples of the reference clock period"
    reset_value: 0x1
    fields:
    - !Field
      name: FC0_DELAY
      bit_offset: 0
      bit_width: 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC0_INTERVAL
    addr: 0x40008090
    size_bits: 32
    description: "The test interval is 0.98us * 2**interval, but let's call it 1us
      * 2**interval\\n\n            The default gives a test interval of 250us"
    reset_value: 0x8
    fields:
    - !Field
      name: FC0_INTERVAL
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC0_SRC
    addr: 0x40008094
    size_bits: 32
    description: "Clock sent to frequency counter, set to 0 when not required\\n\n
      \           Writing to this register initiates the frequency count"
    fields:
    - !Field
      name: FC0_SRC
      bit_offset: 0
      bit_width: 8
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 'NULL'
        1: pll_sys_clksrc_primary
        2: pll_usb_clksrc_primary
        3: rosc_clksrc
        4: rosc_clksrc_ph
        5: xosc_clksrc
        6: clksrc_gpin0
        7: clksrc_gpin1
        8: clk_ref
        9: clk_sys
        10: clk_peri
        11: clk_usb
        12: clk_adc
        13: clk_rtc
  - !Register
    name: FC0_STATUS
    addr: 0x40008098
    size_bits: 32
    description: Frequency counter status
    fields:
    - !Field
      name: DIED
      bit_offset: 28
      bit_width: 1
      description: Test clock stopped during test
      read_allowed: true
      write_allowed: false
    - !Field
      name: FAST
      bit_offset: 24
      bit_width: 1
      description: Test clock faster than expected, only valid when status_done=1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLOW
      bit_offset: 20
      bit_width: 1
      description: Test clock slower than expected, only valid when status_done=1
      read_allowed: true
      write_allowed: false
    - !Field
      name: FAIL
      bit_offset: 16
      bit_width: 1
      description: Test failed
      read_allowed: true
      write_allowed: false
    - !Field
      name: WAITING
      bit_offset: 12
      bit_width: 1
      description: Waiting for test clock to start
      read_allowed: true
      write_allowed: false
    - !Field
      name: RUNNING
      bit_offset: 8
      bit_width: 1
      description: Test running
      read_allowed: true
      write_allowed: false
    - !Field
      name: DONE
      bit_offset: 4
      bit_width: 1
      description: Test complete
      read_allowed: true
      write_allowed: false
    - !Field
      name: PASS
      bit_offset: 0
      bit_width: 1
      description: Test passed
      read_allowed: true
      write_allowed: false
  - !Register
    name: FC0_RESULT
    addr: 0x4000809c
    size_bits: 32
    description: Result of frequency measurement, only valid when status_done=1
    fields:
    - !Field
      name: KHZ
      bit_offset: 5
      bit_width: 25
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: WAKE_EN0
    addr: 0x400080a0
    size_bits: 32
    description: enable clock in wake mode
    reset_value: 0xffffffff
    fields:
    - !Field
      name: clk_sys_sram3
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram2
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram1
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram0
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_spi1
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_spi1
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_spi0
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_spi0
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sio
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rtc
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_rtc_rtc
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rosc
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rom
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_resets
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pwm
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_psm
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pll_usb
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pll_sys
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pio1
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pio0
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pads
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_vreg_and_chip_reset
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_jtag
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_io
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_i2c1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_i2c0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_dma
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_busctrl
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_adc
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_adc_adc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_clocks
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: WAKE_EN1
    addr: 0x400080a4
    size_bits: 32
    description: enable clock in wake mode
    reset_value: 0x7fff
    fields:
    - !Field
      name: clk_sys_xosc
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_xip
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_watchdog
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_usb_usbctrl
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_usbctrl
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_uart1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_uart1
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_uart0
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_uart0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_timer
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_tbman
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sysinfo
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_syscfg
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram5
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram4
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLEEP_EN0
    addr: 0x400080a8
    size_bits: 32
    description: enable clock in sleep mode
    reset_value: 0xffffffff
    fields:
    - !Field
      name: clk_sys_sram3
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram2
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram1
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram0
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_spi1
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_spi1
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_spi0
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_spi0
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sio
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rtc
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_rtc_rtc
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rosc
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_rom
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_resets
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pwm
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_psm
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pll_usb
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pll_sys
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pio1
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pio0
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_pads
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_vreg_and_chip_reset
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_jtag
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_io
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_i2c1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_i2c0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_dma
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_busctrl
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_adc
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_adc_adc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_clocks
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLEEP_EN1
    addr: 0x400080ac
    size_bits: 32
    description: enable clock in sleep mode
    reset_value: 0x7fff
    fields:
    - !Field
      name: clk_sys_xosc
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_xip
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_watchdog
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_usb_usbctrl
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_usbctrl
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_uart1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_uart1
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_uart0
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_peri_uart0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_timer
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_tbman
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sysinfo
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_syscfg
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram5
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clk_sys_sram4
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: ENABLED0
    addr: 0x400080b0
    size_bits: 32
    description: indicates the state of the clock enable
    fields:
    - !Field
      name: clk_sys_sram3
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sram2
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sram1
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sram0
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_spi1
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_peri_spi1
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_spi0
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_peri_spi0
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sio
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_rtc
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_rtc_rtc
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_rosc
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_rom
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_resets
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pwm
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_psm
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pll_usb
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pll_sys
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pio1
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pio0
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_pads
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_vreg_and_chip_reset
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_jtag
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_io
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_i2c1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_i2c0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_dma
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_busctrl
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_adc
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_adc_adc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_clocks
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: ENABLED1
    addr: 0x400080b4
    size_bits: 32
    description: indicates the state of the clock enable
    fields:
    - !Field
      name: clk_sys_xosc
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_xip
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_watchdog
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_usb_usbctrl
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_usbctrl
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_uart1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_peri_uart1
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_uart0
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_peri_uart0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_timer
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_tbman
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sysinfo
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_syscfg
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sram5
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clk_sys_sram4
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTR
    addr: 0x400080b8
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: CLK_SYS_RESUS
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTE
    addr: 0x400080bc
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: CLK_SYS_RESUS
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x400080c0
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: CLK_SYS_RESUS
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x400080c4
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: CLK_SYS_RESUS
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: RESETS
  base_addr: 0x4000c000
  size: 0xc
  registers:
  - !Register
    name: RESET
    addr: 0x4000c000
    size_bits: 32
    description: Reset control. If a bit is set it means the peripheral is in reset.
      0 means the peripheral's reset is deasserted.
    reset_value: 0x1ffffff
    fields:
    - !Field
      name: usbctrl
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: uart1
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: uart0
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: timer
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: tbman
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sysinfo
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: syscfg
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: spi1
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: spi0
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rtc
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pwm
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pll_usb
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pll_sys
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pio1
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pio0
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pads_qspi
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pads_bank0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: jtag
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: io_qspi
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: io_bank0
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: i2c1
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: i2c0
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: dma
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: busctrl
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: adc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: WDSEL
    addr: 0x4000c004
    size_bits: 32
    description: Watchdog select. If a bit is set then the watchdog will reset this
      peripheral when the watchdog fires.
    fields:
    - !Field
      name: usbctrl
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: uart1
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: uart0
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: timer
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: tbman
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sysinfo
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: syscfg
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: spi1
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: spi0
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rtc
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pwm
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pll_usb
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pll_sys
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pio1
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pio0
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pads_qspi
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: pads_bank0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: jtag
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: io_qspi
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: io_bank0
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: i2c1
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: i2c0
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: dma
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: busctrl
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: adc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: RESET_DONE
    addr: 0x4000c008
    size_bits: 32
    description: Reset done. If a bit is set then a reset done signal has been returned
      by the peripheral. This indicates that the peripheral's registers are ready
      to be accessed.
    fields:
    - !Field
      name: usbctrl
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: uart1
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: uart0
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: timer
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: tbman
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sysinfo
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: syscfg
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: spi1
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: spi0
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: rtc
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pwm
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pll_usb
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pll_sys
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pio1
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pio0
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pads_qspi
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: pads_bank0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: jtag
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: io_qspi
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: io_bank0
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: i2c1
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: i2c0
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: dma
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: busctrl
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: adc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: PSM
  base_addr: 0x40010000
  size: 0x10
  registers:
  - !Register
    name: FRCE_ON
    addr: 0x40010000
    size_bits: 32
    description: Force block out of reset (i.e. power it on)
    fields:
    - !Field
      name: proc1
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: proc0
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sio
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: vreg_and_chip_reset
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xip
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram5
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram4
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram3
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram2
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rom
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: resets
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clocks
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xosc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rosc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: FRCE_OFF
    addr: 0x40010004
    size_bits: 32
    description: Force into reset (i.e. power it off)
    fields:
    - !Field
      name: proc1
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: proc0
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sio
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: vreg_and_chip_reset
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xip
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram5
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram4
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram3
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram2
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rom
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: resets
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clocks
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xosc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rosc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: WDSEL
    addr: 0x40010008
    size_bits: 32
    description: Set to 1 if this peripheral should be reset when the watchdog fires.
    fields:
    - !Field
      name: proc1
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: proc0
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sio
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: vreg_and_chip_reset
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xip
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram5
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram4
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram3
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram2
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: sram0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rom
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: resets
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: clocks
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: xosc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: rosc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DONE
    addr: 0x4001000c
    size_bits: 32
    description: Indicates the peripheral's registers are ready to access.
    fields:
    - !Field
      name: proc1
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: proc0
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sio
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: vreg_and_chip_reset
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: xip
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram5
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram4
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram3
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram2
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram1
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: sram0
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: rom
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: busfabric
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: resets
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: clocks
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: xosc
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: rosc
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: IO_BANK0
  base_addr: 0x40014000
  size: 0x190
  registers:
  - !Register
    name: GPIO0_STATUS
    addr: 0x40014000
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO0_CTRL
    addr: 0x40014004
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: jtag_tck
        1: spi0_rx
        2: uart0_tx
        3: i2c0_sda
        4: pwm_a_0
        5: sio_0
        6: pio0_0
        7: pio1_0
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO1_STATUS
    addr: 0x40014008
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO1_CTRL
    addr: 0x4001400c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: jtag_tms
        1: spi0_ss_n
        2: uart0_rx
        3: i2c0_scl
        4: pwm_b_0
        5: sio_1
        6: pio0_1
        7: pio1_1
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO2_STATUS
    addr: 0x40014010
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO2_CTRL
    addr: 0x40014014
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: jtag_tdi
        1: spi0_sclk
        2: uart0_cts
        3: i2c1_sda
        4: pwm_a_1
        5: sio_2
        6: pio0_2
        7: pio1_2
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO3_STATUS
    addr: 0x40014018
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO3_CTRL
    addr: 0x4001401c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: jtag_tdo
        1: spi0_tx
        2: uart0_rts
        3: i2c1_scl
        4: pwm_b_1
        5: sio_3
        6: pio0_3
        7: pio1_3
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO4_STATUS
    addr: 0x40014020
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO4_CTRL
    addr: 0x40014024
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_rx
        2: uart1_tx
        3: i2c0_sda
        4: pwm_a_2
        5: sio_4
        6: pio0_4
        7: pio1_4
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO5_STATUS
    addr: 0x40014028
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO5_CTRL
    addr: 0x4001402c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_ss_n
        2: uart1_rx
        3: i2c0_scl
        4: pwm_b_2
        5: sio_5
        6: pio0_5
        7: pio1_5
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO6_STATUS
    addr: 0x40014030
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO6_CTRL
    addr: 0x40014034
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_sclk
        2: uart1_cts
        3: i2c1_sda
        4: pwm_a_3
        5: sio_6
        6: pio0_6
        7: pio1_6
        8: usb_muxing_extphy_softcon
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO7_STATUS
    addr: 0x40014038
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO7_CTRL
    addr: 0x4001403c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_tx
        2: uart1_rts
        3: i2c1_scl
        4: pwm_b_3
        5: sio_7
        6: pio0_7
        7: pio1_7
        8: usb_muxing_extphy_oe_n
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO8_STATUS
    addr: 0x40014040
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO8_CTRL
    addr: 0x40014044
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_rx
        2: uart1_tx
        3: i2c0_sda
        4: pwm_a_4
        5: sio_8
        6: pio0_8
        7: pio1_8
        8: usb_muxing_extphy_rcv
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO9_STATUS
    addr: 0x40014048
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO9_CTRL
    addr: 0x4001404c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_ss_n
        2: uart1_rx
        3: i2c0_scl
        4: pwm_b_4
        5: sio_9
        6: pio0_9
        7: pio1_9
        8: usb_muxing_extphy_vp
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO10_STATUS
    addr: 0x40014050
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO10_CTRL
    addr: 0x40014054
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_sclk
        2: uart1_cts
        3: i2c1_sda
        4: pwm_a_5
        5: sio_10
        6: pio0_10
        7: pio1_10
        8: usb_muxing_extphy_vm
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO11_STATUS
    addr: 0x40014058
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO11_CTRL
    addr: 0x4001405c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_tx
        2: uart1_rts
        3: i2c1_scl
        4: pwm_b_5
        5: sio_11
        6: pio0_11
        7: pio1_11
        8: usb_muxing_extphy_suspnd
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO12_STATUS
    addr: 0x40014060
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO12_CTRL
    addr: 0x40014064
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_rx
        2: uart0_tx
        3: i2c0_sda
        4: pwm_a_6
        5: sio_12
        6: pio0_12
        7: pio1_12
        8: usb_muxing_extphy_speed
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO13_STATUS
    addr: 0x40014068
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO13_CTRL
    addr: 0x4001406c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_ss_n
        2: uart0_rx
        3: i2c0_scl
        4: pwm_b_6
        5: sio_13
        6: pio0_13
        7: pio1_13
        8: usb_muxing_extphy_vpo
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO14_STATUS
    addr: 0x40014070
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO14_CTRL
    addr: 0x40014074
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_sclk
        2: uart0_cts
        3: i2c1_sda
        4: pwm_a_7
        5: sio_14
        6: pio0_14
        7: pio1_14
        8: usb_muxing_extphy_vmo
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO15_STATUS
    addr: 0x40014078
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO15_CTRL
    addr: 0x4001407c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_tx
        2: uart0_rts
        3: i2c1_scl
        4: pwm_b_7
        5: sio_15
        6: pio0_15
        7: pio1_15
        8: usb_muxing_digital_dp
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO16_STATUS
    addr: 0x40014080
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO16_CTRL
    addr: 0x40014084
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_rx
        2: uart0_tx
        3: i2c0_sda
        4: pwm_a_0
        5: sio_16
        6: pio0_16
        7: pio1_16
        8: usb_muxing_digital_dm
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO17_STATUS
    addr: 0x40014088
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO17_CTRL
    addr: 0x4001408c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_ss_n
        2: uart0_rx
        3: i2c0_scl
        4: pwm_b_0
        5: sio_17
        6: pio0_17
        7: pio1_17
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO18_STATUS
    addr: 0x40014090
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO18_CTRL
    addr: 0x40014094
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_sclk
        2: uart0_cts
        3: i2c1_sda
        4: pwm_a_1
        5: sio_18
        6: pio0_18
        7: pio1_18
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO19_STATUS
    addr: 0x40014098
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO19_CTRL
    addr: 0x4001409c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_tx
        2: uart0_rts
        3: i2c1_scl
        4: pwm_b_1
        5: sio_19
        6: pio0_19
        7: pio1_19
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO20_STATUS
    addr: 0x400140a0
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO20_CTRL
    addr: 0x400140a4
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_rx
        2: uart1_tx
        3: i2c0_sda
        4: pwm_a_2
        5: sio_20
        6: pio0_20
        7: pio1_20
        8: clocks_gpin_0
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO21_STATUS
    addr: 0x400140a8
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO21_CTRL
    addr: 0x400140ac
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_ss_n
        2: uart1_rx
        3: i2c0_scl
        4: pwm_b_2
        5: sio_21
        6: pio0_21
        7: pio1_21
        8: clocks_gpout_0
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO22_STATUS
    addr: 0x400140b0
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO22_CTRL
    addr: 0x400140b4
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_sclk
        2: uart1_cts
        3: i2c1_sda
        4: pwm_a_3
        5: sio_22
        6: pio0_22
        7: pio1_22
        8: clocks_gpin_1
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO23_STATUS
    addr: 0x400140b8
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO23_CTRL
    addr: 0x400140bc
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi0_tx
        2: uart1_rts
        3: i2c1_scl
        4: pwm_b_3
        5: sio_23
        6: pio0_23
        7: pio1_23
        8: clocks_gpout_1
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO24_STATUS
    addr: 0x400140c0
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO24_CTRL
    addr: 0x400140c4
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_rx
        2: uart1_tx
        3: i2c0_sda
        4: pwm_a_4
        5: sio_24
        6: pio0_24
        7: pio1_24
        8: clocks_gpout_2
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO25_STATUS
    addr: 0x400140c8
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO25_CTRL
    addr: 0x400140cc
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_ss_n
        2: uart1_rx
        3: i2c0_scl
        4: pwm_b_4
        5: sio_25
        6: pio0_25
        7: pio1_25
        8: clocks_gpout_3
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO26_STATUS
    addr: 0x400140d0
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO26_CTRL
    addr: 0x400140d4
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_sclk
        2: uart1_cts
        3: i2c1_sda
        4: pwm_a_5
        5: sio_26
        6: pio0_26
        7: pio1_26
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: GPIO27_STATUS
    addr: 0x400140d8
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO27_CTRL
    addr: 0x400140dc
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_tx
        2: uart1_rts
        3: i2c1_scl
        4: pwm_b_5
        5: sio_27
        6: pio0_27
        7: pio1_27
        9: usb_muxing_overcurr_detect
        31: 'null'
  - !Register
    name: GPIO28_STATUS
    addr: 0x400140e0
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO28_CTRL
    addr: 0x400140e4
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_rx
        2: uart0_tx
        3: i2c0_sda
        4: pwm_a_6
        5: sio_28
        6: pio0_28
        7: pio1_28
        9: usb_muxing_vbus_detect
        31: 'null'
  - !Register
    name: GPIO29_STATUS
    addr: 0x400140e8
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO29_CTRL
    addr: 0x400140ec
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: spi1_ss_n
        2: uart0_rx
        3: i2c0_scl
        4: pwm_b_6
        5: sio_29
        6: pio0_29
        7: pio1_29
        9: usb_muxing_vbus_en
        31: 'null'
  - !Register
    name: INTR0
    addr: 0x400140f0
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTR1
    addr: 0x400140f4
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTR2
    addr: 0x400140f8
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTR3
    addr: 0x400140fc
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC0_INTE0
    addr: 0x40014100
    size_bits: 32
    description: Interrupt Enable for proc0
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTE1
    addr: 0x40014104
    size_bits: 32
    description: Interrupt Enable for proc0
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTE2
    addr: 0x40014108
    size_bits: 32
    description: Interrupt Enable for proc0
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTE3
    addr: 0x4001410c
    size_bits: 32
    description: Interrupt Enable for proc0
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTF0
    addr: 0x40014110
    size_bits: 32
    description: Interrupt Force for proc0
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTF1
    addr: 0x40014114
    size_bits: 32
    description: Interrupt Force for proc0
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTF2
    addr: 0x40014118
    size_bits: 32
    description: Interrupt Force for proc0
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTF3
    addr: 0x4001411c
    size_bits: 32
    description: Interrupt Force for proc0
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTS0
    addr: 0x40014120
    size_bits: 32
    description: Interrupt status after masking & forcing for proc0
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC0_INTS1
    addr: 0x40014124
    size_bits: 32
    description: Interrupt status after masking & forcing for proc0
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC0_INTS2
    addr: 0x40014128
    size_bits: 32
    description: Interrupt status after masking & forcing for proc0
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC0_INTS3
    addr: 0x4001412c
    size_bits: 32
    description: Interrupt status after masking & forcing for proc0
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC1_INTE0
    addr: 0x40014130
    size_bits: 32
    description: Interrupt Enable for proc1
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTE1
    addr: 0x40014134
    size_bits: 32
    description: Interrupt Enable for proc1
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTE2
    addr: 0x40014138
    size_bits: 32
    description: Interrupt Enable for proc1
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTE3
    addr: 0x4001413c
    size_bits: 32
    description: Interrupt Enable for proc1
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTF0
    addr: 0x40014140
    size_bits: 32
    description: Interrupt Force for proc1
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTF1
    addr: 0x40014144
    size_bits: 32
    description: Interrupt Force for proc1
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTF2
    addr: 0x40014148
    size_bits: 32
    description: Interrupt Force for proc1
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTF3
    addr: 0x4001414c
    size_bits: 32
    description: Interrupt Force for proc1
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTS0
    addr: 0x40014150
    size_bits: 32
    description: Interrupt status after masking & forcing for proc1
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC1_INTS1
    addr: 0x40014154
    size_bits: 32
    description: Interrupt status after masking & forcing for proc1
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC1_INTS2
    addr: 0x40014158
    size_bits: 32
    description: Interrupt status after masking & forcing for proc1
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC1_INTS3
    addr: 0x4001415c
    size_bits: 32
    description: Interrupt status after masking & forcing for proc1
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: DORMANT_WAKE_INTE0
    addr: 0x40014160
    size_bits: 32
    description: Interrupt Enable for dormant_wake
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTE1
    addr: 0x40014164
    size_bits: 32
    description: Interrupt Enable for dormant_wake
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTE2
    addr: 0x40014168
    size_bits: 32
    description: Interrupt Enable for dormant_wake
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTE3
    addr: 0x4001416c
    size_bits: 32
    description: Interrupt Enable for dormant_wake
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTF0
    addr: 0x40014170
    size_bits: 32
    description: Interrupt Force for dormant_wake
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTF1
    addr: 0x40014174
    size_bits: 32
    description: Interrupt Force for dormant_wake
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTF2
    addr: 0x40014178
    size_bits: 32
    description: Interrupt Force for dormant_wake
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTF3
    addr: 0x4001417c
    size_bits: 32
    description: Interrupt Force for dormant_wake
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTS0
    addr: 0x40014180
    size_bits: 32
    description: Interrupt status after masking & forcing for dormant_wake
    fields:
    - !Field
      name: GPIO7_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO7_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO6_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO5_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO4_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO3_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO2_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO1_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO0_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: DORMANT_WAKE_INTS1
    addr: 0x40014184
    size_bits: 32
    description: Interrupt status after masking & forcing for dormant_wake
    fields:
    - !Field
      name: GPIO15_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO15_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO14_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO13_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO12_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO11_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO10_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO9_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO8_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: DORMANT_WAKE_INTS2
    addr: 0x40014188
    size_bits: 32
    description: Interrupt status after masking & forcing for dormant_wake
    fields:
    - !Field
      name: GPIO23_EDGE_HIGH
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_EDGE_LOW
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_HIGH
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO23_LEVEL_LOW
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_HIGH
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_EDGE_LOW
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_HIGH
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO22_LEVEL_LOW
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO21_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO20_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO19_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO18_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO17_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO16_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: DORMANT_WAKE_INTS3
    addr: 0x4001418c
    size_bits: 32
    description: Interrupt status after masking & forcing for dormant_wake
    fields:
    - !Field
      name: GPIO29_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO29_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO28_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO27_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO26_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO25_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO24_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: IO_QSPI
  base_addr: 0x40018000
  size: 0x58
  registers:
  - !Register
    name: GPIO_QSPI_SCLK_STATUS
    addr: 0x40018000
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SCLK_CTRL
    addr: 0x40018004
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_sclk
        5: sio_30
        31: 'null'
  - !Register
    name: GPIO_QSPI_SS_STATUS
    addr: 0x40018008
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SS_CTRL
    addr: 0x4001800c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_ss_n
        5: sio_31
        31: 'null'
  - !Register
    name: GPIO_QSPI_SD0_STATUS
    addr: 0x40018010
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SD0_CTRL
    addr: 0x40018014
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_sd0
        5: sio_32
        31: 'null'
  - !Register
    name: GPIO_QSPI_SD1_STATUS
    addr: 0x40018018
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SD1_CTRL
    addr: 0x4001801c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_sd1
        5: sio_33
        31: 'null'
  - !Register
    name: GPIO_QSPI_SD2_STATUS
    addr: 0x40018020
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SD2_CTRL
    addr: 0x40018024
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_sd2
        5: sio_34
        31: 'null'
  - !Register
    name: GPIO_QSPI_SD3_STATUS
    addr: 0x40018028
    size_bits: 32
    description: GPIO status
    fields:
    - !Field
      name: IRQTOPROC
      bit_offset: 26
      bit_width: 1
      description: interrupt to processors, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: IRQFROMPAD
      bit_offset: 24
      bit_width: 1
      description: interrupt from pad before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTOPERI
      bit_offset: 19
      bit_width: 1
      description: input signal to peripheral, after override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: INFROMPAD
      bit_offset: 17
      bit_width: 1
      description: input signal from pad, before override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OETOPAD
      bit_offset: 13
      bit_width: 1
      description: output enable to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OEFROMPERI
      bit_offset: 12
      bit_width: 1
      description: output enable from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTTOPAD
      bit_offset: 9
      bit_width: 1
      description: output signal to pad after register override is applied
      read_allowed: true
      write_allowed: false
    - !Field
      name: OUTFROMPERI
      bit_offset: 8
      bit_width: 1
      description: output signal from selected peripheral, before register override
        is applied
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_QSPI_SD3_CTRL
    addr: 0x4001802c
    size_bits: 32
    description: GPIO control including function select and overrides.
    reset_value: 0x1f
    fields:
    - !Field
      name: IRQOVER
      bit_offset: 28
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: INOVER
      bit_offset: 16
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: OEOVER
      bit_offset: 12
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: DISABLE
        3: ENABLE
    - !Field
      name: OUTOVER
      bit_offset: 8
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: INVERT
        2: LOW
        3: HIGH
    - !Field
      name: FUNCSEL
      bit_offset: 0
      bit_width: 5
      description: "0-31 -> selects pin function according to the gpio table\\n\n
        \               31 == NULL"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: xip_sd3
        5: sio_35
        31: 'null'
  - !Register
    name: INTR
    addr: 0x40018030
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC0_INTE
    addr: 0x40018034
    size_bits: 32
    description: Interrupt Enable for proc0
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTF
    addr: 0x40018038
    size_bits: 32
    description: Interrupt Force for proc0
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC0_INTS
    addr: 0x4001803c
    size_bits: 32
    description: Interrupt status after masking & forcing for proc0
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: PROC1_INTE
    addr: 0x40018040
    size_bits: 32
    description: Interrupt Enable for proc1
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTF
    addr: 0x40018044
    size_bits: 32
    description: Interrupt Force for proc1
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROC1_INTS
    addr: 0x40018048
    size_bits: 32
    description: Interrupt status after masking & forcing for proc1
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: DORMANT_WAKE_INTE
    addr: 0x4001804c
    size_bits: 32
    description: Interrupt Enable for dormant_wake
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTF
    addr: 0x40018050
    size_bits: 32
    description: Interrupt Force for dormant_wake
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT_WAKE_INTS
    addr: 0x40018054
    size_bits: 32
    description: Interrupt status after masking & forcing for dormant_wake
    fields:
    - !Field
      name: GPIO_QSPI_SD3_EDGE_HIGH
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_EDGE_LOW
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_HIGH
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD3_LEVEL_LOW
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_HIGH
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_EDGE_LOW
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_HIGH
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD2_LEVEL_LOW
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_HIGH
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_EDGE_LOW
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_HIGH
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD1_LEVEL_LOW
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_HIGH
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_EDGE_LOW
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_HIGH
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SD0_LEVEL_LOW
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_HIGH
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_EDGE_LOW
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_HIGH
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SS_LEVEL_LOW
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_HIGH
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_EDGE_LOW
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_HIGH
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: GPIO_QSPI_SCLK_LEVEL_LOW
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: PADS_BANK0
  base_addr: 0x4001c000
  size: 0x84
  registers:
  - !Register
    name: VOLTAGE_SELECT
    addr: 0x4001c000
    size_bits: 32
    description: Voltage select. Per bank control
    fields:
    - !Field
      name: VOLTAGE_SELECT
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 3v3
        1: 1v8
  - !Register
    name: GPIO0
    addr: 0x4001c004
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO1
    addr: 0x4001c008
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO2
    addr: 0x4001c00c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO3
    addr: 0x4001c010
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO4
    addr: 0x4001c014
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO5
    addr: 0x4001c018
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO6
    addr: 0x4001c01c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO7
    addr: 0x4001c020
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO8
    addr: 0x4001c024
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO9
    addr: 0x4001c028
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO10
    addr: 0x4001c02c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO11
    addr: 0x4001c030
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO12
    addr: 0x4001c034
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO13
    addr: 0x4001c038
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO14
    addr: 0x4001c03c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO15
    addr: 0x4001c040
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO16
    addr: 0x4001c044
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO17
    addr: 0x4001c048
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO18
    addr: 0x4001c04c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO19
    addr: 0x4001c050
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO20
    addr: 0x4001c054
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO21
    addr: 0x4001c058
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO22
    addr: 0x4001c05c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO23
    addr: 0x4001c060
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO24
    addr: 0x4001c064
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO25
    addr: 0x4001c068
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO26
    addr: 0x4001c06c
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO27
    addr: 0x4001c070
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO28
    addr: 0x4001c074
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO29
    addr: 0x4001c078
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: SWCLK
    addr: 0x4001c07c
    size_bits: 32
    description: Pad control register
    reset_value: 0xda
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: SWD
    addr: 0x4001c080
    size_bits: 32
    description: Pad control register
    reset_value: 0x5a
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
- !Module
  name: PADS_QSPI
  base_addr: 0x40020000
  size: 0x1c
  registers:
  - !Register
    name: VOLTAGE_SELECT
    addr: 0x40020000
    size_bits: 32
    description: Voltage select. Per bank control
    fields:
    - !Field
      name: VOLTAGE_SELECT
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 3v3
        1: 1v8
  - !Register
    name: GPIO_QSPI_SCLK
    addr: 0x40020004
    size_bits: 32
    description: Pad control register
    reset_value: 0x56
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_QSPI_SD0
    addr: 0x40020008
    size_bits: 32
    description: Pad control register
    reset_value: 0x52
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_QSPI_SD1
    addr: 0x4002000c
    size_bits: 32
    description: Pad control register
    reset_value: 0x52
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_QSPI_SD2
    addr: 0x40020010
    size_bits: 32
    description: Pad control register
    reset_value: 0x52
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_QSPI_SD3
    addr: 0x40020014
    size_bits: 32
    description: Pad control register
    reset_value: 0x52
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_QSPI_SS
    addr: 0x40020018
    size_bits: 32
    description: Pad control register
    reset_value: 0x5a
    fields:
    - !Field
      name: OD
      bit_offset: 7
      bit_width: 1
      description: Output disable. Has priority over output enable from peripherals
      read_allowed: true
      write_allowed: true
    - !Field
      name: IE
      bit_offset: 6
      bit_width: 1
      description: Input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRIVE
      bit_offset: 4
      bit_width: 2
      description: Drive strength.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 2mA
        1: 4mA
        2: 8mA
        3: 12mA
    - !Field
      name: PUE
      bit_offset: 3
      bit_width: 1
      description: Pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDE
      bit_offset: 2
      bit_width: 1
      description: Pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCHMITT
      bit_offset: 1
      bit_width: 1
      description: Enable schmitt trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEWFAST
      bit_offset: 0
      bit_width: 1
      description: Slew rate control. 1 = Fast, 0 = Slow
      read_allowed: true
      write_allowed: true
- !Module
  name: XOSC
  description: Controls the crystal oscillator
  base_addr: 0x40024000
  size: 0x20
  registers:
  - !Register
    name: CTRL
    addr: 0x40024000
    size_bits: 32
    description: Crystal Oscillator Control
    fields:
    - !Field
      name: ENABLE
      bit_offset: 12
      bit_width: 12
      description: "On power-up this field is initialised to DISABLE and the chip
        runs from the ROSC.\\n\n                If the chip has subsequently been
        programmed to run from the XOSC then setting this field to DISABLE may lock-up
        the chip. If this is a concern then run the clk_ref from the ROSC and enable
        the clk_sys RESUS feature.\\n\n                The 12-bit code is intended
        to give some protection against accidental writes. An invalid setting will
        enable the oscillator."
      read_allowed: true
      write_allowed: true
      enum_values:
        3358: DISABLE
        4011: ENABLE
    - !Field
      name: FREQ_RANGE
      bit_offset: 0
      bit_width: 12
      description: Frequency range. This resets to 0xAA0 and cannot be changed.
      read_allowed: true
      write_allowed: true
      enum_values:
        2720: 1_15MHZ
        2721: RESERVED_1
        2722: RESERVED_2
        2723: RESERVED_3
  - !Register
    name: STATUS
    addr: 0x40024004
    size_bits: 32
    description: Crystal Oscillator Status
    fields:
    - !Field
      name: STABLE
      bit_offset: 31
      bit_width: 1
      description: Oscillator is running and stable
      read_allowed: true
      write_allowed: false
    - !Field
      name: BADWRITE
      bit_offset: 24
      bit_width: 1
      description: An invalid value has been written to CTRL_ENABLE or CTRL_FREQ_RANGE
        or DORMANT
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLED
      bit_offset: 12
      bit_width: 1
      description: Oscillator is enabled but not necessarily running and stable, resets
        to 0
      read_allowed: true
      write_allowed: false
    - !Field
      name: FREQ_RANGE
      bit_offset: 0
      bit_width: 2
      description: The current frequency range setting, always reads 0
      read_allowed: true
      write_allowed: false
      enum_values:
        0: 1_15MHZ
        1: RESERVED_1
        2: RESERVED_2
        3: RESERVED_3
  - !Register
    name: DORMANT
    addr: 0x40024008
    size_bits: 32
    description: "Crystal Oscillator pause control\\n\n            This is used to
      save power by pausing the XOSC\\n\n            On power-up this field is initialised
      to WAKE\\n\n            An invalid write will also select WAKE\\n\n            WARNING:
      stop the PLLs before selecting dormant mode\\n\n            WARNING: setup the
      irq before selecting dormant mode"
    read_allowed: true
    write_allowed: true
  - !Register
    name: STARTUP
    addr: 0x4002400c
    size_bits: 32
    description: Controls the startup delay
    fields:
    - !Field
      name: X4
      bit_offset: 20
      bit_width: 1
      description: Multiplies the startup_delay by 4. This is of little value to the
        user given that the delay can be programmed directly
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELAY
      bit_offset: 0
      bit_width: 14
      description: in multiples of 256*xtal_period
      read_allowed: true
      write_allowed: true
  - !Register
    name: COUNT
    addr: 0x4002401c
    size_bits: 32
    description: "A down counter running at the xosc frequency which counts to zero
      and stops.\\n\n            To start the counter write a non-zero value.\\n\n
      \           Can be used for short software pauses when setting up time sensitive
      hardware."
    fields:
    - !Field
      name: COUNT
      bit_offset: 0
      bit_width: 8
      read_allowed: true
      write_allowed: true
- !Module
  name: PLL_SYS
  base_addr: 0x40028000
  size: 0x10
  registers:
  - !Register
    name: CS
    addr: 0x40028000
    size_bits: 32
    description: "Control and Status\\n\n            GENERAL CONSTRAINTS:\\n\n            Reference
      clock frequency min=5MHz, max=800MHz\\n\n            Feedback divider min=16,
      max=320\\n\n            VCO frequency min=400MHz, max=1600MHz"
    reset_value: 0x1
    fields:
    - !Field
      name: LOCK
      bit_offset: 31
      bit_width: 1
      description: PLL is locked
      read_allowed: true
      write_allowed: false
    - !Field
      name: BYPASS
      bit_offset: 8
      bit_width: 1
      description: Passes the reference clock to the output instead of the divided
        VCO. The VCO continues to run so the user can switch between the reference
        clock and the divided VCO but the output will glitch when doing so.
      read_allowed: true
      write_allowed: true
    - !Field
      name: REFDIV
      bit_offset: 0
      bit_width: 6
      description: "Divides the PLL input reference clock.\\n\n                Behaviour
        is undefined for div=0.\\n\n                PLL output will be unpredictable
        during refdiv changes, wait for lock=1 before using it."
      read_allowed: true
      write_allowed: true
  - !Register
    name: PWR
    addr: 0x40028004
    size_bits: 32
    description: Controls the PLL power modes.
    reset_value: 0x2d
    fields:
    - !Field
      name: VCOPD
      bit_offset: 5
      bit_width: 1
      description: "PLL VCO powerdown\\n\n                To save power set high when
        PLL output not required or bypass=1."
      read_allowed: true
      write_allowed: true
    - !Field
      name: POSTDIVPD
      bit_offset: 3
      bit_width: 1
      description: "PLL post divider powerdown\\n\n                To save power set
        high when PLL output not required or bypass=1."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSMPD
      bit_offset: 2
      bit_width: 1
      description: "PLL DSM powerdown\\n\n                Nothing is achieved by setting
        this low."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD
      bit_offset: 0
      bit_width: 1
      description: "PLL powerdown\\n\n                To save power set high when
        PLL output not required."
      read_allowed: true
      write_allowed: true
  - !Register
    name: FBDIV_INT
    addr: 0x40028008
    size_bits: 32
    description: "Feedback divisor\\n\n            (note: this PLL does not support
      fractional division)"
    fields:
    - !Field
      name: FBDIV_INT
      bit_offset: 0
      bit_width: 12
      description: see ctrl reg description for constraints
      read_allowed: true
      write_allowed: true
  - !Register
    name: PRIM
    addr: 0x4002800c
    size_bits: 32
    description: "Controls the PLL post dividers for the primary output\\n\n            (note:
      this PLL does not have a secondary output)\\n\n            the primary output
      is driven from VCO divided by postdiv1*postdiv2"
    reset_value: 0x77000
    fields:
    - !Field
      name: POSTDIV1
      bit_offset: 16
      bit_width: 3
      description: divide by 1-7
      read_allowed: true
      write_allowed: true
    - !Field
      name: POSTDIV2
      bit_offset: 12
      bit_width: 3
      description: divide by 1-7
      read_allowed: true
      write_allowed: true
- !Module
  name: PLL_USB
  base_addr: 0x4002c000
  size: 0x10
  registers:
  - !Register
    name: CS
    addr: 0x4002c000
    size_bits: 32
    description: "Control and Status\\n\n            GENERAL CONSTRAINTS:\\n\n            Reference
      clock frequency min=5MHz, max=800MHz\\n\n            Feedback divider min=16,
      max=320\\n\n            VCO frequency min=400MHz, max=1600MHz"
    reset_value: 0x1
    fields:
    - !Field
      name: LOCK
      bit_offset: 31
      bit_width: 1
      description: PLL is locked
      read_allowed: true
      write_allowed: false
    - !Field
      name: BYPASS
      bit_offset: 8
      bit_width: 1
      description: Passes the reference clock to the output instead of the divided
        VCO. The VCO continues to run so the user can switch between the reference
        clock and the divided VCO but the output will glitch when doing so.
      read_allowed: true
      write_allowed: true
    - !Field
      name: REFDIV
      bit_offset: 0
      bit_width: 6
      description: "Divides the PLL input reference clock.\\n\n                Behaviour
        is undefined for div=0.\\n\n                PLL output will be unpredictable
        during refdiv changes, wait for lock=1 before using it."
      read_allowed: true
      write_allowed: true
  - !Register
    name: PWR
    addr: 0x4002c004
    size_bits: 32
    description: Controls the PLL power modes.
    reset_value: 0x2d
    fields:
    - !Field
      name: VCOPD
      bit_offset: 5
      bit_width: 1
      description: "PLL VCO powerdown\\n\n                To save power set high when
        PLL output not required or bypass=1."
      read_allowed: true
      write_allowed: true
    - !Field
      name: POSTDIVPD
      bit_offset: 3
      bit_width: 1
      description: "PLL post divider powerdown\\n\n                To save power set
        high when PLL output not required or bypass=1."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSMPD
      bit_offset: 2
      bit_width: 1
      description: "PLL DSM powerdown\\n\n                Nothing is achieved by setting
        this low."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD
      bit_offset: 0
      bit_width: 1
      description: "PLL powerdown\\n\n                To save power set high when
        PLL output not required."
      read_allowed: true
      write_allowed: true
  - !Register
    name: FBDIV_INT
    addr: 0x4002c008
    size_bits: 32
    description: "Feedback divisor\\n\n            (note: this PLL does not support
      fractional division)"
    fields:
    - !Field
      name: FBDIV_INT
      bit_offset: 0
      bit_width: 12
      description: see ctrl reg description for constraints
      read_allowed: true
      write_allowed: true
  - !Register
    name: PRIM
    addr: 0x4002c00c
    size_bits: 32
    description: "Controls the PLL post dividers for the primary output\\n\n            (note:
      this PLL does not have a secondary output)\\n\n            the primary output
      is driven from VCO divided by postdiv1*postdiv2"
    reset_value: 0x77000
    fields:
    - !Field
      name: POSTDIV1
      bit_offset: 16
      bit_width: 3
      description: divide by 1-7
      read_allowed: true
      write_allowed: true
    - !Field
      name: POSTDIV2
      bit_offset: 12
      bit_width: 3
      description: divide by 1-7
      read_allowed: true
      write_allowed: true
- !Module
  name: BUSCTRL
  description: Register block for busfabric control signals and performance counters
  base_addr: 0x40030000
  size: 0x28
  registers:
  - !Register
    name: BUS_PRIORITY
    addr: 0x40030000
    size_bits: 32
    description: Set the priority of each master for bus arbitration.
    fields:
    - !Field
      name: DMA_W
      bit_offset: 12
      bit_width: 1
      description: 0 - low priority, 1 - high priority
      read_allowed: true
      write_allowed: true
    - !Field
      name: DMA_R
      bit_offset: 8
      bit_width: 1
      description: 0 - low priority, 1 - high priority
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC1
      bit_offset: 4
      bit_width: 1
      description: 0 - low priority, 1 - high priority
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROC0
      bit_offset: 0
      bit_width: 1
      description: 0 - low priority, 1 - high priority
      read_allowed: true
      write_allowed: true
  - !Register
    name: BUS_PRIORITY_ACK
    addr: 0x40030004
    size_bits: 32
    description: Bus priority acknowledge
    fields:
    - !Field
      name: BUS_PRIORITY_ACK
      bit_offset: 0
      bit_width: 1
      description: "Goes to 1 once all arbiters have registered the new global priority
        levels.\\n\n                Arbiters update their local priority when servicing
        a new nonsequential access.\\n\n                In normal circumstances this
        will happen almost immediately."
      read_allowed: true
      write_allowed: false
  - !Register
    name: PERFCTR0
    addr: 0x40030008
    size_bits: 32
    description: Bus fabric performance counter 0
    fields:
    - !Field
      name: PERFCTR0
      bit_offset: 0
      bit_width: 24
      description: "Busfabric saturating performance counter 0\\n\n                Count
        some event signal from the busfabric arbiters.\\n\n                Write any
        value to clear. Select an event to count using PERFSEL0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFSEL0
    addr: 0x4003000c
    size_bits: 32
    description: Bus fabric performance event select for PERFCTR0
    reset_value: 0x1f
    fields:
    - !Field
      name: PERFSEL0
      bit_offset: 0
      bit_width: 5
      description: Select a performance event for PERFCTR0
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFCTR1
    addr: 0x40030010
    size_bits: 32
    description: Bus fabric performance counter 1
    fields:
    - !Field
      name: PERFCTR1
      bit_offset: 0
      bit_width: 24
      description: "Busfabric saturating performance counter 1\\n\n                Count
        some event signal from the busfabric arbiters.\\n\n                Write any
        value to clear. Select an event to count using PERFSEL1"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFSEL1
    addr: 0x40030014
    size_bits: 32
    description: Bus fabric performance event select for PERFCTR1
    reset_value: 0x1f
    fields:
    - !Field
      name: PERFSEL1
      bit_offset: 0
      bit_width: 5
      description: Select a performance event for PERFCTR1
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFCTR2
    addr: 0x40030018
    size_bits: 32
    description: Bus fabric performance counter 2
    fields:
    - !Field
      name: PERFCTR2
      bit_offset: 0
      bit_width: 24
      description: "Busfabric saturating performance counter 2\\n\n                Count
        some event signal from the busfabric arbiters.\\n\n                Write any
        value to clear. Select an event to count using PERFSEL2"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFSEL2
    addr: 0x4003001c
    size_bits: 32
    description: Bus fabric performance event select for PERFCTR2
    reset_value: 0x1f
    fields:
    - !Field
      name: PERFSEL2
      bit_offset: 0
      bit_width: 5
      description: Select a performance event for PERFCTR2
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFCTR3
    addr: 0x40030020
    size_bits: 32
    description: Bus fabric performance counter 3
    fields:
    - !Field
      name: PERFCTR3
      bit_offset: 0
      bit_width: 24
      description: "Busfabric saturating performance counter 3\\n\n                Count
        some event signal from the busfabric arbiters.\\n\n                Write any
        value to clear. Select an event to count using PERFSEL3"
      read_allowed: true
      write_allowed: true
  - !Register
    name: PERFSEL3
    addr: 0x40030024
    size_bits: 32
    description: Bus fabric performance event select for PERFCTR3
    reset_value: 0x1f
    fields:
    - !Field
      name: PERFSEL3
      bit_offset: 0
      bit_width: 5
      description: Select a performance event for PERFCTR3
      read_allowed: true
      write_allowed: true
- !Module
  name: UART0
  base_addr: 0x40034000
  size: 0x1000
  registers:
  - !Register
    name: UARTDR
    addr: 0x40034000
    size_bits: 32
    description: Data Register, UARTDR
    fields:
    - !Field
      name: OE
      bit_offset: 11
      bit_width: 1
      description: Overrun error. This bit is set to 1 if data is received and the
        receive FIFO is already full. This is cleared to 0 once there is an empty
        space in the FIFO and a new character can be written to it.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BE
      bit_offset: 10
      bit_width: 1
      description: Break error. This bit is set to 1 if a break condition was detected,
        indicating that the received data input was held LOW for longer than a full-word
        transmission time (defined as start, data, parity and stop bits). In FIFO
        mode, this error is associated with the character at the top of the FIFO.
        When a break occurs, only one 0 character is loaded into the FIFO. The next
        character is only enabled after the receive data input goes to a 1 (marking
        state), and the next valid start bit is received.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PE
      bit_offset: 9
      bit_width: 1
      description: Parity error. When set to 1, it indicates that the parity of the
        received data character does not match the parity that the EPS and SPS bits
        in the Line Control Register, UARTLCR_H. In FIFO mode, this error is associated
        with the character at the top of the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FE
      bit_offset: 8
      bit_width: 1
      description: Framing error. When set to 1, it indicates that the received character
        did not have a valid stop bit (a valid stop bit is 1). In FIFO mode, this
        error is associated with the character at the top of the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: Receive (read) data character. Transmit (write) data character.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTRSR
    addr: 0x40034004
    size_bits: 32
    description: Receive Status Register/Error Clear Register, UARTRSR/UARTECR
    fields:
    - !Field
      name: OE
      bit_offset: 3
      bit_width: 1
      description: Overrun error. This bit is set to 1 if data is received and the
        FIFO is already full. This bit is cleared to 0 by a write to UARTECR. The
        FIFO contents remain valid because no more data is written when the FIFO is
        full, only the contents of the shift register are overwritten. The CPU must
        now read the data, to empty the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BE
      bit_offset: 2
      bit_width: 1
      description: Break error. This bit is set to 1 if a break condition was detected,
        indicating that the received data input was held LOW for longer than a full-word
        transmission time (defined as start, data, parity, and stop bits). This bit
        is cleared to 0 after a write to UARTECR. In FIFO mode, this error is associated
        with the character at the top of the FIFO. When a break occurs, only one 0
        character is loaded into the FIFO. The next character is only enabled after
        the receive data input goes to a 1 (marking state) and the next valid start
        bit is received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PE
      bit_offset: 1
      bit_width: 1
      description: Parity error. When set to 1, it indicates that the parity of the
        received data character does not match the parity that the EPS and SPS bits
        in the Line Control Register, UARTLCR_H. This bit is cleared to 0 by a write
        to UARTECR. In FIFO mode, this error is associated with the character at the
        top of the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FE
      bit_offset: 0
      bit_width: 1
      description: Framing error. When set to 1, it indicates that the received character
        did not have a valid stop bit (a valid stop bit is 1). This bit is cleared
        to 0 by a write to UARTECR. In FIFO mode, this error is associated with the
        character at the top of the FIFO.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTFR
    addr: 0x40034018
    size_bits: 32
    description: Flag Register, UARTFR
    reset_value: 0x90
    fields:
    - !Field
      name: RI
      bit_offset: 8
      bit_width: 1
      description: Ring indicator. This bit is the complement of the UART ring indicator,
        nUARTRI, modem status input. That is, the bit is 1 when nUARTRI is LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFE
      bit_offset: 7
      bit_width: 1
      description: Transmit FIFO empty. The meaning of this bit depends on the state
        of the FEN bit in the Line Control Register, UARTLCR_H. If the FIFO is disabled,
        this bit is set when the transmit holding register is empty. If the FIFO is
        enabled, the TXFE bit is set when the transmit FIFO is empty. This bit does
        not indicate if there is data in the transmit shift register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFF
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO full. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the receive holding register is full. If the FIFO is enabled,
        the RXFF bit is set when the receive FIFO is full.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFF
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO full. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the transmit holding register is full. If the FIFO is enabled,
        the TXFF bit is set when the transmit FIFO is full.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFE
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO empty. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the receive holding register is empty. If the FIFO is enabled,
        the RXFE bit is set when the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUSY
      bit_offset: 3
      bit_width: 1
      description: UART busy. If this bit is set to 1, the UART is busy transmitting
        data. This bit remains set until the complete byte, including all the stop
        bits, has been sent from the shift register. This bit is set as soon as the
        transmit FIFO becomes non-empty, regardless of whether the UART is enabled
        or not.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCD
      bit_offset: 2
      bit_width: 1
      description: Data carrier detect. This bit is the complement of the UART data
        carrier detect, nUARTDCD, modem status input. That is, the bit is 1 when nUARTDCD
        is LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSR
      bit_offset: 1
      bit_width: 1
      description: Data set ready. This bit is the complement of the UART data set
        ready, nUARTDSR, modem status input. That is, the bit is 1 when nUARTDSR is
        LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS
      bit_offset: 0
      bit_width: 1
      description: Clear to send. This bit is the complement of the UART clear to
        send, nUARTCTS, modem status input. That is, the bit is 1 when nUARTCTS is
        LOW.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTILPR
    addr: 0x40034020
    size_bits: 32
    description: IrDA Low-Power Counter Register, UARTILPR
    fields:
    - !Field
      name: ILPDVSR
      bit_offset: 0
      bit_width: 8
      description: 8-bit low-power divisor value. These bits are cleared to 0 at reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIBRD
    addr: 0x40034024
    size_bits: 32
    description: Integer Baud Rate Register, UARTIBRD
    fields:
    - !Field
      name: BAUD_DIVINT
      bit_offset: 0
      bit_width: 16
      description: The integer baud rate divisor. These bits are cleared to 0 on reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTFBRD
    addr: 0x40034028
    size_bits: 32
    description: Fractional Baud Rate Register, UARTFBRD
    fields:
    - !Field
      name: BAUD_DIVFRAC
      bit_offset: 0
      bit_width: 6
      description: The fractional baud rate divisor. These bits are cleared to 0 on
        reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTLCR_H
    addr: 0x4003402c
    size_bits: 32
    description: Line Control Register, UARTLCR_H
    fields:
    - !Field
      name: SPS
      bit_offset: 7
      bit_width: 1
      description: 'Stick parity select. 0 = stick parity is disabled 1 = either:
        * if the EPS bit is 0 then the parity bit is transmitted and checked as a
        1 * if the EPS bit is 1 then the parity bit is transmitted and checked as
        a 0. This bit has no effect when the PEN bit disables parity checking and
        generation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WLEN
      bit_offset: 5
      bit_width: 2
      description: 'Word length. These bits indicate the number of data bits transmitted
        or received in a frame as follows: b11 = 8 bits b10 = 7 bits b01 = 6 bits
        b00 = 5 bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEN
      bit_offset: 4
      bit_width: 1
      description: 'Enable FIFOs: 0 = FIFOs are disabled (character mode) that is,
        the FIFOs become 1-byte-deep holding registers 1 = transmit and receive FIFO
        buffers are enabled (FIFO mode).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STP2
      bit_offset: 3
      bit_width: 1
      description: Two stop bits select. If this bit is set to 1, two stop bits are
        transmitted at the end of the frame. The receive logic does not check for
        two stop bits being received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPS
      bit_offset: 2
      bit_width: 1
      description: 'Even parity select. Controls the type of parity the UART uses
        during transmission and reception: 0 = odd parity. The UART generates or checks
        for an odd number of 1s in the data and parity bits. 1 = even parity. The
        UART generates or checks for an even number of 1s in the data and parity bits.
        This bit has no effect when the PEN bit disables parity checking and generation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEN
      bit_offset: 1
      bit_width: 1
      description: 'Parity enable: 0 = parity is disabled and no parity bit added
        to the data frame 1 = parity checking and generation is enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BRK
      bit_offset: 0
      bit_width: 1
      description: Send break. If this bit is set to 1, a low-level is continually
        output on the UARTTXD output, after completing transmission of the current
        character. For the proper execution of the break command, the software must
        set this bit for at least two complete frames. For normal use, this bit must
        be cleared to 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTCR
    addr: 0x40034030
    size_bits: 32
    description: Control Register, UARTCR
    reset_value: 0x300
    fields:
    - !Field
      name: CTSEN
      bit_offset: 15
      bit_width: 1
      description: CTS hardware flow control enable. If this bit is set to 1, CTS
        hardware flow control is enabled. Data is only transmitted when the nUARTCTS
        signal is asserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTSEN
      bit_offset: 14
      bit_width: 1
      description: RTS hardware flow control enable. If this bit is set to 1, RTS
        hardware flow control is enabled. Data is only requested when there is space
        in the receive FIFO for it to be received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT2
      bit_offset: 13
      bit_width: 1
      description: This bit is the complement of the UART Out2 (nUARTOut2) modem status
        output. That is, when the bit is programmed to a 1, the output is 0. For DTE
        this can be used as Ring Indicator (RI).
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT1
      bit_offset: 12
      bit_width: 1
      description: This bit is the complement of the UART Out1 (nUARTOut1) modem status
        output. That is, when the bit is programmed to a 1 the output is 0. For DTE
        this can be used as Data Carrier Detect (DCD).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS
      bit_offset: 11
      bit_width: 1
      description: Request to send. This bit is the complement of the UART request
        to send, nUARTRTS, modem status output. That is, when the bit is programmed
        to a 1 then nUARTRTS is LOW.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DTR
      bit_offset: 10
      bit_width: 1
      description: Data transmit ready. This bit is the complement of the UART data
        transmit ready, nUARTDTR, modem status output. That is, when the bit is programmed
        to a 1 then nUARTDTR is LOW.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXE
      bit_offset: 9
      bit_width: 1
      description: Receive enable. If this bit is set to 1, the receive section of
        the UART is enabled. Data reception occurs for either UART signals or SIR
        signals depending on the setting of the SIREN bit. When the UART is disabled
        in the middle of reception, it completes the current character before stopping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXE
      bit_offset: 8
      bit_width: 1
      description: Transmit enable. If this bit is set to 1, the transmit section
        of the UART is enabled. Data transmission occurs for either UART signals,
        or SIR signals depending on the setting of the SIREN bit. When the UART is
        disabled in the middle of transmission, it completes the current character
        before stopping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LBE
      bit_offset: 7
      bit_width: 1
      description: Loopback enable. If this bit is set to 1 and the SIREN bit is set
        to 1 and the SIRTEST bit in the Test Control Register, UARTTCR is set to 1,
        then the nSIROUT path is inverted, and fed through to the SIRIN path. The
        SIRTEST bit in the test register must be set to 1 to override the normal half-duplex
        SIR operation. This must be the requirement for accessing the test registers
        during normal operation, and SIRTEST must be cleared to 0 when loopback testing
        is finished. This feature reduces the amount of external coupling required
        during system test. If this bit is set to 1, and the SIRTEST bit is set to
        0, the UARTTXD path is fed through to the UARTRXD path. In either SIR mode
        or UART mode, when this bit is set, the modem outputs are also fed through
        to the modem inputs. This bit is cleared to 0 on reset, to disable loopback.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIRLP
      bit_offset: 2
      bit_width: 1
      description: SIR low-power IrDA mode. This bit selects the IrDA encoding mode.
        If this bit is cleared to 0, low-level bits are transmitted as an active high
        pulse with a width of 3 / 16th of the bit period. If this bit is set to 1,
        low-level bits are transmitted with a pulse width that is 3 times the period
        of the IrLPBaud16 input signal, regardless of the selected bit rate. Setting
        this bit uses less power, but might reduce transmission distances.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIREN
      bit_offset: 1
      bit_width: 1
      description: 'SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT remains LOW
        (no light pulse generated), and signal transitions on SIRIN have no effect.
        1 = IrDA SIR ENDEC is enabled. Data is transmitted and received on nSIROUT
        and SIRIN. UARTTXD remains HIGH, in the marking state. Signal transitions
        on UARTRXD or modem status inputs have no effect. This bit has no effect if
        the UARTEN bit disables the UART.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UARTEN
      bit_offset: 0
      bit_width: 1
      description: 'UART enable: 0 = UART is disabled. If the UART is disabled in
        the middle of transmission or reception, it completes the current character
        before stopping. 1 = the UART is enabled. Data transmission and reception
        occurs for either UART signals or SIR signals depending on the setting of
        the SIREN bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIFLS
    addr: 0x40034034
    size_bits: 32
    description: Interrupt FIFO Level Select Register, UARTIFLS
    reset_value: 0x12
    fields:
    - !Field
      name: RXIFLSEL
      bit_offset: 3
      bit_width: 3
      description: 'Receive interrupt FIFO level select. The trigger points for the
        receive interrupt are as follows: b000 = Receive FIFO becomes >= 1 / 8 full
        b001 = Receive FIFO becomes >= 1 / 4 full b010 = Receive FIFO becomes >= 1
        / 2 full b011 = Receive FIFO becomes >= 3 / 4 full b100 = Receive FIFO becomes
        >= 7 / 8 full b101-b111 = reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIFLSEL
      bit_offset: 0
      bit_width: 3
      description: 'Transmit interrupt FIFO level select. The trigger points for the
        transmit interrupt are as follows: b000 = Transmit FIFO becomes <= 1 / 8 full
        b001 = Transmit FIFO becomes <= 1 / 4 full b010 = Transmit FIFO becomes <=
        1 / 2 full b011 = Transmit FIFO becomes <= 3 / 4 full b100 = Transmit FIFO
        becomes <= 7 / 8 full b101-b111 = reserved.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIMSC
    addr: 0x40034038
    size_bits: 32
    description: Interrupt Mask Set/Clear Register, UARTIMSC
    fields:
    - !Field
      name: OEIM
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt mask. A read returns the current mask for
        the UARTOEINTR interrupt. On a write of 1, the mask of the UARTOEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BEIM
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt mask. A read returns the current mask for
        the UARTBEINTR interrupt. On a write of 1, the mask of the UARTBEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEIM
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt mask. A read returns the current mask for
        the UARTPEINTR interrupt. On a write of 1, the mask of the UARTPEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEIM
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt mask. A read returns the current mask for
        the UARTFEINTR interrupt. On a write of 1, the mask of the UARTFEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIM
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt mask. A read returns the current mask
        for the UARTRTINTR interrupt. On a write of 1, the mask of the UARTRTINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIM
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt mask. A read returns the current mask for the
        UARTTXINTR interrupt. On a write of 1, the mask of the UARTTXINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIM
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt mask. A read returns the current mask for the
        UARTRXINTR interrupt. On a write of 1, the mask of the UARTRXINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSRMIM
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt mask. A read returns the current mask
        for the UARTDSRINTR interrupt. On a write of 1, the mask of the UARTDSRINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DCDMIM
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt mask. A read returns the current mask
        for the UARTDCDINTR interrupt. On a write of 1, the mask of the UARTDCDINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTSMIM
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt mask. A read returns the current mask
        for the UARTCTSINTR interrupt. On a write of 1, the mask of the UARTCTSINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RIMIM
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt mask. A read returns the current mask for
        the UARTRIINTR interrupt. On a write of 1, the mask of the UARTRIINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTRIS
    addr: 0x4003403c
    size_bits: 32
    description: Raw Interrupt Status Register, UARTRIS
    fields:
    - !Field
      name: OERIS
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt status. Returns the raw interrupt state
        of the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BERIS
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt status. Returns the raw interrupt state of
        the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERIS
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt status. Returns the raw interrupt state
        of the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FERIS
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt status. Returns the raw interrupt state
        of the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTRIS
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt status. Returns the raw interrupt state
        of the UARTRTINTR interrupt. a
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXRIS
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt status. Returns the raw interrupt state of the
        UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXRIS
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt status. Returns the raw interrupt state of the
        UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSRRMIS
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt status. Returns the raw interrupt state
        of the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCDRMIS
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt status. Returns the raw interrupt state
        of the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTSRMIS
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt status. Returns the raw interrupt state
        of the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RIRMIS
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt status. Returns the raw interrupt state
        of the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTMIS
    addr: 0x40034040
    size_bits: 32
    description: Masked Interrupt Status Register, UARTMIS
    fields:
    - !Field
      name: OEMIS
      bit_offset: 10
      bit_width: 1
      description: Overrun error masked interrupt status. Returns the masked interrupt
        state of the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BEMIS
      bit_offset: 9
      bit_width: 1
      description: Break error masked interrupt status. Returns the masked interrupt
        state of the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEMIS
      bit_offset: 8
      bit_width: 1
      description: Parity error masked interrupt status. Returns the masked interrupt
        state of the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEMIS
      bit_offset: 7
      bit_width: 1
      description: Framing error masked interrupt status. Returns the masked interrupt
        state of the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTMIS
      bit_offset: 6
      bit_width: 1
      description: Receive timeout masked interrupt status. Returns the masked interrupt
        state of the UARTRTINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXMIS
      bit_offset: 5
      bit_width: 1
      description: Transmit masked interrupt status. Returns the masked interrupt
        state of the UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXMIS
      bit_offset: 4
      bit_width: 1
      description: Receive masked interrupt status. Returns the masked interrupt state
        of the UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSRMMIS
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem masked interrupt status. Returns the masked interrupt
        state of the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCDMMIS
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem masked interrupt status. Returns the masked interrupt
        state of the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTSMMIS
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem masked interrupt status. Returns the masked interrupt
        state of the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RIMMIS
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem masked interrupt status. Returns the masked interrupt
        state of the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTICR
    addr: 0x40034044
    size_bits: 32
    description: Interrupt Clear Register, UARTICR
    fields:
    - !Field
      name: OEIC
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt clear. Clears the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BEIC
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt clear. Clears the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEIC
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt clear. Clears the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEIC
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt clear. Clears the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIC
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt clear. Clears the UARTRTINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIC
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt clear. Clears the UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIC
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt clear. Clears the UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSRMIC
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt clear. Clears the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DCDMIC
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt clear. Clears the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTSMIC
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt clear. Clears the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RIMIC
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt clear. Clears the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTDMACR
    addr: 0x40034048
    size_bits: 32
    description: DMA Control Register, UARTDMACR
    fields:
    - !Field
      name: DMAONERR
      bit_offset: 2
      bit_width: 1
      description: DMA on error. If this bit is set to 1, the DMA receive request
        outputs, UARTRXDMASREQ or UARTRXDMABREQ, are disabled when the UART error
        interrupt is asserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXDMAE
      bit_offset: 1
      bit_width: 1
      description: Transmit DMA enable. If this bit is set to 1, DMA for the transmit
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXDMAE
      bit_offset: 0
      bit_width: 1
      description: Receive DMA enable. If this bit is set to 1, DMA for the receive
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTPERIPHID0
    addr: 0x40034fe0
    size_bits: 32
    description: UARTPeriphID0 Register
    reset_value: 0x11
    fields:
    - !Field
      name: PARTNUMBER0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x11
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID1
    addr: 0x40034fe4
    size_bits: 32
    description: UARTPeriphID1 Register
    reset_value: 0x10
    fields:
    - !Field
      name: DESIGNER0
      bit_offset: 4
      bit_width: 4
      description: These bits read back as 0x1
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNUMBER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x0
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID2
    addr: 0x40034fe8
    size_bits: 32
    description: UARTPeriphID2 Register
    reset_value: 0x34
    fields:
    - !Field
      name: REVISION
      bit_offset: 4
      bit_width: 4
      description: 'This field depends on the revision of the UART: r1p0 0x0 r1p1
        0x1 r1p3 0x2 r1p4 0x2 r1p5 0x3'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DESIGNER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x4
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID3
    addr: 0x40034fec
    size_bits: 32
    description: UARTPeriphID3 Register
    fields:
    - !Field
      name: CONFIGURATION
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x00
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID0
    addr: 0x40034ff0
    size_bits: 32
    description: UARTPCellID0 Register
    reset_value: 0xd
    fields:
    - !Field
      name: UARTPCELLID0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x0D
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID1
    addr: 0x40034ff4
    size_bits: 32
    description: UARTPCellID1 Register
    reset_value: 0xf0
    fields:
    - !Field
      name: UARTPCELLID1
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xF0
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID2
    addr: 0x40034ff8
    size_bits: 32
    description: UARTPCellID2 Register
    reset_value: 0x5
    fields:
    - !Field
      name: UARTPCELLID2
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x05
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID3
    addr: 0x40034ffc
    size_bits: 32
    description: UARTPCellID3 Register
    reset_value: 0xb1
    fields:
    - !Field
      name: UARTPCELLID3
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xB1
      read_allowed: true
      write_allowed: false
- !Module
  name: UART1
  base_addr: 0x40038000
  size: 0x1000
  registers:
  - !Register
    name: UARTDR
    addr: 0x40038000
    size_bits: 32
    description: Data Register, UARTDR
    fields:
    - !Field
      name: OE
      bit_offset: 11
      bit_width: 1
      description: Overrun error. This bit is set to 1 if data is received and the
        receive FIFO is already full. This is cleared to 0 once there is an empty
        space in the FIFO and a new character can be written to it.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BE
      bit_offset: 10
      bit_width: 1
      description: Break error. This bit is set to 1 if a break condition was detected,
        indicating that the received data input was held LOW for longer than a full-word
        transmission time (defined as start, data, parity and stop bits). In FIFO
        mode, this error is associated with the character at the top of the FIFO.
        When a break occurs, only one 0 character is loaded into the FIFO. The next
        character is only enabled after the receive data input goes to a 1 (marking
        state), and the next valid start bit is received.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PE
      bit_offset: 9
      bit_width: 1
      description: Parity error. When set to 1, it indicates that the parity of the
        received data character does not match the parity that the EPS and SPS bits
        in the Line Control Register, UARTLCR_H. In FIFO mode, this error is associated
        with the character at the top of the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FE
      bit_offset: 8
      bit_width: 1
      description: Framing error. When set to 1, it indicates that the received character
        did not have a valid stop bit (a valid stop bit is 1). In FIFO mode, this
        error is associated with the character at the top of the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: Receive (read) data character. Transmit (write) data character.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTRSR
    addr: 0x40038004
    size_bits: 32
    description: Receive Status Register/Error Clear Register, UARTRSR/UARTECR
    fields:
    - !Field
      name: OE
      bit_offset: 3
      bit_width: 1
      description: Overrun error. This bit is set to 1 if data is received and the
        FIFO is already full. This bit is cleared to 0 by a write to UARTECR. The
        FIFO contents remain valid because no more data is written when the FIFO is
        full, only the contents of the shift register are overwritten. The CPU must
        now read the data, to empty the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BE
      bit_offset: 2
      bit_width: 1
      description: Break error. This bit is set to 1 if a break condition was detected,
        indicating that the received data input was held LOW for longer than a full-word
        transmission time (defined as start, data, parity, and stop bits). This bit
        is cleared to 0 after a write to UARTECR. In FIFO mode, this error is associated
        with the character at the top of the FIFO. When a break occurs, only one 0
        character is loaded into the FIFO. The next character is only enabled after
        the receive data input goes to a 1 (marking state) and the next valid start
        bit is received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PE
      bit_offset: 1
      bit_width: 1
      description: Parity error. When set to 1, it indicates that the parity of the
        received data character does not match the parity that the EPS and SPS bits
        in the Line Control Register, UARTLCR_H. This bit is cleared to 0 by a write
        to UARTECR. In FIFO mode, this error is associated with the character at the
        top of the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FE
      bit_offset: 0
      bit_width: 1
      description: Framing error. When set to 1, it indicates that the received character
        did not have a valid stop bit (a valid stop bit is 1). This bit is cleared
        to 0 by a write to UARTECR. In FIFO mode, this error is associated with the
        character at the top of the FIFO.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTFR
    addr: 0x40038018
    size_bits: 32
    description: Flag Register, UARTFR
    reset_value: 0x90
    fields:
    - !Field
      name: RI
      bit_offset: 8
      bit_width: 1
      description: Ring indicator. This bit is the complement of the UART ring indicator,
        nUARTRI, modem status input. That is, the bit is 1 when nUARTRI is LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFE
      bit_offset: 7
      bit_width: 1
      description: Transmit FIFO empty. The meaning of this bit depends on the state
        of the FEN bit in the Line Control Register, UARTLCR_H. If the FIFO is disabled,
        this bit is set when the transmit holding register is empty. If the FIFO is
        enabled, the TXFE bit is set when the transmit FIFO is empty. This bit does
        not indicate if there is data in the transmit shift register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFF
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO full. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the receive holding register is full. If the FIFO is enabled,
        the RXFF bit is set when the receive FIFO is full.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFF
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO full. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the transmit holding register is full. If the FIFO is enabled,
        the TXFF bit is set when the transmit FIFO is full.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFE
      bit_offset: 4
      bit_width: 1
      description: Receive FIFO empty. The meaning of this bit depends on the state
        of the FEN bit in the UARTLCR_H Register. If the FIFO is disabled, this bit
        is set when the receive holding register is empty. If the FIFO is enabled,
        the RXFE bit is set when the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUSY
      bit_offset: 3
      bit_width: 1
      description: UART busy. If this bit is set to 1, the UART is busy transmitting
        data. This bit remains set until the complete byte, including all the stop
        bits, has been sent from the shift register. This bit is set as soon as the
        transmit FIFO becomes non-empty, regardless of whether the UART is enabled
        or not.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCD
      bit_offset: 2
      bit_width: 1
      description: Data carrier detect. This bit is the complement of the UART data
        carrier detect, nUARTDCD, modem status input. That is, the bit is 1 when nUARTDCD
        is LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSR
      bit_offset: 1
      bit_width: 1
      description: Data set ready. This bit is the complement of the UART data set
        ready, nUARTDSR, modem status input. That is, the bit is 1 when nUARTDSR is
        LOW.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS
      bit_offset: 0
      bit_width: 1
      description: Clear to send. This bit is the complement of the UART clear to
        send, nUARTCTS, modem status input. That is, the bit is 1 when nUARTCTS is
        LOW.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTILPR
    addr: 0x40038020
    size_bits: 32
    description: IrDA Low-Power Counter Register, UARTILPR
    fields:
    - !Field
      name: ILPDVSR
      bit_offset: 0
      bit_width: 8
      description: 8-bit low-power divisor value. These bits are cleared to 0 at reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIBRD
    addr: 0x40038024
    size_bits: 32
    description: Integer Baud Rate Register, UARTIBRD
    fields:
    - !Field
      name: BAUD_DIVINT
      bit_offset: 0
      bit_width: 16
      description: The integer baud rate divisor. These bits are cleared to 0 on reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTFBRD
    addr: 0x40038028
    size_bits: 32
    description: Fractional Baud Rate Register, UARTFBRD
    fields:
    - !Field
      name: BAUD_DIVFRAC
      bit_offset: 0
      bit_width: 6
      description: The fractional baud rate divisor. These bits are cleared to 0 on
        reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTLCR_H
    addr: 0x4003802c
    size_bits: 32
    description: Line Control Register, UARTLCR_H
    fields:
    - !Field
      name: SPS
      bit_offset: 7
      bit_width: 1
      description: 'Stick parity select. 0 = stick parity is disabled 1 = either:
        * if the EPS bit is 0 then the parity bit is transmitted and checked as a
        1 * if the EPS bit is 1 then the parity bit is transmitted and checked as
        a 0. This bit has no effect when the PEN bit disables parity checking and
        generation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WLEN
      bit_offset: 5
      bit_width: 2
      description: 'Word length. These bits indicate the number of data bits transmitted
        or received in a frame as follows: b11 = 8 bits b10 = 7 bits b01 = 6 bits
        b00 = 5 bits.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEN
      bit_offset: 4
      bit_width: 1
      description: 'Enable FIFOs: 0 = FIFOs are disabled (character mode) that is,
        the FIFOs become 1-byte-deep holding registers 1 = transmit and receive FIFO
        buffers are enabled (FIFO mode).'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STP2
      bit_offset: 3
      bit_width: 1
      description: Two stop bits select. If this bit is set to 1, two stop bits are
        transmitted at the end of the frame. The receive logic does not check for
        two stop bits being received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EPS
      bit_offset: 2
      bit_width: 1
      description: 'Even parity select. Controls the type of parity the UART uses
        during transmission and reception: 0 = odd parity. The UART generates or checks
        for an odd number of 1s in the data and parity bits. 1 = even parity. The
        UART generates or checks for an even number of 1s in the data and parity bits.
        This bit has no effect when the PEN bit disables parity checking and generation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEN
      bit_offset: 1
      bit_width: 1
      description: 'Parity enable: 0 = parity is disabled and no parity bit added
        to the data frame 1 = parity checking and generation is enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BRK
      bit_offset: 0
      bit_width: 1
      description: Send break. If this bit is set to 1, a low-level is continually
        output on the UARTTXD output, after completing transmission of the current
        character. For the proper execution of the break command, the software must
        set this bit for at least two complete frames. For normal use, this bit must
        be cleared to 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTCR
    addr: 0x40038030
    size_bits: 32
    description: Control Register, UARTCR
    reset_value: 0x300
    fields:
    - !Field
      name: CTSEN
      bit_offset: 15
      bit_width: 1
      description: CTS hardware flow control enable. If this bit is set to 1, CTS
        hardware flow control is enabled. Data is only transmitted when the nUARTCTS
        signal is asserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTSEN
      bit_offset: 14
      bit_width: 1
      description: RTS hardware flow control enable. If this bit is set to 1, RTS
        hardware flow control is enabled. Data is only requested when there is space
        in the receive FIFO for it to be received.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT2
      bit_offset: 13
      bit_width: 1
      description: This bit is the complement of the UART Out2 (nUARTOut2) modem status
        output. That is, when the bit is programmed to a 1, the output is 0. For DTE
        this can be used as Ring Indicator (RI).
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT1
      bit_offset: 12
      bit_width: 1
      description: This bit is the complement of the UART Out1 (nUARTOut1) modem status
        output. That is, when the bit is programmed to a 1 the output is 0. For DTE
        this can be used as Data Carrier Detect (DCD).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTS
      bit_offset: 11
      bit_width: 1
      description: Request to send. This bit is the complement of the UART request
        to send, nUARTRTS, modem status output. That is, when the bit is programmed
        to a 1 then nUARTRTS is LOW.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DTR
      bit_offset: 10
      bit_width: 1
      description: Data transmit ready. This bit is the complement of the UART data
        transmit ready, nUARTDTR, modem status output. That is, when the bit is programmed
        to a 1 then nUARTDTR is LOW.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXE
      bit_offset: 9
      bit_width: 1
      description: Receive enable. If this bit is set to 1, the receive section of
        the UART is enabled. Data reception occurs for either UART signals or SIR
        signals depending on the setting of the SIREN bit. When the UART is disabled
        in the middle of reception, it completes the current character before stopping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXE
      bit_offset: 8
      bit_width: 1
      description: Transmit enable. If this bit is set to 1, the transmit section
        of the UART is enabled. Data transmission occurs for either UART signals,
        or SIR signals depending on the setting of the SIREN bit. When the UART is
        disabled in the middle of transmission, it completes the current character
        before stopping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LBE
      bit_offset: 7
      bit_width: 1
      description: Loopback enable. If this bit is set to 1 and the SIREN bit is set
        to 1 and the SIRTEST bit in the Test Control Register, UARTTCR is set to 1,
        then the nSIROUT path is inverted, and fed through to the SIRIN path. The
        SIRTEST bit in the test register must be set to 1 to override the normal half-duplex
        SIR operation. This must be the requirement for accessing the test registers
        during normal operation, and SIRTEST must be cleared to 0 when loopback testing
        is finished. This feature reduces the amount of external coupling required
        during system test. If this bit is set to 1, and the SIRTEST bit is set to
        0, the UARTTXD path is fed through to the UARTRXD path. In either SIR mode
        or UART mode, when this bit is set, the modem outputs are also fed through
        to the modem inputs. This bit is cleared to 0 on reset, to disable loopback.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIRLP
      bit_offset: 2
      bit_width: 1
      description: SIR low-power IrDA mode. This bit selects the IrDA encoding mode.
        If this bit is cleared to 0, low-level bits are transmitted as an active high
        pulse with a width of 3 / 16th of the bit period. If this bit is set to 1,
        low-level bits are transmitted with a pulse width that is 3 times the period
        of the IrLPBaud16 input signal, regardless of the selected bit rate. Setting
        this bit uses less power, but might reduce transmission distances.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIREN
      bit_offset: 1
      bit_width: 1
      description: 'SIR enable: 0 = IrDA SIR ENDEC is disabled. nSIROUT remains LOW
        (no light pulse generated), and signal transitions on SIRIN have no effect.
        1 = IrDA SIR ENDEC is enabled. Data is transmitted and received on nSIROUT
        and SIRIN. UARTTXD remains HIGH, in the marking state. Signal transitions
        on UARTRXD or modem status inputs have no effect. This bit has no effect if
        the UARTEN bit disables the UART.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: UARTEN
      bit_offset: 0
      bit_width: 1
      description: 'UART enable: 0 = UART is disabled. If the UART is disabled in
        the middle of transmission or reception, it completes the current character
        before stopping. 1 = the UART is enabled. Data transmission and reception
        occurs for either UART signals or SIR signals depending on the setting of
        the SIREN bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIFLS
    addr: 0x40038034
    size_bits: 32
    description: Interrupt FIFO Level Select Register, UARTIFLS
    reset_value: 0x12
    fields:
    - !Field
      name: RXIFLSEL
      bit_offset: 3
      bit_width: 3
      description: 'Receive interrupt FIFO level select. The trigger points for the
        receive interrupt are as follows: b000 = Receive FIFO becomes >= 1 / 8 full
        b001 = Receive FIFO becomes >= 1 / 4 full b010 = Receive FIFO becomes >= 1
        / 2 full b011 = Receive FIFO becomes >= 3 / 4 full b100 = Receive FIFO becomes
        >= 7 / 8 full b101-b111 = reserved.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIFLSEL
      bit_offset: 0
      bit_width: 3
      description: 'Transmit interrupt FIFO level select. The trigger points for the
        transmit interrupt are as follows: b000 = Transmit FIFO becomes <= 1 / 8 full
        b001 = Transmit FIFO becomes <= 1 / 4 full b010 = Transmit FIFO becomes <=
        1 / 2 full b011 = Transmit FIFO becomes <= 3 / 4 full b100 = Transmit FIFO
        becomes <= 7 / 8 full b101-b111 = reserved.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTIMSC
    addr: 0x40038038
    size_bits: 32
    description: Interrupt Mask Set/Clear Register, UARTIMSC
    fields:
    - !Field
      name: OEIM
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt mask. A read returns the current mask for
        the UARTOEINTR interrupt. On a write of 1, the mask of the UARTOEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BEIM
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt mask. A read returns the current mask for
        the UARTBEINTR interrupt. On a write of 1, the mask of the UARTBEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEIM
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt mask. A read returns the current mask for
        the UARTPEINTR interrupt. On a write of 1, the mask of the UARTPEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEIM
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt mask. A read returns the current mask for
        the UARTFEINTR interrupt. On a write of 1, the mask of the UARTFEINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIM
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt mask. A read returns the current mask
        for the UARTRTINTR interrupt. On a write of 1, the mask of the UARTRTINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIM
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt mask. A read returns the current mask for the
        UARTTXINTR interrupt. On a write of 1, the mask of the UARTTXINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIM
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt mask. A read returns the current mask for the
        UARTRXINTR interrupt. On a write of 1, the mask of the UARTRXINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSRMIM
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt mask. A read returns the current mask
        for the UARTDSRINTR interrupt. On a write of 1, the mask of the UARTDSRINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DCDMIM
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt mask. A read returns the current mask
        for the UARTDCDINTR interrupt. On a write of 1, the mask of the UARTDCDINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTSMIM
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt mask. A read returns the current mask
        for the UARTCTSINTR interrupt. On a write of 1, the mask of the UARTCTSINTR
        interrupt is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RIMIM
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt mask. A read returns the current mask for
        the UARTRIINTR interrupt. On a write of 1, the mask of the UARTRIINTR interrupt
        is set. A write of 0 clears the mask.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTRIS
    addr: 0x4003803c
    size_bits: 32
    description: Raw Interrupt Status Register, UARTRIS
    fields:
    - !Field
      name: OERIS
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt status. Returns the raw interrupt state
        of the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BERIS
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt status. Returns the raw interrupt state of
        the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERIS
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt status. Returns the raw interrupt state
        of the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FERIS
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt status. Returns the raw interrupt state
        of the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTRIS
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt status. Returns the raw interrupt state
        of the UARTRTINTR interrupt. a
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXRIS
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt status. Returns the raw interrupt state of the
        UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXRIS
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt status. Returns the raw interrupt state of the
        UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSRRMIS
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt status. Returns the raw interrupt state
        of the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCDRMIS
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt status. Returns the raw interrupt state
        of the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTSRMIS
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt status. Returns the raw interrupt state
        of the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RIRMIS
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt status. Returns the raw interrupt state
        of the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTMIS
    addr: 0x40038040
    size_bits: 32
    description: Masked Interrupt Status Register, UARTMIS
    fields:
    - !Field
      name: OEMIS
      bit_offset: 10
      bit_width: 1
      description: Overrun error masked interrupt status. Returns the masked interrupt
        state of the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BEMIS
      bit_offset: 9
      bit_width: 1
      description: Break error masked interrupt status. Returns the masked interrupt
        state of the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PEMIS
      bit_offset: 8
      bit_width: 1
      description: Parity error masked interrupt status. Returns the masked interrupt
        state of the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FEMIS
      bit_offset: 7
      bit_width: 1
      description: Framing error masked interrupt status. Returns the masked interrupt
        state of the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTMIS
      bit_offset: 6
      bit_width: 1
      description: Receive timeout masked interrupt status. Returns the masked interrupt
        state of the UARTRTINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXMIS
      bit_offset: 5
      bit_width: 1
      description: Transmit masked interrupt status. Returns the masked interrupt
        state of the UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXMIS
      bit_offset: 4
      bit_width: 1
      description: Receive masked interrupt status. Returns the masked interrupt state
        of the UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DSRMMIS
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem masked interrupt status. Returns the masked interrupt
        state of the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCDMMIS
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem masked interrupt status. Returns the masked interrupt
        state of the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTSMMIS
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem masked interrupt status. Returns the masked interrupt
        state of the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RIMMIS
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem masked interrupt status. Returns the masked interrupt
        state of the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTICR
    addr: 0x40038044
    size_bits: 32
    description: Interrupt Clear Register, UARTICR
    fields:
    - !Field
      name: OEIC
      bit_offset: 10
      bit_width: 1
      description: Overrun error interrupt clear. Clears the UARTOEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BEIC
      bit_offset: 9
      bit_width: 1
      description: Break error interrupt clear. Clears the UARTBEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PEIC
      bit_offset: 8
      bit_width: 1
      description: Parity error interrupt clear. Clears the UARTPEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FEIC
      bit_offset: 7
      bit_width: 1
      description: Framing error interrupt clear. Clears the UARTFEINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIC
      bit_offset: 6
      bit_width: 1
      description: Receive timeout interrupt clear. Clears the UARTRTINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXIC
      bit_offset: 5
      bit_width: 1
      description: Transmit interrupt clear. Clears the UARTTXINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIC
      bit_offset: 4
      bit_width: 1
      description: Receive interrupt clear. Clears the UARTRXINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSRMIC
      bit_offset: 3
      bit_width: 1
      description: nUARTDSR modem interrupt clear. Clears the UARTDSRINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DCDMIC
      bit_offset: 2
      bit_width: 1
      description: nUARTDCD modem interrupt clear. Clears the UARTDCDINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTSMIC
      bit_offset: 1
      bit_width: 1
      description: nUARTCTS modem interrupt clear. Clears the UARTCTSINTR interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RIMIC
      bit_offset: 0
      bit_width: 1
      description: nUARTRI modem interrupt clear. Clears the UARTRIINTR interrupt.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTDMACR
    addr: 0x40038048
    size_bits: 32
    description: DMA Control Register, UARTDMACR
    fields:
    - !Field
      name: DMAONERR
      bit_offset: 2
      bit_width: 1
      description: DMA on error. If this bit is set to 1, the DMA receive request
        outputs, UARTRXDMASREQ or UARTRXDMABREQ, are disabled when the UART error
        interrupt is asserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXDMAE
      bit_offset: 1
      bit_width: 1
      description: Transmit DMA enable. If this bit is set to 1, DMA for the transmit
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXDMAE
      bit_offset: 0
      bit_width: 1
      description: Receive DMA enable. If this bit is set to 1, DMA for the receive
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: UARTPERIPHID0
    addr: 0x40038fe0
    size_bits: 32
    description: UARTPeriphID0 Register
    reset_value: 0x11
    fields:
    - !Field
      name: PARTNUMBER0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x11
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID1
    addr: 0x40038fe4
    size_bits: 32
    description: UARTPeriphID1 Register
    reset_value: 0x10
    fields:
    - !Field
      name: DESIGNER0
      bit_offset: 4
      bit_width: 4
      description: These bits read back as 0x1
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNUMBER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x0
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID2
    addr: 0x40038fe8
    size_bits: 32
    description: UARTPeriphID2 Register
    reset_value: 0x34
    fields:
    - !Field
      name: REVISION
      bit_offset: 4
      bit_width: 4
      description: 'This field depends on the revision of the UART: r1p0 0x0 r1p1
        0x1 r1p3 0x2 r1p4 0x2 r1p5 0x3'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DESIGNER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x4
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPERIPHID3
    addr: 0x40038fec
    size_bits: 32
    description: UARTPeriphID3 Register
    fields:
    - !Field
      name: CONFIGURATION
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x00
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID0
    addr: 0x40038ff0
    size_bits: 32
    description: UARTPCellID0 Register
    reset_value: 0xd
    fields:
    - !Field
      name: UARTPCELLID0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x0D
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID1
    addr: 0x40038ff4
    size_bits: 32
    description: UARTPCellID1 Register
    reset_value: 0xf0
    fields:
    - !Field
      name: UARTPCELLID1
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xF0
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID2
    addr: 0x40038ff8
    size_bits: 32
    description: UARTPCellID2 Register
    reset_value: 0x5
    fields:
    - !Field
      name: UARTPCELLID2
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x05
      read_allowed: true
      write_allowed: false
  - !Register
    name: UARTPCELLID3
    addr: 0x40038ffc
    size_bits: 32
    description: UARTPCellID3 Register
    reset_value: 0xb1
    fields:
    - !Field
      name: UARTPCELLID3
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xB1
      read_allowed: true
      write_allowed: false
- !Module
  name: SPI0
  base_addr: 0x4003c000
  size: 0x1000
  registers:
  - !Register
    name: SSPCR0
    addr: 0x4003c000
    size_bits: 32
    description: Control register 0, SSPCR0 on page 3-4
    fields:
    - !Field
      name: SCR
      bit_offset: 8
      bit_width: 8
      description: 'Serial clock rate. The value SCR is used to generate the transmit
        and receive bit rate of the PrimeCell SSP. The bit rate is: F SSPCLK CPSDVSR
        x (1+SCR) where CPSDVSR is an even value from 2-254, programmed through the
        SSPCPSR register and SCR is a value from 0-255.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPH
      bit_offset: 7
      bit_width: 1
      description: SSPCLKOUT phase, applicable to Motorola SPI frame format only.
        See Motorola SPI frame format on page 2-10.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPO
      bit_offset: 6
      bit_width: 1
      description: SSPCLKOUT polarity, applicable to Motorola SPI frame format only.
        See Motorola SPI frame format on page 2-10.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRF
      bit_offset: 4
      bit_width: 2
      description: 'Frame format: 00 Motorola SPI frame format. 01 TI synchronous
        serial frame format. 10 National Microwire frame format. 11 Reserved, undefined
        operation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSS
      bit_offset: 0
      bit_width: 4
      description: 'Data Size Select: 0000 Reserved, undefined operation. 0001 Reserved,
        undefined operation. 0010 Reserved, undefined operation. 0011 4-bit data.
        0100 5-bit data. 0101 6-bit data. 0110 7-bit data. 0111 8-bit data. 1000 9-bit
        data. 1001 10-bit data. 1010 11-bit data. 1011 12-bit data. 1100 13-bit data.
        1101 14-bit data. 1110 15-bit data. 1111 16-bit data.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPCR1
    addr: 0x4003c004
    size_bits: 32
    description: Control register 1, SSPCR1 on page 3-5
    fields:
    - !Field
      name: SOD
      bit_offset: 3
      bit_width: 1
      description: 'Slave-mode output disable. This bit is relevant only in the slave
        mode, MS=1. In multiple-slave systems, it is possible for an PrimeCell SSP
        master to broadcast a message to all slaves in the system while ensuring that
        only one slave drives data onto its serial output line. In such systems the
        RXD lines from multiple slaves could be tied together. To operate in such
        systems, the SOD bit can be set if the PrimeCell SSP slave is not supposed
        to drive the SSPTXD line: 0 SSP can drive the SSPTXD output in slave mode.
        1 SSP must not drive the SSPTXD output in slave mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MS
      bit_offset: 2
      bit_width: 1
      description: 'Master or slave mode select. This bit can be modified only when
        the PrimeCell SSP is disabled, SSE=0: 0 Device configured as master, default.
        1 Device configured as slave.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SSE
      bit_offset: 1
      bit_width: 1
      description: 'Synchronous serial port enable: 0 SSP operation disabled. 1 SSP
        operation enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LBM
      bit_offset: 0
      bit_width: 1
      description: 'Loop back mode: 0 Normal serial port operation enabled. 1 Output
        of transmit serial shifter is connected to input of receive serial shifter
        internally.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPDR
    addr: 0x4003c008
    size_bits: 32
    description: Data register, SSPDR on page 3-6
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 16
      description: 'Transmit/Receive FIFO: Read Receive FIFO. Write Transmit FIFO.
        You must right-justify data when the PrimeCell SSP is programmed for a data
        size that is less than 16 bits. Unused bits at the top are ignored by transmit
        logic. The receive logic automatically right-justifies.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPSR
    addr: 0x4003c00c
    size_bits: 32
    description: Status register, SSPSR on page 3-7
    reset_value: 0x3
    fields:
    - !Field
      name: BSY
      bit_offset: 4
      bit_width: 1
      description: 'PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is currently
        transmitting and/or receiving a frame or the transmit FIFO is not empty.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RFF
      bit_offset: 3
      bit_width: 1
      description: 'Receive FIFO full, RO: 0 Receive FIFO is not full. 1 Receive FIFO
        is full.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RNE
      bit_offset: 2
      bit_width: 1
      description: 'Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 Receive
        FIFO is not empty.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TNF
      bit_offset: 1
      bit_width: 1
      description: 'Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 Transmit
        FIFO is not full.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TFE
      bit_offset: 0
      bit_width: 1
      description: 'Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 Transmit
        FIFO is empty.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPCPSR
    addr: 0x4003c010
    size_bits: 32
    description: Clock prescale register, SSPCPSR on page 3-8
    fields:
    - !Field
      name: CPSDVSR
      bit_offset: 0
      bit_width: 8
      description: Clock prescale divisor. Must be an even number from 2-254, depending
        on the frequency of SSPCLK. The least significant bit always returns zero
        on reads.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPIMSC
    addr: 0x4003c014
    size_bits: 32
    description: Interrupt mask set or clear register, SSPIMSC on page 3-9
    fields:
    - !Field
      name: TXIM
      bit_offset: 3
      bit_width: 1
      description: 'Transmit FIFO interrupt mask: 0 Transmit FIFO half empty or less
        condition interrupt is masked. 1 Transmit FIFO half empty or less condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIM
      bit_offset: 2
      bit_width: 1
      description: 'Receive FIFO interrupt mask: 0 Receive FIFO half full or less
        condition interrupt is masked. 1 Receive FIFO half full or less condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIM
      bit_offset: 1
      bit_width: 1
      description: 'Receive timeout interrupt mask: 0 Receive FIFO not empty and no
        read prior to timeout period interrupt is masked. 1 Receive FIFO not empty
        and no read prior to timeout period interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RORIM
      bit_offset: 0
      bit_width: 1
      description: 'Receive overrun interrupt mask: 0 Receive FIFO written to while
        full condition interrupt is masked. 1 Receive FIFO written to while full condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPRIS
    addr: 0x4003c018
    size_bits: 32
    description: Raw interrupt status register, SSPRIS on page 3-10
    reset_value: 0x8
    fields:
    - !Field
      name: TXRIS
      bit_offset: 3
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPTXINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXRIS
      bit_offset: 2
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRXINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTRIS
      bit_offset: 1
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRTINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RORRIS
      bit_offset: 0
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRORINTR
        interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPMIS
    addr: 0x4003c01c
    size_bits: 32
    description: Masked interrupt status register, SSPMIS on page 3-11
    fields:
    - !Field
      name: TXMIS
      bit_offset: 3
      bit_width: 1
      description: Gives the transmit FIFO masked interrupt state, after masking,
        of the SSPTXINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXMIS
      bit_offset: 2
      bit_width: 1
      description: Gives the receive FIFO masked interrupt state, after masking, of
        the SSPRXINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTMIS
      bit_offset: 1
      bit_width: 1
      description: Gives the receive timeout masked interrupt state, after masking,
        of the SSPRTINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RORMIS
      bit_offset: 0
      bit_width: 1
      description: Gives the receive over run masked interrupt status, after masking,
        of the SSPRORINTR interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPICR
    addr: 0x4003c020
    size_bits: 32
    description: Interrupt clear register, SSPICR on page 3-11
    fields:
    - !Field
      name: RTIC
      bit_offset: 1
      bit_width: 1
      description: Clears the SSPRTINTR interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: RORIC
      bit_offset: 0
      bit_width: 1
      description: Clears the SSPRORINTR interrupt
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPDMACR
    addr: 0x4003c024
    size_bits: 32
    description: DMA control register, SSPDMACR on page 3-12
    fields:
    - !Field
      name: TXDMAE
      bit_offset: 1
      bit_width: 1
      description: Transmit DMA Enable. If this bit is set to 1, DMA for the transmit
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXDMAE
      bit_offset: 0
      bit_width: 1
      description: Receive DMA Enable. If this bit is set to 1, DMA for the receive
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPPERIPHID0
    addr: 0x4003cfe0
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x22
    fields:
    - !Field
      name: PARTNUMBER0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x22
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID1
    addr: 0x4003cfe4
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x10
    fields:
    - !Field
      name: DESIGNER0
      bit_offset: 4
      bit_width: 4
      description: These bits read back as 0x1
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNUMBER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x0
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID2
    addr: 0x4003cfe8
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x34
    fields:
    - !Field
      name: REVISION
      bit_offset: 4
      bit_width: 4
      description: These bits return the peripheral revision
      read_allowed: true
      write_allowed: false
    - !Field
      name: DESIGNER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x4
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID3
    addr: 0x4003cfec
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    fields:
    - !Field
      name: CONFIGURATION
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x00
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID0
    addr: 0x4003cff0
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xd
    fields:
    - !Field
      name: SSPPCELLID0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x0D
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID1
    addr: 0x4003cff4
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xf0
    fields:
    - !Field
      name: SSPPCELLID1
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xF0
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID2
    addr: 0x4003cff8
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0x5
    fields:
    - !Field
      name: SSPPCELLID2
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x05
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID3
    addr: 0x4003cffc
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xb1
    fields:
    - !Field
      name: SSPPCELLID3
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xB1
      read_allowed: true
      write_allowed: false
- !Module
  name: SPI1
  base_addr: 0x40040000
  size: 0x1000
  registers:
  - !Register
    name: SSPCR0
    addr: 0x40040000
    size_bits: 32
    description: Control register 0, SSPCR0 on page 3-4
    fields:
    - !Field
      name: SCR
      bit_offset: 8
      bit_width: 8
      description: 'Serial clock rate. The value SCR is used to generate the transmit
        and receive bit rate of the PrimeCell SSP. The bit rate is: F SSPCLK CPSDVSR
        x (1+SCR) where CPSDVSR is an even value from 2-254, programmed through the
        SSPCPSR register and SCR is a value from 0-255.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPH
      bit_offset: 7
      bit_width: 1
      description: SSPCLKOUT phase, applicable to Motorola SPI frame format only.
        See Motorola SPI frame format on page 2-10.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SPO
      bit_offset: 6
      bit_width: 1
      description: SSPCLKOUT polarity, applicable to Motorola SPI frame format only.
        See Motorola SPI frame format on page 2-10.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRF
      bit_offset: 4
      bit_width: 2
      description: 'Frame format: 00 Motorola SPI frame format. 01 TI synchronous
        serial frame format. 10 National Microwire frame format. 11 Reserved, undefined
        operation.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSS
      bit_offset: 0
      bit_width: 4
      description: 'Data Size Select: 0000 Reserved, undefined operation. 0001 Reserved,
        undefined operation. 0010 Reserved, undefined operation. 0011 4-bit data.
        0100 5-bit data. 0101 6-bit data. 0110 7-bit data. 0111 8-bit data. 1000 9-bit
        data. 1001 10-bit data. 1010 11-bit data. 1011 12-bit data. 1100 13-bit data.
        1101 14-bit data. 1110 15-bit data. 1111 16-bit data.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPCR1
    addr: 0x40040004
    size_bits: 32
    description: Control register 1, SSPCR1 on page 3-5
    fields:
    - !Field
      name: SOD
      bit_offset: 3
      bit_width: 1
      description: 'Slave-mode output disable. This bit is relevant only in the slave
        mode, MS=1. In multiple-slave systems, it is possible for an PrimeCell SSP
        master to broadcast a message to all slaves in the system while ensuring that
        only one slave drives data onto its serial output line. In such systems the
        RXD lines from multiple slaves could be tied together. To operate in such
        systems, the SOD bit can be set if the PrimeCell SSP slave is not supposed
        to drive the SSPTXD line: 0 SSP can drive the SSPTXD output in slave mode.
        1 SSP must not drive the SSPTXD output in slave mode.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MS
      bit_offset: 2
      bit_width: 1
      description: 'Master or slave mode select. This bit can be modified only when
        the PrimeCell SSP is disabled, SSE=0: 0 Device configured as master, default.
        1 Device configured as slave.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SSE
      bit_offset: 1
      bit_width: 1
      description: 'Synchronous serial port enable: 0 SSP operation disabled. 1 SSP
        operation enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LBM
      bit_offset: 0
      bit_width: 1
      description: 'Loop back mode: 0 Normal serial port operation enabled. 1 Output
        of transmit serial shifter is connected to input of receive serial shifter
        internally.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPDR
    addr: 0x40040008
    size_bits: 32
    description: Data register, SSPDR on page 3-6
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 16
      description: 'Transmit/Receive FIFO: Read Receive FIFO. Write Transmit FIFO.
        You must right-justify data when the PrimeCell SSP is programmed for a data
        size that is less than 16 bits. Unused bits at the top are ignored by transmit
        logic. The receive logic automatically right-justifies.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPSR
    addr: 0x4004000c
    size_bits: 32
    description: Status register, SSPSR on page 3-7
    reset_value: 0x3
    fields:
    - !Field
      name: BSY
      bit_offset: 4
      bit_width: 1
      description: 'PrimeCell SSP busy flag, RO: 0 SSP is idle. 1 SSP is currently
        transmitting and/or receiving a frame or the transmit FIFO is not empty.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RFF
      bit_offset: 3
      bit_width: 1
      description: 'Receive FIFO full, RO: 0 Receive FIFO is not full. 1 Receive FIFO
        is full.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RNE
      bit_offset: 2
      bit_width: 1
      description: 'Receive FIFO not empty, RO: 0 Receive FIFO is empty. 1 Receive
        FIFO is not empty.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TNF
      bit_offset: 1
      bit_width: 1
      description: 'Transmit FIFO not full, RO: 0 Transmit FIFO is full. 1 Transmit
        FIFO is not full.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: TFE
      bit_offset: 0
      bit_width: 1
      description: 'Transmit FIFO empty, RO: 0 Transmit FIFO is not empty. 1 Transmit
        FIFO is empty.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPCPSR
    addr: 0x40040010
    size_bits: 32
    description: Clock prescale register, SSPCPSR on page 3-8
    fields:
    - !Field
      name: CPSDVSR
      bit_offset: 0
      bit_width: 8
      description: Clock prescale divisor. Must be an even number from 2-254, depending
        on the frequency of SSPCLK. The least significant bit always returns zero
        on reads.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPIMSC
    addr: 0x40040014
    size_bits: 32
    description: Interrupt mask set or clear register, SSPIMSC on page 3-9
    fields:
    - !Field
      name: TXIM
      bit_offset: 3
      bit_width: 1
      description: 'Transmit FIFO interrupt mask: 0 Transmit FIFO half empty or less
        condition interrupt is masked. 1 Transmit FIFO half empty or less condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXIM
      bit_offset: 2
      bit_width: 1
      description: 'Receive FIFO interrupt mask: 0 Receive FIFO half full or less
        condition interrupt is masked. 1 Receive FIFO half full or less condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTIM
      bit_offset: 1
      bit_width: 1
      description: 'Receive timeout interrupt mask: 0 Receive FIFO not empty and no
        read prior to timeout period interrupt is masked. 1 Receive FIFO not empty
        and no read prior to timeout period interrupt is not masked.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RORIM
      bit_offset: 0
      bit_width: 1
      description: 'Receive overrun interrupt mask: 0 Receive FIFO written to while
        full condition interrupt is masked. 1 Receive FIFO written to while full condition
        interrupt is not masked.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPRIS
    addr: 0x40040018
    size_bits: 32
    description: Raw interrupt status register, SSPRIS on page 3-10
    reset_value: 0x8
    fields:
    - !Field
      name: TXRIS
      bit_offset: 3
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPTXINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXRIS
      bit_offset: 2
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRXINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTRIS
      bit_offset: 1
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRTINTR
        interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RORRIS
      bit_offset: 0
      bit_width: 1
      description: Gives the raw interrupt state, prior to masking, of the SSPRORINTR
        interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPMIS
    addr: 0x4004001c
    size_bits: 32
    description: Masked interrupt status register, SSPMIS on page 3-11
    fields:
    - !Field
      name: TXMIS
      bit_offset: 3
      bit_width: 1
      description: Gives the transmit FIFO masked interrupt state, after masking,
        of the SSPTXINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXMIS
      bit_offset: 2
      bit_width: 1
      description: Gives the receive FIFO masked interrupt state, after masking, of
        the SSPRXINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTMIS
      bit_offset: 1
      bit_width: 1
      description: Gives the receive timeout masked interrupt state, after masking,
        of the SSPRTINTR interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RORMIS
      bit_offset: 0
      bit_width: 1
      description: Gives the receive over run masked interrupt status, after masking,
        of the SSPRORINTR interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPICR
    addr: 0x40040020
    size_bits: 32
    description: Interrupt clear register, SSPICR on page 3-11
    fields:
    - !Field
      name: RTIC
      bit_offset: 1
      bit_width: 1
      description: Clears the SSPRTINTR interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: RORIC
      bit_offset: 0
      bit_width: 1
      description: Clears the SSPRORINTR interrupt
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPDMACR
    addr: 0x40040024
    size_bits: 32
    description: DMA control register, SSPDMACR on page 3-12
    fields:
    - !Field
      name: TXDMAE
      bit_offset: 1
      bit_width: 1
      description: Transmit DMA Enable. If this bit is set to 1, DMA for the transmit
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXDMAE
      bit_offset: 0
      bit_width: 1
      description: Receive DMA Enable. If this bit is set to 1, DMA for the receive
        FIFO is enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SSPPERIPHID0
    addr: 0x40040fe0
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x22
    fields:
    - !Field
      name: PARTNUMBER0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x22
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID1
    addr: 0x40040fe4
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x10
    fields:
    - !Field
      name: DESIGNER0
      bit_offset: 4
      bit_width: 4
      description: These bits read back as 0x1
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNUMBER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x0
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID2
    addr: 0x40040fe8
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    reset_value: 0x34
    fields:
    - !Field
      name: REVISION
      bit_offset: 4
      bit_width: 4
      description: These bits return the peripheral revision
      read_allowed: true
      write_allowed: false
    - !Field
      name: DESIGNER1
      bit_offset: 0
      bit_width: 4
      description: These bits read back as 0x4
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPERIPHID3
    addr: 0x40040fec
    size_bits: 32
    description: Peripheral identification registers, SSPPeriphID0-3 on page 3-13
    fields:
    - !Field
      name: CONFIGURATION
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x00
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID0
    addr: 0x40040ff0
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xd
    fields:
    - !Field
      name: SSPPCELLID0
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x0D
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID1
    addr: 0x40040ff4
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xf0
    fields:
    - !Field
      name: SSPPCELLID1
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xF0
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID2
    addr: 0x40040ff8
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0x5
    fields:
    - !Field
      name: SSPPCELLID2
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0x05
      read_allowed: true
      write_allowed: false
  - !Register
    name: SSPPCELLID3
    addr: 0x40040ffc
    size_bits: 32
    description: PrimeCell identification registers, SSPPCellID0-3 on page 3-16
    reset_value: 0xb1
    fields:
    - !Field
      name: SSPPCELLID3
      bit_offset: 0
      bit_width: 8
      description: These bits read back as 0xB1
      read_allowed: true
      write_allowed: false
- !Module
  name: I2C0
  description: DW_apb_i2c address block
  base_addr: 0x40044000
  size: 0x100
  registers:
  - !Register
    name: IC_CON
    addr: 0x40044000
    size_bits: 32
    description: "I2C Control Register. This register can be written only when the
      DW_apb_i2c is disabled, which corresponds to the IC_ENABLE[0] register being
      set to 0. Writes at other times have no effect.\\n\\n\n            Read/Write
      Access: - bit 10 is read only. - bit 11 is read only - bit 16 is read only -
      bit 17 is read only - bits 18 and 19 are read only."
    reset_value: 0x65
    fields:
    - !Field
      name: STOP_DET_IF_MASTER_ACTIVE
      bit_offset: 10
      bit_width: 1
      description: Master issues the STOP_DET interrupt irrespective of whether master
        is active or not
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_FIFO_FULL_HLD_CTRL
      bit_offset: 9
      bit_width: 1
      description: "This bit controls whether DW_apb_i2c should hold the bus when
        the Rx FIFO is physically full to its RX_BUFFER_DEPTH, as described in the
        IC_RX_FULL_HLD_BUS_EN parameter.\\n\\n\n                Reset value: 0x0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TX_EMPTY_CTRL
      bit_offset: 8
      bit_width: 1
      description: "This bit controls the generation of the TX_EMPTY interrupt, as
        described in the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value:
        0x0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: STOP_DET_IFADDRESSED
      bit_offset: 7
      bit_width: 1
      description: "In slave mode: - 1'b1:  issues the STOP_DET interrupt only when
        it is addressed. - 1'b0:  issues the STOP_DET irrespective of whether it's
        addressed or not. Reset value: 0x0\\n\\n\n                NOTE: During a general
        call address, this slave does not issue the STOP_DET interrupt if STOP_DET_IF_ADDRESSED
        = 1'b1, even if the slave responds to the general call address by generating
        ACK. The STOP_DET interrupt is generated only when the transmitted address
        matches the slave address (SAR)."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: IC_SLAVE_DISABLE
      bit_offset: 6
      bit_width: 1
      description: "This bit controls whether I2C has its slave disabled, which means
        once the presetn signal is applied, then this bit is set and the slave is
        disabled.\\n\\n\n                If this bit is set (slave is disabled), DW_apb_i2c
        functions only as a master and does not perform any action that requires a
        slave.\\n\\n\n                NOTE: Software should ensure that if this bit
        is written with 0, then bit 0 should also be written with a 0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE_ENABLED
        1: SLAVE_DISABLED
    - !Field
      name: IC_RESTART_EN
      bit_offset: 5
      bit_width: 1
      description: "Determines whether RESTART conditions may be sent when acting
        as a master. Some older slaves do not support handling RESTART conditions;
        however, RESTART conditions are used in several DW_apb_i2c operations. When
        RESTART is disabled, the master is prohibited from performing the following
        functions: - Sending a START BYTE - Performing any high-speed mode operation
        - High-speed mode operation - Performing direction changes in combined format
        mode - Performing a read operation with a 10-bit address By replacing RESTART
        condition followed by a STOP and a subsequent START condition, split operations
        are broken down into multiple DW_apb_i2c transfers. If the above operations
        are performed, it will result in setting bit 6 (TX_ABRT) of the IC_RAW_INTR_STAT
        register.\\n\\n\n                Reset value: ENABLED"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: IC_10BITADDR_MASTER
      bit_offset: 4
      bit_width: 1
      description: 'Controls whether the DW_apb_i2c starts its transfers in 7- or
        10-bit addressing mode when acting as a master. - 0: 7-bit addressing - 1:
        10-bit addressing'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADDR_7BITS
        1: ADDR_10BITS
    - !Field
      name: IC_10BITADDR_SLAVE
      bit_offset: 3
      bit_width: 1
      description: 'When acting as a slave, this bit controls whether the DW_apb_i2c
        responds to 7- or 10-bit addresses. - 0: 7-bit addressing. The DW_apb_i2c
        ignores transactions that involve 10-bit addressing; for 7-bit addressing,
        only the lower 7 bits of the IC_SAR register are compared. - 1: 10-bit addressing.
        The DW_apb_i2c responds to only 10-bit addressing transfers that match the
        full 10 bits of the IC_SAR register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADDR_7BITS
        1: ADDR_10BITS
    - !Field
      name: SPEED
      bit_offset: 1
      bit_width: 2
      description: "These bits control at which speed the DW_apb_i2c operates; its
        setting is relevant only if one is operating the DW_apb_i2c in master mode.
        Hardware protects against illegal values being programmed by software. These
        bits must be programmed appropriately for slave mode also, as it is used to
        capture correct value of spike filter as per the speed mode.\\n\\n\n                This
        register should be programmed only with a value in the range of 1 to IC_MAX_SPEED_MODE;
        otherwise, hardware updates this register with the value of IC_MAX_SPEED_MODE.\\n\\n\n
        \               1: standard mode (100 kbit/s)\\n\\n\n                2: fast
        mode (<=400 kbit/s) or fast mode plus (<=1000Kbit/s)\\n\\n\n                3:
        high speed mode (3.4 Mbit/s)\\n\\n\n                Note: This field is not
        applicable when IC_ULTRA_FAST_MODE=1"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: STANDARD
        2: FAST
        3: HIGH
    - !Field
      name: MASTER_MODE
      bit_offset: 0
      bit_width: 1
      description: "This bit controls whether the DW_apb_i2c master is enabled.\\n\\n\n
        \               NOTE: Software should ensure that if this bit is written with
        '1' then bit 6 should also be written with a '1'."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_TAR
    addr: 0x40044004
    size_bits: 32
    description: "I2C Target Address Register\\n\\n\n            This register is
      12 bits wide, and bits 31:12 are reserved. This register can be written to only
      when IC_ENABLE[0] is set to 0.\\n\\n\n            Note: If the software or application
      is aware that the DW_apb_i2c is not using the TAR address for the pending commands
      in the Tx FIFO, then it is possible to update the TAR address even while the
      Tx FIFO has entries (IC_STATUS[2]= 0). - It is not necessary to perform any
      write to this register if DW_apb_i2c is enabled as an I2C slave only."
    reset_value: 0x55
    fields:
    - !Field
      name: SPECIAL
      bit_offset: 11
      bit_width: 1
      description: 'This bit indicates whether software performs a Device-ID or General
        Call or START BYTE command. - 0: ignore bit 10 GC_OR_START and use IC_TAR
        normally - 1: perform special I2C command as specified in Device_ID or GC_OR_START
        bit Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: GC_OR_START
      bit_offset: 10
      bit_width: 1
      description: 'If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is set to
        0, then this bit indicates whether a General Call or START byte command is
        to be performed by the DW_apb_i2c. - 0: General Call Address - after issuing
        a General Call, only writes may be performed. Attempting to issue a read command
        results in setting bit 6 (TX_ABRT) of the IC_RAW_INTR_STAT register. The DW_apb_i2c
        remains in General Call mode until the SPECIAL bit value (bit 11) is cleared.
        - 1: START BYTE Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: GENERAL_CALL
        1: START_BYTE
    - !Field
      name: IC_TAR
      bit_offset: 0
      bit_width: 10
      description: "This is the target address for any master transaction. When transmitting
        a General Call, these bits are ignored. To generate a START BYTE, the CPU
        needs to write only once into these bits.\\n\\n\n                If the IC_TAR
        and IC_SAR are the same, loopback exists but the FIFOs are shared between
        master and slave, so full loopback is not feasible. Only one direction loopback
        mode is supported (simplex), not duplex. A master cannot transmit to itself;
        it can transmit to only a slave."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SAR
    addr: 0x40044008
    size_bits: 32
    description: I2C Slave Address Register
    reset_value: 0x55
    fields:
    - !Field
      name: IC_SAR
      bit_offset: 0
      bit_width: 10
      description: "The IC_SAR holds the slave address when the I2C is operating as
        a slave. For 7-bit addressing, only IC_SAR[6:0] is used.\\n\\n\n                This
        register can be written only when the I2C interface is disabled, which corresponds
        to the IC_ENABLE[0] register being set to 0. Writes at other times have no
        effect.\\n\\n\n                Note: The default values cannot be any of the
        reserved address locations: that is, 0x00 to 0x07, or 0x78 to 0x7f. The correct
        operation of the device is not guaranteed if you program the IC_SAR or IC_TAR
        to a reserved value. Refer to <<table_I2C_firstbyte_bit_defs>> for a complete
        list of these reserved values."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_DATA_CMD
    addr: 0x40044010
    size_bits: 32
    description: "I2C Rx/Tx Data Buffer and Command Register; this is the register
      the CPU writes to when filling the TX FIFO and the CPU reads from when retrieving
      bytes from RX FIFO.\\n\\n\n            The size of the register changes as follows:\\n\\n\n
      \           Write: - 11 bits when IC_EMPTYFIFO_HOLD_MASTER_EN=1 - 9 bits when
      IC_EMPTYFIFO_HOLD_MASTER_EN=0 Read: - 12 bits when IC_FIRST_DATA_BYTE_STATUS
      = 1 - 8 bits when IC_FIRST_DATA_BYTE_STATUS = 0 Note: In order for the DW_apb_i2c
      to continue acknowledging reads, a read command should be written for every
      byte that is to be received; otherwise the DW_apb_i2c will stop acknowledging."
    fields:
    - !Field
      name: FIRST_DATA_BYTE
      bit_offset: 11
      bit_width: 1
      description: "Indicates the first data byte received after the address phase
        for receive transfer in Master receiver or Slave receiver mode.\\n\\n\n                Reset
        value : 0x0\\n\\n\n                NOTE:  In case of APB_DATA_WIDTH=8,\\n\\n\n
        \               1. The user has to perform two APB Reads to IC_DATA_CMD in
        order to get status on 11 bit.\\n\\n\n                2. In order to read
        the 11 bit, the user has to perform the first data byte read [7:0] (offset
        0x10) and then perform the second read [15:8] (offset 0x11) in order to know
        the status of 11 bit (whether the data received in previous read is a first
        data byte or not).\\n\\n\n                3. The 11th bit is an optional read
        field, user can ignore 2nd byte read [15:8] (offset 0x11) if not interested
        in FIRST_DATA_BYTE status."
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RESTART
      bit_offset: 10
      bit_width: 1
      description: "This bit controls whether a RESTART is issued before the byte
        is sent or received.\\n\\n\n                1 - If IC_RESTART_EN is 1, a RESTART
        is issued before the data is sent/received (according to the value of CMD),
        regardless of whether or not the transfer direction is changing from the previous
        command; if IC_RESTART_EN is 0, a STOP followed by a START is issued instead.\\n\\n\n
        \               0 - If IC_RESTART_EN is 1, a RESTART is issued only if the
        transfer direction is changing from the previous command; if IC_RESTART_EN
        is 0, a STOP followed by a START is issued instead.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: STOP
      bit_offset: 9
      bit_width: 1
      description: "This bit controls whether a STOP is issued after the byte is sent
        or received.\\n\\n\n                - 1 - STOP is issued after this byte,
        regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty,
        the master immediately tries to start a new transfer by issuing a START and
        arbitrating for the bus. - 0 - STOP is not issued after this byte, regardless
        of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master
        continues the current transfer by sending/receiving data bytes according to
        the value of the CMD bit. If the Tx FIFO is empty, the master holds the SCL
        line low and stalls the bus until a new command is available in the Tx FIFO.
        Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: CMD
      bit_offset: 8
      bit_width: 1
      description: "This bit controls whether a read or a write is performed. This
        bit does not control the direction when the DW_apb_i2con acts as a slave.
        It controls only the direction when it acts as a master.\\n\\n\n                When
        a command is entered in the TX FIFO, this bit distinguishes the write and
        read commands. In slave-receiver mode, this bit is a 'don't care' because
        writes to this register are not required. In slave-transmitter mode, a '0'
        indicates that the data in IC_DATA_CMD is to be transmitted.\\n\\n\n                When
        programming this bit, you should remember the following: attempting to perform
        a read operation after a General Call command has been sent results in a TX_ABRT
        interrupt (bit 6 of the IC_RAW_INTR_STAT register), unless bit 11 (SPECIAL)
        in the IC_TAR register has been cleared. If a '1' is written to this bit after
        receiving a RD_REQ interrupt, then a TX_ABRT interrupt occurs.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: WRITE
        1: READ
    - !Field
      name: DAT
      bit_offset: 0
      bit_width: 8
      description: "This register contains the data to be transmitted or received
        on the I2C bus. If you are writing to this register and want to perform a
        read, bits 7:0 (DAT) are ignored by the DW_apb_i2c. However, when you read
        this register, these bits return the value of data received on the DW_apb_i2c
        interface.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SS_SCL_HCNT
    addr: 0x40044014
    size_bits: 32
    description: Standard Speed I2C Clock SCL High Count Register
    reset_value: 0x28
    fields:
    - !Field
      name: IC_SS_SCL_HCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock high-period
        count for standard speed. For more information, refer to 'IC_CLK Frequency
        Configuration'.\\n\\n\n                This register can be written only when
        the I2C interface is disabled which corresponds to the IC_ENABLE[0] register
        being set to 0. Writes at other times have no effect.\\n\\n\n                The
        minimum valid value is 6; hardware prevents values less than this being written,
        and if attempted results in 6 being set. For designs with APB_DATA_WIDTH =
        8, the order of programming is important to ensure the correct operation of
        the DW_apb_i2c. The lower byte must be programmed first. Then the upper byte
        is programmed.\\n\\n\n                NOTE: This register must not be programmed
        to a value higher than 65525, because DW_apb_i2c uses a 16-bit counter to
        flag an I2C bus idle condition when this counter reaches a value of IC_SS_SCL_HCNT
        + 10."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SS_SCL_LCNT
    addr: 0x40044018
    size_bits: 32
    description: Standard Speed I2C Clock SCL Low Count Register
    reset_value: 0x2f
    fields:
    - !Field
      name: IC_SS_SCL_LCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock low period
        count for standard speed. For more information, refer to 'IC_CLK Frequency
        Configuration'\\n\\n\n                This register can be written only when
        the I2C interface is disabled which corresponds to the IC_ENABLE[0] register
        being set to 0. Writes at other times have no effect.\\n\\n\n                The
        minimum valid value is 8; hardware prevents values less than this being written,
        and if attempted, results in 8 being set. For designs with APB_DATA_WIDTH
        = 8, the order of programming is important to ensure the correct operation
        of DW_apb_i2c. The lower byte must be programmed first, and then the upper
        byte is programmed."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_FS_SCL_HCNT
    addr: 0x4004401c
    size_bits: 32
    description: Fast Mode or Fast Mode Plus I2C Clock SCL High Count Register
    reset_value: 0x6
    fields:
    - !Field
      name: IC_FS_SCL_HCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock high-period
        count for fast mode or fast mode plus. It is used in high-speed mode to send
        the Master Code and START BYTE or General CALL. For more information, refer
        to 'IC_CLK Frequency Configuration'.\\n\\n\n                This register
        goes away and becomes read-only returning 0s if IC_MAX_SPEED_MODE = standard.
        This register can be written only when the I2C interface is disabled, which
        corresponds to the IC_ENABLE[0] register being set to 0. Writes at other times
        have no effect.\\n\\n\n                The minimum valid value is 6; hardware
        prevents values less than this being written, and if attempted results in
        6 being set. For designs with APB_DATA_WIDTH == 8 the order of programming
        is important to ensure the correct operation of the DW_apb_i2c. The lower
        byte must be programmed first. Then the upper byte is programmed."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_FS_SCL_LCNT
    addr: 0x40044020
    size_bits: 32
    description: Fast Mode or Fast Mode Plus I2C Clock SCL Low Count Register
    reset_value: 0xd
    fields:
    - !Field
      name: IC_FS_SCL_LCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock low period
        count for fast speed. It is used in high-speed mode to send the Master Code
        and START BYTE or General CALL. For more information, refer to 'IC_CLK Frequency
        Configuration'.\\n\\n\n                This register goes away and becomes
        read-only returning 0s if IC_MAX_SPEED_MODE = standard.\\n\\n\n                This
        register can be written only when the I2C interface is disabled, which corresponds
        to the IC_ENABLE[0] register being set to 0. Writes at other times have no
        effect.\\n\\n\n                The minimum valid value is 8; hardware prevents
        values less than this being written, and if attempted results in 8 being set.
        For designs with APB_DATA_WIDTH = 8 the order of programming is important
        to ensure the correct operation of the DW_apb_i2c. The lower byte must be
        programmed first. Then the upper byte is programmed. If the value is less
        than 8 then the count value gets changed to 8."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_INTR_STAT
    addr: 0x4004402c
    size_bits: 32
    description: "I2C Interrupt Status Register\\n\\n\n            Each bit in this
      register has a corresponding mask bit in the IC_INTR_MASK register. These bits
      are cleared by reading the matching interrupt clear register. The unmasked raw
      versions of these bits are available in the IC_RAW_INTR_STAT register."
    fields:
    - !Field
      name: R_MASTER_ON_HOLD
      bit_offset: 13
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_MASTER_ON_HOLD
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RESTART_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_GEN_CALL
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_START_DET
      bit_offset: 10
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_START_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_STOP_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_ACTIVITY
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_DONE bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_ABRT bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RD_REQ bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_EMPTY
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_OVER bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_FULL bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_OVER bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_UNDER
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_INTR_MASK
    addr: 0x40044030
    size_bits: 32
    description: "I2C Interrupt Mask Register.\\n\\n\n            These bits mask
      their corresponding interrupt status bits. This register is active low; a value
      of 0 masks the interrupt, whereas a value of 1 unmasks the interrupt."
    reset_value: 0x8ff
    fields:
    - !Field
      name: M_MASTER_ON_HOLD_READ_ONLY
      bit_offset: 13
      bit_width: 1
      description: "This M_MASTER_ON_HOLD_read_only bit masks the R_MASTER_ON_HOLD
        interrupt in IC_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "This bit masks the R_RESTART_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_START_DET
      bit_offset: 10
      bit_width: 1
      description: "This bit masks the R_START_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "This bit masks the R_STOP_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "This bit masks the R_RX_DONE interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "This bit masks the R_RD_REQ interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "This bit masks the R_TX_OVER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "This bit masks the R_RX_FULL interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "This bit masks the R_RX_OVER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
  - !Register
    name: IC_RAW_INTR_STAT
    addr: 0x40044034
    size_bits: 32
    description: "I2C Raw Interrupt Status Register\\n\\n\n            Unlike the
      IC_INTR_STAT register, these bits are not masked so they always show the true
      status of the DW_apb_i2c."
    fields:
    - !Field
      name: MASTER_ON_HOLD
      bit_offset: 13
      bit_width: 1
      description: "Indicates whether master is holding the bus and TX FIFO is empty.
        Enabled only when I2C_DYNAMIC_TAR_UPDATE=1 and IC_EMPTYFIFO_HOLD_MASTER_EN=1.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "Indicates whether a RESTART condition has occurred on the I2C
        interface when DW_apb_i2c is operating in Slave mode and the slave is being
        addressed. Enabled only when IC_SLV_RESTART_DET_EN=1.\\n\\n\n                Note:
        However, in high-speed mode or during a START BYTE transfer, the RESTART comes
        before the address field as per the I2C protocol. In this case, the slave
        is not the addressed slave when the RESTART is issued, therefore DW_apb_i2c
        does not generate the RESTART_DET interrupt.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "Set only when a General Call address is received and it is acknowledged.
        It stays set until it is cleared either by disabling DW_apb_i2c or when the
        CPU reads bit 0 of the IC_CLR_GEN_CALL register. DW_apb_i2c stores the received
        data in the Rx buffer.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: START_DET
      bit_offset: 10
      bit_width: 1
      description: "Indicates whether a START or RESTART condition has occurred on
        the I2C interface regardless of whether DW_apb_i2c is operating in slave or
        master mode.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "Indicates whether a STOP condition has occurred on the I2C interface
        regardless of whether DW_apb_i2c is operating in slave or master mode.\\n\\n\n
        \               In Slave Mode: - If IC_CON[7]=1'b1  (STOP_DET_IFADDRESSED),
        the STOP_DET interrupt will be issued only if slave is addressed. Note: During
        a general call address, this slave does not issue a STOP_DET interrupt if
        STOP_DET_IF_ADDRESSED=1'b1, even if the slave responds to the general call
        address by generating ACK. The STOP_DET interrupt is generated only when the
        transmitted address matches the slave address (SAR). - If IC_CON[7]=1'b0 (STOP_DET_IFADDRESSED),
        the STOP_DET interrupt is issued irrespective of whether it is being addressed.
        In Master Mode: - If IC_CON[10]=1'b1  (STOP_DET_IF_MASTER_ACTIVE),the STOP_DET
        interrupt will be issued only if Master is active. - If IC_CON[10]=1'b0  (STOP_DET_IFADDRESSED),the
        STOP_DET interrupt will be issued irrespective of whether master is active
        or not. Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "This bit captures DW_apb_i2c activity and stays set until it is
        cleared. There are four ways to clear it: - Disabling the DW_apb_i2c - Reading
        the IC_CLR_ACTIVITY register - Reading the IC_CLR_INTR register - System reset
        Once this bit is set, it stays set unless one of the four methods is used
        to clear it. Even if the DW_apb_i2c module is idle, this bit remains set until
        cleared, indicating that there was activity on the bus.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "When the DW_apb_i2c is acting as a slave-transmitter, this bit
        is set to 1 if the master does not acknowledge a transmitted byte. This occurs
        on the last byte of the transmission, indicating that the transmission is
        done.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "This bit indicates if DW_apb_i2c, as an I2C transmitter, is unable
        to complete the intended actions on the contents of the transmit FIFO. This
        situation can occur both as an I2C master or an I2C slave, and is referred
        to as a 'transmit abort'. When this bit is set to 1, the IC_TX_ABRT_SOURCE
        register indicates the reason why the transmit abort takes places.\\n\\n\n
        \               Note:  The DW_apb_i2c flushes/resets/empties the TX_FIFO and
        RX_FIFO whenever there is a transmit abort caused by any of the events tracked
        by the IC_TX_ABRT_SOURCE register. The FIFOs remains in this flushed state
        until the register IC_CLR_TX_ABRT is read. Once this read is performed, the
        Tx FIFO is then ready to accept more data bytes from the APB interface.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "This bit is set to 1 when DW_apb_i2c is acting as a slave and
        another I2C master is attempting to read data from DW_apb_i2c. The DW_apb_i2c
        holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced,
        which means that the slave has been addressed by a remote master that is asking
        for data to be transferred. The processor must respond to this interrupt and
        then write the requested data to the IC_DATA_CMD register. This bit is set
        to 0 just after the processor reads the IC_CLR_RD_REQ register.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "The behavior of the TX_EMPTY interrupt status differs based on
        the TX_EMPTY_CTRL selection in the IC_CON register. - When TX_EMPTY_CTRL =
        0: This bit is set to 1 when the transmit buffer is at or below the threshold
        value set in the IC_TX_TL register. - When TX_EMPTY_CTRL = 1: This bit is
        set to 1 when the transmit buffer is at or below the threshold value set in
        the IC_TX_TL register and the transmission of the address/data from the internal
        shift register for the most recently popped command is completed. It is automatically
        cleared by hardware when the buffer level goes above the threshold. When IC_ENABLE[0]
        is set to 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks
        like it has no data within it, so this bit is set to 1, provided there is
        activity in the master or slave state machines. When there is no longer any
        activity, then with ic_en=0, this bit is set to 0.\\n\\n\n                Reset
        value: 0x0."
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "Set during transmit if the transmit buffer is filled to IC_TX_BUFFER_DEPTH
        and the processor attempts to issue another I2C command by writing to the
        IC_DATA_CMD register. When the module is disabled, this bit keeps its level
        until the master or slave state machines go into idle, and when ic_en goes
        to 0, this interrupt is cleared.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "Set when the receive buffer reaches or goes above the RX_TL threshold
        in the IC_RX_TL register. It is automatically cleared by hardware when buffer
        level goes below the threshold. If the module is disabled (IC_ENABLE[0]=0),
        the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full.
        So this bit is cleared once the IC_ENABLE bit 0 is programmed with a 0, regardless
        of the activity that continues.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "Set if the receive buffer is completely filled to IC_RX_BUFFER_DEPTH
        and an additional byte is received from an external I2C device. The DW_apb_i2c
        acknowledges this, but any data bytes received after the FIFO is full are
        lost. If the module is disabled (IC_ENABLE[0]=0), this bit keeps its level
        until the master or slave state machines go into idle, and when ic_en goes
        to 0, this interrupt is cleared.\\n\\n\n                Note:  If bit 9 of
        the IC_CON register (RX_FIFO_FULL_HLD_CTRL) is programmed to HIGH, then the
        RX_OVER interrupt never occurs, because the Rx FIFO never overflows.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "Set if the processor attempts to read the receive buffer when
        it is empty by reading from the IC_DATA_CMD register. If the module is disabled
        (IC_ENABLE[0]=0), this bit keeps its level until the master or slave state
        machines go into idle, and when ic_en goes to 0, this interrupt is cleared.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_RX_TL
    addr: 0x40044038
    size_bits: 32
    description: I2C Receive FIFO Threshold Register
    fields:
    - !Field
      name: RX_TL
      bit_offset: 0
      bit_width: 8
      description: "Receive FIFO Threshold Level.\\n\\n\n                Controls
        the level of entries (or above) that triggers the RX_FULL interrupt (bit 2
        in IC_RAW_INTR_STAT register). The valid range is 0-255, with the additional
        restriction that hardware does not allow this value to be set to a value larger
        than the depth of the buffer. If an attempt is made to do that, the actual
        value set will be the maximum depth of the buffer. A value of 0 sets the threshold
        for 1 entry, and a value of 255 sets the threshold for 256 entries."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_TX_TL
    addr: 0x4004403c
    size_bits: 32
    description: I2C Transmit FIFO Threshold Register
    fields:
    - !Field
      name: TX_TL
      bit_offset: 0
      bit_width: 8
      description: "Transmit FIFO Threshold Level.\\n\\n\n                Controls
        the level of entries (or below) that trigger the TX_EMPTY interrupt (bit 4
        in IC_RAW_INTR_STAT register). The valid range is 0-255, with the additional
        restriction that it may not be set to value larger than the depth of the buffer.
        If an attempt is made to do that, the actual value set will be the maximum
        depth of the buffer. A value of 0 sets the threshold for 0 entries, and a
        value of 255 sets the threshold for 255 entries."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_CLR_INTR
    addr: 0x40044040
    size_bits: 32
    description: Clear Combined and Individual Interrupt Register
    fields:
    - !Field
      name: CLR_INTR
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the combined interrupt, all individual
        interrupts, and the IC_TX_ABRT_SOURCE register. This bit does not clear hardware
        clearable interrupts but software clearable interrupts. Refer to Bit 9 of
        the IC_TX_ABRT_SOURCE register for an exception to clearing IC_TX_ABRT_SOURCE.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_UNDER
    addr: 0x40044044
    size_bits: 32
    description: Clear RX_UNDER Interrupt Register
    fields:
    - !Field
      name: CLR_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_UNDER interrupt (bit 0) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_OVER
    addr: 0x40044048
    size_bits: 32
    description: Clear RX_OVER Interrupt Register
    fields:
    - !Field
      name: CLR_RX_OVER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_OVER interrupt (bit 1) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_TX_OVER
    addr: 0x4004404c
    size_bits: 32
    description: Clear TX_OVER Interrupt Register
    fields:
    - !Field
      name: CLR_TX_OVER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the TX_OVER interrupt (bit 3) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RD_REQ
    addr: 0x40044050
    size_bits: 32
    description: Clear RD_REQ Interrupt Register
    fields:
    - !Field
      name: CLR_RD_REQ
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RD_REQ interrupt (bit 5) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_TX_ABRT
    addr: 0x40044054
    size_bits: 32
    description: Clear TX_ABRT Interrupt Register
    fields:
    - !Field
      name: CLR_TX_ABRT
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the TX_ABRT interrupt (bit 6) of the
        IC_RAW_INTR_STAT register, and the IC_TX_ABRT_SOURCE register. This also releases
        the TX FIFO from the flushed/reset state, allowing more writes to the TX FIFO.
        Refer to Bit 9 of the IC_TX_ABRT_SOURCE register for an exception to clearing
        IC_TX_ABRT_SOURCE.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_DONE
    addr: 0x40044058
    size_bits: 32
    description: Clear RX_DONE Interrupt Register
    fields:
    - !Field
      name: CLR_RX_DONE
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_DONE interrupt (bit 7) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_ACTIVITY
    addr: 0x4004405c
    size_bits: 32
    description: Clear ACTIVITY Interrupt Register
    fields:
    - !Field
      name: CLR_ACTIVITY
      bit_offset: 0
      bit_width: 1
      description: "Reading this register clears the ACTIVITY interrupt if the I2C
        is not active anymore. If the I2C module is still active on the bus, the ACTIVITY
        interrupt bit continues to be set. It is automatically cleared by hardware
        if the module is disabled and if there is no further activity on the bus.
        The value read from this register to get status of the ACTIVITY interrupt
        (bit 8) of the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value:
        0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_STOP_DET
    addr: 0x40044060
    size_bits: 32
    description: Clear STOP_DET Interrupt Register
    fields:
    - !Field
      name: CLR_STOP_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the STOP_DET interrupt (bit 9) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_START_DET
    addr: 0x40044064
    size_bits: 32
    description: Clear START_DET Interrupt Register
    fields:
    - !Field
      name: CLR_START_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the START_DET interrupt (bit 10) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_GEN_CALL
    addr: 0x40044068
    size_bits: 32
    description: Clear GEN_CALL Interrupt Register
    fields:
    - !Field
      name: CLR_GEN_CALL
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the GEN_CALL interrupt (bit 11) of
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_ENABLE
    addr: 0x4004406c
    size_bits: 32
    description: I2C Enable Register
    fields:
    - !Field
      name: TX_CMD_BLOCK
      bit_offset: 2
      bit_width: 1
      description: 'In Master mode: - 1''b1: Blocks the transmission of data on I2C
        bus even if Tx FIFO has data to transmit. - 1''b0: The transmission of data
        starts on I2C bus automatically, as soon as the first data is available in
        the Tx FIFO. Note: To block the execution of Master commands, set the TX_CMD_BLOCK
        bit only when Tx FIFO is empty (IC_STATUS[2]==1) and Master is in Idle state
        (IC_STATUS[5] == 0). Any further commands put in the Tx FIFO are not executed
        until TX_CMD_BLOCK bit is unset. Reset value:  IC_TX_CMD_BLOCK_DEFAULT'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_BLOCKED
        1: BLOCKED
    - !Field
      name: ABORT
      bit_offset: 1
      bit_width: 1
      description: "When set, the controller initiates the transfer abort. - 0: ABORT
        not initiated or ABORT done - 1: ABORT operation in progress The software
        can abort the I2C transfer in master mode by setting this bit. The software
        can set this bit only when ENABLE is already set; otherwise, the controller
        ignores any write to ABORT bit. The software cannot clear the ABORT bit once
        set. In response to an ABORT, the controller issues a STOP and flushes the
        Tx FIFO after completing the current transfer, then sets the TX_ABORT interrupt
        after the abort operation. The ABORT bit is cleared automatically after the
        abort operation.\\n\\n\n                For a detailed description on how
        to abort I2C transfers, refer to 'Aborting I2C Transfers'.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLED
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: "Controls whether the DW_apb_i2c is enabled. - 0: Disables DW_apb_i2c
        (TX and RX FIFOs are held in an erased state) - 1: Enables DW_apb_i2c Software
        can disable DW_apb_i2c while it is active. However, it is important that care
        be taken to ensure that DW_apb_i2c is disabled properly. A recommended procedure
        is described in 'Disabling DW_apb_i2c'.\\n\\n\n                When DW_apb_i2c
        is disabled, the following occurs: - The TX FIFO and RX FIFO get flushed.
        - Status bits in the IC_INTR_STAT register are still active until DW_apb_i2c
        goes into IDLE state. If the module is transmitting, it stops as well as deletes
        the contents of the transmit buffer after the current transfer is complete.
        If the module is receiving, the DW_apb_i2c stops the current transfer at the
        end of the current byte and does not acknowledge the transfer.\\n\\n\n                In
        systems with asynchronous pclk and ic_clk when IC_CLK_TYPE parameter set to
        asynchronous (1), there is a two ic_clk delay when enabling or disabling the
        DW_apb_i2c. For a detailed description on how to disable DW_apb_i2c, refer
        to 'Disabling DW_apb_i2c'\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_STATUS
    addr: 0x40044070
    size_bits: 32
    description: "I2C Status Register\\n\\n\n            This is a read-only register
      used to indicate the current transfer status and FIFO status. The status register
      may be read at any time. None of the bits in this register request an interrupt.\\n\\n\n
      \           When the I2C is disabled by writing 0 in bit 0 of the IC_ENABLE
      register: - Bits 1 and 2 are set to 1 - Bits 3 and 10 are set to 0 When the
      master or slave state machines goes to idle and ic_en=0: - Bits 5 and 6 are
      set to 0"
    reset_value: 0x6
    fields:
    - !Field
      name: SLV_ACTIVITY
      bit_offset: 6
      bit_width: 1
      description: 'Slave FSM Activity Status. When the Slave Finite State Machine
        (FSM) is not in the IDLE state, this bit is set. - 0: Slave FSM is in IDLE
        state so the Slave part of DW_apb_i2c is not Active - 1: Slave FSM is not
        in IDLE state so the Slave part of DW_apb_i2c is Active Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: ACTIVE
    - !Field
      name: MST_ACTIVITY
      bit_offset: 5
      bit_width: 1
      description: "Master FSM Activity Status. When the Master Finite State Machine
        (FSM) is not in the IDLE state, this bit is set. - 0: Master FSM is in IDLE
        state so the Master part of DW_apb_i2c is not Active - 1: Master FSM is not
        in IDLE state so the Master part of DW_apb_i2c is Active Note: IC_STATUS[0]-that
        is, ACTIVITY bit-is the OR of SLV_ACTIVITY and MST_ACTIVITY bits.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: ACTIVE
    - !Field
      name: RFF
      bit_offset: 4
      bit_width: 1
      description: 'Receive FIFO Completely Full. When the receive FIFO is completely
        full, this bit is set. When the receive FIFO contains one or more empty location,
        this bit is cleared. - 0: Receive FIFO is not full - 1: Receive FIFO is full
        Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_FULL
        1: FULL
    - !Field
      name: RFNE
      bit_offset: 3
      bit_width: 1
      description: 'Receive FIFO Not Empty. This bit is set when the receive FIFO
        contains one or more entries; it is cleared when the receive FIFO is empty.
        - 0: Receive FIFO is empty - 1: Receive FIFO is not empty Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: EMPTY
        1: NOT_EMPTY
    - !Field
      name: TFE
      bit_offset: 2
      bit_width: 1
      description: 'Transmit FIFO Completely Empty. When the transmit FIFO is completely
        empty, this bit is set. When it contains one or more valid entries, this bit
        is cleared. This bit field does not request an interrupt. - 0: Transmit FIFO
        is not empty - 1: Transmit FIFO is empty Reset value: 0x1'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NON_EMPTY
        1: EMPTY
    - !Field
      name: TFNF
      bit_offset: 1
      bit_width: 1
      description: 'Transmit FIFO Not Full. Set when the transmit FIFO contains one
        or more empty locations, and is cleared when the FIFO is full. - 0: Transmit
        FIFO is full - 1: Transmit FIFO is not full Reset value: 0x1'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: FULL
        1: NOT_FULL
    - !Field
      name: ACTIVITY
      bit_offset: 0
      bit_width: 1
      description: 'I2C Activity Status. Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_TXFLR
    addr: 0x40044074
    size_bits: 32
    description: 'I2C Transmit FIFO Level Register This register contains the number
      of valid data entries in the transmit FIFO buffer. It is cleared whenever: -
      The I2C is disabled - There is a transmit abort - that is, TX_ABRT bit is set
      in the IC_RAW_INTR_STAT register - The slave bulk transmit mode is aborted The
      register increments whenever data is placed into the transmit FIFO and decrements
      when data is taken from the transmit FIFO.'
    fields:
    - !Field
      name: TXFLR
      bit_offset: 0
      bit_width: 5
      description: "Transmit FIFO Level. Contains the number of valid data entries
        in the transmit FIFO.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_RXFLR
    addr: 0x40044078
    size_bits: 32
    description: 'I2C Receive FIFO Level Register This register contains the number
      of valid data entries in the receive FIFO buffer. It is cleared whenever: -
      The I2C is disabled - Whenever there is a transmit abort caused by any of the
      events tracked in IC_TX_ABRT_SOURCE The register increments whenever data is
      placed into the receive FIFO and decrements when data is taken from the receive
      FIFO.'
    fields:
    - !Field
      name: RXFLR
      bit_offset: 0
      bit_width: 5
      description: "Receive FIFO Level. Contains the number of valid data entries
        in the receive FIFO.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_SDA_HOLD
    addr: 0x4004407c
    size_bits: 32
    description: "I2C SDA Hold Time Length Register\\n\\n\n            The bits [15:0]
      of this register are used to control the hold time of SDA during transmit in
      both slave and master mode (after SCL goes from HIGH to LOW).\\n\\n\n            The
      bits [23:16] of this register are used to extend the SDA transition (if any)
      whenever SCL is HIGH in the receiver in either master or slave mode.\\n\\n\n
      \           Writes to this register succeed only when IC_ENABLE[0]=0.\\n\\n\n
      \           The values in this register are in units of ic_clk period. The value
      programmed in IC_SDA_TX_HOLD must be greater than the minimum hold time in each
      mode one cycle in master mode, seven cycles in slave mode for the value to be
      implemented.\\n\\n\n            The programmed SDA hold time during transmit
      (IC_SDA_TX_HOLD) cannot exceed at any time the duration of the low part of scl.
      Therefore the programmed value cannot be larger than N_SCL_LOW-2, where N_SCL_LOW
      is the duration of the low part of the scl period measured in ic_clk cycles."
    reset_value: 0x1
    fields:
    - !Field
      name: IC_SDA_RX_HOLD
      bit_offset: 16
      bit_width: 8
      description: "Sets the required SDA hold time in units of ic_clk period, when
        DW_apb_i2c acts as a receiver.\\n\\n\n                Reset value: IC_DEFAULT_SDA_HOLD[23:16]."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IC_SDA_TX_HOLD
      bit_offset: 0
      bit_width: 16
      description: "Sets the required SDA hold time in units of ic_clk period, when
        DW_apb_i2c acts as a transmitter.\\n\\n\n                Reset value: IC_DEFAULT_SDA_HOLD[15:0]."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_TX_ABRT_SOURCE
    addr: 0x40044080
    size_bits: 32
    description: "I2C Transmit Abort Source Register\\n\\n\n            This register
      has 32 bits that indicate the source of the TX_ABRT bit. Except for Bit 9, this
      register is cleared whenever the IC_CLR_TX_ABRT register or the IC_CLR_INTR
      register is read. To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must
      be fixed first; RESTART must be enabled (IC_CON[5]=1), the SPECIAL bit must
      be cleared (IC_TAR[11]), or the GC_OR_START bit must be cleared (IC_TAR[10]).\\n\\n\n
      \           Once the source of the ABRT_SBYTE_NORSTRT is fixed, then this bit
      can be cleared in the same manner as other bits in this register. If the source
      of the ABRT_SBYTE_NORSTRT is not fixed before attempting to clear this bit,
      Bit 9 clears for one cycle and is then re-asserted."
    fields:
    - !Field
      name: TX_FLUSH_CNT
      bit_offset: 23
      bit_width: 9
      description: "This field indicates the number of Tx FIFO Data Commands which
        are flushed due to TX_ABRT interrupt. It is cleared whenever I2C is disabled.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter or Slave-Transmitter"
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABRT_USER_ABRT
      bit_offset: 16
      bit_width: 1
      description: "This is a master-mode-only bit. Master has detected the transfer
        abort (IC_ENABLE[1])\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_USER_ABRT_VOID
        1: ABRT_USER_ABRT_GENERATED
    - !Field
      name: ABRT_SLVRD_INTX
      bit_offset: 15
      bit_width: 1
      description: "1: When the processor side responds to a slave mode request for
        data to be transmitted to a remote master and user writes a 1 in CMD (bit
        8) of IC_DATA_CMD register.\\n\\n\n                Reset value: 0x0\\n\\n\n
        \               Role of DW_apb_i2c:  Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLVRD_INTX_VOID
        1: ABRT_SLVRD_INTX_GENERATED
    - !Field
      name: ABRT_SLV_ARBLOST
      bit_offset: 14
      bit_width: 1
      description: "This field indicates that a Slave has lost the bus while transmitting
        data to a remote master. IC_TX_ABRT_SOURCE[12] is set at the same time. Note:
        \ Even though the slave never 'owns' the bus, something could go wrong on
        the bus. This is a fail safe check. For instance, during a data transmission
        at the low-to-high transition of SCL, if what is on the data bus is not what
        is supposed to be transmitted, then DW_apb_i2c no longer own the bus.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLV_ARBLOST_VOID
        1: ABRT_SLV_ARBLOST_GENERATED
    - !Field
      name: ABRT_SLVFLUSH_TXFIFO
      bit_offset: 13
      bit_width: 1
      description: "This field specifies that the Slave has received a read command
        and some data exists in the TX FIFO, so the slave issues a TX_ABRT interrupt
        to flush old data in TX FIFO.\\n\\n\n                Reset value: 0x0\\n\\n\n
        \               Role of DW_apb_i2c:  Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLVFLUSH_TXFIFO_VOID
        1: ABRT_SLVFLUSH_TXFIFO_GENERATED
    - !Field
      name: ARB_LOST
      bit_offset: 12
      bit_width: 1
      description: "This field specifies that the Master has lost arbitration, or
        if IC_TX_ABRT_SOURCE[14] is also set, then the slave transmitter has lost
        arbitration.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_LOST_VOID
        1: ABRT_LOST_GENERATED
    - !Field
      name: ABRT_MASTER_DIS
      bit_offset: 11
      bit_width: 1
      description: "This field indicates that the User tries to initiate a Master
        operation with the Master mode disabled.\\n\\n\n                Reset value:
        0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_MASTER_DIS_VOID
        1: ABRT_MASTER_DIS_GENERATED
    - !Field
      name: ABRT_10B_RD_NORSTRT
      bit_offset: 10
      bit_width: 1
      description: "This field indicates that the restart is disabled (IC_RESTART_EN
        bit (IC_CON[5]) =0) and the master sends a read command in 10-bit addressing
        mode.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_10B_RD_VOID
        1: ABRT_10B_RD_GENERATED
    - !Field
      name: ABRT_SBYTE_NORSTRT
      bit_offset: 9
      bit_width: 1
      description: "To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must be fixed
        first; restart must be enabled (IC_CON[5]=1), the SPECIAL bit must be cleared
        (IC_TAR[11]), or the GC_OR_START bit must be cleared (IC_TAR[10]). Once the
        source of the ABRT_SBYTE_NORSTRT is fixed, then this bit can be cleared in
        the same manner as other bits in this register. If the source of the ABRT_SBYTE_NORSTRT
        is not fixed before attempting to clear this bit, bit 9 clears for one cycle
        and then gets reasserted. When this field is set to 1, the restart is disabled
        (IC_RESTART_EN bit (IC_CON[5]) =0) and the user is trying to send a START
        Byte.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SBYTE_NORSTRT_VOID
        1: ABRT_SBYTE_NORSTRT_GENERATED
    - !Field
      name: ABRT_HS_NORSTRT
      bit_offset: 8
      bit_width: 1
      description: "This field indicates that the restart is disabled (IC_RESTART_EN
        bit (IC_CON[5]) =0) and the user is trying to use the master to transfer data
        in High Speed mode.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_HS_NORSTRT_VOID
        1: ABRT_HS_NORSTRT_GENERATED
    - !Field
      name: ABRT_SBYTE_ACKDET
      bit_offset: 7
      bit_width: 1
      description: "This field indicates that the Master has sent a START Byte and
        the START Byte was acknowledged (wrong behavior).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SBYTE_ACKDET_VOID
        1: ABRT_SBYTE_ACKDET_GENERATED
    - !Field
      name: ABRT_HS_ACKDET
      bit_offset: 6
      bit_width: 1
      description: "This field indicates that the Master is in High Speed mode and
        the High Speed Master code was acknowledged (wrong behavior).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_HS_ACK_VOID
        1: ABRT_HS_ACK_GENERATED
    - !Field
      name: ABRT_GCALL_READ
      bit_offset: 5
      bit_width: 1
      description: "This field indicates that DW_apb_i2c in the master mode has sent
        a General Call but the user programmed the byte following the General Call
        to be a read from the bus (IC_DATA_CMD[9] is set to 1).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_GCALL_READ_VOID
        1: ABRT_GCALL_READ_GENERATED
    - !Field
      name: ABRT_GCALL_NOACK
      bit_offset: 4
      bit_width: 1
      description: "This field indicates that DW_apb_i2c in master mode has sent a
        General Call and no slave on the bus acknowledged the General Call.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_GCALL_NOACK_VOID
        1: ABRT_GCALL_NOACK_GENERATED
    - !Field
      name: ABRT_TXDATA_NOACK
      bit_offset: 3
      bit_width: 1
      description: "This field indicates the master-mode only bit. When the master
        receives an acknowledgement for the address, but when it sends data byte(s)
        following the address, it did not receive an acknowledge from the remote slave(s).\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_TXDATA_NOACK_VOID
        1: ABRT_TXDATA_NOACK_GENERATED
    - !Field
      name: ABRT_10ADDR2_NOACK
      bit_offset: 2
      bit_width: 1
      description: "This field indicates that the Master is in 10-bit address mode
        and that the second address byte of the 10-bit address was not acknowledged
        by any slave.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ABRT_10ADDR1_NOACK
      bit_offset: 1
      bit_width: 1
      description: "This field indicates that the Master is in 10-bit address mode
        and the first 10-bit address byte was not acknowledged by any slave.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ABRT_7B_ADDR_NOACK
      bit_offset: 0
      bit_width: 1
      description: "This field indicates that the Master is in 7-bit addressing mode
        and the address sent was not acknowledged by any slave.\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter
        or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_SLV_DATA_NACK_ONLY
    addr: 0x40044084
    size_bits: 32
    description: "Generate Slave Data NACK Register\\n\\n\n            The register
      is used to generate a NACK for the data part of a transfer when DW_apb_i2c is
      acting as a slave-receiver. This register only exists when the IC_SLV_DATA_NACK_ONLY
      parameter is set to 1. When this parameter disabled, this register does not
      exist and writing to the register's address has no effect.\\n\\n\n            A
      write can occur on this register if both of the following conditions are met:
      - DW_apb_i2c is disabled (IC_ENABLE[0] = 0) - Slave part is inactive (IC_STATUS[6]
      = 0) Note: The IC_STATUS[6] is a register read-back location for the internal
      slv_activity signal; the user should poll this before writing the ic_slv_data_nack_only
      bit."
    fields:
    - !Field
      name: NACK
      bit_offset: 0
      bit_width: 1
      description: "Generate NACK. This NACK generation only occurs when DW_apb_i2c
        is a slave-receiver. If this register is set to a value of 1, it can only
        generate a NACK after a data byte is received; hence, the data transfer is
        aborted and the data received is not pushed to the receive buffer.\\n\\n\n
        \               When the register is set to a value of 0, it generates NACK/ACK,
        depending on normal criteria. - 1: generate NACK after data byte received
        - 0: generate NACK/ACK normally Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_DMA_CR
    addr: 0x40044088
    size_bits: 32
    description: "DMA Control Register\\n\\n\n            The register is used to
      enable the DMA Controller interface operation. There is a separate bit for transmit
      and receive. This can be programmed regardless of the state of IC_ENABLE."
    fields:
    - !Field
      name: TDMAE
      bit_offset: 1
      bit_width: 1
      description: 'Transmit DMA Enable. This bit enables/disables the transmit FIFO
        DMA channel. Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RDMAE
      bit_offset: 0
      bit_width: 1
      description: 'Receive DMA Enable. This bit enables/disables the receive FIFO
        DMA channel. Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_DMA_TDLR
    addr: 0x4004408c
    size_bits: 32
    description: DMA Transmit Data Level Register
    fields:
    - !Field
      name: DMATDL
      bit_offset: 0
      bit_width: 4
      description: "Transmit Data Level. This bit field controls the level at which
        a DMA request is made by the transmit logic. It is equal to the watermark
        level; that is, the dma_tx_req signal is generated when the number of valid
        data entries in the transmit FIFO is equal to or below this field value, and
        TDMAE = 1.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_DMA_RDLR
    addr: 0x40044090
    size_bits: 32
    description: I2C Receive Data Level Register
    fields:
    - !Field
      name: DMARDL
      bit_offset: 0
      bit_width: 4
      description: "Receive Data Level. This bit field controls the level at which
        a DMA request is made by the receive logic. The watermark level = DMARDL+1;
        that is, dma_rx_req is generated when the number of valid data entries in
        the receive FIFO is equal to or more than this field value + 1, and RDMAE
        =1. For instance, when DMARDL is 0, then dma_rx_req is asserted when 1 or
        more data entries are present in the receive FIFO.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SDA_SETUP
    addr: 0x40044094
    size_bits: 32
    description: "I2C SDA Setup Register\\n\\n\n            This register controls
      the amount of time delay (in terms of number of ic_clk clock periods) introduced
      in the rising edge of SCL - relative to SDA changing - when DW_apb_i2c services
      a read request in a slave-transmitter operation. The relevant I2C requirement
      is tSU:DAT (note 4) as detailed in the I2C Bus Specification. This register
      must be programmed with a value equal to or greater than 2.\\n\\n\n            Writes
      to this register succeed only when IC_ENABLE[0] = 0.\\n\\n\n            Note:
      The length of setup time is calculated using [(IC_SDA_SETUP - 1) * (ic_clk_period)],
      so if the user requires 10 ic_clk periods of setup time, they should program
      a value of 11. The IC_SDA_SETUP register is only used by the DW_apb_i2c when
      operating as a slave transmitter."
    reset_value: 0x64
    fields:
    - !Field
      name: SDA_SETUP
      bit_offset: 0
      bit_width: 8
      description: SDA Setup. It is recommended that if the required delay is 1000ns,
        then for an ic_clk frequency of 10 MHz, IC_SDA_SETUP should be programmed
        to a value of 11. IC_SDA_SETUP must be programmed with a minimum value of
        2.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_ACK_GENERAL_CALL
    addr: 0x40044098
    size_bits: 32
    description: "I2C ACK General Call Register\\n\\n\n            The register controls
      whether DW_apb_i2c responds with a ACK or NACK when it receives an I2C General
      Call address.\\n\\n\n            This register is applicable only when the DW_apb_i2c
      is in slave mode."
    reset_value: 0x1
    fields:
    - !Field
      name: ACK_GEN_CALL
      bit_offset: 0
      bit_width: 1
      description: ACK General Call. When set to 1, DW_apb_i2c responds with a ACK
        (by asserting ic_data_oe) when it receives a General Call. Otherwise, DW_apb_i2c
        responds with a NACK (by negating ic_data_oe).
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_ENABLE_STATUS
    addr: 0x4004409c
    size_bits: 32
    description: "I2C Enable Status Register\\n\\n\n            The register is used
      to report the DW_apb_i2c hardware status when the IC_ENABLE[0] register is set
      from 1 to 0; that is, when DW_apb_i2c is disabled.\\n\\n\n            If IC_ENABLE[0]
      has been set to 1, bits 2:1 are forced to 0, and bit 0 is forced to 1.\\n\\n\n
      \           If IC_ENABLE[0] has been set to 0, bits 2:1 is only be valid as
      soon as bit 0 is read as '0'.\\n\\n\n            Note: When IC_ENABLE[0] has
      been set to 0, a delay occurs for bit 0 to be read as 0 because disabling the
      DW_apb_i2c depends on I2C bus activities."
    fields:
    - !Field
      name: SLV_RX_DATA_LOST
      bit_offset: 2
      bit_width: 1
      description: "Slave Received Data Lost. This bit indicates if a Slave-Receiver
        operation has been aborted with at least one data byte received from an I2C
        transfer due to the setting bit 0 of IC_ENABLE from 1 to 0. When read as 1,
        DW_apb_i2c is deemed to have been actively engaged in an aborted I2C transfer
        (with matching address) and the data phase of the I2C transfer has been entered,
        even though a data byte has been responded with a NACK.\\n\\n\n                Note:
        \ If the remote I2C master terminates the transfer with a STOP condition before
        the DW_apb_i2c has a chance to NACK a transfer, and IC_ENABLE[0] has been
        set to 0, then this bit is also set to 1.\\n\\n\n                When read
        as 0, DW_apb_i2c is deemed to have been disabled without being actively involved
        in the data phase of a Slave-Receiver transfer.\\n\\n\n                Note:
        \ The CPU can safely read this bit when IC_EN (bit 0) is read as 0.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: SLV_DISABLED_WHILE_BUSY
      bit_offset: 1
      bit_width: 1
      description: "Slave Disabled While Busy (Transmit, Receive). This bit indicates
        if a potential or active Slave operation has been aborted due to the setting
        bit 0 of the IC_ENABLE register from 1 to 0. This bit is set when the CPU
        writes a 0 to the IC_ENABLE register while:\\n\\n\n                (a) DW_apb_i2c
        is receiving the address byte of the Slave-Transmitter operation from a remote
        master;\\n\\n\n                OR,\\n\\n\n                (b) address and
        data bytes of the Slave-Receiver operation from a remote master.\\n\\n\n                When
        read as 1, DW_apb_i2c is deemed to have forced a NACK during any part of an
        I2C transfer, irrespective of whether the I2C address matches the slave address
        set in DW_apb_i2c (IC_SAR register) OR if the transfer is completed before
        IC_ENABLE is set to 0 but has not taken effect.\\n\\n\n                Note:
        \ If the remote I2C master terminates the transfer with a STOP condition before
        the DW_apb_i2c has a chance to NACK a transfer, and IC_ENABLE[0] has been
        set to 0, then this bit will also be set to 1.\\n\\n\n                When
        read as 0, DW_apb_i2c is deemed to have been disabled when there is master
        activity, or when the I2C bus is idle.\\n\\n\n                Note:  The CPU
        can safely read this bit when IC_EN (bit 0) is read as 0.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: IC_EN
      bit_offset: 0
      bit_width: 1
      description: "ic_en Status. This bit always reflects the value driven on the
        output port ic_en. - When read as 1, DW_apb_i2c is deemed to be in an enabled
        state. - When read as 0, DW_apb_i2c is deemed completely inactive. Note:  The
        CPU can safely read this bit anytime. When this bit is read as 0, the CPU
        can safely read SLV_RX_DATA_LOST (bit 2) and SLV_DISABLED_WHILE_BUSY (bit
        1).\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_FS_SPKLEN
    addr: 0x400440a0
    size_bits: 32
    description: "I2C SS, FS or FM+ spike suppression limit\\n\\n\n            This
      register is used to store the duration, measured in ic_clk cycles, of the longest
      spike that is filtered out by the spike suppression logic when the component
      is operating in SS, FS or FM+ modes. The relevant I2C requirement is tSP (table
      4) as detailed in the I2C Bus Specification. This register must be programmed
      with a minimum value of 1."
    reset_value: 0x7
    fields:
    - !Field
      name: IC_FS_SPKLEN
      bit_offset: 0
      bit_width: 8
      description: This register must be set before any I2C bus transaction can take
        place to ensure stable operation. This register sets the duration, measured
        in ic_clk cycles, of the longest spike in the SCL or SDA lines that will be
        filtered out by the spike suppression logic. This register can be written
        only when the I2C interface is disabled which corresponds to the IC_ENABLE[0]
        register being set to 0. Writes at other times have no effect. The minimum
        valid value is 1; hardware prevents values less than this being written, and
        if attempted results in 1 being set. or more information, refer to 'Spike
        Suppression'.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_CLR_RESTART_DET
    addr: 0x400440a8
    size_bits: 32
    description: Clear RESTART_DET Interrupt Register
    fields:
    - !Field
      name: CLR_RESTART_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RESTART_DET interrupt (bit 12)
        of IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_PARAM_1
    addr: 0x400440f4
    size_bits: 32
    description: "Component Parameter Register 1\\n\\n\n            Note This register
      is not implemented and therefore reads as 0. If it was implemented it would
      be a constant read-only register that contains encoded information about the
      component's parameter settings. Fields shown below are the settings for those
      parameters"
    fields:
    - !Field
      name: TX_BUFFER_DEPTH
      bit_offset: 16
      bit_width: 8
      description: TX Buffer Depth = 16
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_BUFFER_DEPTH
      bit_offset: 8
      bit_width: 8
      description: RX Buffer Depth = 16
      read_allowed: true
      write_allowed: false
    - !Field
      name: ADD_ENCODED_PARAMS
      bit_offset: 7
      bit_width: 1
      description: Encoded parameters not visible
      read_allowed: true
      write_allowed: false
    - !Field
      name: HAS_DMA
      bit_offset: 6
      bit_width: 1
      description: DMA handshaking signals are enabled
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR_IO
      bit_offset: 5
      bit_width: 1
      description: COMBINED Interrupt outputs
      read_allowed: true
      write_allowed: false
    - !Field
      name: HC_COUNT_VALUES
      bit_offset: 4
      bit_width: 1
      description: Programmable count values for each mode.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAX_SPEED_MODE
      bit_offset: 2
      bit_width: 2
      description: MAX SPEED MODE = FAST MODE
      read_allowed: true
      write_allowed: false
    - !Field
      name: APB_DATA_WIDTH
      bit_offset: 0
      bit_width: 2
      description: APB data bus width is 32 bits
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_VERSION
    addr: 0x400440f8
    size_bits: 32
    description: I2C Component Version Register
    reset_value: 0x3230312a
    fields:
    - !Field
      name: IC_COMP_VERSION
      bit_offset: 0
      bit_width: 32
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_TYPE
    addr: 0x400440fc
    size_bits: 32
    description: I2C Component Type Register
    reset_value: 0x44570140
    fields:
    - !Field
      name: IC_COMP_TYPE
      bit_offset: 0
      bit_width: 32
      description: Designware Component Type number = 0x44_57_01_40. This assigned
        unique hex value is constant and is derived from the two ASCII letters 'DW'
        followed by a 16-bit unsigned number.
      read_allowed: true
      write_allowed: false
- !Module
  name: I2C1
  description: DW_apb_i2c address block
  base_addr: 0x40048000
  size: 0x100
  registers:
  - !Register
    name: IC_CON
    addr: 0x40048000
    size_bits: 32
    description: "I2C Control Register. This register can be written only when the
      DW_apb_i2c is disabled, which corresponds to the IC_ENABLE[0] register being
      set to 0. Writes at other times have no effect.\\n\\n\n            Read/Write
      Access: - bit 10 is read only. - bit 11 is read only - bit 16 is read only -
      bit 17 is read only - bits 18 and 19 are read only."
    reset_value: 0x65
    fields:
    - !Field
      name: STOP_DET_IF_MASTER_ACTIVE
      bit_offset: 10
      bit_width: 1
      description: Master issues the STOP_DET interrupt irrespective of whether master
        is active or not
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_FIFO_FULL_HLD_CTRL
      bit_offset: 9
      bit_width: 1
      description: "This bit controls whether DW_apb_i2c should hold the bus when
        the Rx FIFO is physically full to its RX_BUFFER_DEPTH, as described in the
        IC_RX_FULL_HLD_BUS_EN parameter.\\n\\n\n                Reset value: 0x0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TX_EMPTY_CTRL
      bit_offset: 8
      bit_width: 1
      description: "This bit controls the generation of the TX_EMPTY interrupt, as
        described in the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value:
        0x0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: STOP_DET_IFADDRESSED
      bit_offset: 7
      bit_width: 1
      description: "In slave mode: - 1'b1:  issues the STOP_DET interrupt only when
        it is addressed. - 1'b0:  issues the STOP_DET irrespective of whether it's
        addressed or not. Reset value: 0x0\\n\\n\n                NOTE: During a general
        call address, this slave does not issue the STOP_DET interrupt if STOP_DET_IF_ADDRESSED
        = 1'b1, even if the slave responds to the general call address by generating
        ACK. The STOP_DET interrupt is generated only when the transmitted address
        matches the slave address (SAR)."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: IC_SLAVE_DISABLE
      bit_offset: 6
      bit_width: 1
      description: "This bit controls whether I2C has its slave disabled, which means
        once the presetn signal is applied, then this bit is set and the slave is
        disabled.\\n\\n\n                If this bit is set (slave is disabled), DW_apb_i2c
        functions only as a master and does not perform any action that requires a
        slave.\\n\\n\n                NOTE: Software should ensure that if this bit
        is written with 0, then bit 0 should also be written with a 0."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE_ENABLED
        1: SLAVE_DISABLED
    - !Field
      name: IC_RESTART_EN
      bit_offset: 5
      bit_width: 1
      description: "Determines whether RESTART conditions may be sent when acting
        as a master. Some older slaves do not support handling RESTART conditions;
        however, RESTART conditions are used in several DW_apb_i2c operations. When
        RESTART is disabled, the master is prohibited from performing the following
        functions: - Sending a START BYTE - Performing any high-speed mode operation
        - High-speed mode operation - Performing direction changes in combined format
        mode - Performing a read operation with a 10-bit address By replacing RESTART
        condition followed by a STOP and a subsequent START condition, split operations
        are broken down into multiple DW_apb_i2c transfers. If the above operations
        are performed, it will result in setting bit 6 (TX_ABRT) of the IC_RAW_INTR_STAT
        register.\\n\\n\n                Reset value: ENABLED"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: IC_10BITADDR_MASTER
      bit_offset: 4
      bit_width: 1
      description: 'Controls whether the DW_apb_i2c starts its transfers in 7- or
        10-bit addressing mode when acting as a master. - 0: 7-bit addressing - 1:
        10-bit addressing'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADDR_7BITS
        1: ADDR_10BITS
    - !Field
      name: IC_10BITADDR_SLAVE
      bit_offset: 3
      bit_width: 1
      description: 'When acting as a slave, this bit controls whether the DW_apb_i2c
        responds to 7- or 10-bit addresses. - 0: 7-bit addressing. The DW_apb_i2c
        ignores transactions that involve 10-bit addressing; for 7-bit addressing,
        only the lower 7 bits of the IC_SAR register are compared. - 1: 10-bit addressing.
        The DW_apb_i2c responds to only 10-bit addressing transfers that match the
        full 10 bits of the IC_SAR register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADDR_7BITS
        1: ADDR_10BITS
    - !Field
      name: SPEED
      bit_offset: 1
      bit_width: 2
      description: "These bits control at which speed the DW_apb_i2c operates; its
        setting is relevant only if one is operating the DW_apb_i2c in master mode.
        Hardware protects against illegal values being programmed by software. These
        bits must be programmed appropriately for slave mode also, as it is used to
        capture correct value of spike filter as per the speed mode.\\n\\n\n                This
        register should be programmed only with a value in the range of 1 to IC_MAX_SPEED_MODE;
        otherwise, hardware updates this register with the value of IC_MAX_SPEED_MODE.\\n\\n\n
        \               1: standard mode (100 kbit/s)\\n\\n\n                2: fast
        mode (<=400 kbit/s) or fast mode plus (<=1000Kbit/s)\\n\\n\n                3:
        high speed mode (3.4 Mbit/s)\\n\\n\n                Note: This field is not
        applicable when IC_ULTRA_FAST_MODE=1"
      read_allowed: true
      write_allowed: true
      enum_values:
        1: STANDARD
        2: FAST
        3: HIGH
    - !Field
      name: MASTER_MODE
      bit_offset: 0
      bit_width: 1
      description: "This bit controls whether the DW_apb_i2c master is enabled.\\n\\n\n
        \               NOTE: Software should ensure that if this bit is written with
        '1' then bit 6 should also be written with a '1'."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_TAR
    addr: 0x40048004
    size_bits: 32
    description: "I2C Target Address Register\\n\\n\n            This register is
      12 bits wide, and bits 31:12 are reserved. This register can be written to only
      when IC_ENABLE[0] is set to 0.\\n\\n\n            Note: If the software or application
      is aware that the DW_apb_i2c is not using the TAR address for the pending commands
      in the Tx FIFO, then it is possible to update the TAR address even while the
      Tx FIFO has entries (IC_STATUS[2]= 0). - It is not necessary to perform any
      write to this register if DW_apb_i2c is enabled as an I2C slave only."
    reset_value: 0x55
    fields:
    - !Field
      name: SPECIAL
      bit_offset: 11
      bit_width: 1
      description: 'This bit indicates whether software performs a Device-ID or General
        Call or START BYTE command. - 0: ignore bit 10 GC_OR_START and use IC_TAR
        normally - 1: perform special I2C command as specified in Device_ID or GC_OR_START
        bit Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: GC_OR_START
      bit_offset: 10
      bit_width: 1
      description: 'If bit 11 (SPECIAL) is set to 1 and bit 13(Device-ID) is set to
        0, then this bit indicates whether a General Call or START byte command is
        to be performed by the DW_apb_i2c. - 0: General Call Address - after issuing
        a General Call, only writes may be performed. Attempting to issue a read command
        results in setting bit 6 (TX_ABRT) of the IC_RAW_INTR_STAT register. The DW_apb_i2c
        remains in General Call mode until the SPECIAL bit value (bit 11) is cleared.
        - 1: START BYTE Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: GENERAL_CALL
        1: START_BYTE
    - !Field
      name: IC_TAR
      bit_offset: 0
      bit_width: 10
      description: "This is the target address for any master transaction. When transmitting
        a General Call, these bits are ignored. To generate a START BYTE, the CPU
        needs to write only once into these bits.\\n\\n\n                If the IC_TAR
        and IC_SAR are the same, loopback exists but the FIFOs are shared between
        master and slave, so full loopback is not feasible. Only one direction loopback
        mode is supported (simplex), not duplex. A master cannot transmit to itself;
        it can transmit to only a slave."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SAR
    addr: 0x40048008
    size_bits: 32
    description: I2C Slave Address Register
    reset_value: 0x55
    fields:
    - !Field
      name: IC_SAR
      bit_offset: 0
      bit_width: 10
      description: "The IC_SAR holds the slave address when the I2C is operating as
        a slave. For 7-bit addressing, only IC_SAR[6:0] is used.\\n\\n\n                This
        register can be written only when the I2C interface is disabled, which corresponds
        to the IC_ENABLE[0] register being set to 0. Writes at other times have no
        effect.\\n\\n\n                Note: The default values cannot be any of the
        reserved address locations: that is, 0x00 to 0x07, or 0x78 to 0x7f. The correct
        operation of the device is not guaranteed if you program the IC_SAR or IC_TAR
        to a reserved value. Refer to <<table_I2C_firstbyte_bit_defs>> for a complete
        list of these reserved values."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_DATA_CMD
    addr: 0x40048010
    size_bits: 32
    description: "I2C Rx/Tx Data Buffer and Command Register; this is the register
      the CPU writes to when filling the TX FIFO and the CPU reads from when retrieving
      bytes from RX FIFO.\\n\\n\n            The size of the register changes as follows:\\n\\n\n
      \           Write: - 11 bits when IC_EMPTYFIFO_HOLD_MASTER_EN=1 - 9 bits when
      IC_EMPTYFIFO_HOLD_MASTER_EN=0 Read: - 12 bits when IC_FIRST_DATA_BYTE_STATUS
      = 1 - 8 bits when IC_FIRST_DATA_BYTE_STATUS = 0 Note: In order for the DW_apb_i2c
      to continue acknowledging reads, a read command should be written for every
      byte that is to be received; otherwise the DW_apb_i2c will stop acknowledging."
    fields:
    - !Field
      name: FIRST_DATA_BYTE
      bit_offset: 11
      bit_width: 1
      description: "Indicates the first data byte received after the address phase
        for receive transfer in Master receiver or Slave receiver mode.\\n\\n\n                Reset
        value : 0x0\\n\\n\n                NOTE:  In case of APB_DATA_WIDTH=8,\\n\\n\n
        \               1. The user has to perform two APB Reads to IC_DATA_CMD in
        order to get status on 11 bit.\\n\\n\n                2. In order to read
        the 11 bit, the user has to perform the first data byte read [7:0] (offset
        0x10) and then perform the second read [15:8] (offset 0x11) in order to know
        the status of 11 bit (whether the data received in previous read is a first
        data byte or not).\\n\\n\n                3. The 11th bit is an optional read
        field, user can ignore 2nd byte read [15:8] (offset 0x11) if not interested
        in FIRST_DATA_BYTE status."
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RESTART
      bit_offset: 10
      bit_width: 1
      description: "This bit controls whether a RESTART is issued before the byte
        is sent or received.\\n\\n\n                1 - If IC_RESTART_EN is 1, a RESTART
        is issued before the data is sent/received (according to the value of CMD),
        regardless of whether or not the transfer direction is changing from the previous
        command; if IC_RESTART_EN is 0, a STOP followed by a START is issued instead.\\n\\n\n
        \               0 - If IC_RESTART_EN is 1, a RESTART is issued only if the
        transfer direction is changing from the previous command; if IC_RESTART_EN
        is 0, a STOP followed by a START is issued instead.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: STOP
      bit_offset: 9
      bit_width: 1
      description: "This bit controls whether a STOP is issued after the byte is sent
        or received.\\n\\n\n                - 1 - STOP is issued after this byte,
        regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty,
        the master immediately tries to start a new transfer by issuing a START and
        arbitrating for the bus. - 0 - STOP is not issued after this byte, regardless
        of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master
        continues the current transfer by sending/receiving data bytes according to
        the value of the CMD bit. If the Tx FIFO is empty, the master holds the SCL
        line low and stalls the bus until a new command is available in the Tx FIFO.
        Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: CMD
      bit_offset: 8
      bit_width: 1
      description: "This bit controls whether a read or a write is performed. This
        bit does not control the direction when the DW_apb_i2con acts as a slave.
        It controls only the direction when it acts as a master.\\n\\n\n                When
        a command is entered in the TX FIFO, this bit distinguishes the write and
        read commands. In slave-receiver mode, this bit is a 'don't care' because
        writes to this register are not required. In slave-transmitter mode, a '0'
        indicates that the data in IC_DATA_CMD is to be transmitted.\\n\\n\n                When
        programming this bit, you should remember the following: attempting to perform
        a read operation after a General Call command has been sent results in a TX_ABRT
        interrupt (bit 6 of the IC_RAW_INTR_STAT register), unless bit 11 (SPECIAL)
        in the IC_TAR register has been cleared. If a '1' is written to this bit after
        receiving a RD_REQ interrupt, then a TX_ABRT interrupt occurs.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: WRITE
        1: READ
    - !Field
      name: DAT
      bit_offset: 0
      bit_width: 8
      description: "This register contains the data to be transmitted or received
        on the I2C bus. If you are writing to this register and want to perform a
        read, bits 7:0 (DAT) are ignored by the DW_apb_i2c. However, when you read
        this register, these bits return the value of data received on the DW_apb_i2c
        interface.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SS_SCL_HCNT
    addr: 0x40048014
    size_bits: 32
    description: Standard Speed I2C Clock SCL High Count Register
    reset_value: 0x28
    fields:
    - !Field
      name: IC_SS_SCL_HCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock high-period
        count for standard speed. For more information, refer to 'IC_CLK Frequency
        Configuration'.\\n\\n\n                This register can be written only when
        the I2C interface is disabled which corresponds to the IC_ENABLE[0] register
        being set to 0. Writes at other times have no effect.\\n\\n\n                The
        minimum valid value is 6; hardware prevents values less than this being written,
        and if attempted results in 6 being set. For designs with APB_DATA_WIDTH =
        8, the order of programming is important to ensure the correct operation of
        the DW_apb_i2c. The lower byte must be programmed first. Then the upper byte
        is programmed.\\n\\n\n                NOTE: This register must not be programmed
        to a value higher than 65525, because DW_apb_i2c uses a 16-bit counter to
        flag an I2C bus idle condition when this counter reaches a value of IC_SS_SCL_HCNT
        + 10."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SS_SCL_LCNT
    addr: 0x40048018
    size_bits: 32
    description: Standard Speed I2C Clock SCL Low Count Register
    reset_value: 0x2f
    fields:
    - !Field
      name: IC_SS_SCL_LCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock low period
        count for standard speed. For more information, refer to 'IC_CLK Frequency
        Configuration'\\n\\n\n                This register can be written only when
        the I2C interface is disabled which corresponds to the IC_ENABLE[0] register
        being set to 0. Writes at other times have no effect.\\n\\n\n                The
        minimum valid value is 8; hardware prevents values less than this being written,
        and if attempted, results in 8 being set. For designs with APB_DATA_WIDTH
        = 8, the order of programming is important to ensure the correct operation
        of DW_apb_i2c. The lower byte must be programmed first, and then the upper
        byte is programmed."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_FS_SCL_HCNT
    addr: 0x4004801c
    size_bits: 32
    description: Fast Mode or Fast Mode Plus I2C Clock SCL High Count Register
    reset_value: 0x6
    fields:
    - !Field
      name: IC_FS_SCL_HCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock high-period
        count for fast mode or fast mode plus. It is used in high-speed mode to send
        the Master Code and START BYTE or General CALL. For more information, refer
        to 'IC_CLK Frequency Configuration'.\\n\\n\n                This register
        goes away and becomes read-only returning 0s if IC_MAX_SPEED_MODE = standard.
        This register can be written only when the I2C interface is disabled, which
        corresponds to the IC_ENABLE[0] register being set to 0. Writes at other times
        have no effect.\\n\\n\n                The minimum valid value is 6; hardware
        prevents values less than this being written, and if attempted results in
        6 being set. For designs with APB_DATA_WIDTH == 8 the order of programming
        is important to ensure the correct operation of the DW_apb_i2c. The lower
        byte must be programmed first. Then the upper byte is programmed."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_FS_SCL_LCNT
    addr: 0x40048020
    size_bits: 32
    description: Fast Mode or Fast Mode Plus I2C Clock SCL Low Count Register
    reset_value: 0xd
    fields:
    - !Field
      name: IC_FS_SCL_LCNT
      bit_offset: 0
      bit_width: 16
      description: "This register must be set before any I2C bus transaction can take
        place to ensure proper I/O timing. This register sets the SCL clock low period
        count for fast speed. It is used in high-speed mode to send the Master Code
        and START BYTE or General CALL. For more information, refer to 'IC_CLK Frequency
        Configuration'.\\n\\n\n                This register goes away and becomes
        read-only returning 0s if IC_MAX_SPEED_MODE = standard.\\n\\n\n                This
        register can be written only when the I2C interface is disabled, which corresponds
        to the IC_ENABLE[0] register being set to 0. Writes at other times have no
        effect.\\n\\n\n                The minimum valid value is 8; hardware prevents
        values less than this being written, and if attempted results in 8 being set.
        For designs with APB_DATA_WIDTH = 8 the order of programming is important
        to ensure the correct operation of the DW_apb_i2c. The lower byte must be
        programmed first. Then the upper byte is programmed. If the value is less
        than 8 then the count value gets changed to 8."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_INTR_STAT
    addr: 0x4004802c
    size_bits: 32
    description: "I2C Interrupt Status Register\\n\\n\n            Each bit in this
      register has a corresponding mask bit in the IC_INTR_MASK register. These bits
      are cleared by reading the matching interrupt clear register. The unmasked raw
      versions of these bits are available in the IC_RAW_INTR_STAT register."
    fields:
    - !Field
      name: R_MASTER_ON_HOLD
      bit_offset: 13
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_MASTER_ON_HOLD
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RESTART_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_GEN_CALL
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_START_DET
      bit_offset: 10
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_START_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_STOP_DET
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_ACTIVITY
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_DONE bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_ABRT bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RD_REQ bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_EMPTY
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_TX_OVER bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_FULL bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_OVER bit.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: R_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "See IC_RAW_INTR_STAT for a detailed description of R_RX_UNDER
        bit.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_INTR_MASK
    addr: 0x40048030
    size_bits: 32
    description: "I2C Interrupt Mask Register.\\n\\n\n            These bits mask
      their corresponding interrupt status bits. This register is active low; a value
      of 0 masks the interrupt, whereas a value of 1 unmasks the interrupt."
    reset_value: 0x8ff
    fields:
    - !Field
      name: M_MASTER_ON_HOLD_READ_ONLY
      bit_offset: 13
      bit_width: 1
      description: "This M_MASTER_ON_HOLD_read_only bit masks the R_MASTER_ON_HOLD
        interrupt in IC_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "This bit masks the R_RESTART_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "This bit masks the R_GEN_CALL interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_START_DET
      bit_offset: 10
      bit_width: 1
      description: "This bit masks the R_START_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "This bit masks the R_STOP_DET interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "This bit masks the R_ACTIVITY interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "This bit masks the R_RX_DONE interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "This bit masks the R_TX_ABRT interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "This bit masks the R_RD_REQ interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "This bit masks the R_TX_EMPTY interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "This bit masks the R_TX_OVER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "This bit masks the R_RX_FULL interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "This bit masks the R_RX_OVER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: M_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "This bit masks the R_RX_UNDER interrupt in IC_INTR_STAT register.\\n\\n\n
        \               Reset value: 0x1"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
  - !Register
    name: IC_RAW_INTR_STAT
    addr: 0x40048034
    size_bits: 32
    description: "I2C Raw Interrupt Status Register\\n\\n\n            Unlike the
      IC_INTR_STAT register, these bits are not masked so they always show the true
      status of the DW_apb_i2c."
    fields:
    - !Field
      name: MASTER_ON_HOLD
      bit_offset: 13
      bit_width: 1
      description: "Indicates whether master is holding the bus and TX FIFO is empty.
        Enabled only when I2C_DYNAMIC_TAR_UPDATE=1 and IC_EMPTYFIFO_HOLD_MASTER_EN=1.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RESTART_DET
      bit_offset: 12
      bit_width: 1
      description: "Indicates whether a RESTART condition has occurred on the I2C
        interface when DW_apb_i2c is operating in Slave mode and the slave is being
        addressed. Enabled only when IC_SLV_RESTART_DET_EN=1.\\n\\n\n                Note:
        However, in high-speed mode or during a START BYTE transfer, the RESTART comes
        before the address field as per the I2C protocol. In this case, the slave
        is not the addressed slave when the RESTART is issued, therefore DW_apb_i2c
        does not generate the RESTART_DET interrupt.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: GEN_CALL
      bit_offset: 11
      bit_width: 1
      description: "Set only when a General Call address is received and it is acknowledged.
        It stays set until it is cleared either by disabling DW_apb_i2c or when the
        CPU reads bit 0 of the IC_CLR_GEN_CALL register. DW_apb_i2c stores the received
        data in the Rx buffer.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: START_DET
      bit_offset: 10
      bit_width: 1
      description: "Indicates whether a START or RESTART condition has occurred on
        the I2C interface regardless of whether DW_apb_i2c is operating in slave or
        master mode.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: STOP_DET
      bit_offset: 9
      bit_width: 1
      description: "Indicates whether a STOP condition has occurred on the I2C interface
        regardless of whether DW_apb_i2c is operating in slave or master mode.\\n\\n\n
        \               In Slave Mode: - If IC_CON[7]=1'b1  (STOP_DET_IFADDRESSED),
        the STOP_DET interrupt will be issued only if slave is addressed. Note: During
        a general call address, this slave does not issue a STOP_DET interrupt if
        STOP_DET_IF_ADDRESSED=1'b1, even if the slave responds to the general call
        address by generating ACK. The STOP_DET interrupt is generated only when the
        transmitted address matches the slave address (SAR). - If IC_CON[7]=1'b0 (STOP_DET_IFADDRESSED),
        the STOP_DET interrupt is issued irrespective of whether it is being addressed.
        In Master Mode: - If IC_CON[10]=1'b1  (STOP_DET_IF_MASTER_ACTIVE),the STOP_DET
        interrupt will be issued only if Master is active. - If IC_CON[10]=1'b0  (STOP_DET_IFADDRESSED),the
        STOP_DET interrupt will be issued irrespective of whether master is active
        or not. Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ACTIVITY
      bit_offset: 8
      bit_width: 1
      description: "This bit captures DW_apb_i2c activity and stays set until it is
        cleared. There are four ways to clear it: - Disabling the DW_apb_i2c - Reading
        the IC_CLR_ACTIVITY register - Reading the IC_CLR_INTR register - System reset
        Once this bit is set, it stays set unless one of the four methods is used
        to clear it. Even if the DW_apb_i2c module is idle, this bit remains set until
        cleared, indicating that there was activity on the bus.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_DONE
      bit_offset: 7
      bit_width: 1
      description: "When the DW_apb_i2c is acting as a slave-transmitter, this bit
        is set to 1 if the master does not acknowledge a transmitted byte. This occurs
        on the last byte of the transmission, indicating that the transmission is
        done.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_ABRT
      bit_offset: 6
      bit_width: 1
      description: "This bit indicates if DW_apb_i2c, as an I2C transmitter, is unable
        to complete the intended actions on the contents of the transmit FIFO. This
        situation can occur both as an I2C master or an I2C slave, and is referred
        to as a 'transmit abort'. When this bit is set to 1, the IC_TX_ABRT_SOURCE
        register indicates the reason why the transmit abort takes places.\\n\\n\n
        \               Note:  The DW_apb_i2c flushes/resets/empties the TX_FIFO and
        RX_FIFO whenever there is a transmit abort caused by any of the events tracked
        by the IC_TX_ABRT_SOURCE register. The FIFOs remains in this flushed state
        until the register IC_CLR_TX_ABRT is read. Once this read is performed, the
        Tx FIFO is then ready to accept more data bytes from the APB interface.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RD_REQ
      bit_offset: 5
      bit_width: 1
      description: "This bit is set to 1 when DW_apb_i2c is acting as a slave and
        another I2C master is attempting to read data from DW_apb_i2c. The DW_apb_i2c
        holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced,
        which means that the slave has been addressed by a remote master that is asking
        for data to be transferred. The processor must respond to this interrupt and
        then write the requested data to the IC_DATA_CMD register. This bit is set
        to 0 just after the processor reads the IC_CLR_RD_REQ register.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_EMPTY
      bit_offset: 4
      bit_width: 1
      description: "The behavior of the TX_EMPTY interrupt status differs based on
        the TX_EMPTY_CTRL selection in the IC_CON register. - When TX_EMPTY_CTRL =
        0: This bit is set to 1 when the transmit buffer is at or below the threshold
        value set in the IC_TX_TL register. - When TX_EMPTY_CTRL = 1: This bit is
        set to 1 when the transmit buffer is at or below the threshold value set in
        the IC_TX_TL register and the transmission of the address/data from the internal
        shift register for the most recently popped command is completed. It is automatically
        cleared by hardware when the buffer level goes above the threshold. When IC_ENABLE[0]
        is set to 0, the TX FIFO is flushed and held in reset. There the TX FIFO looks
        like it has no data within it, so this bit is set to 1, provided there is
        activity in the master or slave state machines. When there is no longer any
        activity, then with ic_en=0, this bit is set to 0.\\n\\n\n                Reset
        value: 0x0."
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: TX_OVER
      bit_offset: 3
      bit_width: 1
      description: "Set during transmit if the transmit buffer is filled to IC_TX_BUFFER_DEPTH
        and the processor attempts to issue another I2C command by writing to the
        IC_DATA_CMD register. When the module is disabled, this bit keeps its level
        until the master or slave state machines go into idle, and when ic_en goes
        to 0, this interrupt is cleared.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_FULL
      bit_offset: 2
      bit_width: 1
      description: "Set when the receive buffer reaches or goes above the RX_TL threshold
        in the IC_RX_TL register. It is automatically cleared by hardware when buffer
        level goes below the threshold. If the module is disabled (IC_ENABLE[0]=0),
        the RX FIFO is flushed and held in reset; therefore the RX FIFO is not full.
        So this bit is cleared once the IC_ENABLE bit 0 is programmed with a 0, regardless
        of the activity that continues.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_OVER
      bit_offset: 1
      bit_width: 1
      description: "Set if the receive buffer is completely filled to IC_RX_BUFFER_DEPTH
        and an additional byte is received from an external I2C device. The DW_apb_i2c
        acknowledges this, but any data bytes received after the FIFO is full are
        lost. If the module is disabled (IC_ENABLE[0]=0), this bit keeps its level
        until the master or slave state machines go into idle, and when ic_en goes
        to 0, this interrupt is cleared.\\n\\n\n                Note:  If bit 9 of
        the IC_CON register (RX_FIFO_FULL_HLD_CTRL) is programmed to HIGH, then the
        RX_OVER interrupt never occurs, because the Rx FIFO never overflows.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "Set if the processor attempts to read the receive buffer when
        it is empty by reading from the IC_DATA_CMD register. If the module is disabled
        (IC_ENABLE[0]=0), this bit keeps its level until the master or slave state
        machines go into idle, and when ic_en goes to 0, this interrupt is cleared.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_RX_TL
    addr: 0x40048038
    size_bits: 32
    description: I2C Receive FIFO Threshold Register
    fields:
    - !Field
      name: RX_TL
      bit_offset: 0
      bit_width: 8
      description: "Receive FIFO Threshold Level.\\n\\n\n                Controls
        the level of entries (or above) that triggers the RX_FULL interrupt (bit 2
        in IC_RAW_INTR_STAT register). The valid range is 0-255, with the additional
        restriction that hardware does not allow this value to be set to a value larger
        than the depth of the buffer. If an attempt is made to do that, the actual
        value set will be the maximum depth of the buffer. A value of 0 sets the threshold
        for 1 entry, and a value of 255 sets the threshold for 256 entries."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_TX_TL
    addr: 0x4004803c
    size_bits: 32
    description: I2C Transmit FIFO Threshold Register
    fields:
    - !Field
      name: TX_TL
      bit_offset: 0
      bit_width: 8
      description: "Transmit FIFO Threshold Level.\\n\\n\n                Controls
        the level of entries (or below) that trigger the TX_EMPTY interrupt (bit 4
        in IC_RAW_INTR_STAT register). The valid range is 0-255, with the additional
        restriction that it may not be set to value larger than the depth of the buffer.
        If an attempt is made to do that, the actual value set will be the maximum
        depth of the buffer. A value of 0 sets the threshold for 0 entries, and a
        value of 255 sets the threshold for 255 entries."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_CLR_INTR
    addr: 0x40048040
    size_bits: 32
    description: Clear Combined and Individual Interrupt Register
    fields:
    - !Field
      name: CLR_INTR
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the combined interrupt, all individual
        interrupts, and the IC_TX_ABRT_SOURCE register. This bit does not clear hardware
        clearable interrupts but software clearable interrupts. Refer to Bit 9 of
        the IC_TX_ABRT_SOURCE register for an exception to clearing IC_TX_ABRT_SOURCE.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_UNDER
    addr: 0x40048044
    size_bits: 32
    description: Clear RX_UNDER Interrupt Register
    fields:
    - !Field
      name: CLR_RX_UNDER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_UNDER interrupt (bit 0) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_OVER
    addr: 0x40048048
    size_bits: 32
    description: Clear RX_OVER Interrupt Register
    fields:
    - !Field
      name: CLR_RX_OVER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_OVER interrupt (bit 1) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_TX_OVER
    addr: 0x4004804c
    size_bits: 32
    description: Clear TX_OVER Interrupt Register
    fields:
    - !Field
      name: CLR_TX_OVER
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the TX_OVER interrupt (bit 3) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RD_REQ
    addr: 0x40048050
    size_bits: 32
    description: Clear RD_REQ Interrupt Register
    fields:
    - !Field
      name: CLR_RD_REQ
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RD_REQ interrupt (bit 5) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_TX_ABRT
    addr: 0x40048054
    size_bits: 32
    description: Clear TX_ABRT Interrupt Register
    fields:
    - !Field
      name: CLR_TX_ABRT
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the TX_ABRT interrupt (bit 6) of the
        IC_RAW_INTR_STAT register, and the IC_TX_ABRT_SOURCE register. This also releases
        the TX FIFO from the flushed/reset state, allowing more writes to the TX FIFO.
        Refer to Bit 9 of the IC_TX_ABRT_SOURCE register for an exception to clearing
        IC_TX_ABRT_SOURCE.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_RX_DONE
    addr: 0x40048058
    size_bits: 32
    description: Clear RX_DONE Interrupt Register
    fields:
    - !Field
      name: CLR_RX_DONE
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RX_DONE interrupt (bit 7) of the
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_ACTIVITY
    addr: 0x4004805c
    size_bits: 32
    description: Clear ACTIVITY Interrupt Register
    fields:
    - !Field
      name: CLR_ACTIVITY
      bit_offset: 0
      bit_width: 1
      description: "Reading this register clears the ACTIVITY interrupt if the I2C
        is not active anymore. If the I2C module is still active on the bus, the ACTIVITY
        interrupt bit continues to be set. It is automatically cleared by hardware
        if the module is disabled and if there is no further activity on the bus.
        The value read from this register to get status of the ACTIVITY interrupt
        (bit 8) of the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value:
        0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_STOP_DET
    addr: 0x40048060
    size_bits: 32
    description: Clear STOP_DET Interrupt Register
    fields:
    - !Field
      name: CLR_STOP_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the STOP_DET interrupt (bit 9) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_START_DET
    addr: 0x40048064
    size_bits: 32
    description: Clear START_DET Interrupt Register
    fields:
    - !Field
      name: CLR_START_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the START_DET interrupt (bit 10) of
        the IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_CLR_GEN_CALL
    addr: 0x40048068
    size_bits: 32
    description: Clear GEN_CALL Interrupt Register
    fields:
    - !Field
      name: CLR_GEN_CALL
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the GEN_CALL interrupt (bit 11) of
        IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_ENABLE
    addr: 0x4004806c
    size_bits: 32
    description: I2C Enable Register
    fields:
    - !Field
      name: TX_CMD_BLOCK
      bit_offset: 2
      bit_width: 1
      description: 'In Master mode: - 1''b1: Blocks the transmission of data on I2C
        bus even if Tx FIFO has data to transmit. - 1''b0: The transmission of data
        starts on I2C bus automatically, as soon as the first data is available in
        the Tx FIFO. Note: To block the execution of Master commands, set the TX_CMD_BLOCK
        bit only when Tx FIFO is empty (IC_STATUS[2]==1) and Master is in Idle state
        (IC_STATUS[5] == 0). Any further commands put in the Tx FIFO are not executed
        until TX_CMD_BLOCK bit is unset. Reset value:  IC_TX_CMD_BLOCK_DEFAULT'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_BLOCKED
        1: BLOCKED
    - !Field
      name: ABORT
      bit_offset: 1
      bit_width: 1
      description: "When set, the controller initiates the transfer abort. - 0: ABORT
        not initiated or ABORT done - 1: ABORT operation in progress The software
        can abort the I2C transfer in master mode by setting this bit. The software
        can set this bit only when ENABLE is already set; otherwise, the controller
        ignores any write to ABORT bit. The software cannot clear the ABORT bit once
        set. In response to an ABORT, the controller issues a STOP and flushes the
        Tx FIFO after completing the current transfer, then sets the TX_ABORT interrupt
        after the abort operation. The ABORT bit is cleared automatically after the
        abort operation.\\n\\n\n                For a detailed description on how
        to abort I2C transfers, refer to 'Aborting I2C Transfers'.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLED
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: "Controls whether the DW_apb_i2c is enabled. - 0: Disables DW_apb_i2c
        (TX and RX FIFOs are held in an erased state) - 1: Enables DW_apb_i2c Software
        can disable DW_apb_i2c while it is active. However, it is important that care
        be taken to ensure that DW_apb_i2c is disabled properly. A recommended procedure
        is described in 'Disabling DW_apb_i2c'.\\n\\n\n                When DW_apb_i2c
        is disabled, the following occurs: - The TX FIFO and RX FIFO get flushed.
        - Status bits in the IC_INTR_STAT register are still active until DW_apb_i2c
        goes into IDLE state. If the module is transmitting, it stops as well as deletes
        the contents of the transmit buffer after the current transfer is complete.
        If the module is receiving, the DW_apb_i2c stops the current transfer at the
        end of the current byte and does not acknowledge the transfer.\\n\\n\n                In
        systems with asynchronous pclk and ic_clk when IC_CLK_TYPE parameter set to
        asynchronous (1), there is a two ic_clk delay when enabling or disabling the
        DW_apb_i2c. For a detailed description on how to disable DW_apb_i2c, refer
        to 'Disabling DW_apb_i2c'\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_STATUS
    addr: 0x40048070
    size_bits: 32
    description: "I2C Status Register\\n\\n\n            This is a read-only register
      used to indicate the current transfer status and FIFO status. The status register
      may be read at any time. None of the bits in this register request an interrupt.\\n\\n\n
      \           When the I2C is disabled by writing 0 in bit 0 of the IC_ENABLE
      register: - Bits 1 and 2 are set to 1 - Bits 3 and 10 are set to 0 When the
      master or slave state machines goes to idle and ic_en=0: - Bits 5 and 6 are
      set to 0"
    reset_value: 0x6
    fields:
    - !Field
      name: SLV_ACTIVITY
      bit_offset: 6
      bit_width: 1
      description: 'Slave FSM Activity Status. When the Slave Finite State Machine
        (FSM) is not in the IDLE state, this bit is set. - 0: Slave FSM is in IDLE
        state so the Slave part of DW_apb_i2c is not Active - 1: Slave FSM is not
        in IDLE state so the Slave part of DW_apb_i2c is Active Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: ACTIVE
    - !Field
      name: MST_ACTIVITY
      bit_offset: 5
      bit_width: 1
      description: "Master FSM Activity Status. When the Master Finite State Machine
        (FSM) is not in the IDLE state, this bit is set. - 0: Master FSM is in IDLE
        state so the Master part of DW_apb_i2c is not Active - 1: Master FSM is not
        in IDLE state so the Master part of DW_apb_i2c is Active Note: IC_STATUS[0]-that
        is, ACTIVITY bit-is the OR of SLV_ACTIVITY and MST_ACTIVITY bits.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: ACTIVE
    - !Field
      name: RFF
      bit_offset: 4
      bit_width: 1
      description: 'Receive FIFO Completely Full. When the receive FIFO is completely
        full, this bit is set. When the receive FIFO contains one or more empty location,
        this bit is cleared. - 0: Receive FIFO is not full - 1: Receive FIFO is full
        Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_FULL
        1: FULL
    - !Field
      name: RFNE
      bit_offset: 3
      bit_width: 1
      description: 'Receive FIFO Not Empty. This bit is set when the receive FIFO
        contains one or more entries; it is cleared when the receive FIFO is empty.
        - 0: Receive FIFO is empty - 1: Receive FIFO is not empty Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: EMPTY
        1: NOT_EMPTY
    - !Field
      name: TFE
      bit_offset: 2
      bit_width: 1
      description: 'Transmit FIFO Completely Empty. When the transmit FIFO is completely
        empty, this bit is set. When it contains one or more valid entries, this bit
        is cleared. This bit field does not request an interrupt. - 0: Transmit FIFO
        is not empty - 1: Transmit FIFO is empty Reset value: 0x1'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NON_EMPTY
        1: EMPTY
    - !Field
      name: TFNF
      bit_offset: 1
      bit_width: 1
      description: 'Transmit FIFO Not Full. Set when the transmit FIFO contains one
        or more empty locations, and is cleared when the FIFO is full. - 0: Transmit
        FIFO is full - 1: Transmit FIFO is not full Reset value: 0x1'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: FULL
        1: NOT_FULL
    - !Field
      name: ACTIVITY
      bit_offset: 0
      bit_width: 1
      description: 'I2C Activity Status. Reset value: 0x0'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_TXFLR
    addr: 0x40048074
    size_bits: 32
    description: 'I2C Transmit FIFO Level Register This register contains the number
      of valid data entries in the transmit FIFO buffer. It is cleared whenever: -
      The I2C is disabled - There is a transmit abort - that is, TX_ABRT bit is set
      in the IC_RAW_INTR_STAT register - The slave bulk transmit mode is aborted The
      register increments whenever data is placed into the transmit FIFO and decrements
      when data is taken from the transmit FIFO.'
    fields:
    - !Field
      name: TXFLR
      bit_offset: 0
      bit_width: 5
      description: "Transmit FIFO Level. Contains the number of valid data entries
        in the transmit FIFO.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_RXFLR
    addr: 0x40048078
    size_bits: 32
    description: 'I2C Receive FIFO Level Register This register contains the number
      of valid data entries in the receive FIFO buffer. It is cleared whenever: -
      The I2C is disabled - Whenever there is a transmit abort caused by any of the
      events tracked in IC_TX_ABRT_SOURCE The register increments whenever data is
      placed into the receive FIFO and decrements when data is taken from the receive
      FIFO.'
    fields:
    - !Field
      name: RXFLR
      bit_offset: 0
      bit_width: 5
      description: "Receive FIFO Level. Contains the number of valid data entries
        in the receive FIFO.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_SDA_HOLD
    addr: 0x4004807c
    size_bits: 32
    description: "I2C SDA Hold Time Length Register\\n\\n\n            The bits [15:0]
      of this register are used to control the hold time of SDA during transmit in
      both slave and master mode (after SCL goes from HIGH to LOW).\\n\\n\n            The
      bits [23:16] of this register are used to extend the SDA transition (if any)
      whenever SCL is HIGH in the receiver in either master or slave mode.\\n\\n\n
      \           Writes to this register succeed only when IC_ENABLE[0]=0.\\n\\n\n
      \           The values in this register are in units of ic_clk period. The value
      programmed in IC_SDA_TX_HOLD must be greater than the minimum hold time in each
      mode one cycle in master mode, seven cycles in slave mode for the value to be
      implemented.\\n\\n\n            The programmed SDA hold time during transmit
      (IC_SDA_TX_HOLD) cannot exceed at any time the duration of the low part of scl.
      Therefore the programmed value cannot be larger than N_SCL_LOW-2, where N_SCL_LOW
      is the duration of the low part of the scl period measured in ic_clk cycles."
    reset_value: 0x1
    fields:
    - !Field
      name: IC_SDA_RX_HOLD
      bit_offset: 16
      bit_width: 8
      description: "Sets the required SDA hold time in units of ic_clk period, when
        DW_apb_i2c acts as a receiver.\\n\\n\n                Reset value: IC_DEFAULT_SDA_HOLD[23:16]."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IC_SDA_TX_HOLD
      bit_offset: 0
      bit_width: 16
      description: "Sets the required SDA hold time in units of ic_clk period, when
        DW_apb_i2c acts as a transmitter.\\n\\n\n                Reset value: IC_DEFAULT_SDA_HOLD[15:0]."
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_TX_ABRT_SOURCE
    addr: 0x40048080
    size_bits: 32
    description: "I2C Transmit Abort Source Register\\n\\n\n            This register
      has 32 bits that indicate the source of the TX_ABRT bit. Except for Bit 9, this
      register is cleared whenever the IC_CLR_TX_ABRT register or the IC_CLR_INTR
      register is read. To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must
      be fixed first; RESTART must be enabled (IC_CON[5]=1), the SPECIAL bit must
      be cleared (IC_TAR[11]), or the GC_OR_START bit must be cleared (IC_TAR[10]).\\n\\n\n
      \           Once the source of the ABRT_SBYTE_NORSTRT is fixed, then this bit
      can be cleared in the same manner as other bits in this register. If the source
      of the ABRT_SBYTE_NORSTRT is not fixed before attempting to clear this bit,
      Bit 9 clears for one cycle and is then re-asserted."
    fields:
    - !Field
      name: TX_FLUSH_CNT
      bit_offset: 23
      bit_width: 9
      description: "This field indicates the number of Tx FIFO Data Commands which
        are flushed due to TX_ABRT interrupt. It is cleared whenever I2C is disabled.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter or Slave-Transmitter"
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABRT_USER_ABRT
      bit_offset: 16
      bit_width: 1
      description: "This is a master-mode-only bit. Master has detected the transfer
        abort (IC_ENABLE[1])\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_USER_ABRT_VOID
        1: ABRT_USER_ABRT_GENERATED
    - !Field
      name: ABRT_SLVRD_INTX
      bit_offset: 15
      bit_width: 1
      description: "1: When the processor side responds to a slave mode request for
        data to be transmitted to a remote master and user writes a 1 in CMD (bit
        8) of IC_DATA_CMD register.\\n\\n\n                Reset value: 0x0\\n\\n\n
        \               Role of DW_apb_i2c:  Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLVRD_INTX_VOID
        1: ABRT_SLVRD_INTX_GENERATED
    - !Field
      name: ABRT_SLV_ARBLOST
      bit_offset: 14
      bit_width: 1
      description: "This field indicates that a Slave has lost the bus while transmitting
        data to a remote master. IC_TX_ABRT_SOURCE[12] is set at the same time. Note:
        \ Even though the slave never 'owns' the bus, something could go wrong on
        the bus. This is a fail safe check. For instance, during a data transmission
        at the low-to-high transition of SCL, if what is on the data bus is not what
        is supposed to be transmitted, then DW_apb_i2c no longer own the bus.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLV_ARBLOST_VOID
        1: ABRT_SLV_ARBLOST_GENERATED
    - !Field
      name: ABRT_SLVFLUSH_TXFIFO
      bit_offset: 13
      bit_width: 1
      description: "This field specifies that the Slave has received a read command
        and some data exists in the TX FIFO, so the slave issues a TX_ABRT interrupt
        to flush old data in TX FIFO.\\n\\n\n                Reset value: 0x0\\n\\n\n
        \               Role of DW_apb_i2c:  Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SLVFLUSH_TXFIFO_VOID
        1: ABRT_SLVFLUSH_TXFIFO_GENERATED
    - !Field
      name: ARB_LOST
      bit_offset: 12
      bit_width: 1
      description: "This field specifies that the Master has lost arbitration, or
        if IC_TX_ABRT_SOURCE[14] is also set, then the slave transmitter has lost
        arbitration.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Slave-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_LOST_VOID
        1: ABRT_LOST_GENERATED
    - !Field
      name: ABRT_MASTER_DIS
      bit_offset: 11
      bit_width: 1
      description: "This field indicates that the User tries to initiate a Master
        operation with the Master mode disabled.\\n\\n\n                Reset value:
        0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_MASTER_DIS_VOID
        1: ABRT_MASTER_DIS_GENERATED
    - !Field
      name: ABRT_10B_RD_NORSTRT
      bit_offset: 10
      bit_width: 1
      description: "This field indicates that the restart is disabled (IC_RESTART_EN
        bit (IC_CON[5]) =0) and the master sends a read command in 10-bit addressing
        mode.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_10B_RD_VOID
        1: ABRT_10B_RD_GENERATED
    - !Field
      name: ABRT_SBYTE_NORSTRT
      bit_offset: 9
      bit_width: 1
      description: "To clear Bit 9, the source of the ABRT_SBYTE_NORSTRT must be fixed
        first; restart must be enabled (IC_CON[5]=1), the SPECIAL bit must be cleared
        (IC_TAR[11]), or the GC_OR_START bit must be cleared (IC_TAR[10]). Once the
        source of the ABRT_SBYTE_NORSTRT is fixed, then this bit can be cleared in
        the same manner as other bits in this register. If the source of the ABRT_SBYTE_NORSTRT
        is not fixed before attempting to clear this bit, bit 9 clears for one cycle
        and then gets reasserted. When this field is set to 1, the restart is disabled
        (IC_RESTART_EN bit (IC_CON[5]) =0) and the user is trying to send a START
        Byte.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SBYTE_NORSTRT_VOID
        1: ABRT_SBYTE_NORSTRT_GENERATED
    - !Field
      name: ABRT_HS_NORSTRT
      bit_offset: 8
      bit_width: 1
      description: "This field indicates that the restart is disabled (IC_RESTART_EN
        bit (IC_CON[5]) =0) and the user is trying to use the master to transfer data
        in High Speed mode.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_HS_NORSTRT_VOID
        1: ABRT_HS_NORSTRT_GENERATED
    - !Field
      name: ABRT_SBYTE_ACKDET
      bit_offset: 7
      bit_width: 1
      description: "This field indicates that the Master has sent a START Byte and
        the START Byte was acknowledged (wrong behavior).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_SBYTE_ACKDET_VOID
        1: ABRT_SBYTE_ACKDET_GENERATED
    - !Field
      name: ABRT_HS_ACKDET
      bit_offset: 6
      bit_width: 1
      description: "This field indicates that the Master is in High Speed mode and
        the High Speed Master code was acknowledged (wrong behavior).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_HS_ACK_VOID
        1: ABRT_HS_ACK_GENERATED
    - !Field
      name: ABRT_GCALL_READ
      bit_offset: 5
      bit_width: 1
      description: "This field indicates that DW_apb_i2c in the master mode has sent
        a General Call but the user programmed the byte following the General Call
        to be a read from the bus (IC_DATA_CMD[9] is set to 1).\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_GCALL_READ_VOID
        1: ABRT_GCALL_READ_GENERATED
    - !Field
      name: ABRT_GCALL_NOACK
      bit_offset: 4
      bit_width: 1
      description: "This field indicates that DW_apb_i2c in master mode has sent a
        General Call and no slave on the bus acknowledged the General Call.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_GCALL_NOACK_VOID
        1: ABRT_GCALL_NOACK_GENERATED
    - !Field
      name: ABRT_TXDATA_NOACK
      bit_offset: 3
      bit_width: 1
      description: "This field indicates the master-mode only bit. When the master
        receives an acknowledgement for the address, but when it sends data byte(s)
        following the address, it did not receive an acknowledge from the remote slave(s).\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ABRT_TXDATA_NOACK_VOID
        1: ABRT_TXDATA_NOACK_GENERATED
    - !Field
      name: ABRT_10ADDR2_NOACK
      bit_offset: 2
      bit_width: 1
      description: "This field indicates that the Master is in 10-bit address mode
        and that the second address byte of the 10-bit address was not acknowledged
        by any slave.\\n\\n\n                Reset value: 0x0\\n\\n\n                Role
        of DW_apb_i2c:  Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ABRT_10ADDR1_NOACK
      bit_offset: 1
      bit_width: 1
      description: "This field indicates that the Master is in 10-bit address mode
        and the first 10-bit address byte was not acknowledged by any slave.\\n\\n\n
        \               Reset value: 0x0\\n\\n\n                Role of DW_apb_i2c:
        \ Master-Transmitter or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: ABRT_7B_ADDR_NOACK
      bit_offset: 0
      bit_width: 1
      description: "This field indicates that the Master is in 7-bit addressing mode
        and the address sent was not acknowledged by any slave.\\n\\n\n                Reset
        value: 0x0\\n\\n\n                Role of DW_apb_i2c:  Master-Transmitter
        or Master-Receiver"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
  - !Register
    name: IC_SLV_DATA_NACK_ONLY
    addr: 0x40048084
    size_bits: 32
    description: "Generate Slave Data NACK Register\\n\\n\n            The register
      is used to generate a NACK for the data part of a transfer when DW_apb_i2c is
      acting as a slave-receiver. This register only exists when the IC_SLV_DATA_NACK_ONLY
      parameter is set to 1. When this parameter disabled, this register does not
      exist and writing to the register's address has no effect.\\n\\n\n            A
      write can occur on this register if both of the following conditions are met:
      - DW_apb_i2c is disabled (IC_ENABLE[0] = 0) - Slave part is inactive (IC_STATUS[6]
      = 0) Note: The IC_STATUS[6] is a register read-back location for the internal
      slv_activity signal; the user should poll this before writing the ic_slv_data_nack_only
      bit."
    fields:
    - !Field
      name: NACK
      bit_offset: 0
      bit_width: 1
      description: "Generate NACK. This NACK generation only occurs when DW_apb_i2c
        is a slave-receiver. If this register is set to a value of 1, it can only
        generate a NACK after a data byte is received; hence, the data transfer is
        aborted and the data received is not pushed to the receive buffer.\\n\\n\n
        \               When the register is set to a value of 0, it generates NACK/ACK,
        depending on normal criteria. - 1: generate NACK after data byte received
        - 0: generate NACK/ACK normally Reset value: 0x0"
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_DMA_CR
    addr: 0x40048088
    size_bits: 32
    description: "DMA Control Register\\n\\n\n            The register is used to
      enable the DMA Controller interface operation. There is a separate bit for transmit
      and receive. This can be programmed regardless of the state of IC_ENABLE."
    fields:
    - !Field
      name: TDMAE
      bit_offset: 1
      bit_width: 1
      description: 'Transmit DMA Enable. This bit enables/disables the transmit FIFO
        DMA channel. Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RDMAE
      bit_offset: 0
      bit_width: 1
      description: 'Receive DMA Enable. This bit enables/disables the receive FIFO
        DMA channel. Reset value: 0x0'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_DMA_TDLR
    addr: 0x4004808c
    size_bits: 32
    description: DMA Transmit Data Level Register
    fields:
    - !Field
      name: DMATDL
      bit_offset: 0
      bit_width: 4
      description: "Transmit Data Level. This bit field controls the level at which
        a DMA request is made by the transmit logic. It is equal to the watermark
        level; that is, the dma_tx_req signal is generated when the number of valid
        data entries in the transmit FIFO is equal to or below this field value, and
        TDMAE = 1.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_DMA_RDLR
    addr: 0x40048090
    size_bits: 32
    description: I2C Receive Data Level Register
    fields:
    - !Field
      name: DMARDL
      bit_offset: 0
      bit_width: 4
      description: "Receive Data Level. This bit field controls the level at which
        a DMA request is made by the receive logic. The watermark level = DMARDL+1;
        that is, dma_rx_req is generated when the number of valid data entries in
        the receive FIFO is equal to or more than this field value + 1, and RDMAE
        =1. For instance, when DMARDL is 0, then dma_rx_req is asserted when 1 or
        more data entries are present in the receive FIFO.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_SDA_SETUP
    addr: 0x40048094
    size_bits: 32
    description: "I2C SDA Setup Register\\n\\n\n            This register controls
      the amount of time delay (in terms of number of ic_clk clock periods) introduced
      in the rising edge of SCL - relative to SDA changing - when DW_apb_i2c services
      a read request in a slave-transmitter operation. The relevant I2C requirement
      is tSU:DAT (note 4) as detailed in the I2C Bus Specification. This register
      must be programmed with a value equal to or greater than 2.\\n\\n\n            Writes
      to this register succeed only when IC_ENABLE[0] = 0.\\n\\n\n            Note:
      The length of setup time is calculated using [(IC_SDA_SETUP - 1) * (ic_clk_period)],
      so if the user requires 10 ic_clk periods of setup time, they should program
      a value of 11. The IC_SDA_SETUP register is only used by the DW_apb_i2c when
      operating as a slave transmitter."
    reset_value: 0x64
    fields:
    - !Field
      name: SDA_SETUP
      bit_offset: 0
      bit_width: 8
      description: SDA Setup. It is recommended that if the required delay is 1000ns,
        then for an ic_clk frequency of 10 MHz, IC_SDA_SETUP should be programmed
        to a value of 11. IC_SDA_SETUP must be programmed with a minimum value of
        2.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_ACK_GENERAL_CALL
    addr: 0x40048098
    size_bits: 32
    description: "I2C ACK General Call Register\\n\\n\n            The register controls
      whether DW_apb_i2c responds with a ACK or NACK when it receives an I2C General
      Call address.\\n\\n\n            This register is applicable only when the DW_apb_i2c
      is in slave mode."
    reset_value: 0x1
    fields:
    - !Field
      name: ACK_GEN_CALL
      bit_offset: 0
      bit_width: 1
      description: ACK General Call. When set to 1, DW_apb_i2c responds with a ACK
        (by asserting ic_data_oe) when it receives a General Call. Otherwise, DW_apb_i2c
        responds with a NACK (by negating ic_data_oe).
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_ENABLE_STATUS
    addr: 0x4004809c
    size_bits: 32
    description: "I2C Enable Status Register\\n\\n\n            The register is used
      to report the DW_apb_i2c hardware status when the IC_ENABLE[0] register is set
      from 1 to 0; that is, when DW_apb_i2c is disabled.\\n\\n\n            If IC_ENABLE[0]
      has been set to 1, bits 2:1 are forced to 0, and bit 0 is forced to 1.\\n\\n\n
      \           If IC_ENABLE[0] has been set to 0, bits 2:1 is only be valid as
      soon as bit 0 is read as '0'.\\n\\n\n            Note: When IC_ENABLE[0] has
      been set to 0, a delay occurs for bit 0 to be read as 0 because disabling the
      DW_apb_i2c depends on I2C bus activities."
    fields:
    - !Field
      name: SLV_RX_DATA_LOST
      bit_offset: 2
      bit_width: 1
      description: "Slave Received Data Lost. This bit indicates if a Slave-Receiver
        operation has been aborted with at least one data byte received from an I2C
        transfer due to the setting bit 0 of IC_ENABLE from 1 to 0. When read as 1,
        DW_apb_i2c is deemed to have been actively engaged in an aborted I2C transfer
        (with matching address) and the data phase of the I2C transfer has been entered,
        even though a data byte has been responded with a NACK.\\n\\n\n                Note:
        \ If the remote I2C master terminates the transfer with a STOP condition before
        the DW_apb_i2c has a chance to NACK a transfer, and IC_ENABLE[0] has been
        set to 0, then this bit is also set to 1.\\n\\n\n                When read
        as 0, DW_apb_i2c is deemed to have been disabled without being actively involved
        in the data phase of a Slave-Receiver transfer.\\n\\n\n                Note:
        \ The CPU can safely read this bit when IC_EN (bit 0) is read as 0.\\n\\n\n
        \               Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: SLV_DISABLED_WHILE_BUSY
      bit_offset: 1
      bit_width: 1
      description: "Slave Disabled While Busy (Transmit, Receive). This bit indicates
        if a potential or active Slave operation has been aborted due to the setting
        bit 0 of the IC_ENABLE register from 1 to 0. This bit is set when the CPU
        writes a 0 to the IC_ENABLE register while:\\n\\n\n                (a) DW_apb_i2c
        is receiving the address byte of the Slave-Transmitter operation from a remote
        master;\\n\\n\n                OR,\\n\\n\n                (b) address and
        data bytes of the Slave-Receiver operation from a remote master.\\n\\n\n                When
        read as 1, DW_apb_i2c is deemed to have forced a NACK during any part of an
        I2C transfer, irrespective of whether the I2C address matches the slave address
        set in DW_apb_i2c (IC_SAR register) OR if the transfer is completed before
        IC_ENABLE is set to 0 but has not taken effect.\\n\\n\n                Note:
        \ If the remote I2C master terminates the transfer with a STOP condition before
        the DW_apb_i2c has a chance to NACK a transfer, and IC_ENABLE[0] has been
        set to 0, then this bit will also be set to 1.\\n\\n\n                When
        read as 0, DW_apb_i2c is deemed to have been disabled when there is master
        activity, or when the I2C bus is idle.\\n\\n\n                Note:  The CPU
        can safely read this bit when IC_EN (bit 0) is read as 0.\\n\\n\n                Reset
        value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: IC_EN
      bit_offset: 0
      bit_width: 1
      description: "ic_en Status. This bit always reflects the value driven on the
        output port ic_en. - When read as 1, DW_apb_i2c is deemed to be in an enabled
        state. - When read as 0, DW_apb_i2c is deemed completely inactive. Note:  The
        CPU can safely read this bit anytime. When this bit is read as 0, the CPU
        can safely read SLV_RX_DATA_LOST (bit 2) and SLV_DISABLED_WHILE_BUSY (bit
        1).\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: IC_FS_SPKLEN
    addr: 0x400480a0
    size_bits: 32
    description: "I2C SS, FS or FM+ spike suppression limit\\n\\n\n            This
      register is used to store the duration, measured in ic_clk cycles, of the longest
      spike that is filtered out by the spike suppression logic when the component
      is operating in SS, FS or FM+ modes. The relevant I2C requirement is tSP (table
      4) as detailed in the I2C Bus Specification. This register must be programmed
      with a minimum value of 1."
    reset_value: 0x7
    fields:
    - !Field
      name: IC_FS_SPKLEN
      bit_offset: 0
      bit_width: 8
      description: This register must be set before any I2C bus transaction can take
        place to ensure stable operation. This register sets the duration, measured
        in ic_clk cycles, of the longest spike in the SCL or SDA lines that will be
        filtered out by the spike suppression logic. This register can be written
        only when the I2C interface is disabled which corresponds to the IC_ENABLE[0]
        register being set to 0. Writes at other times have no effect. The minimum
        valid value is 1; hardware prevents values less than this being written, and
        if attempted results in 1 being set. or more information, refer to 'Spike
        Suppression'.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IC_CLR_RESTART_DET
    addr: 0x400480a8
    size_bits: 32
    description: Clear RESTART_DET Interrupt Register
    fields:
    - !Field
      name: CLR_RESTART_DET
      bit_offset: 0
      bit_width: 1
      description: "Read this register to clear the RESTART_DET interrupt (bit 12)
        of IC_RAW_INTR_STAT register.\\n\\n\n                Reset value: 0x0"
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_PARAM_1
    addr: 0x400480f4
    size_bits: 32
    description: "Component Parameter Register 1\\n\\n\n            Note This register
      is not implemented and therefore reads as 0. If it was implemented it would
      be a constant read-only register that contains encoded information about the
      component's parameter settings. Fields shown below are the settings for those
      parameters"
    fields:
    - !Field
      name: TX_BUFFER_DEPTH
      bit_offset: 16
      bit_width: 8
      description: TX Buffer Depth = 16
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_BUFFER_DEPTH
      bit_offset: 8
      bit_width: 8
      description: RX Buffer Depth = 16
      read_allowed: true
      write_allowed: false
    - !Field
      name: ADD_ENCODED_PARAMS
      bit_offset: 7
      bit_width: 1
      description: Encoded parameters not visible
      read_allowed: true
      write_allowed: false
    - !Field
      name: HAS_DMA
      bit_offset: 6
      bit_width: 1
      description: DMA handshaking signals are enabled
      read_allowed: true
      write_allowed: false
    - !Field
      name: INTR_IO
      bit_offset: 5
      bit_width: 1
      description: COMBINED Interrupt outputs
      read_allowed: true
      write_allowed: false
    - !Field
      name: HC_COUNT_VALUES
      bit_offset: 4
      bit_width: 1
      description: Programmable count values for each mode.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAX_SPEED_MODE
      bit_offset: 2
      bit_width: 2
      description: MAX SPEED MODE = FAST MODE
      read_allowed: true
      write_allowed: false
    - !Field
      name: APB_DATA_WIDTH
      bit_offset: 0
      bit_width: 2
      description: APB data bus width is 32 bits
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_VERSION
    addr: 0x400480f8
    size_bits: 32
    description: I2C Component Version Register
    reset_value: 0x3230312a
    fields:
    - !Field
      name: IC_COMP_VERSION
      bit_offset: 0
      bit_width: 32
      read_allowed: true
      write_allowed: false
  - !Register
    name: IC_COMP_TYPE
    addr: 0x400480fc
    size_bits: 32
    description: I2C Component Type Register
    reset_value: 0x44570140
    fields:
    - !Field
      name: IC_COMP_TYPE
      bit_offset: 0
      bit_width: 32
      description: Designware Component Type number = 0x44_57_01_40. This assigned
        unique hex value is constant and is derived from the two ASCII letters 'DW'
        followed by a 16-bit unsigned number.
      read_allowed: true
      write_allowed: false
- !Module
  name: ADC
  description: Control and data interface to SAR ADC
  base_addr: 0x4004c000
  size: 0x24
  registers:
  - !Register
    name: CS
    addr: 0x4004c000
    size_bits: 32
    description: ADC Control and Status
    fields:
    - !Field
      name: RROBIN
      bit_offset: 16
      bit_width: 5
      description: "Round-robin sampling. 1 bit per channel. Set all bits to 0 to
        disable.\\n\n                Otherwise, the ADC will cycle through each enabled
        channel in a round-robin fashion.\\n\n                The first channel to
        be sampled will be the one currently indicated by AINSEL.\\n\n                AINSEL
        will be updated after each conversion with the newly-selected channel."
      read_allowed: true
      write_allowed: true
    - !Field
      name: AINSEL
      bit_offset: 12
      bit_width: 3
      description: Select analog mux input. Updated automatically in round-robin mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERR_STICKY
      bit_offset: 10
      bit_width: 1
      description: Some past ADC conversion encountered an error. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERR
      bit_offset: 9
      bit_width: 1
      description: The most recent ADC conversion encountered an error; result is
        undefined or noisy.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READY
      bit_offset: 8
      bit_width: 1
      description: "1 if the ADC is ready to start a new conversion. Implies any previous
        conversion has completed.\\n\n                0 whilst conversion in progress."
      read_allowed: true
      write_allowed: false
    - !Field
      name: START_MANY
      bit_offset: 3
      bit_width: 1
      description: Continuously perform conversions whilst this bit is 1. A new conversion
        will start immediately after the previous finishes.
      read_allowed: true
      write_allowed: true
    - !Field
      name: START_ONCE
      bit_offset: 2
      bit_width: 1
      description: Start a single conversion. Self-clearing. Ignored if start_many
        is asserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TS_EN
      bit_offset: 1
      bit_width: 1
      description: Power on temperature sensor. 1 - enabled. 0 - disabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "Power on ADC and enable its clock.\\n\n                1 - enabled.
        0 - disabled."
      read_allowed: true
      write_allowed: true
  - !Register
    name: RESULT
    addr: 0x4004c004
    size_bits: 32
    description: Result of most recent ADC conversion
    fields:
    - !Field
      name: RESULT
      bit_offset: 0
      bit_width: 12
      read_allowed: true
      write_allowed: false
  - !Register
    name: FCS
    addr: 0x4004c008
    size_bits: 32
    description: FIFO control and status
    fields:
    - !Field
      name: THRESH
      bit_offset: 24
      bit_width: 4
      description: DREQ/IRQ asserted when level >= threshold
      read_allowed: true
      write_allowed: true
    - !Field
      name: LEVEL
      bit_offset: 16
      bit_width: 4
      description: The number of conversion results currently waiting in the FIFO
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVER
      bit_offset: 11
      bit_width: 1
      description: 1 if the FIFO has been overflowed. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: UNDER
      bit_offset: 10
      bit_width: 1
      description: 1 if the FIFO has been underflowed. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FULL
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EMPTY
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: DREQ_EN
      bit_offset: 3
      bit_width: 1
      description: 'If 1: assert DMA requests when FIFO contains data'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERR
      bit_offset: 2
      bit_width: 1
      description: 'If 1: conversion error bit appears in the FIFO alongside the result'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 1
      bit_width: 1
      description: 'If 1: FIFO results are right-shifted to be one byte in size. Enables
        DMA to byte buffers.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: 'If 1: write result to the FIFO after each conversion.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFO
    addr: 0x4004c00c
    size_bits: 32
    description: Conversion result FIFO
    fields:
    - !Field
      name: ERR
      bit_offset: 15
      bit_width: 1
      description: 1 if this particular sample experienced a conversion error. Remains
        in the same location if the sample is shifted.
      read_allowed: true
      write_allowed: false
    - !Field
      name: VAL
      bit_offset: 0
      bit_width: 12
      read_allowed: true
      write_allowed: false
  - !Register
    name: DIV
    addr: 0x4004c010
    size_bits: 32
    description: "Clock divider. If non-zero, CS_START_MANY will start conversions\\n\n
      \           at regular intervals rather than back-to-back.\\n\n            The
      divider is reset when either of these fields are written.\\n\n            Total
      period is 1 + INT + FRAC / 256"
    fields:
    - !Field
      name: INT
      bit_offset: 8
      bit_width: 16
      description: Integer part of clock divisor.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 8
      description: Fractional part of clock divisor. First-order delta-sigma.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x4004c014
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: FIFO
      bit_offset: 0
      bit_width: 1
      description: "Triggered when the sample FIFO reaches a certain level.\\n\n                This
        level can be programmed via the FCS_THRESH field."
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTE
    addr: 0x4004c018
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: FIFO
      bit_offset: 0
      bit_width: 1
      description: "Triggered when the sample FIFO reaches a certain level.\\n\n                This
        level can be programmed via the FCS_THRESH field."
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x4004c01c
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: FIFO
      bit_offset: 0
      bit_width: 1
      description: "Triggered when the sample FIFO reaches a certain level.\\n\n                This
        level can be programmed via the FCS_THRESH field."
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x4004c020
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: FIFO
      bit_offset: 0
      bit_width: 1
      description: "Triggered when the sample FIFO reaches a certain level.\\n\n                This
        level can be programmed via the FCS_THRESH field."
      read_allowed: true
      write_allowed: false
- !Module
  name: PWM
  description: Simple PWM
  base_addr: 0x40050000
  size: 0xb4
  registers:
  - !Register
    name: CH0_CSR
    addr: 0x40050000
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH0_DIV
    addr: 0x40050004
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH0_CTR
    addr: 0x40050008
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH0_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH0_CC
    addr: 0x4005000c
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH0_TOP
    addr: 0x40050010
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH0_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_CSR
    addr: 0x40050014
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_DIV
    addr: 0x40050018
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_CTR
    addr: 0x4005001c
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH1_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_CC
    addr: 0x40050020
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_TOP
    addr: 0x40050024
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH1_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_CSR
    addr: 0x40050028
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_DIV
    addr: 0x4005002c
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_CTR
    addr: 0x40050030
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH2_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_CC
    addr: 0x40050034
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_TOP
    addr: 0x40050038
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH2_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_CSR
    addr: 0x4005003c
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_DIV
    addr: 0x40050040
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_CTR
    addr: 0x40050044
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH3_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_CC
    addr: 0x40050048
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_TOP
    addr: 0x4005004c
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH3_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_CSR
    addr: 0x40050050
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_DIV
    addr: 0x40050054
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_CTR
    addr: 0x40050058
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH4_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_CC
    addr: 0x4005005c
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_TOP
    addr: 0x40050060
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH4_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_CSR
    addr: 0x40050064
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_DIV
    addr: 0x40050068
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_CTR
    addr: 0x4005006c
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH5_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_CC
    addr: 0x40050070
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_TOP
    addr: 0x40050074
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH5_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_CSR
    addr: 0x40050078
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_DIV
    addr: 0x4005007c
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_CTR
    addr: 0x40050080
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH6_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_CC
    addr: 0x40050084
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_TOP
    addr: 0x40050088
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH6_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_CSR
    addr: 0x4005008c
    size_bits: 32
    description: Control and status register
    fields:
    - !Field
      name: PH_ADV
      bit_offset: 7
      bit_width: 1
      description: "Advance the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running\\n\n                at less than full speed (div_int + div_frac
        / 16 > 1)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_RET
      bit_offset: 6
      bit_width: 1
      description: "Retard the phase of the counter by 1 count, while it is running.\\n\n
        \               Self-clearing. Write a 1, and poll until low. Counter must
        be running."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIVMODE
      bit_offset: 4
      bit_width: 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: div
        1: level
        2: rise
        3: fall
    - !Field
      name: B_INV
      bit_offset: 3
      bit_width: 1
      description: Invert output B
      read_allowed: true
      write_allowed: true
    - !Field
      name: A_INV
      bit_offset: 2
      bit_width: 1
      description: Invert output A
      read_allowed: true
      write_allowed: true
    - !Field
      name: PH_CORRECT
      bit_offset: 1
      bit_width: 1
      description: '1: Enable phase-correct modulation. 0: Trailing-edge'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable the PWM channel.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_DIV
    addr: 0x40050090
    size_bits: 32
    description: "INT and FRAC form a fixed-point fractional number.\\n\n            Counting
      rate is system clock frequency divided by this number.\\n\n            Fractional
      division uses simple 1st-order sigma-delta."
    reset_value: 0x10
    fields:
    - !Field
      name: INT
      bit_offset: 4
      bit_width: 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_CTR
    addr: 0x40050094
    size_bits: 32
    description: Direct access to the PWM counter
    fields:
    - !Field
      name: CH7_CTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_CC
    addr: 0x40050098
    size_bits: 32
    description: Counter compare values
    fields:
    - !Field
      name: B
      bit_offset: 16
      bit_width: 16
      read_allowed: true
      write_allowed: true
    - !Field
      name: A
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_TOP
    addr: 0x4005009c
    size_bits: 32
    description: Counter wrap value
    reset_value: 0xffff
    fields:
    - !Field
      name: CH7_TOP
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: EN
    addr: 0x400500a0
    size_bits: 32
    description: "This register aliases the CSR_EN bits for all channels.\\n\n            Writing
      to this register allows multiple channels to be enabled\\n\n            or disabled
      simultaneously, so they can run in perfect sync.\\n\n            For each channel,
      there is only one physical EN register bit,\\n\n            which can be accessed
      through here or CHx_CSR."
    fields:
    - !Field
      name: CH7
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH6
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x400500a4
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: CH7
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH6
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTE
    addr: 0x400500a8
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: CH7
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH6
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x400500ac
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: CH7
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH6
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x400500b0
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: CH7
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH6
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH5
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH4
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: CH0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: TIMER
  description: "Controls time and alarms\\n\n        time is a 64 bit value indicating
    the time in usec since power-on\\n\n        timeh is the top 32 bits of time &
    timel is the bottom 32 bits\\n\n        to change time write to timelw before
    timehw\\n\n        to read time read from timelr before timehr\\n\n        An
    alarm is set by setting alarm_enable and writing to the corresponding alarm register\\n\n
    \       When an alarm is pending, the corresponding alarm_running signal will
    be high\\n\n        An alarm can be cancelled before it has finished by clearing
    the alarm_enable\\n\n        When an alarm fires, the corresponding alarm_irq
    is set and alarm_running is cleared\\n\n        To clear the interrupt write a
    1 to the corresponding alarm_irq"
  base_addr: 0x40054000
  size: 0x44
  registers:
  - !Register
    name: TIMEHW
    addr: 0x40054000
    size_bits: 32
    description: "Write to bits 63:32 of time\\n\n            always write timelw
      before timehw"
    read_allowed: false
    write_allowed: true
  - !Register
    name: TIMELW
    addr: 0x40054004
    size_bits: 32
    description: "Write to bits 31:0 of time\\n\n            writes do not get copied
      to time until timehw is written"
    read_allowed: false
    write_allowed: true
  - !Register
    name: TIMEHR
    addr: 0x40054008
    size_bits: 32
    description: "Read from bits 63:32 of time\\n\n            always read timelr
      before timehr"
    read_allowed: true
    write_allowed: false
  - !Register
    name: TIMELR
    addr: 0x4005400c
    size_bits: 32
    description: Read from bits 31:0 of time
    read_allowed: true
    write_allowed: false
  - !Register
    name: ALARM0
    addr: 0x40054010
    size_bits: 32
    description: "Arm alarm 0, and configure the time it will fire.\\n\n            Once
      armed, the alarm fires when TIMER_ALARM0 == TIMELR.\\n\n            The alarm
      will disarm itself once it fires, and can\\n\n            be disarmed early
      using the ARMED status register."
    read_allowed: true
    write_allowed: true
  - !Register
    name: ALARM1
    addr: 0x40054014
    size_bits: 32
    description: "Arm alarm 1, and configure the time it will fire.\\n\n            Once
      armed, the alarm fires when TIMER_ALARM1 == TIMELR.\\n\n            The alarm
      will disarm itself once it fires, and can\\n\n            be disarmed early
      using the ARMED status register."
    read_allowed: true
    write_allowed: true
  - !Register
    name: ALARM2
    addr: 0x40054018
    size_bits: 32
    description: "Arm alarm 2, and configure the time it will fire.\\n\n            Once
      armed, the alarm fires when TIMER_ALARM2 == TIMELR.\\n\n            The alarm
      will disarm itself once it fires, and can\\n\n            be disarmed early
      using the ARMED status register."
    read_allowed: true
    write_allowed: true
  - !Register
    name: ALARM3
    addr: 0x4005401c
    size_bits: 32
    description: "Arm alarm 3, and configure the time it will fire.\\n\n            Once
      armed, the alarm fires when TIMER_ALARM3 == TIMELR.\\n\n            The alarm
      will disarm itself once it fires, and can\\n\n            be disarmed early
      using the ARMED status register."
    read_allowed: true
    write_allowed: true
  - !Register
    name: ARMED
    addr: 0x40054020
    size_bits: 32
    description: "Indicates the armed/disarmed status of each alarm.\\n\n            A
      write to the corresponding ALARMx register arms the alarm.\\n\n            Alarms
      automatically disarm upon firing, but writing ones here\\n\n            will
      disarm immediately without waiting to fire."
    fields:
    - !Field
      name: ARMED
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: TIMERAWH
    addr: 0x40054024
    size_bits: 32
    description: Raw read from bits 63:32 of time (no side effects)
    read_allowed: true
    write_allowed: false
  - !Register
    name: TIMERAWL
    addr: 0x40054028
    size_bits: 32
    description: Raw read from bits 31:0 of time (no side effects)
    read_allowed: true
    write_allowed: false
  - !Register
    name: DBGPAUSE
    addr: 0x4005402c
    size_bits: 32
    description: Set bits high to enable pause when the corresponding debug ports
      are active
    reset_value: 0x7
    fields:
    - !Field
      name: DBG1
      bit_offset: 2
      bit_width: 1
      description: Pause when processor 1 is in debug mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: DBG0
      bit_offset: 1
      bit_width: 1
      description: Pause when processor 0 is in debug mode
      read_allowed: true
      write_allowed: true
  - !Register
    name: PAUSE
    addr: 0x40054030
    size_bits: 32
    description: Set high to pause the timer
    fields:
    - !Field
      name: PAUSE
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x40054034
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: ALARM_3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTE
    addr: 0x40054038
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: ALARM_3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x4005403c
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: ALARM_3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ALARM_0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x40054040
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: ALARM_3
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: ALARM_2
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: ALARM_1
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: ALARM_0
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: WATCHDOG
  base_addr: 0x40058000
  size: 0x30
  registers:
  - !Register
    name: CTRL
    addr: 0x40058000
    size_bits: 32
    description: "Watchdog control\\n\n            The rst_wdsel register determines
      which subsystems are reset when the watchdog is triggered.\\n\n            The
      watchdog can be triggered in software."
    reset_value: 0x7000000
    fields:
    - !Field
      name: TRIGGER
      bit_offset: 31
      bit_width: 1
      description: Trigger a watchdog reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 30
      bit_width: 1
      description: When not enabled the watchdog timer is paused
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAUSE_DBG1
      bit_offset: 26
      bit_width: 1
      description: Pause the watchdog timer when processor 1 is in debug mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAUSE_DBG0
      bit_offset: 25
      bit_width: 1
      description: Pause the watchdog timer when processor 0 is in debug mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAUSE_JTAG
      bit_offset: 24
      bit_width: 1
      description: Pause the watchdog timer when JTAG is accessing the bus fabric
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIME
      bit_offset: 0
      bit_width: 24
      description: Indicates the number of ticks / 2 (see errata RP2040-E1) before
        a watchdog reset will be triggered
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOAD
    addr: 0x40058004
    size_bits: 32
    description: Load the watchdog timer. The maximum setting is 0xffffff which corresponds
      to 0xffffff / 2 ticks before triggering a watchdog reset (see errata RP2040-E1).
    fields:
    - !Field
      name: LOAD
      bit_offset: 0
      bit_width: 24
      read_allowed: false
      write_allowed: true
  - !Register
    name: REASON
    addr: 0x40058008
    size_bits: 32
    description: Logs the reason for the last reset. Both bits are zero for the case
      of a hardware reset.
    fields:
    - !Field
      name: FORCE
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: TIMER
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: SCRATCH0
    addr: 0x4005800c
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH1
    addr: 0x40058010
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH2
    addr: 0x40058014
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH3
    addr: 0x40058018
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH4
    addr: 0x4005801c
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH5
    addr: 0x40058020
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH6
    addr: 0x40058024
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: SCRATCH7
    addr: 0x40058028
    size_bits: 32
    description: Scratch register. Information persists through soft reset of the
      chip.
    read_allowed: true
    write_allowed: true
  - !Register
    name: TICK
    addr: 0x4005802c
    size_bits: 32
    description: Controls the tick generator
    reset_value: 0x200
    fields:
    - !Field
      name: COUNT
      bit_offset: 11
      bit_width: 9
      description: 'Count down timer: the remaining number clk_tick cycles before
        the next tick is generated.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RUNNING
      bit_offset: 10
      bit_width: 1
      description: Is the tick generator running?
      read_allowed: true
      write_allowed: false
    - !Field
      name: ENABLE
      bit_offset: 9
      bit_width: 1
      description: start / stop tick generation
      read_allowed: true
      write_allowed: true
    - !Field
      name: CYCLES
      bit_offset: 0
      bit_width: 9
      description: Total number of clk_tick cycles before the next tick.
      read_allowed: true
      write_allowed: true
- !Module
  name: RTC
  description: Register block to control RTC
  base_addr: 0x4005c000
  size: 0x30
  registers:
  - !Register
    name: CLKDIV_M1
    addr: 0x4005c000
    size_bits: 32
    description: Divider minus 1 for the 1 second counter. Safe to change the value
      when RTC is not enabled.
    fields:
    - !Field
      name: CLKDIV_M1
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SETUP_0
    addr: 0x4005c004
    size_bits: 32
    description: RTC setup register 0
    fields:
    - !Field
      name: YEAR
      bit_offset: 12
      bit_width: 12
      description: Year
      read_allowed: true
      write_allowed: true
    - !Field
      name: MONTH
      bit_offset: 8
      bit_width: 4
      description: Month (1..12)
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAY
      bit_offset: 0
      bit_width: 5
      description: Day of the month (1..31)
      read_allowed: true
      write_allowed: true
  - !Register
    name: SETUP_1
    addr: 0x4005c008
    size_bits: 32
    description: RTC setup register 1
    fields:
    - !Field
      name: DOTW
      bit_offset: 24
      bit_width: 3
      description: 'Day of the week: 1-Monday...0-Sunday ISO 8601 mod 7'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOUR
      bit_offset: 16
      bit_width: 5
      description: Hours
      read_allowed: true
      write_allowed: true
    - !Field
      name: MIN
      bit_offset: 8
      bit_width: 6
      description: Minutes
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEC
      bit_offset: 0
      bit_width: 6
      description: Seconds
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL
    addr: 0x4005c00c
    size_bits: 32
    description: RTC Control and status
    fields:
    - !Field
      name: FORCE_NOTLEAPYEAR
      bit_offset: 8
      bit_width: 1
      description: "If set, leapyear is forced off.\\n\n                Useful for
        years divisible by 100 but not by 400"
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOAD
      bit_offset: 4
      bit_width: 1
      description: Load RTC
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTC_ACTIVE
      bit_offset: 1
      bit_width: 1
      description: RTC enabled (running)
      read_allowed: true
      write_allowed: false
    - !Field
      name: RTC_ENABLE
      bit_offset: 0
      bit_width: 1
      description: Enable RTC
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ_SETUP_0
    addr: 0x4005c010
    size_bits: 32
    description: Interrupt setup register 0
    fields:
    - !Field
      name: MATCH_ACTIVE
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: MATCH_ENA
      bit_offset: 28
      bit_width: 1
      description: Global match enable. Don't change any other value while this one
        is enabled
      read_allowed: true
      write_allowed: true
    - !Field
      name: YEAR_ENA
      bit_offset: 26
      bit_width: 1
      description: Enable year matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: MONTH_ENA
      bit_offset: 25
      bit_width: 1
      description: Enable month matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAY_ENA
      bit_offset: 24
      bit_width: 1
      description: Enable day matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: YEAR
      bit_offset: 12
      bit_width: 12
      description: Year
      read_allowed: true
      write_allowed: true
    - !Field
      name: MONTH
      bit_offset: 8
      bit_width: 4
      description: Month (1..12)
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAY
      bit_offset: 0
      bit_width: 5
      description: Day of the month (1..31)
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ_SETUP_1
    addr: 0x4005c014
    size_bits: 32
    description: Interrupt setup register 1
    fields:
    - !Field
      name: DOTW_ENA
      bit_offset: 31
      bit_width: 1
      description: Enable day of the week matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOUR_ENA
      bit_offset: 30
      bit_width: 1
      description: Enable hour matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: MIN_ENA
      bit_offset: 29
      bit_width: 1
      description: Enable minute matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEC_ENA
      bit_offset: 28
      bit_width: 1
      description: Enable second matching
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOTW
      bit_offset: 24
      bit_width: 3
      description: Day of the week
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOUR
      bit_offset: 16
      bit_width: 5
      description: Hours
      read_allowed: true
      write_allowed: true
    - !Field
      name: MIN
      bit_offset: 8
      bit_width: 6
      description: Minutes
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEC
      bit_offset: 0
      bit_width: 6
      description: Seconds
      read_allowed: true
      write_allowed: true
  - !Register
    name: RTC_1
    addr: 0x4005c018
    size_bits: 32
    description: RTC register 1.
    fields:
    - !Field
      name: YEAR
      bit_offset: 12
      bit_width: 12
      description: Year
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONTH
      bit_offset: 8
      bit_width: 4
      description: Month (1..12)
      read_allowed: true
      write_allowed: false
    - !Field
      name: DAY
      bit_offset: 0
      bit_width: 5
      description: Day of the month (1..31)
      read_allowed: true
      write_allowed: false
  - !Register
    name: RTC_0
    addr: 0x4005c01c
    size_bits: 32
    description: "RTC register 0\\n\n            Read this before RTC 1!"
    fields:
    - !Field
      name: DOTW
      bit_offset: 24
      bit_width: 3
      description: Day of the week
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOUR
      bit_offset: 16
      bit_width: 5
      description: Hours
      read_allowed: true
      write_allowed: false
    - !Field
      name: MIN
      bit_offset: 8
      bit_width: 6
      description: Minutes
      read_allowed: true
      write_allowed: false
    - !Field
      name: SEC
      bit_offset: 0
      bit_width: 6
      description: Seconds
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTR
    addr: 0x4005c020
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: RTC
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTE
    addr: 0x4005c024
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: RTC
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x4005c028
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: RTC
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x4005c02c
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: RTC
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: ROSC
  base_addr: 0x40060000
  size: 0x24
  registers:
  - !Register
    name: CTRL
    addr: 0x40060000
    size_bits: 32
    description: Ring Oscillator control
    reset_value: 0xaa0
    fields:
    - !Field
      name: ENABLE
      bit_offset: 12
      bit_width: 12
      description: "On power-up this field is initialised to ENABLE\\n\n                The
        system clock must be switched to another source before setting this field
        to DISABLE otherwise the chip will lock up\\n\n                The 12-bit
        code is intended to give some protection against accidental writes. An invalid
        setting will enable the oscillator."
      read_allowed: true
      write_allowed: true
      enum_values:
        3358: DISABLE
        4011: ENABLE
    - !Field
      name: FREQ_RANGE
      bit_offset: 0
      bit_width: 12
      description: "Controls the number of delay stages in the ROSC ring\\n\n                LOW
        uses stages 0 to 7\\n\n                MEDIUM uses stages 0 to 5\\n\n                HIGH
        uses stages 0 to 3\\n\n                TOOHIGH uses stages 0 to 1 and should
        not be used because its frequency exceeds design specifications\\n\n                The
        clock output will not glitch when changing the range up one step at a time\\n\n
        \               The clock output will glitch when changing the range down\\n\n
        \               Note: the values here are gray coded which is why HIGH comes
        before TOOHIGH"
      read_allowed: true
      write_allowed: true
      enum_values:
        4004: LOW
        4005: MEDIUM
        4007: HIGH
        4006: TOOHIGH
  - !Register
    name: FREQA
    addr: 0x40060004
    size_bits: 32
    description: "The FREQA & FREQB registers control the frequency by controlling
      the drive strength of each stage\\n\n            The drive strength has 4 levels
      determined by the number of bits set\\n\n            Increasing the number of
      bits set increases the drive strength and increases the oscillation frequency\\n\n
      \           0 bits set is the default drive strength\\n\n            1 bit set
      doubles the drive strength\\n\n            2 bits set triples drive strength\\n\n
      \           3 bits set quadruples drive strength"
    fields:
    - !Field
      name: PASSWD
      bit_offset: 16
      bit_width: 16
      description: "Set to 0x9696 to apply the settings\\n\n                Any other
        value in this field will set all drive strengths to 0"
      read_allowed: true
      write_allowed: true
      enum_values:
        38550: PASS
    - !Field
      name: DS3
      bit_offset: 12
      bit_width: 3
      description: Stage 3 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS2
      bit_offset: 8
      bit_width: 3
      description: Stage 2 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS1
      bit_offset: 4
      bit_width: 3
      description: Stage 1 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS0
      bit_offset: 0
      bit_width: 3
      description: Stage 0 drive strength
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQB
    addr: 0x40060008
    size_bits: 32
    description: For a detailed description see freqa register
    fields:
    - !Field
      name: PASSWD
      bit_offset: 16
      bit_width: 16
      description: "Set to 0x9696 to apply the settings\\n\n                Any other
        value in this field will set all drive strengths to 0"
      read_allowed: true
      write_allowed: true
      enum_values:
        38550: PASS
    - !Field
      name: DS7
      bit_offset: 12
      bit_width: 3
      description: Stage 7 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS6
      bit_offset: 8
      bit_width: 3
      description: Stage 6 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS5
      bit_offset: 4
      bit_width: 3
      description: Stage 5 drive strength
      read_allowed: true
      write_allowed: true
    - !Field
      name: DS4
      bit_offset: 0
      bit_width: 3
      description: Stage 4 drive strength
      read_allowed: true
      write_allowed: true
  - !Register
    name: DORMANT
    addr: 0x4006000c
    size_bits: 32
    description: "Ring Oscillator pause control\\n\n            This is used to save
      power by pausing the ROSC\\n\n            On power-up this field is initialised
      to WAKE\\n\n            An invalid write will also select WAKE\\n\n            Warning:
      setup the irq before selecting dormant mode"
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV
    addr: 0x40060010
    size_bits: 32
    description: Controls the output divider
    fields:
    - !Field
      name: DIV
      bit_offset: 0
      bit_width: 12
      description: "set to 0xaa0 + div where\\n\n                div = 0 divides by
        32\\n\n                div = 1-31 divides by div\\n\n                any other
        value sets div=0 and therefore divides by 32\\n\n                this register
        resets to div=16"
      read_allowed: true
      write_allowed: true
      enum_values:
        2720: PASS
  - !Register
    name: PHASE
    addr: 0x40060014
    size_bits: 32
    description: Controls the phase shifted output
    reset_value: 0x8
    fields:
    - !Field
      name: PASSWD
      bit_offset: 4
      bit_width: 8
      description: "set to 0xaa0\\n\n                any other value enables the output
        with shift=0"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 3
      bit_width: 1
      description: "enable the phase-shifted output\\n\n                this can be
        changed on-the-fly"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLIP
      bit_offset: 2
      bit_width: 1
      description: "invert the phase-shifted output\\n\n                this is ignored
        when div=1"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 0
      bit_width: 2
      description: "phase shift the phase-shifted output by SHIFT input clocks\\n\n
        \               this can be changed on-the-fly\\n\n                must be
        set to 0 before setting div=1"
      read_allowed: true
      write_allowed: true
  - !Register
    name: STATUS
    addr: 0x40060018
    size_bits: 32
    description: Ring Oscillator Status
    fields:
    - !Field
      name: STABLE
      bit_offset: 31
      bit_width: 1
      description: Oscillator is running and stable
      read_allowed: true
      write_allowed: false
    - !Field
      name: BADWRITE
      bit_offset: 24
      bit_width: 1
      description: An invalid value has been written to CTRL_ENABLE or CTRL_FREQ_RANGE
        or FRFEQA or FREQB or DORMANT
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_RUNNING
      bit_offset: 16
      bit_width: 1
      description: "post-divider is running\\n\n                this resets to 0 but
        transitions to 1 during chip startup"
      read_allowed: true
      write_allowed: false
    - !Field
      name: ENABLED
      bit_offset: 12
      bit_width: 1
      description: "Oscillator is enabled but not necessarily running and stable\\n\n
        \               this resets to 0 but transitions to 1 during chip startup"
      read_allowed: true
      write_allowed: false
  - !Register
    name: RANDOMBIT
    addr: 0x4006001c
    size_bits: 32
    description: This just reads the state of the oscillator output so randomness
      is compromised if the ring oscillator is stopped or run at a harmonic of the
      bus frequency
    reset_value: 0x1
    fields:
    - !Field
      name: RANDOMBIT
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: COUNT
    addr: 0x40060020
    size_bits: 32
    description: "A down counter running at the ROSC frequency which counts to zero
      and stops.\\n\n            To start the counter write a non-zero value.\\n\n
      \           Can be used for short software pauses when setting up time sensitive
      hardware."
    fields:
    - !Field
      name: COUNT
      bit_offset: 0
      bit_width: 8
      read_allowed: true
      write_allowed: true
- !Module
  name: VREG_AND_CHIP_RESET
  description: control and status for on-chip voltage regulator and chip level reset
    subsystem
  base_addr: 0x40064000
  size: 0xc
  registers:
  - !Register
    name: VREG
    addr: 0x40064000
    size_bits: 32
    description: Voltage regulator control and status
    reset_value: 0xb1
    fields:
    - !Field
      name: ROK
      bit_offset: 12
      bit_width: 1
      description: "regulation status\\n\n                0=not in regulation, 1=in
        regulation"
      read_allowed: true
      write_allowed: false
    - !Field
      name: VSEL
      bit_offset: 4
      bit_width: 4
      description: "output voltage select\\n\n                0000 to 0101 - 0.80V\\n\n
        \               0110         - 0.85V\\n\n                0111         - 0.90V\\n\n
        \               1000         - 0.95V\\n\n                1001         - 1.00V\\n\n
        \               1010         - 1.05V\\n\n                1011         - 1.10V
        (default)\\n\n                1100         - 1.15V\\n\n                1101
        \        - 1.20V\\n\n                1110         - 1.25V\\n\n                1111
        \        - 1.30V"
      read_allowed: true
      write_allowed: true
    - !Field
      name: HIZ
      bit_offset: 1
      bit_width: 1
      description: "high impedance mode select\\n\n                0=not in high impedance
        mode, 1=in high impedance mode"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "enable\\n\n                0=not enabled, 1=enabled"
      read_allowed: true
      write_allowed: true
  - !Register
    name: BOD
    addr: 0x40064004
    size_bits: 32
    description: brown-out detection control
    reset_value: 0x91
    fields:
    - !Field
      name: VSEL
      bit_offset: 4
      bit_width: 4
      description: "threshold select\\n\n                0000 - 0.473V\\n\n                0001
        - 0.516V\\n\n                0010 - 0.559V\\n\n                0011 - 0.602V\\n\n
        \               0100 - 0.645V\\n\n                0101 - 0.688V\\n\n                0110
        - 0.731V\\n\n                0111 - 0.774V\\n\n                1000 - 0.817V\\n\n
        \               1001 - 0.860V (default)\\n\n                1010 - 0.903V\\n\n
        \               1011 - 0.946V\\n\n                1100 - 0.989V\\n\n                1101
        - 1.032V\\n\n                1110 - 1.075V\\n\n                1111 - 1.118V"
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "enable\\n\n                0=not enabled, 1=enabled"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHIP_RESET
    addr: 0x40064008
    size_bits: 32
    description: Chip reset control and status
    fields:
    - !Field
      name: PSM_RESTART_FLAG
      bit_offset: 24
      bit_width: 1
      description: "This is set by psm_restart from the debugger.\\n\n                Its
        purpose is to branch bootcode to a safe mode when the debugger has issued
        a psm_restart in order to recover from a boot lock-up.\\n\n                In
        the safe mode the debugger can repair the boot code, clear this flag then
        reboot the processor."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HAD_PSM_RESTART
      bit_offset: 20
      bit_width: 1
      description: Last reset was from the debug port
      read_allowed: true
      write_allowed: false
    - !Field
      name: HAD_RUN
      bit_offset: 16
      bit_width: 1
      description: Last reset was from the RUN pin
      read_allowed: true
      write_allowed: false
    - !Field
      name: HAD_POR
      bit_offset: 8
      bit_width: 1
      description: Last reset was from the power-on reset or brown-out detection blocks
      read_allowed: true
      write_allowed: false
- !Module
  name: TBMAN
  description: Testbench manager. Allows the programmer to know what platform their
    software is running on.
  base_addr: 0x4006c000
  size: 0x4
  registers:
  - !Register
    name: PLATFORM
    addr: 0x4006c000
    size_bits: 32
    description: Indicates the type of platform in use
    reset_value: 0x5
    fields:
    - !Field
      name: FPGA
      bit_offset: 1
      bit_width: 1
      description: Indicates the platform is an FPGA
      read_allowed: true
      write_allowed: false
    - !Field
      name: ASIC
      bit_offset: 0
      bit_width: 1
      description: Indicates the platform is an ASIC
      read_allowed: true
      write_allowed: false
- !Module
  name: DMA
  description: DMA with separate read and write masters
  base_addr: 0x50000000
  size: 0xac8
  registers:
  - !Register
    name: CH0_READ_ADDR
    addr: 0x50000000
    size_bits: 32
    description: "DMA Channel 0 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH0_WRITE_ADDR
    addr: 0x50000004
    size_bits: 32
    description: "DMA Channel 0 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH0_TRANS_COUNT
    addr: 0x50000008
    size_bits: 32
    description: "DMA Channel 0 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH0_CTRL_TRIG
    addr: 0x5000000c
    size_bits: 32
    description: DMA Channel 0 Control and Status
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (0)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH0_AL1_CTRL
    addr: 0x50000010
    size_bits: 32
    description: Alias for channel 0 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL1_READ_ADDR
    addr: 0x50000014
    size_bits: 32
    description: Alias for channel 0 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL1_WRITE_ADDR
    addr: 0x50000018
    size_bits: 32
    description: Alias for channel 0 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL1_TRANS_COUNT_TRIG
    addr: 0x5000001c
    size_bits: 32
    description: "Alias for channel 0 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL2_CTRL
    addr: 0x50000020
    size_bits: 32
    description: Alias for channel 0 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL2_TRANS_COUNT
    addr: 0x50000024
    size_bits: 32
    description: Alias for channel 0 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL2_READ_ADDR
    addr: 0x50000028
    size_bits: 32
    description: Alias for channel 0 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL2_WRITE_ADDR_TRIG
    addr: 0x5000002c
    size_bits: 32
    description: "Alias for channel 0 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL3_CTRL
    addr: 0x50000030
    size_bits: 32
    description: Alias for channel 0 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL3_WRITE_ADDR
    addr: 0x50000034
    size_bits: 32
    description: Alias for channel 0 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL3_TRANS_COUNT
    addr: 0x50000038
    size_bits: 32
    description: Alias for channel 0 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH0_AL3_READ_ADDR_TRIG
    addr: 0x5000003c
    size_bits: 32
    description: "Alias for channel 0 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_READ_ADDR
    addr: 0x50000040
    size_bits: 32
    description: "DMA Channel 1 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH1_WRITE_ADDR
    addr: 0x50000044
    size_bits: 32
    description: "DMA Channel 1 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH1_TRANS_COUNT
    addr: 0x50000048
    size_bits: 32
    description: "DMA Channel 1 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH1_CTRL_TRIG
    addr: 0x5000004c
    size_bits: 32
    description: DMA Channel 1 Control and Status
    reset_value: 0x800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (1)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH1_AL1_CTRL
    addr: 0x50000050
    size_bits: 32
    description: Alias for channel 1 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL1_READ_ADDR
    addr: 0x50000054
    size_bits: 32
    description: Alias for channel 1 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL1_WRITE_ADDR
    addr: 0x50000058
    size_bits: 32
    description: Alias for channel 1 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL1_TRANS_COUNT_TRIG
    addr: 0x5000005c
    size_bits: 32
    description: "Alias for channel 1 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL2_CTRL
    addr: 0x50000060
    size_bits: 32
    description: Alias for channel 1 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL2_TRANS_COUNT
    addr: 0x50000064
    size_bits: 32
    description: Alias for channel 1 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL2_READ_ADDR
    addr: 0x50000068
    size_bits: 32
    description: Alias for channel 1 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL2_WRITE_ADDR_TRIG
    addr: 0x5000006c
    size_bits: 32
    description: "Alias for channel 1 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL3_CTRL
    addr: 0x50000070
    size_bits: 32
    description: Alias for channel 1 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL3_WRITE_ADDR
    addr: 0x50000074
    size_bits: 32
    description: Alias for channel 1 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL3_TRANS_COUNT
    addr: 0x50000078
    size_bits: 32
    description: Alias for channel 1 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_AL3_READ_ADDR_TRIG
    addr: 0x5000007c
    size_bits: 32
    description: "Alias for channel 1 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_READ_ADDR
    addr: 0x50000080
    size_bits: 32
    description: "DMA Channel 2 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH2_WRITE_ADDR
    addr: 0x50000084
    size_bits: 32
    description: "DMA Channel 2 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH2_TRANS_COUNT
    addr: 0x50000088
    size_bits: 32
    description: "DMA Channel 2 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH2_CTRL_TRIG
    addr: 0x5000008c
    size_bits: 32
    description: DMA Channel 2 Control and Status
    reset_value: 0x1000
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (2)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH2_AL1_CTRL
    addr: 0x50000090
    size_bits: 32
    description: Alias for channel 2 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL1_READ_ADDR
    addr: 0x50000094
    size_bits: 32
    description: Alias for channel 2 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL1_WRITE_ADDR
    addr: 0x50000098
    size_bits: 32
    description: Alias for channel 2 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL1_TRANS_COUNT_TRIG
    addr: 0x5000009c
    size_bits: 32
    description: "Alias for channel 2 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL2_CTRL
    addr: 0x500000a0
    size_bits: 32
    description: Alias for channel 2 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL2_TRANS_COUNT
    addr: 0x500000a4
    size_bits: 32
    description: Alias for channel 2 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL2_READ_ADDR
    addr: 0x500000a8
    size_bits: 32
    description: Alias for channel 2 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL2_WRITE_ADDR_TRIG
    addr: 0x500000ac
    size_bits: 32
    description: "Alias for channel 2 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL3_CTRL
    addr: 0x500000b0
    size_bits: 32
    description: Alias for channel 2 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL3_WRITE_ADDR
    addr: 0x500000b4
    size_bits: 32
    description: Alias for channel 2 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL3_TRANS_COUNT
    addr: 0x500000b8
    size_bits: 32
    description: Alias for channel 2 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_AL3_READ_ADDR_TRIG
    addr: 0x500000bc
    size_bits: 32
    description: "Alias for channel 2 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_READ_ADDR
    addr: 0x500000c0
    size_bits: 32
    description: "DMA Channel 3 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH3_WRITE_ADDR
    addr: 0x500000c4
    size_bits: 32
    description: "DMA Channel 3 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH3_TRANS_COUNT
    addr: 0x500000c8
    size_bits: 32
    description: "DMA Channel 3 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH3_CTRL_TRIG
    addr: 0x500000cc
    size_bits: 32
    description: DMA Channel 3 Control and Status
    reset_value: 0x1800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (3)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH3_AL1_CTRL
    addr: 0x500000d0
    size_bits: 32
    description: Alias for channel 3 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL1_READ_ADDR
    addr: 0x500000d4
    size_bits: 32
    description: Alias for channel 3 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL1_WRITE_ADDR
    addr: 0x500000d8
    size_bits: 32
    description: Alias for channel 3 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL1_TRANS_COUNT_TRIG
    addr: 0x500000dc
    size_bits: 32
    description: "Alias for channel 3 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL2_CTRL
    addr: 0x500000e0
    size_bits: 32
    description: Alias for channel 3 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL2_TRANS_COUNT
    addr: 0x500000e4
    size_bits: 32
    description: Alias for channel 3 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL2_READ_ADDR
    addr: 0x500000e8
    size_bits: 32
    description: Alias for channel 3 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL2_WRITE_ADDR_TRIG
    addr: 0x500000ec
    size_bits: 32
    description: "Alias for channel 3 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL3_CTRL
    addr: 0x500000f0
    size_bits: 32
    description: Alias for channel 3 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL3_WRITE_ADDR
    addr: 0x500000f4
    size_bits: 32
    description: Alias for channel 3 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL3_TRANS_COUNT
    addr: 0x500000f8
    size_bits: 32
    description: Alias for channel 3 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_AL3_READ_ADDR_TRIG
    addr: 0x500000fc
    size_bits: 32
    description: "Alias for channel 3 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_READ_ADDR
    addr: 0x50000100
    size_bits: 32
    description: "DMA Channel 4 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH4_WRITE_ADDR
    addr: 0x50000104
    size_bits: 32
    description: "DMA Channel 4 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH4_TRANS_COUNT
    addr: 0x50000108
    size_bits: 32
    description: "DMA Channel 4 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH4_CTRL_TRIG
    addr: 0x5000010c
    size_bits: 32
    description: DMA Channel 4 Control and Status
    reset_value: 0x2000
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (4)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH4_AL1_CTRL
    addr: 0x50000110
    size_bits: 32
    description: Alias for channel 4 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL1_READ_ADDR
    addr: 0x50000114
    size_bits: 32
    description: Alias for channel 4 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL1_WRITE_ADDR
    addr: 0x50000118
    size_bits: 32
    description: Alias for channel 4 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL1_TRANS_COUNT_TRIG
    addr: 0x5000011c
    size_bits: 32
    description: "Alias for channel 4 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL2_CTRL
    addr: 0x50000120
    size_bits: 32
    description: Alias for channel 4 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL2_TRANS_COUNT
    addr: 0x50000124
    size_bits: 32
    description: Alias for channel 4 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL2_READ_ADDR
    addr: 0x50000128
    size_bits: 32
    description: Alias for channel 4 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL2_WRITE_ADDR_TRIG
    addr: 0x5000012c
    size_bits: 32
    description: "Alias for channel 4 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL3_CTRL
    addr: 0x50000130
    size_bits: 32
    description: Alias for channel 4 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL3_WRITE_ADDR
    addr: 0x50000134
    size_bits: 32
    description: Alias for channel 4 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL3_TRANS_COUNT
    addr: 0x50000138
    size_bits: 32
    description: Alias for channel 4 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_AL3_READ_ADDR_TRIG
    addr: 0x5000013c
    size_bits: 32
    description: "Alias for channel 4 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_READ_ADDR
    addr: 0x50000140
    size_bits: 32
    description: "DMA Channel 5 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH5_WRITE_ADDR
    addr: 0x50000144
    size_bits: 32
    description: "DMA Channel 5 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH5_TRANS_COUNT
    addr: 0x50000148
    size_bits: 32
    description: "DMA Channel 5 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH5_CTRL_TRIG
    addr: 0x5000014c
    size_bits: 32
    description: DMA Channel 5 Control and Status
    reset_value: 0x2800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (5)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH5_AL1_CTRL
    addr: 0x50000150
    size_bits: 32
    description: Alias for channel 5 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL1_READ_ADDR
    addr: 0x50000154
    size_bits: 32
    description: Alias for channel 5 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL1_WRITE_ADDR
    addr: 0x50000158
    size_bits: 32
    description: Alias for channel 5 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL1_TRANS_COUNT_TRIG
    addr: 0x5000015c
    size_bits: 32
    description: "Alias for channel 5 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL2_CTRL
    addr: 0x50000160
    size_bits: 32
    description: Alias for channel 5 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL2_TRANS_COUNT
    addr: 0x50000164
    size_bits: 32
    description: Alias for channel 5 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL2_READ_ADDR
    addr: 0x50000168
    size_bits: 32
    description: Alias for channel 5 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL2_WRITE_ADDR_TRIG
    addr: 0x5000016c
    size_bits: 32
    description: "Alias for channel 5 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL3_CTRL
    addr: 0x50000170
    size_bits: 32
    description: Alias for channel 5 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL3_WRITE_ADDR
    addr: 0x50000174
    size_bits: 32
    description: Alias for channel 5 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL3_TRANS_COUNT
    addr: 0x50000178
    size_bits: 32
    description: Alias for channel 5 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_AL3_READ_ADDR_TRIG
    addr: 0x5000017c
    size_bits: 32
    description: "Alias for channel 5 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_READ_ADDR
    addr: 0x50000180
    size_bits: 32
    description: "DMA Channel 6 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH6_WRITE_ADDR
    addr: 0x50000184
    size_bits: 32
    description: "DMA Channel 6 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH6_TRANS_COUNT
    addr: 0x50000188
    size_bits: 32
    description: "DMA Channel 6 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH6_CTRL_TRIG
    addr: 0x5000018c
    size_bits: 32
    description: DMA Channel 6 Control and Status
    reset_value: 0x3000
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (6)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH6_AL1_CTRL
    addr: 0x50000190
    size_bits: 32
    description: Alias for channel 6 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL1_READ_ADDR
    addr: 0x50000194
    size_bits: 32
    description: Alias for channel 6 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL1_WRITE_ADDR
    addr: 0x50000198
    size_bits: 32
    description: Alias for channel 6 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL1_TRANS_COUNT_TRIG
    addr: 0x5000019c
    size_bits: 32
    description: "Alias for channel 6 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL2_CTRL
    addr: 0x500001a0
    size_bits: 32
    description: Alias for channel 6 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL2_TRANS_COUNT
    addr: 0x500001a4
    size_bits: 32
    description: Alias for channel 6 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL2_READ_ADDR
    addr: 0x500001a8
    size_bits: 32
    description: Alias for channel 6 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL2_WRITE_ADDR_TRIG
    addr: 0x500001ac
    size_bits: 32
    description: "Alias for channel 6 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL3_CTRL
    addr: 0x500001b0
    size_bits: 32
    description: Alias for channel 6 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL3_WRITE_ADDR
    addr: 0x500001b4
    size_bits: 32
    description: Alias for channel 6 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL3_TRANS_COUNT
    addr: 0x500001b8
    size_bits: 32
    description: Alias for channel 6 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_AL3_READ_ADDR_TRIG
    addr: 0x500001bc
    size_bits: 32
    description: "Alias for channel 6 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_READ_ADDR
    addr: 0x500001c0
    size_bits: 32
    description: "DMA Channel 7 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH7_WRITE_ADDR
    addr: 0x500001c4
    size_bits: 32
    description: "DMA Channel 7 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH7_TRANS_COUNT
    addr: 0x500001c8
    size_bits: 32
    description: "DMA Channel 7 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH7_CTRL_TRIG
    addr: 0x500001cc
    size_bits: 32
    description: DMA Channel 7 Control and Status
    reset_value: 0x3800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (7)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH7_AL1_CTRL
    addr: 0x500001d0
    size_bits: 32
    description: Alias for channel 7 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL1_READ_ADDR
    addr: 0x500001d4
    size_bits: 32
    description: Alias for channel 7 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL1_WRITE_ADDR
    addr: 0x500001d8
    size_bits: 32
    description: Alias for channel 7 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL1_TRANS_COUNT_TRIG
    addr: 0x500001dc
    size_bits: 32
    description: "Alias for channel 7 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL2_CTRL
    addr: 0x500001e0
    size_bits: 32
    description: Alias for channel 7 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL2_TRANS_COUNT
    addr: 0x500001e4
    size_bits: 32
    description: Alias for channel 7 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL2_READ_ADDR
    addr: 0x500001e8
    size_bits: 32
    description: Alias for channel 7 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL2_WRITE_ADDR_TRIG
    addr: 0x500001ec
    size_bits: 32
    description: "Alias for channel 7 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL3_CTRL
    addr: 0x500001f0
    size_bits: 32
    description: Alias for channel 7 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL3_WRITE_ADDR
    addr: 0x500001f4
    size_bits: 32
    description: Alias for channel 7 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL3_TRANS_COUNT
    addr: 0x500001f8
    size_bits: 32
    description: Alias for channel 7 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_AL3_READ_ADDR_TRIG
    addr: 0x500001fc
    size_bits: 32
    description: "Alias for channel 7 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_READ_ADDR
    addr: 0x50000200
    size_bits: 32
    description: "DMA Channel 8 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH8_WRITE_ADDR
    addr: 0x50000204
    size_bits: 32
    description: "DMA Channel 8 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH8_TRANS_COUNT
    addr: 0x50000208
    size_bits: 32
    description: "DMA Channel 8 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH8_CTRL_TRIG
    addr: 0x5000020c
    size_bits: 32
    description: DMA Channel 8 Control and Status
    reset_value: 0x4000
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (8)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH8_AL1_CTRL
    addr: 0x50000210
    size_bits: 32
    description: Alias for channel 8 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL1_READ_ADDR
    addr: 0x50000214
    size_bits: 32
    description: Alias for channel 8 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL1_WRITE_ADDR
    addr: 0x50000218
    size_bits: 32
    description: Alias for channel 8 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL1_TRANS_COUNT_TRIG
    addr: 0x5000021c
    size_bits: 32
    description: "Alias for channel 8 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL2_CTRL
    addr: 0x50000220
    size_bits: 32
    description: Alias for channel 8 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL2_TRANS_COUNT
    addr: 0x50000224
    size_bits: 32
    description: Alias for channel 8 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL2_READ_ADDR
    addr: 0x50000228
    size_bits: 32
    description: Alias for channel 8 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL2_WRITE_ADDR_TRIG
    addr: 0x5000022c
    size_bits: 32
    description: "Alias for channel 8 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL3_CTRL
    addr: 0x50000230
    size_bits: 32
    description: Alias for channel 8 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL3_WRITE_ADDR
    addr: 0x50000234
    size_bits: 32
    description: Alias for channel 8 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL3_TRANS_COUNT
    addr: 0x50000238
    size_bits: 32
    description: Alias for channel 8 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_AL3_READ_ADDR_TRIG
    addr: 0x5000023c
    size_bits: 32
    description: "Alias for channel 8 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_READ_ADDR
    addr: 0x50000240
    size_bits: 32
    description: "DMA Channel 9 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH9_WRITE_ADDR
    addr: 0x50000244
    size_bits: 32
    description: "DMA Channel 9 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH9_TRANS_COUNT
    addr: 0x50000248
    size_bits: 32
    description: "DMA Channel 9 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH9_CTRL_TRIG
    addr: 0x5000024c
    size_bits: 32
    description: DMA Channel 9 Control and Status
    reset_value: 0x4800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (9)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH9_AL1_CTRL
    addr: 0x50000250
    size_bits: 32
    description: Alias for channel 9 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL1_READ_ADDR
    addr: 0x50000254
    size_bits: 32
    description: Alias for channel 9 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL1_WRITE_ADDR
    addr: 0x50000258
    size_bits: 32
    description: Alias for channel 9 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL1_TRANS_COUNT_TRIG
    addr: 0x5000025c
    size_bits: 32
    description: "Alias for channel 9 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL2_CTRL
    addr: 0x50000260
    size_bits: 32
    description: Alias for channel 9 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL2_TRANS_COUNT
    addr: 0x50000264
    size_bits: 32
    description: Alias for channel 9 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL2_READ_ADDR
    addr: 0x50000268
    size_bits: 32
    description: Alias for channel 9 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL2_WRITE_ADDR_TRIG
    addr: 0x5000026c
    size_bits: 32
    description: "Alias for channel 9 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL3_CTRL
    addr: 0x50000270
    size_bits: 32
    description: Alias for channel 9 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL3_WRITE_ADDR
    addr: 0x50000274
    size_bits: 32
    description: Alias for channel 9 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL3_TRANS_COUNT
    addr: 0x50000278
    size_bits: 32
    description: Alias for channel 9 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_AL3_READ_ADDR_TRIG
    addr: 0x5000027c
    size_bits: 32
    description: "Alias for channel 9 READ_ADDR register\\n\n            This is a
      trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_READ_ADDR
    addr: 0x50000280
    size_bits: 32
    description: "DMA Channel 10 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH10_WRITE_ADDR
    addr: 0x50000284
    size_bits: 32
    description: "DMA Channel 10 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH10_TRANS_COUNT
    addr: 0x50000288
    size_bits: 32
    description: "DMA Channel 10 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH10_CTRL_TRIG
    addr: 0x5000028c
    size_bits: 32
    description: DMA Channel 10 Control and Status
    reset_value: 0x5000
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (10)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH10_AL1_CTRL
    addr: 0x50000290
    size_bits: 32
    description: Alias for channel 10 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL1_READ_ADDR
    addr: 0x50000294
    size_bits: 32
    description: Alias for channel 10 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL1_WRITE_ADDR
    addr: 0x50000298
    size_bits: 32
    description: Alias for channel 10 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL1_TRANS_COUNT_TRIG
    addr: 0x5000029c
    size_bits: 32
    description: "Alias for channel 10 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL2_CTRL
    addr: 0x500002a0
    size_bits: 32
    description: Alias for channel 10 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL2_TRANS_COUNT
    addr: 0x500002a4
    size_bits: 32
    description: Alias for channel 10 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL2_READ_ADDR
    addr: 0x500002a8
    size_bits: 32
    description: Alias for channel 10 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL2_WRITE_ADDR_TRIG
    addr: 0x500002ac
    size_bits: 32
    description: "Alias for channel 10 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL3_CTRL
    addr: 0x500002b0
    size_bits: 32
    description: Alias for channel 10 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL3_WRITE_ADDR
    addr: 0x500002b4
    size_bits: 32
    description: Alias for channel 10 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL3_TRANS_COUNT
    addr: 0x500002b8
    size_bits: 32
    description: Alias for channel 10 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_AL3_READ_ADDR_TRIG
    addr: 0x500002bc
    size_bits: 32
    description: "Alias for channel 10 READ_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_READ_ADDR
    addr: 0x500002c0
    size_bits: 32
    description: "DMA Channel 11 Read Address pointer\\n\n            This register
      updates automatically each time a read completes. The current value is the next
      address to be read by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH11_WRITE_ADDR
    addr: 0x500002c4
    size_bits: 32
    description: "DMA Channel 11 Write Address pointer\\n\n            This register
      updates automatically each time a write completes. The current value is the
      next address to be written by this channel."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH11_TRANS_COUNT
    addr: 0x500002c8
    size_bits: 32
    description: "DMA Channel 11 Transfer Count\\n\n            Program the number
      of bus transfers a channel will perform before halting. Note that, if transfers
      are larger than one byte in size, this is not equal to the number of bytes transferred
      (see CTRL_DATA_SIZE).\\n\\n\n            When the channel is active, reading
      this register shows the number of transfers remaining, updating automatically
      each time a write transfer completes.\\n\\n\n            Writing this register
      sets the RELOAD value for the transfer counter. Each time this channel is triggered,
      the RELOAD value is copied into the live transfer counter. The channel can be
      started multiple times, and will perform the same number of transfers each time,
      as programmed by most recent write.\\n\\n\n            The RELOAD value can
      be observed at CHx_DBG_TCR. If TRANS_COUNT is used as a trigger, the written
      value is used immediately as the length of the new transfer sequence, as well
      as being written to RELOAD."
    read_allowed: true
    write_allowed: true
  - !Register
    name: CH11_CTRL_TRIG
    addr: 0x500002cc
    size_bits: 32
    description: DMA Channel 11 Control and Status
    reset_value: 0x5800
    fields:
    - !Field
      name: AHB_ERROR
      bit_offset: 31
      bit_width: 1
      description: Logical OR of the READ_ERROR and WRITE_ERROR flags. The channel
        halts when it encounters any bus error, and always raises its channel IRQ
        flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: READ_ERROR
      bit_offset: 30
      bit_width: 1
      description: "If 1, the channel received a read bus error. Write one to clear.\\n\n
        \               READ_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 3 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_ERROR
      bit_offset: 29
      bit_width: 1
      description: "If 1, the channel received a write bus error. Write one to clear.\\n\n
        \               WRITE_ADDR shows the approximate address where the bus error
        was encountered (will not to be earlier, or more than 5 transfers later)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSY
      bit_offset: 24
      bit_width: 1
      description: "This flag goes high when the channel starts a new transfer sequence,
        and low when the last transfer of that sequence completes. Clearing EN while
        BUSY is high pauses the channel, and BUSY will stay high while paused.\\n\\n\n
        \               To terminate a sequence early (and clear the BUSY flag), see
        CHAN_ABORT."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNIFF_EN
      bit_offset: 23
      bit_width: 1
      description: "If 1, this channel's data transfers are visible to the sniff hardware,
        and each transfer will advance the state of the checksum. This only applies
        if the sniff hardware is enabled, and has this channel selected.\\n\\n\n                This
        allows checksum to be enabled or disabled on a per-control- block basis."
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 22
      bit_width: 1
      description: "Apply byte-swap transformation to DMA data.\\n\n                For
        byte data, this has no effect. For halfword data, the two bytes of each halfword
        are swapped. For word data, the four bytes of each word are swapped to reverse
        order."
      read_allowed: true
      write_allowed: true
    - !Field
      name: IRQ_QUIET
      bit_offset: 21
      bit_width: 1
      description: "In QUIET mode, the channel does not generate IRQs at the end of
        every transfer block. Instead, an IRQ is raised when NULL is written to a
        trigger register, indicating the end of a control block chain.\\n\\n\n                This
        reduces the number of interrupts to be serviced by the CPU when transferring
        a DMA chain of many small control blocks."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TREQ_SEL
      bit_offset: 15
      bit_width: 6
      description: "Select a Transfer Request signal.\\n\n                The channel
        uses the transfer request signal to pace its data transfer rate. Sources for
        TREQ signals are internal (TIMERS) or external (DREQ, a Data Request from
        the system).\\n\n                0x0 to 0x3a -> select DREQ n as TREQ"
      read_allowed: true
      write_allowed: true
      enum_values:
        59: TIMER0
        60: TIMER1
        61: TIMER2
        62: TIMER3
        63: PERMANENT
    - !Field
      name: CHAIN_TO
      bit_offset: 11
      bit_width: 4
      description: "When this channel completes, it will trigger the channel indicated
        by CHAIN_TO. Disable by setting CHAIN_TO = _(this channel)_.\\n\n                Reset
        value is equal to channel number (11)."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SEL
      bit_offset: 10
      bit_width: 1
      description: "Select whether RING_SIZE applies to read or write addresses.\\n\n
        \               If 0, read addresses are wrapped on a (1 << RING_SIZE) boundary.
        If 1, write addresses are wrapped."
      read_allowed: true
      write_allowed: true
    - !Field
      name: RING_SIZE
      bit_offset: 6
      bit_width: 4
      description: "Size of address wrap region. If 0, don't wrap. For values n >
        0, only the lower n bits of the address will change. This wraps the address
        on a (1 << n) byte boundary, facilitating access to naturally-aligned ring
        buffers.\\n\\n\n                Ring sizes between 2 and 32768 bytes are possible.
        This can apply to either read or write addresses, based on value of RING_SEL."
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RING_NONE
    - !Field
      name: INCR_WRITE
      bit_offset: 5
      bit_width: 1
      description: "If 1, the write address increments with each transfer. If 0, each
        write is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for memory-to-peripheral transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: INCR_READ
      bit_offset: 4
      bit_width: 1
      description: "If 1, the read address increments with each transfer. If 0, each
        read is directed to the same, initial address.\\n\\n\n                Generally
        this should be disabled for peripheral-to-memory transfers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_SIZE
      bit_offset: 2
      bit_width: 2
      description: Set the size of each bus transfer (byte/halfword/word). READ_ADDR
        and WRITE_ADDR advance by this amount (1/2/4 bytes) with each transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SIZE_BYTE
        1: SIZE_HALFWORD
        2: SIZE_WORD
    - !Field
      name: HIGH_PRIORITY
      bit_offset: 1
      bit_width: 1
      description: "HIGH_PRIORITY gives a channel preferential treatment in issue
        scheduling: in each scheduling round, all high priority channels are considered
        first, and then only a single low priority channel, before returning to the
        high priority channels.\\n\\n\n                This only affects the order
        in which the DMA schedules channels. The DMA's bus priority is not changed.
        If the DMA is not saturated then a low priority channel will see no loss of
        throughput."
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: "DMA Channel Enable.\\n\n                When 1, the channel will
        respond to triggering events, which will cause it to become BUSY and start
        transferring data. When 0, the channel will ignore triggers, stop issuing
        transfers, and pause the current transfer sequence (i.e. BUSY will remain
        high if already high)"
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH11_AL1_CTRL
    addr: 0x500002d0
    size_bits: 32
    description: Alias for channel 11 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL1_READ_ADDR
    addr: 0x500002d4
    size_bits: 32
    description: Alias for channel 11 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL1_WRITE_ADDR
    addr: 0x500002d8
    size_bits: 32
    description: Alias for channel 11 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL1_TRANS_COUNT_TRIG
    addr: 0x500002dc
    size_bits: 32
    description: "Alias for channel 11 TRANS_COUNT register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL2_CTRL
    addr: 0x500002e0
    size_bits: 32
    description: Alias for channel 11 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL2_TRANS_COUNT
    addr: 0x500002e4
    size_bits: 32
    description: Alias for channel 11 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL2_READ_ADDR
    addr: 0x500002e8
    size_bits: 32
    description: Alias for channel 11 READ_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL2_WRITE_ADDR_TRIG
    addr: 0x500002ec
    size_bits: 32
    description: "Alias for channel 11 WRITE_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL3_CTRL
    addr: 0x500002f0
    size_bits: 32
    description: Alias for channel 11 CTRL register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL3_WRITE_ADDR
    addr: 0x500002f4
    size_bits: 32
    description: Alias for channel 11 WRITE_ADDR register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL3_TRANS_COUNT
    addr: 0x500002f8
    size_bits: 32
    description: Alias for channel 11 TRANS_COUNT register
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_AL3_READ_ADDR_TRIG
    addr: 0x500002fc
    size_bits: 32
    description: "Alias for channel 11 READ_ADDR register\\n\n            This is
      a trigger register (0xc). Writing a nonzero value will\\n\n            reload
      the channel counter and start the channel."
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTR
    addr: 0x50000400
    size_bits: 32
    description: Interrupt Status (raw)
    fields:
    - !Field
      name: INTR
      bit_offset: 0
      bit_width: 16
      description: "Raw interrupt status for DMA Channels 0..15. Bit n corresponds
        to channel n. Ignores any masking or forcing. Channel interrupts can be cleared
        by writing a bit mask to INTR, INTS0 or INTS1.\\n\\n\n                Channel
        interrupts can be routed to either of two system-level IRQs based on INTE0
        and INTE1.\\n\\n\n                This can be used vector different channel
        interrupts to different ISRs: this might be done to allow NVIC IRQ preemption
        for more time-critical channels, or to spread IRQ load across different cores.\\n\\n\n
        \               It is also valid to ignore this behaviour and just use INTE0/INTS0/IRQ
        0."
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTE0
    addr: 0x50000404
    size_bits: 32
    description: Interrupt Enables for IRQ 0
    fields:
    - !Field
      name: INTE0
      bit_offset: 0
      bit_width: 16
      description: Set bit n to pass interrupts from channel n to DMA IRQ 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF0
    addr: 0x50000408
    size_bits: 32
    description: Force Interrupts
    fields:
    - !Field
      name: INTF0
      bit_offset: 0
      bit_width: 16
      description: Write 1s to force the corresponding bits in INTE0. The interrupt
        remains asserted until INTF0 is cleared.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS0
    addr: 0x5000040c
    size_bits: 32
    description: Interrupt Status for IRQ 0
    fields:
    - !Field
      name: INTS0
      bit_offset: 0
      bit_width: 16
      description: "Indicates active channel interrupt requests which are currently
        causing IRQ 0 to be asserted.\\n\n                Channel interrupts can be
        cleared by writing a bit mask here."
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTE1
    addr: 0x50000414
    size_bits: 32
    description: Interrupt Enables for IRQ 1
    fields:
    - !Field
      name: INTE1
      bit_offset: 0
      bit_width: 16
      description: Set bit n to pass interrupts from channel n to DMA IRQ 1.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF1
    addr: 0x50000418
    size_bits: 32
    description: Force Interrupts for IRQ 1
    fields:
    - !Field
      name: INTF1
      bit_offset: 0
      bit_width: 16
      description: Write 1s to force the corresponding bits in INTE0. The interrupt
        remains asserted until INTF0 is cleared.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS1
    addr: 0x5000041c
    size_bits: 32
    description: Interrupt Status (masked) for IRQ 1
    fields:
    - !Field
      name: INTS1
      bit_offset: 0
      bit_width: 16
      description: "Indicates active channel interrupt requests which are currently
        causing IRQ 1 to be asserted.\\n\n                Channel interrupts can be
        cleared by writing a bit mask here."
      read_allowed: true
      write_allowed: true
  - !Register
    name: TIMER0
    addr: 0x50000420
    size_bits: 32
    description: "Pacing (X/Y) Fractional Timer\\n\n            The pacing timer produces
      TREQ assertions at a rate set by ((X/Y) * sys_clk). This equation is evaluated
      every sys_clk cycles and therefore can only generate TREQs at a rate of 1 per
      sys_clk (i.e. permanent TREQ) or less."
    fields:
    - !Field
      name: X
      bit_offset: 16
      bit_width: 16
      description: Pacing Timer Dividend. Specifies the X value for the (X/Y) fractional
        timer.
      read_allowed: true
      write_allowed: true
    - !Field
      name: Y
      bit_offset: 0
      bit_width: 16
      description: Pacing Timer Divisor. Specifies the Y value for the (X/Y) fractional
        timer.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TIMER1
    addr: 0x50000424
    size_bits: 32
    description: "Pacing (X/Y) Fractional Timer\\n\n            The pacing timer produces
      TREQ assertions at a rate set by ((X/Y) * sys_clk). This equation is evaluated
      every sys_clk cycles and therefore can only generate TREQs at a rate of 1 per
      sys_clk (i.e. permanent TREQ) or less."
    fields:
    - !Field
      name: X
      bit_offset: 16
      bit_width: 16
      description: Pacing Timer Dividend. Specifies the X value for the (X/Y) fractional
        timer.
      read_allowed: true
      write_allowed: true
    - !Field
      name: Y
      bit_offset: 0
      bit_width: 16
      description: Pacing Timer Divisor. Specifies the Y value for the (X/Y) fractional
        timer.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MULTI_CHAN_TRIGGER
    addr: 0x50000430
    size_bits: 32
    description: Trigger one or more channels simultaneously
    fields:
    - !Field
      name: MULTI_CHAN_TRIGGER
      bit_offset: 0
      bit_width: 16
      description: Each bit in this register corresponds to a DMA channel. Writing
        a 1 to the relevant bit is the same as writing to that channel's trigger register;
        the channel will start if it is currently enabled and not already busy.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SNIFF_CTRL
    addr: 0x50000434
    size_bits: 32
    description: Sniffer Control
    fields:
    - !Field
      name: OUT_INV
      bit_offset: 11
      bit_width: 1
      description: If set, the result appears inverted (bitwise complement) when read.
        This does not affect the way the checksum is calculated; the result is transformed
        on-the-fly between the result register and the bus.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_REV
      bit_offset: 10
      bit_width: 1
      description: If set, the result appears bit-reversed when read. This does not
        affect the way the checksum is calculated; the result is transformed on-the-fly
        between the result register and the bus.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BSWAP
      bit_offset: 9
      bit_width: 1
      description: "Locally perform a byte reverse on the sniffed data, before feeding
        into checksum.\\n\\n\n                Note that the sniff hardware is downstream
        of the DMA channel byteswap performed in the read master: if channel CTRL_BSWAP
        and SNIFF_CTRL_BSWAP are both enabled, their effects cancel from the sniffer's
        point of view."
      read_allowed: true
      write_allowed: true
    - !Field
      name: CALC
      bit_offset: 5
      bit_width: 4
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CRC32
        1: CRC32R
        2: CRC16
        3: CRC16R
        14: EVEN
        15: SUM
    - !Field
      name: DMACH
      bit_offset: 1
      bit_width: 4
      description: DMA channel for Sniffer to observe
      read_allowed: true
      write_allowed: true
    - !Field
      name: EN
      bit_offset: 0
      bit_width: 1
      description: Enable sniffer
      read_allowed: true
      write_allowed: true
  - !Register
    name: SNIFF_DATA
    addr: 0x50000438
    size_bits: 32
    description: "Data accumulator for sniff hardware\\n\n            Write an initial
      seed value here before starting a DMA transfer on the channel indicated by SNIFF_CTRL_DMACH.
      The hardware will update this register each time it observes a read from the
      indicated channel. Once the channel completes, the final result can be read
      from this register."
    read_allowed: true
    write_allowed: true
  - !Register
    name: FIFO_LEVELS
    addr: 0x50000440
    size_bits: 32
    description: Debug RAF, WAF, TDF levels
    fields:
    - !Field
      name: RAF_LVL
      bit_offset: 16
      bit_width: 8
      description: Current Read-Address-FIFO fill level
      read_allowed: true
      write_allowed: false
    - !Field
      name: WAF_LVL
      bit_offset: 8
      bit_width: 8
      description: Current Write-Address-FIFO fill level
      read_allowed: true
      write_allowed: false
    - !Field
      name: TDF_LVL
      bit_offset: 0
      bit_width: 8
      description: Current Transfer-Data-FIFO fill level
      read_allowed: true
      write_allowed: false
  - !Register
    name: CHAN_ABORT
    addr: 0x50000444
    size_bits: 32
    description: Abort an in-progress transfer sequence on one or more channels
    fields:
    - !Field
      name: CHAN_ABORT
      bit_offset: 0
      bit_width: 16
      description: "Each bit corresponds to a channel. Writing a 1 aborts whatever
        transfer sequence is in progress on that channel. The bit will remain high
        until any in-flight transfers have been flushed through the address and data
        FIFOs.\\n\\n\n                After writing, this register must be polled
        until it returns all-zero. Until this point, it is unsafe to restart the channel."
      read_allowed: true
      write_allowed: true
  - !Register
    name: N_CHANNELS
    addr: 0x50000448
    size_bits: 32
    description: The number of channels this DMA instance is equipped with. This DMA
      supports up to 16 hardware channels, but can be configured with as few as one,
      to minimise silicon area.
    fields:
    - !Field
      name: N_CHANNELS
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH0_DBG_CTDREQ
    addr: 0x50000800
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH0_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH0_DBG_TCR
    addr: 0x50000804
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH1_DBG_CTDREQ
    addr: 0x50000840
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH1_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH1_DBG_TCR
    addr: 0x50000844
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH2_DBG_CTDREQ
    addr: 0x50000880
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH2_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH2_DBG_TCR
    addr: 0x50000884
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH3_DBG_CTDREQ
    addr: 0x500008c0
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH3_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH3_DBG_TCR
    addr: 0x500008c4
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH4_DBG_CTDREQ
    addr: 0x50000900
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH4_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH4_DBG_TCR
    addr: 0x50000904
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH5_DBG_CTDREQ
    addr: 0x50000940
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH5_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH5_DBG_TCR
    addr: 0x50000944
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH6_DBG_CTDREQ
    addr: 0x50000980
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH6_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH6_DBG_TCR
    addr: 0x50000984
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH7_DBG_CTDREQ
    addr: 0x500009c0
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH7_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH7_DBG_TCR
    addr: 0x500009c4
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH8_DBG_CTDREQ
    addr: 0x50000a00
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH8_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH8_DBG_TCR
    addr: 0x50000a04
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH9_DBG_CTDREQ
    addr: 0x50000a40
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH9_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH9_DBG_TCR
    addr: 0x50000a44
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH10_DBG_CTDREQ
    addr: 0x50000a80
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH10_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH10_DBG_TCR
    addr: 0x50000a84
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
  - !Register
    name: CH11_DBG_CTDREQ
    addr: 0x50000ac0
    size_bits: 32
    description: 'Read: get channel DREQ counter (i.e. how many accesses the DMA expects
      it can perform on the peripheral without overflow/underflow. Write any value:
      clears the counter, and cause channel to re-initiate DREQ handshake.'
    fields:
    - !Field
      name: CH11_DBG_CTDREQ
      bit_offset: 0
      bit_width: 6
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH11_DBG_TCR
    addr: 0x50000ac4
    size_bits: 32
    description: Read to get channel TRANS_COUNT reload value, i.e. the length of
      the next transfer
    read_allowed: true
    write_allowed: false
- !Module
  name: USBCTRL_REGS
  description: USB FS/LS controller device registers
  base_addr: 0x50110000
  size: 0x9c
  registers:
  - !Register
    name: ADDR_ENDP
    addr: 0x50110000
    size_bits: 32
    description: Device address and endpoint control
    fields:
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Device endpoint to send data to. Only valid for HOST mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: In device mode, the address that the device should respond to.
        Set in response to a SET_ADDR setup packet from the host. In host mode set
        to the address of the device to communicate with.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP1
    addr: 0x50110004
    size_bits: 32
    description: Interrupt endpoint 1. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP2
    addr: 0x50110008
    size_bits: 32
    description: Interrupt endpoint 2. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP3
    addr: 0x5011000c
    size_bits: 32
    description: Interrupt endpoint 3. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP4
    addr: 0x50110010
    size_bits: 32
    description: Interrupt endpoint 4. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP5
    addr: 0x50110014
    size_bits: 32
    description: Interrupt endpoint 5. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP6
    addr: 0x50110018
    size_bits: 32
    description: Interrupt endpoint 6. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP7
    addr: 0x5011001c
    size_bits: 32
    description: Interrupt endpoint 7. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP8
    addr: 0x50110020
    size_bits: 32
    description: Interrupt endpoint 8. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP9
    addr: 0x50110024
    size_bits: 32
    description: Interrupt endpoint 9. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP10
    addr: 0x50110028
    size_bits: 32
    description: Interrupt endpoint 10. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP11
    addr: 0x5011002c
    size_bits: 32
    description: Interrupt endpoint 11. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP12
    addr: 0x50110030
    size_bits: 32
    description: Interrupt endpoint 12. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP13
    addr: 0x50110034
    size_bits: 32
    description: Interrupt endpoint 13. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP14
    addr: 0x50110038
    size_bits: 32
    description: Interrupt endpoint 14. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR_ENDP15
    addr: 0x5011003c
    size_bits: 32
    description: Interrupt endpoint 15. Only valid for HOST mode.
    fields:
    - !Field
      name: INTEP_PREAMBLE
      bit_offset: 26
      bit_width: 1
      description: Interrupt EP requires preamble (is a low speed device on a full
        speed hub)
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEP_DIR
      bit_offset: 25
      bit_width: 1
      description: Direction of the interrupt endpoint. In=0, Out=1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDPOINT
      bit_offset: 16
      bit_width: 4
      description: Endpoint number of the interrupt endpoint
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 7
      description: Device address
      read_allowed: true
      write_allowed: true
  - !Register
    name: MAIN_CTRL
    addr: 0x50110040
    size_bits: 32
    description: Main control register
    fields:
    - !Field
      name: SIM_TIMING
      bit_offset: 31
      bit_width: 1
      description: Reduced timings for simulation
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_NDEVICE
      bit_offset: 1
      bit_width: 1
      description: Device mode = 0, Host mode = 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: CONTROLLER_EN
      bit_offset: 0
      bit_width: 1
      description: Enable controller
      read_allowed: true
      write_allowed: true
  - !Register
    name: SOF_WR
    addr: 0x50110044
    size_bits: 32
    description: Set the SOF (Start of Frame) frame number in the host controller.
      The SOF packet is sent every 1ms and the host will increment the frame number
      by 1 each time.
    fields:
    - !Field
      name: COUNT
      bit_offset: 0
      bit_width: 11
      read_allowed: false
      write_allowed: true
  - !Register
    name: SOF_RD
    addr: 0x50110048
    size_bits: 32
    description: Read the last SOF (Start of Frame) frame number seen. In device mode
      the last SOF received from the host. In host mode the last SOF sent by the host.
    fields:
    - !Field
      name: COUNT
      bit_offset: 0
      bit_width: 11
      read_allowed: true
      write_allowed: false
  - !Register
    name: SIE_CTRL
    addr: 0x5011004c
    size_bits: 32
    description: SIE control register
    fields:
    - !Field
      name: EP0_INT_STALL
      bit_offset: 31
      bit_width: 1
      description: 'Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a STALL'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_DOUBLE_BUF
      bit_offset: 30
      bit_width: 1
      description: 'Device: EP0 single buffered = 0, double buffered = 1'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_INT_1BUF
      bit_offset: 29
      bit_width: 1
      description: 'Device: Set bit in BUFF_STATUS for every buffer completed on EP0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_INT_2BUF
      bit_offset: 28
      bit_width: 1
      description: 'Device: Set bit in BUFF_STATUS for every 2 buffers completed on
        EP0'
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_INT_NAK
      bit_offset: 27
      bit_width: 1
      description: 'Device: Set bit in EP_STATUS_STALL_NAK when EP0 sends a NAK'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECT_EN
      bit_offset: 26
      bit_width: 1
      description: Direct bus drive enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECT_DP
      bit_offset: 25
      bit_width: 1
      description: Direct control of DP
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECT_DM
      bit_offset: 24
      bit_width: 1
      description: Direct control of DM
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANSCEIVER_PD
      bit_offset: 18
      bit_width: 1
      description: Power down bus transceiver
      read_allowed: true
      write_allowed: true
    - !Field
      name: RPU_OPT
      bit_offset: 17
      bit_width: 1
      description: 'Device: Pull-up strength (0=1K2, 1=2k3)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULLUP_EN
      bit_offset: 16
      bit_width: 1
      description: 'Device: Enable pull up resistor'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULLDOWN_EN
      bit_offset: 15
      bit_width: 1
      description: 'Host: Enable pull down resistors'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESET_BUS
      bit_offset: 13
      bit_width: 1
      description: 'Host: Reset bus'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESUME
      bit_offset: 12
      bit_width: 1
      description: 'Device: Remote wakeup. Device can initiate its own resume after
        suspend.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_EN
      bit_offset: 11
      bit_width: 1
      description: 'Host: Enable VBUS'
      read_allowed: true
      write_allowed: true
    - !Field
      name: KEEP_ALIVE_EN
      bit_offset: 10
      bit_width: 1
      description: 'Host: Enable keep alive packet (for low speed bus)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SOF_EN
      bit_offset: 9
      bit_width: 1
      description: 'Host: Enable SOF generation (for full speed bus)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SOF_SYNC
      bit_offset: 8
      bit_width: 1
      description: 'Host: Delay packet(s) until after SOF'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PREAMBLE_EN
      bit_offset: 6
      bit_width: 1
      description: 'Host: Preable enable for LS device on FS hub'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STOP_TRANS
      bit_offset: 4
      bit_width: 1
      description: 'Host: Stop transaction'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RECEIVE_DATA
      bit_offset: 3
      bit_width: 1
      description: 'Host: Receive transaction (IN to host)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEND_DATA
      bit_offset: 2
      bit_width: 1
      description: 'Host: Send transaction (OUT from host)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEND_SETUP
      bit_offset: 1
      bit_width: 1
      description: 'Host: Send Setup packet'
      read_allowed: true
      write_allowed: true
    - !Field
      name: START_TRANS
      bit_offset: 0
      bit_width: 1
      description: 'Host: Start transaction'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIE_STATUS
    addr: 0x50110050
    size_bits: 32
    description: SIE status register
    fields:
    - !Field
      name: DATA_SEQ_ERROR
      bit_offset: 31
      bit_width: 1
      description: "Data Sequence Error.\\n\\n\n                The device can raise
        a sequence error in the following conditions:\\n\\n\n                * A SETUP
        packet is received followed by a DATA1 packet (data phase should always be
        DATA0) * An OUT packet is received from the host but doesn't match the data
        pid in the buffer control register read from DPSRAM\\n\\n\n                The
        host can raise a data sequence error in the following conditions:\\n\\n\n
        \               * An IN packet from the device has the wrong data PID"
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACK_REC
      bit_offset: 30
      bit_width: 1
      description: ACK received. Raised by both host and device.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STALL_REC
      bit_offset: 29
      bit_width: 1
      description: 'Host: STALL received'
      read_allowed: true
      write_allowed: true
    - !Field
      name: NAK_REC
      bit_offset: 28
      bit_width: 1
      description: 'Host: NAK received'
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_TIMEOUT
      bit_offset: 27
      bit_width: 1
      description: RX timeout is raised by both the host and device if an ACK is not
        received in the maximum time specified by the USB spec.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_OVERFLOW
      bit_offset: 26
      bit_width: 1
      description: RX overflow is raised by the Serial RX engine if the incoming data
        is too fast.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BIT_STUFF_ERROR
      bit_offset: 25
      bit_width: 1
      description: Bit Stuff Error. Raised by the Serial RX engine.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRC_ERROR
      bit_offset: 24
      bit_width: 1
      description: CRC Error. Raised by the Serial RX engine.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUS_RESET
      bit_offset: 19
      bit_width: 1
      description: 'Device: bus reset received'
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANS_COMPLETE
      bit_offset: 18
      bit_width: 1
      description: "Transaction complete.\\n\\n\n                Raised by device
        if:\\n\\n\n                * An IN or OUT packet is sent with the `LAST_BUFF`
        bit set in the buffer control register\\n\\n\n                Raised by host
        if:\\n\\n\n                * A setup packet is sent when no data in or data
        out transaction follows * An IN packet is received and the `LAST_BUFF` bit
        is set in the buffer control register * An IN packet is received with zero
        length * An OUT packet is sent and the `LAST_BUFF` bit is set"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETUP_REC
      bit_offset: 17
      bit_width: 1
      description: 'Device: Setup packet received'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CONNECTED
      bit_offset: 16
      bit_width: 1
      description: 'Device: connected'
      read_allowed: true
      write_allowed: false
    - !Field
      name: RESUME
      bit_offset: 11
      bit_width: 1
      description: 'Host: Device has initiated a remote resume. Device: host has initiated
        a resume.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_OVER_CURR
      bit_offset: 10
      bit_width: 1
      description: VBUS over current detected
      read_allowed: true
      write_allowed: false
    - !Field
      name: SPEED
      bit_offset: 8
      bit_width: 2
      description: 'Host: device speed. Disconnected = 00, LS = 01, FS = 10'
      read_allowed: true
      write_allowed: false
    - !Field
      name: SUSPENDED
      bit_offset: 4
      bit_width: 1
      description: Bus in suspended state. Valid for device and host. Host and device
        will go into suspend if neither Keep Alive / SOF frames are enabled.
      read_allowed: true
      write_allowed: false
    - !Field
      name: LINE_STATE
      bit_offset: 2
      bit_width: 2
      description: USB bus line state
      read_allowed: true
      write_allowed: false
    - !Field
      name: VBUS_DETECTED
      bit_offset: 0
      bit_width: 1
      description: 'Device: VBUS Detected'
      read_allowed: true
      write_allowed: false
  - !Register
    name: INT_EP_CTRL
    addr: 0x50110054
    size_bits: 32
    description: interrupt endpoint control register
    fields:
    - !Field
      name: INT_EP_ACTIVE
      bit_offset: 1
      bit_width: 15
      description: 'Host: Enable interrupt endpoint 1 -> 15'
      read_allowed: true
      write_allowed: true
  - !Register
    name: BUFF_STATUS
    addr: 0x50110058
    size_bits: 32
    description: Buffer status register. A bit set here indicates that a buffer has
      completed on the endpoint (if the buffer interrupt is enabled). It is possible
      for 2 buffers to be completed, so clearing the buffer status bit may instantly
      re set it on the next clock cycle.
    fields:
    - !Field
      name: EP15_OUT
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP15_IN
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP14_OUT
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP14_IN
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP13_OUT
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP13_IN
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP12_OUT
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP12_IN
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP11_OUT
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP11_IN
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP10_OUT
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP10_IN
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP9_OUT
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP9_IN
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP8_OUT
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP8_IN
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP7_OUT
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP7_IN
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP6_OUT
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP6_IN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP5_OUT
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP5_IN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP4_OUT
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP4_IN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP3_OUT
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP3_IN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP2_OUT
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP2_IN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP1_OUT
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP1_IN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: BUFF_CPU_SHOULD_HANDLE
    addr: 0x5011005c
    size_bits: 32
    description: Which of the double buffers should be handled. Only valid if using
      an interrupt per buffer (i.e. not per 2 buffers). Not valid for host interrupt
      endpoint polling because they are only single buffered.
    fields:
    - !Field
      name: EP15_OUT
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP15_IN
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP14_OUT
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP14_IN
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP13_OUT
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP13_IN
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP12_OUT
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP12_IN
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP11_OUT
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP11_IN
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP10_OUT
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP10_IN
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP9_OUT
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP9_IN
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP8_OUT
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP8_IN
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP7_OUT
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP7_IN
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP6_OUT
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP6_IN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP5_OUT
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP5_IN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP4_OUT
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP4_IN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP3_OUT
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP3_IN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP2_OUT
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP2_IN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP1_OUT
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP1_IN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: EP_ABORT
    addr: 0x50110060
    size_bits: 32
    description: 'Device only: Can be set to ignore the buffer control register for
      this endpoint in case you would like to revoke a buffer. A NAK will be sent
      for every access to the endpoint until this bit is cleared. A corresponding
      bit in `EP_ABORT_DONE` is set when it is safe to modify the buffer control register.'
    fields:
    - !Field
      name: EP15_OUT
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP15_IN
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_OUT
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_IN
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_OUT
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_IN
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_OUT
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_IN
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_OUT
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_IN
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_OUT
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_IN
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_OUT
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_IN
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_OUT
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_IN
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_OUT
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_IN
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_OUT
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_IN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_OUT
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_IN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_OUT
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_IN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_OUT
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_IN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_OUT
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_IN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_OUT
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_IN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: EP_ABORT_DONE
    addr: 0x50110064
    size_bits: 32
    description: 'Device only: Used in conjunction with `EP_ABORT`. Set once an endpoint
      is idle so the programmer knows it is safe to modify the buffer control register.'
    fields:
    - !Field
      name: EP15_OUT
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP15_IN
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_OUT
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_IN
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_OUT
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_IN
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_OUT
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_IN
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_OUT
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_IN
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_OUT
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_IN
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_OUT
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_IN
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_OUT
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_IN
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_OUT
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_IN
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_OUT
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_IN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_OUT
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_IN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_OUT
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_IN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_OUT
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_IN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_OUT
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_IN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_OUT
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_IN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: EP_STALL_ARM
    addr: 0x50110068
    size_bits: 32
    description: 'Device: this bit must be set in conjunction with the `STALL` bit
      in the buffer control register to send a STALL on EP0. The device controller
      clears these bits when a SETUP packet is received because the USB spec requires
      that a STALL condition is cleared when a SETUP packet is received.'
    fields:
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: NAK_POLL
    addr: 0x5011006c
    size_bits: 32
    description: Used by the host controller. Sets the wait time in microseconds before
      trying again if the device replies with a NAK.
    reset_value: 0x100010
    fields:
    - !Field
      name: DELAY_FS
      bit_offset: 16
      bit_width: 10
      description: NAK polling interval for a full speed device
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELAY_LS
      bit_offset: 0
      bit_width: 10
      description: NAK polling interval for a low speed device
      read_allowed: true
      write_allowed: true
  - !Register
    name: EP_STATUS_STALL_NAK
    addr: 0x50110070
    size_bits: 32
    description: 'Device: bits are set when the `IRQ_ON_NAK` or `IRQ_ON_STALL` bits
      are set. For EP0 this comes from `SIE_CTRL`. For all other endpoints it comes
      from the endpoint control register.'
    fields:
    - !Field
      name: EP15_OUT
      bit_offset: 31
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP15_IN
      bit_offset: 30
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_OUT
      bit_offset: 29
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP14_IN
      bit_offset: 28
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_OUT
      bit_offset: 27
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP13_IN
      bit_offset: 26
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_OUT
      bit_offset: 25
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP12_IN
      bit_offset: 24
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_OUT
      bit_offset: 23
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP11_IN
      bit_offset: 22
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_OUT
      bit_offset: 21
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP10_IN
      bit_offset: 20
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_OUT
      bit_offset: 19
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP9_IN
      bit_offset: 18
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_OUT
      bit_offset: 17
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP8_IN
      bit_offset: 16
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_OUT
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7_IN
      bit_offset: 14
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_OUT
      bit_offset: 13
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6_IN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_OUT
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5_IN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_OUT
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4_IN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_OUT
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3_IN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_OUT
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2_IN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_OUT
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1_IN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_OUT
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0_IN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_MUXING
    addr: 0x50110074
    size_bits: 32
    description: Where to connect the USB controller. Should be to_phy by default.
    fields:
    - !Field
      name: SOFTCON
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TO_DIGITAL_PAD
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TO_EXTPHY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TO_PHY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_PWR
    addr: 0x50110078
    size_bits: 32
    description: Overrides for the power signals in the event that the VBUS signals
      are not hooked up to GPIO. Set the value of the override and then the override
      enable to switch over to the override value.
    fields:
    - !Field
      name: OVERCURR_DETECT_EN
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: OVERCURR_DETECT
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_DETECT_OVERRIDE_EN
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_DETECT
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_EN_OVERRIDE_EN
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_EN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: USBPHY_DIRECT
    addr: 0x5011007c
    size_bits: 32
    description: This register allows for direct control of the USB phy. Use in conjunction
      with usbphy_direct_override register to enable each override bit.
    fields:
    - !Field
      name: DM_OVV
      bit_offset: 22
      bit_width: 1
      description: DM over voltage
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_OVV
      bit_offset: 21
      bit_width: 1
      description: DP over voltage
      read_allowed: true
      write_allowed: false
    - !Field
      name: DM_OVCN
      bit_offset: 20
      bit_width: 1
      description: DM overcurrent
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_OVCN
      bit_offset: 19
      bit_width: 1
      description: DP overcurrent
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_DM
      bit_offset: 18
      bit_width: 1
      description: DPM pin state
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_DP
      bit_offset: 17
      bit_width: 1
      description: DPP pin state
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_DD
      bit_offset: 16
      bit_width: 1
      description: Differential RX
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_DIFFMODE
      bit_offset: 15
      bit_width: 1
      description: "TX_DIFFMODE=0: Single ended mode\\n\n                TX_DIFFMODE=1:
        Differential drive mode (TX_DM, TX_DM_OE ignored)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_FSSLEW
      bit_offset: 14
      bit_width: 1
      description: "TX_FSSLEW=0: Low speed slew rate\\n\n                TX_FSSLEW=1:
        Full speed slew rate"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_PD
      bit_offset: 13
      bit_width: 1
      description: TX power down override (if override enable is set). 1 = powered
        down.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_PD
      bit_offset: 12
      bit_width: 1
      description: RX power down override (if override enable is set). 1 = powered
        down.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DM
      bit_offset: 11
      bit_width: 1
      description: "Output data. TX_DIFFMODE=1, Ignored\\n\n                TX_DIFFMODE=0,
        Drives DPM only. TX_DM_OE=1 to enable drive. DPM=TX_DM"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DP
      bit_offset: 10
      bit_width: 1
      description: "Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. TX_DP_OE=1
        to enable drive. DPP=TX_DP, DPM=~TX_DP\\n\n                If TX_DIFFMODE=0,
        Drives DPP only. TX_DP_OE=1 to enable drive. DPP=TX_DP"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DM_OE
      bit_offset: 9
      bit_width: 1
      description: "Output enable. If TX_DIFFMODE=1, Ignored.\\n\n                If
        TX_DIFFMODE=0, OE for DPM only. 0 - DPM in Hi-Z state; 1 - DPM driving"
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DP_OE
      bit_offset: 8
      bit_width: 1
      description: "Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff pair. 0 -
        DPP/DPM in Hi-Z state; 1 - DPP/DPM driving\\n\n                If TX_DIFFMODE=0,
        OE for DPP only. 0 - DPP in Hi-Z state; 1 - DPP driving"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLDN_EN
      bit_offset: 6
      bit_width: 1
      description: DM pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLUP_EN
      bit_offset: 5
      bit_width: 1
      description: DM pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLUP_HISEL
      bit_offset: 4
      bit_width: 1
      description: Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 - Pull
        = Rpu1 + Rpu2
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLDN_EN
      bit_offset: 2
      bit_width: 1
      description: DP pull down enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLUP_EN
      bit_offset: 1
      bit_width: 1
      description: DP pull up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLUP_HISEL
      bit_offset: 0
      bit_width: 1
      description: Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 - Pull
        = Rpu1 + Rpu2
      read_allowed: true
      write_allowed: true
  - !Register
    name: USBPHY_DIRECT_OVERRIDE
    addr: 0x50110080
    size_bits: 32
    description: Override enable for each control in usbphy_direct
    fields:
    - !Field
      name: TX_DIFFMODE_OVERRIDE_EN
      bit_offset: 15
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLUP_OVERRIDE_EN
      bit_offset: 12
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_FSSLEW_OVERRIDE_EN
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_PD_OVERRIDE_EN
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_PD_OVERRIDE_EN
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DM_OVERRIDE_EN
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DP_OVERRIDE_EN
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DM_OE_OVERRIDE_EN
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DP_OE_OVERRIDE_EN
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLDN_EN_OVERRIDE_EN
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLDN_EN_OVERRIDE_EN
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLUP_EN_OVERRIDE_EN
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DM_PULLUP_HISEL_OVERRIDE_EN
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLUP_HISEL_OVERRIDE_EN
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: USBPHY_TRIM
    addr: 0x50110084
    size_bits: 32
    description: Used to adjust trim values of USB phy pull down resistors.
    reset_value: 0x1f1f
    fields:
    - !Field
      name: DM_PULLDN_TRIM
      bit_offset: 8
      bit_width: 5
      description: "Value to drive to USB PHY\\n\n                DM pulldown resistor
        trim control\\n\n                Experimental data suggests that the reset
        value will work, but this register allows adjustment if required"
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_PULLDN_TRIM
      bit_offset: 0
      bit_width: 5
      description: "Value to drive to USB PHY\\n\n                DP pulldown resistor
        trim control\\n\n                Experimental data suggests that the reset
        value will work, but this register allows adjustment if required"
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x5011008c
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: EP_STALL_NAK
      bit_offset: 19
      bit_width: 1
      description: Raised when any bit in EP_STATUS_STALL_NAK is set. Clear by clearing
        all bits in EP_STATUS_STALL_NAK.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABORT_DONE
      bit_offset: 18
      bit_width: 1
      description: Raised when any bit in ABORT_DONE is set. Clear by clearing all
        bits in ABORT_DONE.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_SOF
      bit_offset: 17
      bit_width: 1
      description: Set every time the device receives a SOF (Start of Frame) packet.
        Cleared by reading SOF_RD
      read_allowed: true
      write_allowed: false
    - !Field
      name: SETUP_REQ
      bit_offset: 16
      bit_width: 1
      description: 'Device. Source: SIE_STATUS.SETUP_REC'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_RESUME_FROM_HOST
      bit_offset: 15
      bit_width: 1
      description: Set when the device receives a resume from the host. Cleared by
        writing to SIE_STATUS.RESUME
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_SUSPEND
      bit_offset: 14
      bit_width: 1
      description: Set when the device suspend state changes. Cleared by writing to
        SIE_STATUS.SUSPENDED
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_CONN_DIS
      bit_offset: 13
      bit_width: 1
      description: Set when the device connection state changes. Cleared by writing
        to SIE_STATUS.CONNECTED
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUS_RESET
      bit_offset: 12
      bit_width: 1
      description: 'Source: SIE_STATUS.BUS_RESET'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VBUS_DETECT
      bit_offset: 11
      bit_width: 1
      description: 'Source: SIE_STATUS.VBUS_DETECT'
      read_allowed: true
      write_allowed: false
    - !Field
      name: STALL
      bit_offset: 10
      bit_width: 1
      description: 'Source: SIE_STATUS.STALL_REC'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_CRC
      bit_offset: 9
      bit_width: 1
      description: 'Source: SIE_STATUS.CRC_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_BIT_STUFF
      bit_offset: 8
      bit_width: 1
      description: 'Source: SIE_STATUS.BIT_STUFF_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_RX_OVERFLOW
      bit_offset: 7
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_OVERFLOW'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_RX_TIMEOUT
      bit_offset: 6
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_TIMEOUT'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_DATA_SEQ
      bit_offset: 5
      bit_width: 1
      description: 'Source: SIE_STATUS.DATA_SEQ_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUFF_STATUS
      bit_offset: 4
      bit_width: 1
      description: Raised when any bit in BUFF_STATUS is set. Clear by clearing all
        bits in BUFF_STATUS.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TRANS_COMPLETE
      bit_offset: 3
      bit_width: 1
      description: Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear by writing
        to this bit.
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_SOF
      bit_offset: 2
      bit_width: 1
      description: 'Host: raised every time the host sends a SOF (Start of Frame).
        Cleared by reading SOF_RD'
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_RESUME
      bit_offset: 1
      bit_width: 1
      description: 'Host: raised when a device wakes up the host. Cleared by writing
        to SIE_STATUS.RESUME'
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_CONN_DIS
      bit_offset: 0
      bit_width: 1
      description: 'Host: raised when a device is connected or disconnected (i.e.
        when SIE_STATUS.SPEED changes). Cleared by writing to SIE_STATUS.SPEED'
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTE
    addr: 0x50110090
    size_bits: 32
    description: Interrupt Enable
    fields:
    - !Field
      name: EP_STALL_NAK
      bit_offset: 19
      bit_width: 1
      description: Raised when any bit in EP_STATUS_STALL_NAK is set. Clear by clearing
        all bits in EP_STATUS_STALL_NAK.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ABORT_DONE
      bit_offset: 18
      bit_width: 1
      description: Raised when any bit in ABORT_DONE is set. Clear by clearing all
        bits in ABORT_DONE.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_SOF
      bit_offset: 17
      bit_width: 1
      description: Set every time the device receives a SOF (Start of Frame) packet.
        Cleared by reading SOF_RD
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETUP_REQ
      bit_offset: 16
      bit_width: 1
      description: 'Device. Source: SIE_STATUS.SETUP_REC'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_RESUME_FROM_HOST
      bit_offset: 15
      bit_width: 1
      description: Set when the device receives a resume from the host. Cleared by
        writing to SIE_STATUS.RESUME
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_SUSPEND
      bit_offset: 14
      bit_width: 1
      description: Set when the device suspend state changes. Cleared by writing to
        SIE_STATUS.SUSPENDED
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_CONN_DIS
      bit_offset: 13
      bit_width: 1
      description: Set when the device connection state changes. Cleared by writing
        to SIE_STATUS.CONNECTED
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUS_RESET
      bit_offset: 12
      bit_width: 1
      description: 'Source: SIE_STATUS.BUS_RESET'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_DETECT
      bit_offset: 11
      bit_width: 1
      description: 'Source: SIE_STATUS.VBUS_DETECT'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STALL
      bit_offset: 10
      bit_width: 1
      description: 'Source: SIE_STATUS.STALL_REC'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_CRC
      bit_offset: 9
      bit_width: 1
      description: 'Source: SIE_STATUS.CRC_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_BIT_STUFF
      bit_offset: 8
      bit_width: 1
      description: 'Source: SIE_STATUS.BIT_STUFF_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_RX_OVERFLOW
      bit_offset: 7
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_OVERFLOW'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_RX_TIMEOUT
      bit_offset: 6
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_TIMEOUT'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_DATA_SEQ
      bit_offset: 5
      bit_width: 1
      description: 'Source: SIE_STATUS.DATA_SEQ_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUFF_STATUS
      bit_offset: 4
      bit_width: 1
      description: Raised when any bit in BUFF_STATUS is set. Clear by clearing all
        bits in BUFF_STATUS.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANS_COMPLETE
      bit_offset: 3
      bit_width: 1
      description: Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear by writing
        to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_SOF
      bit_offset: 2
      bit_width: 1
      description: 'Host: raised every time the host sends a SOF (Start of Frame).
        Cleared by reading SOF_RD'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_RESUME
      bit_offset: 1
      bit_width: 1
      description: 'Host: raised when a device wakes up the host. Cleared by writing
        to SIE_STATUS.RESUME'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_CONN_DIS
      bit_offset: 0
      bit_width: 1
      description: 'Host: raised when a device is connected or disconnected (i.e.
        when SIE_STATUS.SPEED changes). Cleared by writing to SIE_STATUS.SPEED'
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTF
    addr: 0x50110094
    size_bits: 32
    description: Interrupt Force
    fields:
    - !Field
      name: EP_STALL_NAK
      bit_offset: 19
      bit_width: 1
      description: Raised when any bit in EP_STATUS_STALL_NAK is set. Clear by clearing
        all bits in EP_STATUS_STALL_NAK.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ABORT_DONE
      bit_offset: 18
      bit_width: 1
      description: Raised when any bit in ABORT_DONE is set. Clear by clearing all
        bits in ABORT_DONE.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_SOF
      bit_offset: 17
      bit_width: 1
      description: Set every time the device receives a SOF (Start of Frame) packet.
        Cleared by reading SOF_RD
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETUP_REQ
      bit_offset: 16
      bit_width: 1
      description: 'Device. Source: SIE_STATUS.SETUP_REC'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_RESUME_FROM_HOST
      bit_offset: 15
      bit_width: 1
      description: Set when the device receives a resume from the host. Cleared by
        writing to SIE_STATUS.RESUME
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_SUSPEND
      bit_offset: 14
      bit_width: 1
      description: Set when the device suspend state changes. Cleared by writing to
        SIE_STATUS.SUSPENDED
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_CONN_DIS
      bit_offset: 13
      bit_width: 1
      description: Set when the device connection state changes. Cleared by writing
        to SIE_STATUS.CONNECTED
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUS_RESET
      bit_offset: 12
      bit_width: 1
      description: 'Source: SIE_STATUS.BUS_RESET'
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUS_DETECT
      bit_offset: 11
      bit_width: 1
      description: 'Source: SIE_STATUS.VBUS_DETECT'
      read_allowed: true
      write_allowed: true
    - !Field
      name: STALL
      bit_offset: 10
      bit_width: 1
      description: 'Source: SIE_STATUS.STALL_REC'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_CRC
      bit_offset: 9
      bit_width: 1
      description: 'Source: SIE_STATUS.CRC_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_BIT_STUFF
      bit_offset: 8
      bit_width: 1
      description: 'Source: SIE_STATUS.BIT_STUFF_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_RX_OVERFLOW
      bit_offset: 7
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_OVERFLOW'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_RX_TIMEOUT
      bit_offset: 6
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_TIMEOUT'
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERROR_DATA_SEQ
      bit_offset: 5
      bit_width: 1
      description: 'Source: SIE_STATUS.DATA_SEQ_ERROR'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUFF_STATUS
      bit_offset: 4
      bit_width: 1
      description: Raised when any bit in BUFF_STATUS is set. Clear by clearing all
        bits in BUFF_STATUS.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANS_COMPLETE
      bit_offset: 3
      bit_width: 1
      description: Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear by writing
        to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_SOF
      bit_offset: 2
      bit_width: 1
      description: 'Host: raised every time the host sends a SOF (Start of Frame).
        Cleared by reading SOF_RD'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_RESUME
      bit_offset: 1
      bit_width: 1
      description: 'Host: raised when a device wakes up the host. Cleared by writing
        to SIE_STATUS.RESUME'
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOST_CONN_DIS
      bit_offset: 0
      bit_width: 1
      description: 'Host: raised when a device is connected or disconnected (i.e.
        when SIE_STATUS.SPEED changes). Cleared by writing to SIE_STATUS.SPEED'
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTS
    addr: 0x50110098
    size_bits: 32
    description: Interrupt status after masking & forcing
    fields:
    - !Field
      name: EP_STALL_NAK
      bit_offset: 19
      bit_width: 1
      description: Raised when any bit in EP_STATUS_STALL_NAK is set. Clear by clearing
        all bits in EP_STATUS_STALL_NAK.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABORT_DONE
      bit_offset: 18
      bit_width: 1
      description: Raised when any bit in ABORT_DONE is set. Clear by clearing all
        bits in ABORT_DONE.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_SOF
      bit_offset: 17
      bit_width: 1
      description: Set every time the device receives a SOF (Start of Frame) packet.
        Cleared by reading SOF_RD
      read_allowed: true
      write_allowed: false
    - !Field
      name: SETUP_REQ
      bit_offset: 16
      bit_width: 1
      description: 'Device. Source: SIE_STATUS.SETUP_REC'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_RESUME_FROM_HOST
      bit_offset: 15
      bit_width: 1
      description: Set when the device receives a resume from the host. Cleared by
        writing to SIE_STATUS.RESUME
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_SUSPEND
      bit_offset: 14
      bit_width: 1
      description: Set when the device suspend state changes. Cleared by writing to
        SIE_STATUS.SUSPENDED
      read_allowed: true
      write_allowed: false
    - !Field
      name: DEV_CONN_DIS
      bit_offset: 13
      bit_width: 1
      description: Set when the device connection state changes. Cleared by writing
        to SIE_STATUS.CONNECTED
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUS_RESET
      bit_offset: 12
      bit_width: 1
      description: 'Source: SIE_STATUS.BUS_RESET'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VBUS_DETECT
      bit_offset: 11
      bit_width: 1
      description: 'Source: SIE_STATUS.VBUS_DETECT'
      read_allowed: true
      write_allowed: false
    - !Field
      name: STALL
      bit_offset: 10
      bit_width: 1
      description: 'Source: SIE_STATUS.STALL_REC'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_CRC
      bit_offset: 9
      bit_width: 1
      description: 'Source: SIE_STATUS.CRC_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_BIT_STUFF
      bit_offset: 8
      bit_width: 1
      description: 'Source: SIE_STATUS.BIT_STUFF_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_RX_OVERFLOW
      bit_offset: 7
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_OVERFLOW'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_RX_TIMEOUT
      bit_offset: 6
      bit_width: 1
      description: 'Source: SIE_STATUS.RX_TIMEOUT'
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERROR_DATA_SEQ
      bit_offset: 5
      bit_width: 1
      description: 'Source: SIE_STATUS.DATA_SEQ_ERROR'
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUFF_STATUS
      bit_offset: 4
      bit_width: 1
      description: Raised when any bit in BUFF_STATUS is set. Clear by clearing all
        bits in BUFF_STATUS.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TRANS_COMPLETE
      bit_offset: 3
      bit_width: 1
      description: Raised every time SIE_STATUS.TRANS_COMPLETE is set. Clear by writing
        to this bit.
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_SOF
      bit_offset: 2
      bit_width: 1
      description: 'Host: raised every time the host sends a SOF (Start of Frame).
        Cleared by reading SOF_RD'
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_RESUME
      bit_offset: 1
      bit_width: 1
      description: 'Host: raised when a device wakes up the host. Cleared by writing
        to SIE_STATUS.RESUME'
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOST_CONN_DIS
      bit_offset: 0
      bit_width: 1
      description: 'Host: raised when a device is connected or disconnected (i.e.
        when SIE_STATUS.SPEED changes). Cleared by writing to SIE_STATUS.SPEED'
      read_allowed: true
      write_allowed: false
- !Module
  name: PIO0
  description: Programmable IO block
  base_addr: 0x50200000
  size: 0x144
  registers:
  - !Register
    name: CTRL
    addr: 0x50200000
    size_bits: 32
    description: PIO control register
    fields:
    - !Field
      name: CLKDIV_RESTART
      bit_offset: 8
      bit_width: 4
      description: "Force clock dividers to restart their count and clear fractional\\n\n
        \               accumulators. Restart multiple dividers to synchronise them."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM_RESTART
      bit_offset: 4
      bit_width: 4
      description: "Clear internal SM state which is otherwise difficult to access\\n\n
        \               (e.g. shift counters). Self-clearing."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM_ENABLE
      bit_offset: 0
      bit_width: 4
      description: Enable state machine
      read_allowed: true
      write_allowed: true
  - !Register
    name: FSTAT
    addr: 0x50200004
    size_bits: 32
    description: FIFO status register
    reset_value: 0xf000f00
    fields:
    - !Field
      name: TXEMPTY
      bit_offset: 24
      bit_width: 4
      description: State machine TX FIFO is empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFULL
      bit_offset: 16
      bit_width: 4
      description: State machine TX FIFO is full
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXEMPTY
      bit_offset: 8
      bit_width: 4
      description: State machine RX FIFO is empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 0
      bit_width: 4
      description: State machine RX FIFO is full
      read_allowed: true
      write_allowed: false
  - !Register
    name: FDEBUG
    addr: 0x50200008
    size_bits: 32
    description: FIFO debug register
    fields:
    - !Field
      name: TXSTALL
      bit_offset: 24
      bit_width: 4
      description: State machine has stalled on empty TX FIFO. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXOVER
      bit_offset: 16
      bit_width: 4
      description: TX FIFO overflow has occurred. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXUNDER
      bit_offset: 8
      bit_width: 4
      description: RX FIFO underflow has occurred. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXSTALL
      bit_offset: 0
      bit_width: 4
      description: State machine has stalled on full RX FIFO. Write 1 to clear.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FLEVEL
    addr: 0x5020000c
    size_bits: 32
    description: FIFO levels
    fields:
    - !Field
      name: RX3
      bit_offset: 28
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX3
      bit_offset: 24
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX2
      bit_offset: 20
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX2
      bit_offset: 16
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX1
      bit_offset: 12
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX1
      bit_offset: 8
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX0
      bit_offset: 4
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX0
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: false
  - !Register
    name: TXF0
    addr: 0x50200010
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF1
    addr: 0x50200014
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF2
    addr: 0x50200018
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF3
    addr: 0x5020001c
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: RXF0
    addr: 0x50200020
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF1
    addr: 0x50200024
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF2
    addr: 0x50200028
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF3
    addr: 0x5020002c
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: IRQ
    addr: 0x50200030
    size_bits: 32
    description: Interrupt request register. Write 1 to clear
    fields:
    - !Field
      name: IRQ
      bit_offset: 0
      bit_width: 8
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ_FORCE
    addr: 0x50200034
    size_bits: 32
    description: "Writing a 1 to each of these bits will forcibly assert the corresponding
      IRQ.\\n\n            Note this is different to the INTF register: writing here
      affects PIO internal\\n\n            state. INTF just asserts the processor-facing
      IRQ signal for testing ISRs,\\n\n            and is not visible to the state
      machines."
    fields:
    - !Field
      name: IRQ_FORCE
      bit_offset: 0
      bit_width: 8
      read_allowed: false
      write_allowed: true
  - !Register
    name: INPUT_SYNC_BYPASS
    addr: 0x50200038
    size_bits: 32
    description: "There is a 2-flipflop synchronizer on each GPIO input, which protects\\n\n
      \           PIO logic from metastabilities. This increases input delay, and
      for fast\\n\n            synchronous IO (e.g. SPI) these synchronizers may need
      to be bypassed.\\n\n            Each bit in this register corresponds to one
      GPIO.\\n\n            0 -> input is synchronized (default)\\n\n            1
      -> synchronizer is bypassed\\n\n            If in doubt, leave this register
      as all zeroes."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DBG_PADOUT
    addr: 0x5020003c
    size_bits: 32
    description: Read to sample the pad output values PIO is currently driving to
      the GPIOs.
    read_allowed: true
    write_allowed: false
  - !Register
    name: DBG_PADOE
    addr: 0x50200040
    size_bits: 32
    description: Read to sample the pad output enables (direction) PIO is currently
      driving to the GPIOs.
    read_allowed: true
    write_allowed: false
  - !Register
    name: DBG_CFGINFO
    addr: 0x50200044
    size_bits: 32
    description: "The PIO hardware has some free parameters that may vary between
      chip products.\\n\n            These should be provided in the chip datasheet,
      but are also exposed here."
    fields:
    - !Field
      name: IMEM_SIZE
      bit_offset: 16
      bit_width: 6
      description: The size of the instruction memory, measured in units of one instruction
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM_COUNT
      bit_offset: 8
      bit_width: 4
      description: The number of state machines this PIO instance is equipped with.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIFO_DEPTH
      bit_offset: 0
      bit_width: 6
      description: "The depth of the state machine TX/RX FIFOs, measured in words.\\n\n
        \               Joining fifos via SHIFTCTRL_FJOIN gives one FIFO with double\\n\n
        \               this depth."
      read_allowed: true
      write_allowed: false
  - !Register
    name: INSTR_MEM0
    addr: 0x50200048
    size_bits: 32
    description: Write-only access to instruction memory location 0
    fields:
    - !Field
      name: INSTR_MEM0
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM1
    addr: 0x5020004c
    size_bits: 32
    description: Write-only access to instruction memory location 1
    fields:
    - !Field
      name: INSTR_MEM1
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM2
    addr: 0x50200050
    size_bits: 32
    description: Write-only access to instruction memory location 2
    fields:
    - !Field
      name: INSTR_MEM2
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM3
    addr: 0x50200054
    size_bits: 32
    description: Write-only access to instruction memory location 3
    fields:
    - !Field
      name: INSTR_MEM3
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM4
    addr: 0x50200058
    size_bits: 32
    description: Write-only access to instruction memory location 4
    fields:
    - !Field
      name: INSTR_MEM4
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM5
    addr: 0x5020005c
    size_bits: 32
    description: Write-only access to instruction memory location 5
    fields:
    - !Field
      name: INSTR_MEM5
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM6
    addr: 0x50200060
    size_bits: 32
    description: Write-only access to instruction memory location 6
    fields:
    - !Field
      name: INSTR_MEM6
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM7
    addr: 0x50200064
    size_bits: 32
    description: Write-only access to instruction memory location 7
    fields:
    - !Field
      name: INSTR_MEM7
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM8
    addr: 0x50200068
    size_bits: 32
    description: Write-only access to instruction memory location 8
    fields:
    - !Field
      name: INSTR_MEM8
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM9
    addr: 0x5020006c
    size_bits: 32
    description: Write-only access to instruction memory location 9
    fields:
    - !Field
      name: INSTR_MEM9
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM10
    addr: 0x50200070
    size_bits: 32
    description: Write-only access to instruction memory location 10
    fields:
    - !Field
      name: INSTR_MEM10
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM11
    addr: 0x50200074
    size_bits: 32
    description: Write-only access to instruction memory location 11
    fields:
    - !Field
      name: INSTR_MEM11
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM12
    addr: 0x50200078
    size_bits: 32
    description: Write-only access to instruction memory location 12
    fields:
    - !Field
      name: INSTR_MEM12
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM13
    addr: 0x5020007c
    size_bits: 32
    description: Write-only access to instruction memory location 13
    fields:
    - !Field
      name: INSTR_MEM13
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM14
    addr: 0x50200080
    size_bits: 32
    description: Write-only access to instruction memory location 14
    fields:
    - !Field
      name: INSTR_MEM14
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM15
    addr: 0x50200084
    size_bits: 32
    description: Write-only access to instruction memory location 15
    fields:
    - !Field
      name: INSTR_MEM15
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM16
    addr: 0x50200088
    size_bits: 32
    description: Write-only access to instruction memory location 16
    fields:
    - !Field
      name: INSTR_MEM16
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM17
    addr: 0x5020008c
    size_bits: 32
    description: Write-only access to instruction memory location 17
    fields:
    - !Field
      name: INSTR_MEM17
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM18
    addr: 0x50200090
    size_bits: 32
    description: Write-only access to instruction memory location 18
    fields:
    - !Field
      name: INSTR_MEM18
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM19
    addr: 0x50200094
    size_bits: 32
    description: Write-only access to instruction memory location 19
    fields:
    - !Field
      name: INSTR_MEM19
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM20
    addr: 0x50200098
    size_bits: 32
    description: Write-only access to instruction memory location 20
    fields:
    - !Field
      name: INSTR_MEM20
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM21
    addr: 0x5020009c
    size_bits: 32
    description: Write-only access to instruction memory location 21
    fields:
    - !Field
      name: INSTR_MEM21
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM22
    addr: 0x502000a0
    size_bits: 32
    description: Write-only access to instruction memory location 22
    fields:
    - !Field
      name: INSTR_MEM22
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM23
    addr: 0x502000a4
    size_bits: 32
    description: Write-only access to instruction memory location 23
    fields:
    - !Field
      name: INSTR_MEM23
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM24
    addr: 0x502000a8
    size_bits: 32
    description: Write-only access to instruction memory location 24
    fields:
    - !Field
      name: INSTR_MEM24
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM25
    addr: 0x502000ac
    size_bits: 32
    description: Write-only access to instruction memory location 25
    fields:
    - !Field
      name: INSTR_MEM25
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM26
    addr: 0x502000b0
    size_bits: 32
    description: Write-only access to instruction memory location 26
    fields:
    - !Field
      name: INSTR_MEM26
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM27
    addr: 0x502000b4
    size_bits: 32
    description: Write-only access to instruction memory location 27
    fields:
    - !Field
      name: INSTR_MEM27
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM28
    addr: 0x502000b8
    size_bits: 32
    description: Write-only access to instruction memory location 28
    fields:
    - !Field
      name: INSTR_MEM28
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM29
    addr: 0x502000bc
    size_bits: 32
    description: Write-only access to instruction memory location 29
    fields:
    - !Field
      name: INSTR_MEM29
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM30
    addr: 0x502000c0
    size_bits: 32
    description: Write-only access to instruction memory location 30
    fields:
    - !Field
      name: INSTR_MEM30
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM31
    addr: 0x502000c4
    size_bits: 32
    description: Write-only access to instruction memory location 31
    fields:
    - !Field
      name: INSTR_MEM31
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_CLKDIV
    addr: 0x502000c8
    size_bits: 32
    description: "Clock divider register for state machine 0\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_EXECCTRL
    addr: 0x502000cc
    size_bits: 32
    description: Execution/behavioural settings for state machine 0
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_SHIFTCTRL
    addr: 0x502000d0
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      0
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_ADDR
    addr: 0x502000d4
    size_bits: 32
    description: Current instruction address of state machine 0
    fields:
    - !Field
      name: SM0_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM0_INSTR
    addr: 0x502000d8
    size_bits: 32
    description: "Instruction currently being executed by state machine 0\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM0_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_PINCTRL
    addr: 0x502000dc
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_CLKDIV
    addr: 0x502000e0
    size_bits: 32
    description: "Clock divider register for state machine 1\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_EXECCTRL
    addr: 0x502000e4
    size_bits: 32
    description: Execution/behavioural settings for state machine 1
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_SHIFTCTRL
    addr: 0x502000e8
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      1
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_ADDR
    addr: 0x502000ec
    size_bits: 32
    description: Current instruction address of state machine 1
    fields:
    - !Field
      name: SM1_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM1_INSTR
    addr: 0x502000f0
    size_bits: 32
    description: "Instruction currently being executed by state machine 1\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM1_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_PINCTRL
    addr: 0x502000f4
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_CLKDIV
    addr: 0x502000f8
    size_bits: 32
    description: "Clock divider register for state machine 2\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_EXECCTRL
    addr: 0x502000fc
    size_bits: 32
    description: Execution/behavioural settings for state machine 2
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_SHIFTCTRL
    addr: 0x50200100
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      2
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_ADDR
    addr: 0x50200104
    size_bits: 32
    description: Current instruction address of state machine 2
    fields:
    - !Field
      name: SM2_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM2_INSTR
    addr: 0x50200108
    size_bits: 32
    description: "Instruction currently being executed by state machine 2\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM2_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_PINCTRL
    addr: 0x5020010c
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_CLKDIV
    addr: 0x50200110
    size_bits: 32
    description: "Clock divider register for state machine 3\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_EXECCTRL
    addr: 0x50200114
    size_bits: 32
    description: Execution/behavioural settings for state machine 3
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_SHIFTCTRL
    addr: 0x50200118
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      3
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_ADDR
    addr: 0x5020011c
    size_bits: 32
    description: Current instruction address of state machine 3
    fields:
    - !Field
      name: SM3_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM3_INSTR
    addr: 0x50200120
    size_bits: 32
    description: "Instruction currently being executed by state machine 3\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM3_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_PINCTRL
    addr: 0x50200124
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x50200128
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ0_INTE
    addr: 0x5020012c
    size_bits: 32
    description: Interrupt Enable for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ0_INTF
    addr: 0x50200130
    size_bits: 32
    description: Interrupt Force for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ0_INTS
    addr: 0x50200134
    size_bits: 32
    description: Interrupt status after masking & forcing for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ1_INTE
    addr: 0x50200138
    size_bits: 32
    description: Interrupt Enable for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ1_INTF
    addr: 0x5020013c
    size_bits: 32
    description: Interrupt Force for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ1_INTS
    addr: 0x50200140
    size_bits: 32
    description: Interrupt status after masking & forcing for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: PIO1
  description: Programmable IO block
  base_addr: 0x50300000
  size: 0x144
  registers:
  - !Register
    name: CTRL
    addr: 0x50300000
    size_bits: 32
    description: PIO control register
    fields:
    - !Field
      name: CLKDIV_RESTART
      bit_offset: 8
      bit_width: 4
      description: "Force clock dividers to restart their count and clear fractional\\n\n
        \               accumulators. Restart multiple dividers to synchronise them."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM_RESTART
      bit_offset: 4
      bit_width: 4
      description: "Clear internal SM state which is otherwise difficult to access\\n\n
        \               (e.g. shift counters). Self-clearing."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM_ENABLE
      bit_offset: 0
      bit_width: 4
      description: Enable state machine
      read_allowed: true
      write_allowed: true
  - !Register
    name: FSTAT
    addr: 0x50300004
    size_bits: 32
    description: FIFO status register
    reset_value: 0xf000f00
    fields:
    - !Field
      name: TXEMPTY
      bit_offset: 24
      bit_width: 4
      description: State machine TX FIFO is empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXFULL
      bit_offset: 16
      bit_width: 4
      description: State machine TX FIFO is full
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXEMPTY
      bit_offset: 8
      bit_width: 4
      description: State machine RX FIFO is empty
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 0
      bit_width: 4
      description: State machine RX FIFO is full
      read_allowed: true
      write_allowed: false
  - !Register
    name: FDEBUG
    addr: 0x50300008
    size_bits: 32
    description: FIFO debug register
    fields:
    - !Field
      name: TXSTALL
      bit_offset: 24
      bit_width: 4
      description: State machine has stalled on empty TX FIFO. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXOVER
      bit_offset: 16
      bit_width: 4
      description: TX FIFO overflow has occurred. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXUNDER
      bit_offset: 8
      bit_width: 4
      description: RX FIFO underflow has occurred. Write 1 to clear.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXSTALL
      bit_offset: 0
      bit_width: 4
      description: State machine has stalled on full RX FIFO. Write 1 to clear.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FLEVEL
    addr: 0x5030000c
    size_bits: 32
    description: FIFO levels
    fields:
    - !Field
      name: RX3
      bit_offset: 28
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX3
      bit_offset: 24
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX2
      bit_offset: 20
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX2
      bit_offset: 16
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX1
      bit_offset: 12
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX1
      bit_offset: 8
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX0
      bit_offset: 4
      bit_width: 4
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX0
      bit_offset: 0
      bit_width: 4
      read_allowed: true
      write_allowed: false
  - !Register
    name: TXF0
    addr: 0x50300010
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF1
    addr: 0x50300014
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF2
    addr: 0x50300018
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: TXF3
    addr: 0x5030001c
    size_bits: 32
    description: Direct write access to the TX FIFO for this state machine. Each write
      pushes one word to the FIFO.
    read_allowed: false
    write_allowed: true
  - !Register
    name: RXF0
    addr: 0x50300020
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF1
    addr: 0x50300024
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF2
    addr: 0x50300028
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: RXF3
    addr: 0x5030002c
    size_bits: 32
    description: Direct read access to the RX FIFO for this state machine. Each read
      pops one word from the FIFO.
    read_allowed: true
    write_allowed: false
  - !Register
    name: IRQ
    addr: 0x50300030
    size_bits: 32
    description: Interrupt request register. Write 1 to clear
    fields:
    - !Field
      name: IRQ
      bit_offset: 0
      bit_width: 8
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ_FORCE
    addr: 0x50300034
    size_bits: 32
    description: "Writing a 1 to each of these bits will forcibly assert the corresponding
      IRQ.\\n\n            Note this is different to the INTF register: writing here
      affects PIO internal\\n\n            state. INTF just asserts the processor-facing
      IRQ signal for testing ISRs,\\n\n            and is not visible to the state
      machines."
    fields:
    - !Field
      name: IRQ_FORCE
      bit_offset: 0
      bit_width: 8
      read_allowed: false
      write_allowed: true
  - !Register
    name: INPUT_SYNC_BYPASS
    addr: 0x50300038
    size_bits: 32
    description: "There is a 2-flipflop synchronizer on each GPIO input, which protects\\n\n
      \           PIO logic from metastabilities. This increases input delay, and
      for fast\\n\n            synchronous IO (e.g. SPI) these synchronizers may need
      to be bypassed.\\n\n            Each bit in this register corresponds to one
      GPIO.\\n\n            0 -> input is synchronized (default)\\n\n            1
      -> synchronizer is bypassed\\n\n            If in doubt, leave this register
      as all zeroes."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DBG_PADOUT
    addr: 0x5030003c
    size_bits: 32
    description: Read to sample the pad output values PIO is currently driving to
      the GPIOs.
    read_allowed: true
    write_allowed: false
  - !Register
    name: DBG_PADOE
    addr: 0x50300040
    size_bits: 32
    description: Read to sample the pad output enables (direction) PIO is currently
      driving to the GPIOs.
    read_allowed: true
    write_allowed: false
  - !Register
    name: DBG_CFGINFO
    addr: 0x50300044
    size_bits: 32
    description: "The PIO hardware has some free parameters that may vary between
      chip products.\\n\n            These should be provided in the chip datasheet,
      but are also exposed here."
    fields:
    - !Field
      name: IMEM_SIZE
      bit_offset: 16
      bit_width: 6
      description: The size of the instruction memory, measured in units of one instruction
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM_COUNT
      bit_offset: 8
      bit_width: 4
      description: The number of state machines this PIO instance is equipped with.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIFO_DEPTH
      bit_offset: 0
      bit_width: 6
      description: "The depth of the state machine TX/RX FIFOs, measured in words.\\n\n
        \               Joining fifos via SHIFTCTRL_FJOIN gives one FIFO with double\\n\n
        \               this depth."
      read_allowed: true
      write_allowed: false
  - !Register
    name: INSTR_MEM0
    addr: 0x50300048
    size_bits: 32
    description: Write-only access to instruction memory location 0
    fields:
    - !Field
      name: INSTR_MEM0
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM1
    addr: 0x5030004c
    size_bits: 32
    description: Write-only access to instruction memory location 1
    fields:
    - !Field
      name: INSTR_MEM1
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM2
    addr: 0x50300050
    size_bits: 32
    description: Write-only access to instruction memory location 2
    fields:
    - !Field
      name: INSTR_MEM2
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM3
    addr: 0x50300054
    size_bits: 32
    description: Write-only access to instruction memory location 3
    fields:
    - !Field
      name: INSTR_MEM3
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM4
    addr: 0x50300058
    size_bits: 32
    description: Write-only access to instruction memory location 4
    fields:
    - !Field
      name: INSTR_MEM4
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM5
    addr: 0x5030005c
    size_bits: 32
    description: Write-only access to instruction memory location 5
    fields:
    - !Field
      name: INSTR_MEM5
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM6
    addr: 0x50300060
    size_bits: 32
    description: Write-only access to instruction memory location 6
    fields:
    - !Field
      name: INSTR_MEM6
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM7
    addr: 0x50300064
    size_bits: 32
    description: Write-only access to instruction memory location 7
    fields:
    - !Field
      name: INSTR_MEM7
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM8
    addr: 0x50300068
    size_bits: 32
    description: Write-only access to instruction memory location 8
    fields:
    - !Field
      name: INSTR_MEM8
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM9
    addr: 0x5030006c
    size_bits: 32
    description: Write-only access to instruction memory location 9
    fields:
    - !Field
      name: INSTR_MEM9
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM10
    addr: 0x50300070
    size_bits: 32
    description: Write-only access to instruction memory location 10
    fields:
    - !Field
      name: INSTR_MEM10
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM11
    addr: 0x50300074
    size_bits: 32
    description: Write-only access to instruction memory location 11
    fields:
    - !Field
      name: INSTR_MEM11
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM12
    addr: 0x50300078
    size_bits: 32
    description: Write-only access to instruction memory location 12
    fields:
    - !Field
      name: INSTR_MEM12
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM13
    addr: 0x5030007c
    size_bits: 32
    description: Write-only access to instruction memory location 13
    fields:
    - !Field
      name: INSTR_MEM13
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM14
    addr: 0x50300080
    size_bits: 32
    description: Write-only access to instruction memory location 14
    fields:
    - !Field
      name: INSTR_MEM14
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM15
    addr: 0x50300084
    size_bits: 32
    description: Write-only access to instruction memory location 15
    fields:
    - !Field
      name: INSTR_MEM15
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM16
    addr: 0x50300088
    size_bits: 32
    description: Write-only access to instruction memory location 16
    fields:
    - !Field
      name: INSTR_MEM16
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM17
    addr: 0x5030008c
    size_bits: 32
    description: Write-only access to instruction memory location 17
    fields:
    - !Field
      name: INSTR_MEM17
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM18
    addr: 0x50300090
    size_bits: 32
    description: Write-only access to instruction memory location 18
    fields:
    - !Field
      name: INSTR_MEM18
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM19
    addr: 0x50300094
    size_bits: 32
    description: Write-only access to instruction memory location 19
    fields:
    - !Field
      name: INSTR_MEM19
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM20
    addr: 0x50300098
    size_bits: 32
    description: Write-only access to instruction memory location 20
    fields:
    - !Field
      name: INSTR_MEM20
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM21
    addr: 0x5030009c
    size_bits: 32
    description: Write-only access to instruction memory location 21
    fields:
    - !Field
      name: INSTR_MEM21
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM22
    addr: 0x503000a0
    size_bits: 32
    description: Write-only access to instruction memory location 22
    fields:
    - !Field
      name: INSTR_MEM22
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM23
    addr: 0x503000a4
    size_bits: 32
    description: Write-only access to instruction memory location 23
    fields:
    - !Field
      name: INSTR_MEM23
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM24
    addr: 0x503000a8
    size_bits: 32
    description: Write-only access to instruction memory location 24
    fields:
    - !Field
      name: INSTR_MEM24
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM25
    addr: 0x503000ac
    size_bits: 32
    description: Write-only access to instruction memory location 25
    fields:
    - !Field
      name: INSTR_MEM25
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM26
    addr: 0x503000b0
    size_bits: 32
    description: Write-only access to instruction memory location 26
    fields:
    - !Field
      name: INSTR_MEM26
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM27
    addr: 0x503000b4
    size_bits: 32
    description: Write-only access to instruction memory location 27
    fields:
    - !Field
      name: INSTR_MEM27
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM28
    addr: 0x503000b8
    size_bits: 32
    description: Write-only access to instruction memory location 28
    fields:
    - !Field
      name: INSTR_MEM28
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM29
    addr: 0x503000bc
    size_bits: 32
    description: Write-only access to instruction memory location 29
    fields:
    - !Field
      name: INSTR_MEM29
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM30
    addr: 0x503000c0
    size_bits: 32
    description: Write-only access to instruction memory location 30
    fields:
    - !Field
      name: INSTR_MEM30
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: INSTR_MEM31
    addr: 0x503000c4
    size_bits: 32
    description: Write-only access to instruction memory location 31
    fields:
    - !Field
      name: INSTR_MEM31
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_CLKDIV
    addr: 0x503000c8
    size_bits: 32
    description: "Clock divider register for state machine 0\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_EXECCTRL
    addr: 0x503000cc
    size_bits: 32
    description: Execution/behavioural settings for state machine 0
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_SHIFTCTRL
    addr: 0x503000d0
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      0
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_ADDR
    addr: 0x503000d4
    size_bits: 32
    description: Current instruction address of state machine 0
    fields:
    - !Field
      name: SM0_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM0_INSTR
    addr: 0x503000d8
    size_bits: 32
    description: "Instruction currently being executed by state machine 0\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM0_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM0_PINCTRL
    addr: 0x503000dc
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_CLKDIV
    addr: 0x503000e0
    size_bits: 32
    description: "Clock divider register for state machine 1\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_EXECCTRL
    addr: 0x503000e4
    size_bits: 32
    description: Execution/behavioural settings for state machine 1
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_SHIFTCTRL
    addr: 0x503000e8
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      1
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_ADDR
    addr: 0x503000ec
    size_bits: 32
    description: Current instruction address of state machine 1
    fields:
    - !Field
      name: SM1_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM1_INSTR
    addr: 0x503000f0
    size_bits: 32
    description: "Instruction currently being executed by state machine 1\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM1_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM1_PINCTRL
    addr: 0x503000f4
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_CLKDIV
    addr: 0x503000f8
    size_bits: 32
    description: "Clock divider register for state machine 2\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_EXECCTRL
    addr: 0x503000fc
    size_bits: 32
    description: Execution/behavioural settings for state machine 2
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_SHIFTCTRL
    addr: 0x50300100
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      2
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_ADDR
    addr: 0x50300104
    size_bits: 32
    description: Current instruction address of state machine 2
    fields:
    - !Field
      name: SM2_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM2_INSTR
    addr: 0x50300108
    size_bits: 32
    description: "Instruction currently being executed by state machine 2\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM2_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM2_PINCTRL
    addr: 0x5030010c
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_CLKDIV
    addr: 0x50300110
    size_bits: 32
    description: "Clock divider register for state machine 3\\n\n            Frequency
      = clock freq / (CLKDIV_INT + CLKDIV_FRAC / 256)"
    reset_value: 0x10000
    fields:
    - !Field
      name: INT
      bit_offset: 16
      bit_width: 16
      description: "Effective frequency is sysclk/int.\\n\n                Value of
        0 is interpreted as max possible value"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAC
      bit_offset: 8
      bit_width: 8
      description: Fractional part of clock divider
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_EXECCTRL
    addr: 0x50300114
    size_bits: 32
    description: Execution/behavioural settings for state machine 3
    reset_value: 0x1f000
    fields:
    - !Field
      name: EXEC_STALLED
      bit_offset: 31
      bit_width: 1
      description: "An instruction written to SMx_INSTR is stalled, and latched by
        the\\n\n                state machine. Will clear once the instruction completes."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIDE_EN
      bit_offset: 30
      bit_width: 1
      description: "If 1, the delay MSB is used as side-set enable, rather than a\\n\n
        \               side-set data bit. This allows instructions to perform side-set
        optionally,\\n\n                rather than on every instruction."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDE_PINDIR
      bit_offset: 29
      bit_width: 1
      description: Side-set data is asserted to pin OEs instead of pin values
      read_allowed: true
      write_allowed: true
    - !Field
      name: JMP_PIN
      bit_offset: 24
      bit_width: 5
      description: The GPIO number to use as condition for JMP PIN. Unaffected by
        input mapping.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_EN_SEL
      bit_offset: 19
      bit_width: 5
      description: Which data bit to use for inline OUT enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: INLINE_OUT_EN
      bit_offset: 18
      bit_width: 1
      description: "If 1, use a bit of OUT data as an auxiliary write enable\\n\n
        \               When used in conjunction with OUT_STICKY, writes with an enable
        of 0 will\\n\n                deassert the latest pin write. This can create
        useful masking/override behaviour\\n\n                due to the priority
        ordering of state machine pin writes (SM0 < SM1 < ...)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_STICKY
      bit_offset: 17
      bit_width: 1
      description: Continuously assert the most recent OUT/SET to the pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_TOP
      bit_offset: 12
      bit_width: 5
      description: "After reaching this address, execution is wrapped to wrap_bottom.\\n\n
        \               If the instruction is a jump, and the jump condition is true,
        the jump takes priority."
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRAP_BOTTOM
      bit_offset: 7
      bit_width: 5
      description: After reaching wrap_top, execution is wrapped to this address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATUS_SEL
      bit_offset: 4
      bit_width: 1
      description: Comparison used for the MOV x, STATUS instruction.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TXLEVEL
        1: RXLEVEL
    - !Field
      name: STATUS_N
      bit_offset: 0
      bit_width: 4
      description: Comparison level for the MOV x, STATUS instruction
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_SHIFTCTRL
    addr: 0x50300118
    size_bits: 32
    description: Control behaviour of the input/output shift registers for state machine
      3
    reset_value: 0xc0000
    fields:
    - !Field
      name: FJOIN_RX
      bit_offset: 31
      bit_width: 1
      description: "When 1, RX FIFO steals the TX FIFO's storage, and becomes twice
        as deep.\\n\n                TX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FJOIN_TX
      bit_offset: 30
      bit_width: 1
      description: "When 1, TX FIFO steals the RX FIFO's storage, and becomes twice
        as deep.\\n\n                RX FIFO is disabled as a result (always reads
        as both full and empty).\\n\n                FIFOs are flushed when this bit
        is changed."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PULL_THRESH
      bit_offset: 25
      bit_width: 5
      description: "Number of bits shifted out of TXSR before autopull or conditional
        pull.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PUSH_THRESH
      bit_offset: 20
      bit_width: 5
      description: "Number of bits shifted into RXSR before autopush or conditional
        push.\\n\n                Write 0 for value of 32."
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_SHIFTDIR
      bit_offset: 19
      bit_width: 1
      description: 1 = shift out of output shift register to right. 0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_SHIFTDIR
      bit_offset: 18
      bit_width: 1
      description: 1 = shift input shift register to right (data enters from left).
        0 = to left.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPULL
      bit_offset: 17
      bit_width: 1
      description: Pull automatically when the output shift register is emptied
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOPUSH
      bit_offset: 16
      bit_width: 1
      description: Push automatically when the input shift register is filled
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_ADDR
    addr: 0x5030011c
    size_bits: 32
    description: Current instruction address of state machine 3
    fields:
    - !Field
      name: SM3_ADDR
      bit_offset: 0
      bit_width: 5
      read_allowed: true
      write_allowed: false
  - !Register
    name: SM3_INSTR
    addr: 0x50300120
    size_bits: 32
    description: "Instruction currently being executed by state machine 3\\n\n            Write
      to execute an instruction immediately (including jumps) and then resume execution."
    fields:
    - !Field
      name: SM3_INSTR
      bit_offset: 0
      bit_width: 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: SM3_PINCTRL
    addr: 0x50300124
    size_bits: 32
    description: State machine pin control
    reset_value: 0x14000000
    fields:
    - !Field
      name: SIDESET_COUNT
      bit_offset: 29
      bit_width: 3
      description: The number of delay bits co-opted for side-set. Inclusive of the
        enable bit, if present.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_COUNT
      bit_offset: 26
      bit_width: 3
      description: The number of pins asserted by a SET. Max of 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_COUNT
      bit_offset: 20
      bit_width: 6
      description: The number of pins asserted by an OUT. Value of 0 -> 32 pins
      read_allowed: true
      write_allowed: true
    - !Field
      name: IN_BASE
      bit_offset: 15
      bit_width: 5
      description: The virtual pin corresponding to IN bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIDESET_BASE
      bit_offset: 10
      bit_width: 5
      description: The virtual pin corresponding to delay field bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: SET_BASE
      bit_offset: 5
      bit_width: 5
      description: The virtual pin corresponding to SET bit 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: OUT_BASE
      bit_offset: 0
      bit_width: 5
      description: The virtual pin corresponding to OUT bit 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTR
    addr: 0x50300128
    size_bits: 32
    description: Raw Interrupts
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ0_INTE
    addr: 0x5030012c
    size_bits: 32
    description: Interrupt Enable for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ0_INTF
    addr: 0x50300130
    size_bits: 32
    description: Interrupt Force for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ0_INTS
    addr: 0x50300134
    size_bits: 32
    description: Interrupt status after masking & forcing for irq0
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
  - !Register
    name: IRQ1_INTE
    addr: 0x50300138
    size_bits: 32
    description: Interrupt Enable for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ1_INTF
    addr: 0x5030013c
    size_bits: 32
    description: Interrupt Force for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: true
  - !Register
    name: IRQ1_INTS
    addr: 0x50300140
    size_bits: 32
    description: Interrupt status after masking & forcing for irq1
    fields:
    - !Field
      name: SM3
      bit_offset: 11
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2
      bit_offset: 10
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1
      bit_offset: 9
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0
      bit_offset: 8
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_TXNFULL
      bit_offset: 7
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_TXNFULL
      bit_offset: 6
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_TXNFULL
      bit_offset: 5
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_TXNFULL
      bit_offset: 4
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM3_RXNEMPTY
      bit_offset: 3
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM2_RXNEMPTY
      bit_offset: 2
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM1_RXNEMPTY
      bit_offset: 1
      bit_width: 1
      read_allowed: true
      write_allowed: false
    - !Field
      name: SM0_RXNEMPTY
      bit_offset: 0
      bit_width: 1
      read_allowed: true
      write_allowed: false
- !Module
  name: SIO
  description: "Single-cycle IO block\\n\n        Provides core-local and inter-core
    hardware for the two processors, with single-cycle access."
  base_addr: 0xd0000000
  size: 0x180
  registers:
  - !Register
    name: CPUID
    addr: 0xd0000000
    size_bits: 32
    description: "Processor core identifier\\n\n            Value is 0 when read from
      processor core 0, and 1 when read from processor core 1."
    read_allowed: true
    write_allowed: false
  - !Register
    name: GPIO_IN
    addr: 0xd0000004
    size_bits: 32
    description: Input value for GPIO pins
    fields:
    - !Field
      name: GPIO_IN
      bit_offset: 0
      bit_width: 30
      description: Input value for GPIO0...29
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_HI_IN
    addr: 0xd0000008
    size_bits: 32
    description: Input value for QSPI pins
    fields:
    - !Field
      name: GPIO_HI_IN
      bit_offset: 0
      bit_width: 6
      description: 'Input value on QSPI IO in order 0..5: SCLK, SSn, SD0, SD1, SD2,
        SD3'
      read_allowed: true
      write_allowed: false
  - !Register
    name: GPIO_OUT
    addr: 0xd0000010
    size_bits: 32
    description: GPIO output value
    fields:
    - !Field
      name: GPIO_OUT
      bit_offset: 0
      bit_width: 30
      description: "Set output level (1/0 -> high/low) for GPIO0...29.\\n\n                Reading
        back gives the last value written, NOT the input value from the pins.\\n\n
        \               If core 0 and core 1 both write to GPIO_OUT simultaneously
        (or to a SET/CLR/XOR alias),\\n\n                the result is as though the
        write from core 0 took place first,\\n\n                and the write from
        core 1 was then applied to that intermediate result."
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OUT_SET
    addr: 0xd0000014
    size_bits: 32
    description: GPIO output value set
    fields:
    - !Field
      name: GPIO_OUT_SET
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bit-set on GPIO_OUT, i.e. `GPIO_OUT |= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OUT_CLR
    addr: 0xd0000018
    size_bits: 32
    description: GPIO output value clear
    fields:
    - !Field
      name: GPIO_OUT_CLR
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bit-clear on GPIO_OUT, i.e. `GPIO_OUT &= ~wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OUT_XOR
    addr: 0xd000001c
    size_bits: 32
    description: GPIO output value XOR
    fields:
    - !Field
      name: GPIO_OUT_XOR
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bitwise XOR on GPIO_OUT, i.e. `GPIO_OUT ^= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OE
    addr: 0xd0000020
    size_bits: 32
    description: GPIO output enable
    fields:
    - !Field
      name: GPIO_OE
      bit_offset: 0
      bit_width: 30
      description: "Set output enable (1/0 -> output/input) for GPIO0...29.\\n\n                Reading
        back gives the last value written.\\n\n                If core 0 and core
        1 both write to GPIO_OE simultaneously (or to a SET/CLR/XOR alias),\\n\n                the
        result is as though the write from core 0 took place first,\\n\n                and
        the write from core 1 was then applied to that intermediate result."
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OE_SET
    addr: 0xd0000024
    size_bits: 32
    description: GPIO output enable set
    fields:
    - !Field
      name: GPIO_OE_SET
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bit-set on GPIO_OE, i.e. `GPIO_OE |= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OE_CLR
    addr: 0xd0000028
    size_bits: 32
    description: GPIO output enable clear
    fields:
    - !Field
      name: GPIO_OE_CLR
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bit-clear on GPIO_OE, i.e. `GPIO_OE &= ~wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_OE_XOR
    addr: 0xd000002c
    size_bits: 32
    description: GPIO output enable XOR
    fields:
    - !Field
      name: GPIO_OE_XOR
      bit_offset: 0
      bit_width: 30
      description: Perform an atomic bitwise XOR on GPIO_OE, i.e. `GPIO_OE ^= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OUT
    addr: 0xd0000030
    size_bits: 32
    description: QSPI output value
    fields:
    - !Field
      name: GPIO_HI_OUT
      bit_offset: 0
      bit_width: 6
      description: "Set output level (1/0 -> high/low) for QSPI IO0...5.\\n\n                Reading
        back gives the last value written, NOT the input value from the pins.\\n\n
        \               If core 0 and core 1 both write to GPIO_HI_OUT simultaneously
        (or to a SET/CLR/XOR alias),\\n\n                the result is as though the
        write from core 0 took place first,\\n\n                and the write from
        core 1 was then applied to that intermediate result."
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OUT_SET
    addr: 0xd0000034
    size_bits: 32
    description: QSPI output value set
    fields:
    - !Field
      name: GPIO_HI_OUT_SET
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bit-set on GPIO_HI_OUT, i.e. `GPIO_HI_OUT |=
        wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OUT_CLR
    addr: 0xd0000038
    size_bits: 32
    description: QSPI output value clear
    fields:
    - !Field
      name: GPIO_HI_OUT_CLR
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bit-clear on GPIO_HI_OUT, i.e. `GPIO_HI_OUT &=
        ~wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OUT_XOR
    addr: 0xd000003c
    size_bits: 32
    description: QSPI output value XOR
    fields:
    - !Field
      name: GPIO_HI_OUT_XOR
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bitwise XOR on GPIO_HI_OUT, i.e. `GPIO_HI_OUT
        ^= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OE
    addr: 0xd0000040
    size_bits: 32
    description: QSPI output enable
    fields:
    - !Field
      name: GPIO_HI_OE
      bit_offset: 0
      bit_width: 6
      description: "Set output enable (1/0 -> output/input) for QSPI IO0...5.\\n\n
        \               Reading back gives the last value written.\\n\n                If
        core 0 and core 1 both write to GPIO_HI_OE simultaneously (or to a SET/CLR/XOR
        alias),\\n\n                the result is as though the write from core 0
        took place first,\\n\n                and the write from core 1 was then applied
        to that intermediate result."
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OE_SET
    addr: 0xd0000044
    size_bits: 32
    description: QSPI output enable set
    fields:
    - !Field
      name: GPIO_HI_OE_SET
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bit-set on GPIO_HI_OE, i.e. `GPIO_HI_OE |= wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OE_CLR
    addr: 0xd0000048
    size_bits: 32
    description: QSPI output enable clear
    fields:
    - !Field
      name: GPIO_HI_OE_CLR
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bit-clear on GPIO_HI_OE, i.e. `GPIO_HI_OE &=
        ~wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: GPIO_HI_OE_XOR
    addr: 0xd000004c
    size_bits: 32
    description: QSPI output enable XOR
    fields:
    - !Field
      name: GPIO_HI_OE_XOR
      bit_offset: 0
      bit_width: 6
      description: Perform an atomic bitwise XOR on GPIO_HI_OE, i.e. `GPIO_HI_OE ^=
        wdata`
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFO_ST
    addr: 0xd0000050
    size_bits: 32
    description: "Status register for inter-core FIFOs (mailboxes).\\n\n            There
      is one FIFO in the core 0 -> core 1 direction, and one core 1 -> core 0. Both
      are 32 bits wide and 8 words deep.\\n\n            Core 0 can see the read side
      of the 1->0 FIFO (RX), and the write side of 0->1 FIFO (TX).\\n\n            Core
      1 can see the read side of the 0->1 FIFO (RX), and the write side of 1->0 FIFO
      (TX).\\n\n            The SIO IRQ for each core is the logical OR of the VLD,
      WOF and ROE fields of its FIFO_ST register."
    reset_value: 0x2
    fields:
    - !Field
      name: ROE
      bit_offset: 3
      bit_width: 1
      description: Sticky flag indicating the RX FIFO was read when empty. This read
        was ignored by the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: WOF
      bit_offset: 2
      bit_width: 1
      description: Sticky flag indicating the TX FIFO was written when full. This
        write was ignored by the FIFO.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RDY
      bit_offset: 1
      bit_width: 1
      description: Value is 1 if this core's TX FIFO is not full (i.e. if FIFO_WR
        is ready for more data)
      read_allowed: true
      write_allowed: false
    - !Field
      name: VLD
      bit_offset: 0
      bit_width: 1
      description: Value is 1 if this core's RX FIFO is not empty (i.e. if FIFO_RD
        is valid)
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFO_WR
    addr: 0xd0000054
    size_bits: 32
    description: Write access to this core's TX FIFO
    read_allowed: false
    write_allowed: true
  - !Register
    name: FIFO_RD
    addr: 0xd0000058
    size_bits: 32
    description: Read access to this core's RX FIFO
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK_ST
    addr: 0xd000005c
    size_bits: 32
    description: "Spinlock state\\n\n            A bitmap containing the state of
      all 32 spinlocks (1=locked).\\n\n            Mainly intended for debugging."
    read_allowed: true
    write_allowed: false
  - !Register
    name: DIV_UDIVIDEND
    addr: 0xd0000060
    size_bits: 32
    description: "Divider unsigned dividend\\n\n            Write to the DIVIDEND
      operand of the divider, i.e. the p in `p / q`.\\n\n            Any operand write
      starts a new calculation. The results appear in QUOTIENT, REMAINDER.\\n\n            UDIVIDEND/SDIVIDEND
      are aliases of the same internal register. The U alias starts an\\n\n            unsigned
      calculation, and the S alias starts a signed calculation."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_UDIVISOR
    addr: 0xd0000064
    size_bits: 32
    description: "Divider unsigned divisor\\n\n            Write to the DIVISOR operand
      of the divider, i.e. the q in `p / q`.\\n\n            Any operand write starts
      a new calculation. The results appear in QUOTIENT, REMAINDER.\\n\n            UDIVIDEND/SDIVIDEND
      are aliases of the same internal register. The U alias starts an\\n\n            unsigned
      calculation, and the S alias starts a signed calculation."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_SDIVIDEND
    addr: 0xd0000068
    size_bits: 32
    description: "Divider signed dividend\\n\n            The same as UDIVIDEND, but
      starts a signed calculation, rather than unsigned."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_SDIVISOR
    addr: 0xd000006c
    size_bits: 32
    description: "Divider signed divisor\\n\n            The same as UDIVISOR, but
      starts a signed calculation, rather than unsigned."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_QUOTIENT
    addr: 0xd0000070
    size_bits: 32
    description: "Divider result quotient\\n\n            The result of `DIVIDEND
      / DIVISOR` (division). Contents undefined while CSR_READY is low.\\n\n            For
      signed calculations, QUOTIENT is negative when the signs of DIVIDEND and DIVISOR
      differ.\\n\n            This register can be written to directly, for context
      save/restore purposes. This halts any\\n\n            in-progress calculation
      and sets the CSR_READY and CSR_DIRTY flags.\\n\n            Reading from QUOTIENT
      clears the CSR_DIRTY flag, so should read results in the order\\n\n            REMAINDER,
      QUOTIENT if CSR_DIRTY is used."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_REMAINDER
    addr: 0xd0000074
    size_bits: 32
    description: "Divider result remainder\\n\n            The result of `DIVIDEND
      % DIVISOR` (modulo). Contents undefined while CSR_READY is low.\\n\n            For
      signed calculations, REMAINDER is negative only when DIVIDEND is negative.\\n\n
      \           This register can be written to directly, for context save/restore
      purposes. This halts any\\n\n            in-progress calculation and sets the
      CSR_READY and CSR_DIRTY flags."
    read_allowed: true
    write_allowed: true
  - !Register
    name: DIV_CSR
    addr: 0xd0000078
    size_bits: 32
    description: Control and status register for divider.
    reset_value: 0x1
    fields:
    - !Field
      name: DIRTY
      bit_offset: 1
      bit_width: 1
      description: "Changes to 1 when any register is written, and back to 0 when
        QUOTIENT is read.\\n\n                Software can use this flag to make save/restore
        more efficient (skip if not DIRTY).\\n\n                If the flag is used
        in this way, it's recommended to either read QUOTIENT only,\\n\n                or
        REMAINDER and then QUOTIENT, to prevent data loss on context switch."
      read_allowed: true
      write_allowed: false
    - !Field
      name: READY
      bit_offset: 0
      bit_width: 1
      description: "Reads as 0 when a calculation is in progress, 1 otherwise.\\n\n
        \               Writing an operand (xDIVIDEND, xDIVISOR) will immediately
        start a new calculation, no\\n\n                matter if one is already in
        progress.\\n\n                Writing to a result register will immediately
        terminate any in-progress calculation\\n\n                and set the READY
        and DIRTY flags."
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTERP0_ACCUM0
    addr: 0xd0000080
    size_bits: 32
    description: Read/write access to accumulator 0
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP0_ACCUM1
    addr: 0xd0000084
    size_bits: 32
    description: Read/write access to accumulator 1
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP0_BASE0
    addr: 0xd0000088
    size_bits: 32
    description: Read/write access to BASE0 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP0_BASE1
    addr: 0xd000008c
    size_bits: 32
    description: Read/write access to BASE1 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP0_BASE2
    addr: 0xd0000090
    size_bits: 32
    description: Read/write access to BASE2 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP0_POP_LANE0
    addr: 0xd0000094
    size_bits: 32
    description: Read LANE0 result, and simultaneously write lane results to both
      accumulators (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_POP_LANE1
    addr: 0xd0000098
    size_bits: 32
    description: Read LANE1 result, and simultaneously write lane results to both
      accumulators (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_POP_FULL
    addr: 0xd000009c
    size_bits: 32
    description: Read FULL result, and simultaneously write lane results to both accumulators
      (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_PEEK_LANE0
    addr: 0xd00000a0
    size_bits: 32
    description: Read LANE0 result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_PEEK_LANE1
    addr: 0xd00000a4
    size_bits: 32
    description: Read LANE1 result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_PEEK_FULL
    addr: 0xd00000a8
    size_bits: 32
    description: Read FULL result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP0_CTRL_LANE0
    addr: 0xd00000ac
    size_bits: 32
    description: Control register for lane 0
    fields:
    - !Field
      name: OVERF
      bit_offset: 25
      bit_width: 1
      description: Set if either OVERF0 or OVERF1 is set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERF1
      bit_offset: 24
      bit_width: 1
      description: Indicates if any masked-off MSBs in ACCUM1 are set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERF0
      bit_offset: 23
      bit_width: 1
      description: Indicates if any masked-off MSBs in ACCUM0 are set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BLEND
      bit_offset: 21
      bit_width: 1
      description: "Only present on INTERP0 on each core. If BLEND mode is enabled:\\n\n
        \               - LANE1 result is a linear interpolation between BASE0 and
        BASE1, controlled\\n\n                by the 8 LSBs of lane 1 shift and mask
        value (a fractional number between\\n\n                0 and 255/256ths)\\n\n
        \               - LANE0 result does not have BASE0 added (yields only the
        8 LSBs of lane 1 shift+mask value)\\n\n                - FULL result does
        not have lane 1 shift+mask value added (BASE2 + lane 0 shift+mask)\\n\n                LANE1
        SIGNED flag controls whether the interpolation is signed or unsigned."
      read_allowed: true
      write_allowed: true
    - !Field
      name: FORCE_MSB
      bit_offset: 19
      bit_width: 2
      description: "ORed into bits 29:28 of the lane result presented to the processor
        on the bus.\\n\n                No effect on the internal 32-bit datapath.
        Handy for using a lane to generate sequence\\n\n                of pointers
        into flash or SRAM."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADD_RAW
      bit_offset: 18
      bit_width: 1
      description: If 1, mask + shift is bypassed for LANE0 result. This does not
        affect FULL result.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_RESULT
      bit_offset: 17
      bit_width: 1
      description: If 1, feed the opposite lane's result into this lane's accumulator
        on POP.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_INPUT
      bit_offset: 16
      bit_width: 1
      description: "If 1, feed the opposite lane's accumulator into this lane's shift
        + mask hardware.\\n\n                Takes effect even if ADD_RAW is set (the
        CROSS_INPUT mux is before the shift+mask bypass)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIGNED
      bit_offset: 15
      bit_width: 1
      description: "If SIGNED is set, the shifted and masked accumulator value is
        sign-extended to 32 bits\\n\n                before adding to BASE0, and LANE0
        PEEK/POP appear extended to 32 bits when read by processor."
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_MSB
      bit_offset: 10
      bit_width: 5
      description: "The most-significant bit allowed to pass by the mask (inclusive)\\n\n
        \               Setting MSB < LSB may cause chip to turn inside-out"
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_LSB
      bit_offset: 5
      bit_width: 5
      description: The least-significant bit allowed to pass by the mask (inclusive)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 0
      bit_width: 5
      description: Logical right-shift applied to accumulator before masking
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP0_CTRL_LANE1
    addr: 0xd00000b0
    size_bits: 32
    description: Control register for lane 1
    fields:
    - !Field
      name: FORCE_MSB
      bit_offset: 19
      bit_width: 2
      description: "ORed into bits 29:28 of the lane result presented to the processor
        on the bus.\\n\n                No effect on the internal 32-bit datapath.
        Handy for using a lane to generate sequence\\n\n                of pointers
        into flash or SRAM."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADD_RAW
      bit_offset: 18
      bit_width: 1
      description: If 1, mask + shift is bypassed for LANE1 result. This does not
        affect FULL result.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_RESULT
      bit_offset: 17
      bit_width: 1
      description: If 1, feed the opposite lane's result into this lane's accumulator
        on POP.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_INPUT
      bit_offset: 16
      bit_width: 1
      description: "If 1, feed the opposite lane's accumulator into this lane's shift
        + mask hardware.\\n\n                Takes effect even if ADD_RAW is set (the
        CROSS_INPUT mux is before the shift+mask bypass)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIGNED
      bit_offset: 15
      bit_width: 1
      description: "If SIGNED is set, the shifted and masked accumulator value is
        sign-extended to 32 bits\\n\n                before adding to BASE1, and LANE1
        PEEK/POP appear extended to 32 bits when read by processor."
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_MSB
      bit_offset: 10
      bit_width: 5
      description: "The most-significant bit allowed to pass by the mask (inclusive)\\n\n
        \               Setting MSB < LSB may cause chip to turn inside-out"
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_LSB
      bit_offset: 5
      bit_width: 5
      description: The least-significant bit allowed to pass by the mask (inclusive)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 0
      bit_width: 5
      description: Logical right-shift applied to accumulator before masking
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP0_ACCUM0_ADD
    addr: 0xd00000b4
    size_bits: 32
    description: "Values written here are atomically added to ACCUM0\\n\n            Reading
      yields lane 0's raw shift and mask value (BASE0 not added)."
    fields:
    - !Field
      name: INTERP0_ACCUM0_ADD
      bit_offset: 0
      bit_width: 24
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP0_ACCUM1_ADD
    addr: 0xd00000b8
    size_bits: 32
    description: "Values written here are atomically added to ACCUM1\\n\n            Reading
      yields lane 1's raw shift and mask value (BASE1 not added)."
    fields:
    - !Field
      name: INTERP0_ACCUM1_ADD
      bit_offset: 0
      bit_width: 24
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP0_BASE_1AND0
    addr: 0xd00000bc
    size_bits: 32
    description: "On write, the lower 16 bits go to BASE0, upper bits to BASE1 simultaneously.\\n\n
      \           Each half is sign-extended to 32 bits if that lane's SIGNED flag
      is set."
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_ACCUM0
    addr: 0xd00000c0
    size_bits: 32
    description: Read/write access to accumulator 0
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_ACCUM1
    addr: 0xd00000c4
    size_bits: 32
    description: Read/write access to accumulator 1
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_BASE0
    addr: 0xd00000c8
    size_bits: 32
    description: Read/write access to BASE0 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_BASE1
    addr: 0xd00000cc
    size_bits: 32
    description: Read/write access to BASE1 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_BASE2
    addr: 0xd00000d0
    size_bits: 32
    description: Read/write access to BASE2 register.
    read_allowed: true
    write_allowed: true
  - !Register
    name: INTERP1_POP_LANE0
    addr: 0xd00000d4
    size_bits: 32
    description: Read LANE0 result, and simultaneously write lane results to both
      accumulators (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_POP_LANE1
    addr: 0xd00000d8
    size_bits: 32
    description: Read LANE1 result, and simultaneously write lane results to both
      accumulators (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_POP_FULL
    addr: 0xd00000dc
    size_bits: 32
    description: Read FULL result, and simultaneously write lane results to both accumulators
      (POP).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_PEEK_LANE0
    addr: 0xd00000e0
    size_bits: 32
    description: Read LANE0 result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_PEEK_LANE1
    addr: 0xd00000e4
    size_bits: 32
    description: Read LANE1 result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_PEEK_FULL
    addr: 0xd00000e8
    size_bits: 32
    description: Read FULL result, without altering any internal state (PEEK).
    read_allowed: true
    write_allowed: false
  - !Register
    name: INTERP1_CTRL_LANE0
    addr: 0xd00000ec
    size_bits: 32
    description: Control register for lane 0
    fields:
    - !Field
      name: OVERF
      bit_offset: 25
      bit_width: 1
      description: Set if either OVERF0 or OVERF1 is set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERF1
      bit_offset: 24
      bit_width: 1
      description: Indicates if any masked-off MSBs in ACCUM1 are set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: OVERF0
      bit_offset: 23
      bit_width: 1
      description: Indicates if any masked-off MSBs in ACCUM0 are set.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLAMP
      bit_offset: 22
      bit_width: 1
      description: "Only present on INTERP1 on each core. If CLAMP mode is enabled:\\n\n
        \               - LANE0 result is shifted and masked ACCUM0, clamped by a
        lower bound of\\n\n                BASE0 and an upper bound of BASE1.\\n\n
        \               - Signedness of these comparisons is determined by LANE0_CTRL_SIGNED"
      read_allowed: true
      write_allowed: true
    - !Field
      name: FORCE_MSB
      bit_offset: 19
      bit_width: 2
      description: "ORed into bits 29:28 of the lane result presented to the processor
        on the bus.\\n\n                No effect on the internal 32-bit datapath.
        Handy for using a lane to generate sequence\\n\n                of pointers
        into flash or SRAM."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADD_RAW
      bit_offset: 18
      bit_width: 1
      description: If 1, mask + shift is bypassed for LANE0 result. This does not
        affect FULL result.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_RESULT
      bit_offset: 17
      bit_width: 1
      description: If 1, feed the opposite lane's result into this lane's accumulator
        on POP.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_INPUT
      bit_offset: 16
      bit_width: 1
      description: "If 1, feed the opposite lane's accumulator into this lane's shift
        + mask hardware.\\n\n                Takes effect even if ADD_RAW is set (the
        CROSS_INPUT mux is before the shift+mask bypass)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIGNED
      bit_offset: 15
      bit_width: 1
      description: "If SIGNED is set, the shifted and masked accumulator value is
        sign-extended to 32 bits\\n\n                before adding to BASE0, and LANE0
        PEEK/POP appear extended to 32 bits when read by processor."
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_MSB
      bit_offset: 10
      bit_width: 5
      description: "The most-significant bit allowed to pass by the mask (inclusive)\\n\n
        \               Setting MSB < LSB may cause chip to turn inside-out"
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_LSB
      bit_offset: 5
      bit_width: 5
      description: The least-significant bit allowed to pass by the mask (inclusive)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 0
      bit_width: 5
      description: Logical right-shift applied to accumulator before masking
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP1_CTRL_LANE1
    addr: 0xd00000f0
    size_bits: 32
    description: Control register for lane 1
    fields:
    - !Field
      name: FORCE_MSB
      bit_offset: 19
      bit_width: 2
      description: "ORed into bits 29:28 of the lane result presented to the processor
        on the bus.\\n\n                No effect on the internal 32-bit datapath.
        Handy for using a lane to generate sequence\\n\n                of pointers
        into flash or SRAM."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADD_RAW
      bit_offset: 18
      bit_width: 1
      description: If 1, mask + shift is bypassed for LANE1 result. This does not
        affect FULL result.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_RESULT
      bit_offset: 17
      bit_width: 1
      description: If 1, feed the opposite lane's result into this lane's accumulator
        on POP.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CROSS_INPUT
      bit_offset: 16
      bit_width: 1
      description: "If 1, feed the opposite lane's accumulator into this lane's shift
        + mask hardware.\\n\n                Takes effect even if ADD_RAW is set (the
        CROSS_INPUT mux is before the shift+mask bypass)"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIGNED
      bit_offset: 15
      bit_width: 1
      description: "If SIGNED is set, the shifted and masked accumulator value is
        sign-extended to 32 bits\\n\n                before adding to BASE1, and LANE1
        PEEK/POP appear extended to 32 bits when read by processor."
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_MSB
      bit_offset: 10
      bit_width: 5
      description: "The most-significant bit allowed to pass by the mask (inclusive)\\n\n
        \               Setting MSB < LSB may cause chip to turn inside-out"
      read_allowed: true
      write_allowed: true
    - !Field
      name: MASK_LSB
      bit_offset: 5
      bit_width: 5
      description: The least-significant bit allowed to pass by the mask (inclusive)
      read_allowed: true
      write_allowed: true
    - !Field
      name: SHIFT
      bit_offset: 0
      bit_width: 5
      description: Logical right-shift applied to accumulator before masking
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP1_ACCUM0_ADD
    addr: 0xd00000f4
    size_bits: 32
    description: "Values written here are atomically added to ACCUM0\\n\n            Reading
      yields lane 0's raw shift and mask value (BASE0 not added)."
    fields:
    - !Field
      name: INTERP1_ACCUM0_ADD
      bit_offset: 0
      bit_width: 24
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP1_ACCUM1_ADD
    addr: 0xd00000f8
    size_bits: 32
    description: "Values written here are atomically added to ACCUM1\\n\n            Reading
      yields lane 1's raw shift and mask value (BASE1 not added)."
    fields:
    - !Field
      name: INTERP1_ACCUM1_ADD
      bit_offset: 0
      bit_width: 24
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTERP1_BASE_1AND0
    addr: 0xd00000fc
    size_bits: 32
    description: "On write, the lower 16 bits go to BASE0, upper bits to BASE1 simultaneously.\\n\n
      \           Each half is sign-extended to 32 bits if that lane's SIGNED flag
      is set."
    read_allowed: true
    write_allowed: true
  - !Register
    name: SPINLOCK0
    addr: 0xd0000100
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK1
    addr: 0xd0000104
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK2
    addr: 0xd0000108
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK3
    addr: 0xd000010c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK4
    addr: 0xd0000110
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK5
    addr: 0xd0000114
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK6
    addr: 0xd0000118
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK7
    addr: 0xd000011c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK8
    addr: 0xd0000120
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK9
    addr: 0xd0000124
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK10
    addr: 0xd0000128
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK11
    addr: 0xd000012c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK12
    addr: 0xd0000130
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK13
    addr: 0xd0000134
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK14
    addr: 0xd0000138
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK15
    addr: 0xd000013c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK16
    addr: 0xd0000140
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK17
    addr: 0xd0000144
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK18
    addr: 0xd0000148
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK19
    addr: 0xd000014c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK20
    addr: 0xd0000150
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK21
    addr: 0xd0000154
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK22
    addr: 0xd0000158
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK23
    addr: 0xd000015c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK24
    addr: 0xd0000160
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK25
    addr: 0xd0000164
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK26
    addr: 0xd0000168
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK27
    addr: 0xd000016c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK28
    addr: 0xd0000170
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK29
    addr: 0xd0000174
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK30
    addr: 0xd0000178
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
  - !Register
    name: SPINLOCK31
    addr: 0xd000017c
    size_bits: 32
    description: "Reading from a spinlock address will:\\n\n            - Return 0
      if lock is already locked\\n\n            - Otherwise return nonzero, and simultaneously
      claim the lock\\n\\n\n            Writing (any value) releases the lock.\\n\n
      \           If core 0 and core 1 attempt to claim the same lock simultaneously,
      core 0 wins.\\n\n            The value returned on success is 0x1 << lock number."
    read_allowed: true
    write_allowed: false
- !Module
  name: PPB
  base_addr: 0xe0000000
  size: 0xeda4
  registers:
  - !Register
    name: SYST_CSR
    addr: 0xe000e010
    size_bits: 32
    description: Use the SysTick Control and Status Register to enable the SysTick
      features.
    fields:
    - !Field
      name: COUNTFLAG
      bit_offset: 16
      bit_width: 1
      description: Returns 1 if timer counted to 0 since last time this was read.
        Clears on read by application or debugger.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLKSOURCE
      bit_offset: 2
      bit_width: 1
      description: "SysTick clock source. Always reads as one if SYST_CALIB reports
        NOREF.\\n\n                Selects the SysTick timer clock source:\\n\n                0
        = External reference clock.\\n\n                1 = Processor clock."
      read_allowed: true
      write_allowed: true
    - !Field
      name: TICKINT
      bit_offset: 1
      bit_width: 1
      description: "Enables SysTick exception request:\\n\n                0 = Counting
        down to zero does not assert the SysTick exception request.\\n\n                1
        = Counting down to zero to asserts the SysTick exception request."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: "Enable SysTick counter:\\n\n                0 = Counter disabled.\\n\n
        \               1 = Counter enabled."
      read_allowed: true
      write_allowed: true
  - !Register
    name: SYST_RVR
    addr: 0xe000e014
    size_bits: 32
    description: "Use the SysTick Reload Value Register to specify the start value
      to load into the current value register when the counter reaches 0. It can be
      any value between 0 and 0x00FFFFFF. A start value of 0 is possible, but has
      no effect because the SysTick interrupt and COUNTFLAG are activated when counting
      from 1 to 0. The reset value of this register is UNKNOWN.\\n\n            To
      generate a multi-shot timer with a period of N processor clock cycles, use a
      RELOAD value of N-1. For example, if the SysTick interrupt is required every
      100 clock pulses, set RELOAD to 99."
    fields:
    - !Field
      name: RELOAD
      bit_offset: 0
      bit_width: 24
      description: Value to load into the SysTick Current Value Register when the
        counter reaches 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SYST_CVR
    addr: 0xe000e018
    size_bits: 32
    description: Use the SysTick Current Value Register to find the current value
      in the register. The reset value of this register is UNKNOWN.
    fields:
    - !Field
      name: CURRENT
      bit_offset: 0
      bit_width: 24
      description: Reads return the current value of the SysTick counter. This register
        is write-clear. Writing to it with any value clears the register to 0. Clearing
        this register also clears the COUNTFLAG bit of the SysTick Control and Status
        Register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SYST_CALIB
    addr: 0xe000e01c
    size_bits: 32
    description: Use the SysTick Calibration Value Register to enable software to
      scale to any required speed using divide and multiply.
    fields:
    - !Field
      name: NOREF
      bit_offset: 31
      bit_width: 1
      description: If reads as 1, the Reference clock is not provided - the CLKSOURCE
        bit of the SysTick Control and Status register will be forced to 1 and cannot
        be cleared to 0.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SKEW
      bit_offset: 30
      bit_width: 1
      description: If reads as 1, the calibration value for 10ms is inexact (due to
        clock frequency).
      read_allowed: true
      write_allowed: false
    - !Field
      name: TENMS
      bit_offset: 0
      bit_width: 24
      description: An optional Reload value to be used for 10ms (100Hz) timing, subject
        to system clock skew errors. If the value reads as 0, the calibration value
        is not known.
      read_allowed: true
      write_allowed: false
  - !Register
    name: NVIC_ISER
    addr: 0xe000e100
    size_bits: 32
    description: "Use the Interrupt Set-Enable Register to enable interrupts and determine
      which interrupts are currently enabled.\\n\n            If a pending interrupt
      is enabled, the NVIC activates the interrupt based on its priority. If an interrupt
      is not enabled, asserting its interrupt signal changes the interrupt state to
      pending, but the NVIC never activates the interrupt, regardless of its priority."
    fields:
    - !Field
      name: SETENA
      bit_offset: 0
      bit_width: 32
      description: "Interrupt set-enable bits.\\n\n                Write:\\n\n                0
        = No effect.\\n\n                1 = Enable interrupt.\\n\n                Read:\\n\n
        \               0 = Interrupt disabled.\\n\n                1 = Interrupt
        enabled."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICER
    addr: 0xe000e180
    size_bits: 32
    description: Use the Interrupt Clear-Enable Registers to disable interrupts and
      determine which interrupts are currently enabled.
    fields:
    - !Field
      name: CLRENA
      bit_offset: 0
      bit_width: 32
      description: "Interrupt clear-enable bits.\\n\n                Write:\\n\n                0
        = No effect.\\n\n                1 = Disable interrupt.\\n\n                Read:\\n\n
        \               0 = Interrupt disabled.\\n\n                1 = Interrupt
        enabled."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ISPR
    addr: 0xe000e200
    size_bits: 32
    description: The NVIC_ISPR forces interrupts into the pending state, and shows
      which interrupts are pending.
    fields:
    - !Field
      name: SETPEND
      bit_offset: 0
      bit_width: 32
      description: "Interrupt set-pending bits.\\n\n                Write:\\n\n                0
        = No effect.\\n\n                1 = Changes interrupt state to pending.\\n\n
        \               Read:\\n\n                0 = Interrupt is not pending.\\n\n
        \               1 = Interrupt is pending.\\n\n                Note: Writing
        1 to the NVIC_ISPR bit corresponding to:\\n\n                An interrupt
        that is pending has no effect.\\n\n                A disabled interrupt sets
        the state of that interrupt to pending."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_ICPR
    addr: 0xe000e280
    size_bits: 32
    description: Use the Interrupt Clear-Pending Register to clear pending interrupts
      and determine which interrupts are currently pending.
    fields:
    - !Field
      name: CLRPEND
      bit_offset: 0
      bit_width: 32
      description: "Interrupt clear-pending bits.\\n\n                Write:\\n\n
        \               0 = No effect.\\n\n                1 = Removes pending state
        and interrupt.\\n\n                Read:\\n\n                0 = Interrupt
        is not pending.\\n\n                1 = Interrupt is pending."
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR0
    addr: 0xe000e400
    size_bits: 32
    description: "Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.\\n\n            Note: Writing 1 to an NVIC_ICPR bit does not affect
      the active state of the corresponding interrupt.\\n\n            These registers
      are only word-accessible"
    fields:
    - !Field
      name: IP_3
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 3
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_2
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 2
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_1
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_0
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR1
    addr: 0xe000e404
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_7
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 7
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_6
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 6
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_5
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_4
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR2
    addr: 0xe000e408
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_11
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 11
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_10
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 10
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_9
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 9
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_8
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 8
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR3
    addr: 0xe000e40c
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_15
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 15
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_14
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 14
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_13
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 13
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_12
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 12
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR4
    addr: 0xe000e410
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_19
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 19
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_18
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 18
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_17
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 17
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_16
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 16
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR5
    addr: 0xe000e414
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_23
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 23
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_22
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 22
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_21
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 21
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_20
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 20
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR6
    addr: 0xe000e418
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_27
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 27
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_26
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 26
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_25
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 25
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_24
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 24
      read_allowed: true
      write_allowed: true
  - !Register
    name: NVIC_IPR7
    addr: 0xe000e41c
    size_bits: 32
    description: Use the Interrupt Priority Registers to assign a priority from 0
      to 3 to each of the available interrupts. 0 is the highest priority, and 3 is
      the lowest.
    fields:
    - !Field
      name: IP_31
      bit_offset: 30
      bit_width: 2
      description: Priority of interrupt 31
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_30
      bit_offset: 22
      bit_width: 2
      description: Priority of interrupt 30
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_29
      bit_offset: 14
      bit_width: 2
      description: Priority of interrupt 29
      read_allowed: true
      write_allowed: true
    - !Field
      name: IP_28
      bit_offset: 6
      bit_width: 2
      description: Priority of interrupt 28
      read_allowed: true
      write_allowed: true
  - !Register
    name: CPUID
    addr: 0xe000ed00
    size_bits: 32
    description: 'Read the CPU ID Base Register to determine: the ID number of the
      processor core, the version number of the processor core, the implementation
      details of the processor core.'
    reset_value: 0x410cc601
    fields:
    - !Field
      name: IMPLEMENTER
      bit_offset: 24
      bit_width: 8
      description: 'Implementor code: 0x41 = ARM'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VARIANT
      bit_offset: 20
      bit_width: 4
      description: "Major revision number n in the rnpm revision status:\\n\n                0x0
        = Revision 0."
      read_allowed: true
      write_allowed: false
    - !Field
      name: ARCHITECTURE
      bit_offset: 16
      bit_width: 4
      description: "Constant that defines the architecture of the processor:\\n\n
        \               0xC = ARMv6-M architecture."
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARTNO
      bit_offset: 4
      bit_width: 12
      description: 'Number of processor within family: 0xC60 = Cortex-M0+'
      read_allowed: true
      write_allowed: false
    - !Field
      name: REVISION
      bit_offset: 0
      bit_width: 4
      description: "Minor revision number m in the rnpm revision status:\\n\n                0x1
        = Patch 1."
      read_allowed: true
      write_allowed: false
  - !Register
    name: ICSR
    addr: 0xe000ed04
    size_bits: 32
    description: Use the Interrupt Control State Register to set a pending Non-Maskable
      Interrupt (NMI), set or clear a pending PendSV, set or clear a pending SysTick,
      check for pending exceptions, check the vector number of the highest priority
      pended exception, check the vector number of the active exception.
    fields:
    - !Field
      name: NMIPENDSET
      bit_offset: 31
      bit_width: 1
      description: "Setting this bit will activate an NMI. Since NMI is the highest
        priority exception, it will activate as soon as it is registered.\\n\n                NMI
        set-pending bit.\\n\n                Write:\\n\n                0 = No effect.\\n\n
        \               1 = Changes NMI exception state to pending.\\n\n                Read:\\n\n
        \               0 = NMI exception is not pending.\\n\n                1 =
        NMI exception is pending.\\n\n                Because NMI is the highest-priority
        exception, normally the processor enters the NMI\\n\n                exception
        handler as soon as it detects a write of 1 to this bit. Entering the handler
        then clears\\n\n                this bit to 0. This means a read of this bit
        by the NMI exception handler returns 1 only if the\\n\n                NMI
        signal is reasserted while the processor is executing that handler."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSVSET
      bit_offset: 28
      bit_width: 1
      description: "PendSV set-pending bit.\\n\n                Write:\\n\n                0
        = No effect.\\n\n                1 = Changes PendSV exception state to pending.\\n\n
        \               Read:\\n\n                0 = PendSV exception is not pending.\\n\n
        \               1 = PendSV exception is pending.\\n\n                Writing
        1 to this bit is the only way to set the PendSV exception state to pending."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSVCLR
      bit_offset: 27
      bit_width: 1
      description: "PendSV clear-pending bit.\\n\n                Write:\\n\n                0
        = No effect.\\n\n                1 = Removes the pending state from the PendSV
        exception."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSTSET
      bit_offset: 26
      bit_width: 1
      description: "SysTick exception set-pending bit.\\n\n                Write:\\n\n
        \               0 = No effect.\\n\n                1 = Changes SysTick exception
        state to pending.\\n\n                Read:\\n\n                0 = SysTick
        exception is not pending.\\n\n                1 = SysTick exception is pending."
      read_allowed: true
      write_allowed: true
    - !Field
      name: PENDSTCLR
      bit_offset: 25
      bit_width: 1
      description: "SysTick exception clear-pending bit.\\n\n                Write:\\n\n
        \               0 = No effect.\\n\n                1 = Removes the pending
        state from the SysTick exception.\\n\n                This bit is WO. On a
        register read its value is Unknown."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ISRPREEMPT
      bit_offset: 23
      bit_width: 1
      description: The system can only access this bit when the core is halted. It
        indicates that a pending interrupt is to be taken in the next running cycle.
        If C_MASKINTS is clear in the Debug Halting Control and Status Register, the
        interrupt is serviced.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ISRPENDING
      bit_offset: 22
      bit_width: 1
      description: External interrupt pending flag
      read_allowed: true
      write_allowed: false
    - !Field
      name: VECTPENDING
      bit_offset: 12
      bit_width: 9
      description: 'Indicates the exception number for the highest priority pending
        exception: 0 = no pending exceptions. Non zero = The pending state includes
        the effect of memory-mapped enable and mask registers. It does not include
        the PRIMASK special-purpose register qualifier.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: VECTACTIVE
      bit_offset: 0
      bit_width: 9
      description: Active exception number field. Reset clears the VECTACTIVE field.
      read_allowed: true
      write_allowed: false
  - !Register
    name: VTOR
    addr: 0xe000ed08
    size_bits: 32
    description: The VTOR holds the vector table offset address.
    fields:
    - !Field
      name: TBLOFF
      bit_offset: 8
      bit_width: 24
      description: Bits [31:8] of the indicate the vector table offset address.
      read_allowed: true
      write_allowed: true
  - !Register
    name: AIRCR
    addr: 0xe000ed0c
    size_bits: 32
    description: 'Use the Application Interrupt and Reset Control Register to: determine
      data endianness, clear all active state information from debug halt mode, request
      a system reset.'
    fields:
    - !Field
      name: VECTKEY
      bit_offset: 16
      bit_width: 16
      description: "Register key:\\n\n                Reads as Unknown\\n\n                On
        writes, write 0x05FA to VECTKEY, otherwise the write is ignored."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENDIANESS
      bit_offset: 15
      bit_width: 1
      description: "Data endianness implemented:\\n\n                0 = Little-endian."
      read_allowed: true
      write_allowed: false
    - !Field
      name: SYSRESETREQ
      bit_offset: 2
      bit_width: 1
      description: Writing 1 to this bit causes the SYSRESETREQ signal to the outer
        system to be asserted to request a reset. The intention is to force a large
        system reset of all major components except for debug. The C_HALT bit in the
        DHCSR is cleared as a result of the system reset requested. The debugger does
        not lose contact with the device.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VECTCLRACTIVE
      bit_offset: 1
      bit_width: 1
      description: 'Clears all active state information for fixed and configurable
        exceptions. This bit: is self-clearing, can only be set by the DAP when the
        core is halted.  When set: clears all active exception status of the processor,
        forces a return to Thread mode, forces an IPSR of 0. A debugger must re-initialize
        the stack.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCR
    addr: 0xe000ed10
    size_bits: 32
    description: 'System Control Register. Use the System Control Register for power-management
      functions: signal to the system when the processor can enter a low power state,
      control how the processor enters and exits low power states.'
    fields:
    - !Field
      name: SEVONPEND
      bit_offset: 4
      bit_width: 1
      description: "Send Event on Pending bit:\\n\n                0 = Only enabled
        interrupts or events can wakeup the processor, disabled interrupts are excluded.\\n\n
        \               1 = Enabled events and all interrupts, including disabled
        interrupts, can wakeup the processor.\\n\n                When an event or
        interrupt becomes pending, the event signal wakes up the processor from WFE.
        If the\\n\n                processor is not waiting for an event, the event
        is registered and affects the next WFE.\\n\n                The processor
        also wakes up on execution of an SEV instruction or an external event."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEEPDEEP
      bit_offset: 2
      bit_width: 1
      description: "Controls whether the processor uses sleep or deep sleep as its
        low power mode:\\n\n                0 = Sleep.\\n\n                1 = Deep
        sleep."
      read_allowed: true
      write_allowed: true
    - !Field
      name: SLEEPONEXIT
      bit_offset: 1
      bit_width: 1
      description: "Indicates sleep-on-exit when returning from Handler mode to Thread
        mode:\\n\n                0 = Do not sleep when returning to Thread mode.\\n\n
        \               1 = Enter sleep, or deep sleep, on return from an ISR to Thread
        mode.\\n\n                Setting this bit to 1 enables an interrupt driven
        application to avoid returning to an empty main application."
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR
    addr: 0xe000ed14
    size_bits: 32
    description: The Configuration and Control Register permanently enables stack
      alignment and causes unaligned accesses to result in a Hard Fault.
    fields:
    - !Field
      name: STKALIGN
      bit_offset: 9
      bit_width: 1
      description: Always reads as one, indicates 8-byte stack alignment on exception
        entry. On exception entry, the processor uses bit[9] of the stacked PSR to
        indicate the stack alignment. On return from the exception it uses this stacked
        bit to restore the correct stack alignment.
      read_allowed: true
      write_allowed: false
    - !Field
      name: UNALIGN_TRP
      bit_offset: 3
      bit_width: 1
      description: Always reads as one, indicates that all unaligned accesses generate
        a HardFault.
      read_allowed: true
      write_allowed: false
  - !Register
    name: SHPR2
    addr: 0xe000ed1c
    size_bits: 32
    description: System handlers are a special class of exception handler that can
      have their priority set to any of the priority levels. Use the System Handler
      Priority Register 2 to set the priority of SVCall.
    fields:
    - !Field
      name: PRI_11
      bit_offset: 30
      bit_width: 2
      description: Priority of system handler 11, SVCall
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHPR3
    addr: 0xe000ed20
    size_bits: 32
    description: System handlers are a special class of exception handler that can
      have their priority set to any of the priority levels. Use the System Handler
      Priority Register 3 to set the priority of PendSV and SysTick.
    fields:
    - !Field
      name: PRI_15
      bit_offset: 30
      bit_width: 2
      description: Priority of system handler 15, SysTick
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRI_14
      bit_offset: 22
      bit_width: 2
      description: Priority of system handler 14, PendSV
      read_allowed: true
      write_allowed: true
  - !Register
    name: SHCSR
    addr: 0xe000ed24
    size_bits: 32
    description: Use the System Handler Control and State Register to determine or
      clear the pending status of SVCall.
    fields:
    - !Field
      name: SVCALLPENDED
      bit_offset: 15
      bit_width: 1
      description: Reads as 1 if SVCall is Pending.  Write 1 to set pending SVCall,
        write 0 to clear pending SVCall.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MPU_TYPE
    addr: 0xe000ed90
    size_bits: 32
    description: Read the MPU Type Register to determine if the processor implements
      an MPU, and how many regions the MPU supports.
    reset_value: 0x800
    fields:
    - !Field
      name: IREGION
      bit_offset: 16
      bit_width: 8
      description: Instruction region. Reads as zero as ARMv6-M only supports a unified
        MPU.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DREGION
      bit_offset: 8
      bit_width: 8
      description: Number of regions supported by the MPU.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SEPARATE
      bit_offset: 0
      bit_width: 1
      description: Indicates support for separate instruction and data address maps.
        Reads as 0 as ARMv6-M only supports a unified MPU.
      read_allowed: true
      write_allowed: false
  - !Register
    name: MPU_CTRL
    addr: 0xe000ed94
    size_bits: 32
    description: Use the MPU Control Register to enable and disable the MPU, and to
      control whether the default memory map is enabled as a background region for
      privileged accesses, and whether the MPU is enabled for HardFaults and NMIs.
    fields:
    - !Field
      name: PRIVDEFENA
      bit_offset: 2
      bit_width: 1
      description: "Controls whether the default memory map is enabled as a background
        region for privileged accesses. This bit is ignored when ENABLE is clear.\\n\n
        \               0 = If the MPU is enabled, disables use of the default memory
        map. Any memory access to a location not\\n\n                covered by any
        enabled region causes a fault.\\n\n                1 = If the MPU is enabled,
        enables use of the default memory map as a background region for privileged
        software accesses.\\n\n                When enabled, the background region
        acts as if it is region number -1. Any region that is defined and enabled
        has priority over this default map."
      read_allowed: true
      write_allowed: true
    - !Field
      name: HFNMIENA
      bit_offset: 1
      bit_width: 1
      description: "Controls the use of the MPU for HardFaults and NMIs. Setting this
        bit when ENABLE is clear results in UNPREDICTABLE behaviour.\\n\n                When
        the MPU is enabled:\\n\n                0 = MPU is disabled during HardFault
        and NMI handlers, regardless of the value of the ENABLE bit.\\n\n                1
        = the MPU is enabled during HardFault and NMI handlers."
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: "Enables the MPU. If the MPU is disabled, privileged and unprivileged
        accesses use the default memory map.\\n\n                0 = MPU disabled.\\n\n
        \               1 = MPU enabled."
      read_allowed: true
      write_allowed: true
  - !Register
    name: MPU_RNR
    addr: 0xe000ed98
    size_bits: 32
    description: Use the MPU Region Number Register to select the region currently
      accessed by MPU_RBAR and MPU_RASR.
    fields:
    - !Field
      name: REGION
      bit_offset: 0
      bit_width: 4
      description: "Indicates the MPU region referenced by the MPU_RBAR and MPU_RASR
        registers.\\n\n                The MPU supports 8 memory regions, so the permitted
        values of this field are 0-7."
      read_allowed: true
      write_allowed: true
  - !Register
    name: MPU_RBAR
    addr: 0xe000ed9c
    size_bits: 32
    description: Read the MPU Region Base Address Register to determine the base address
      of the region identified by MPU_RNR. Write to update the base address of said
      region or that of a specified region, with whose number MPU_RNR will also be
      updated.
    fields:
    - !Field
      name: ADDR
      bit_offset: 8
      bit_width: 24
      description: Base address of the region.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VALID
      bit_offset: 4
      bit_width: 1
      description: "On writes, indicates whether the write must update the base address
        of the region identified by the REGION field, updating the MPU_RNR to indicate
        this new region.\\n\n                Write:\\n\n                0 = MPU_RNR
        not changed, and the processor:\\n\n                Updates the base address
        for the region specified in the MPU_RNR.\\n\n                Ignores the value
        of the REGION field.\\n\n                1 = The processor:\\n\n                Updates
        the value of the MPU_RNR to the value of the REGION field.\\n\n                Updates
        the base address for the region specified in the REGION field.\\n\n                Always
        reads as zero."
      read_allowed: true
      write_allowed: true
    - !Field
      name: REGION
      bit_offset: 0
      bit_width: 4
      description: On writes, specifies the number of the region whose base address
        to update provided VALID is set written as 1. On reads, returns bits [3:0]
        of MPU_RNR.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MPU_RASR
    addr: 0xe000eda0
    size_bits: 32
    description: Use the MPU Region Attribute and Size Register to define the size,
      access behaviour and memory type of the region identified by MPU_RNR, and enable
      that region.
    fields:
    - !Field
      name: ATTRS
      bit_offset: 16
      bit_width: 16
      description: "The MPU Region Attribute field. Use to define the region attribute
        control.\\n\n                28 = XN: Instruction access disable bit:\\n\n
        \               0 = Instruction fetches enabled.\\n\n                1 = Instruction
        fetches disabled.\\n\n                26:24 = AP: Access permission field\\n\n
        \               18 = S: Shareable bit\\n\n                17 = C: Cacheable
        bit\\n\n                16 = B: Bufferable bit"
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRD
      bit_offset: 8
      bit_width: 8
      description: Subregion Disable. For regions of 256 bytes or larger, each bit
        of this field controls whether one of the eight equal subregions is enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIZE
      bit_offset: 1
      bit_width: 5
      description: Indicates the region size. Region size in bytes = 2^(SIZE+1). The
        minimum permitted value is 7 (b00111) = 256Bytes
      read_allowed: true
      write_allowed: true
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: Enables the region.
      read_allowed: true
      write_allowed: true
