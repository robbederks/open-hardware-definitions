!Device
manufacturer: nxp.com
part_number: QN908XC
architecture: ARM Cortex-M
bit_width: 32
endianness: little
modules:
- !Module
  name: SYSCON
  description: syscon
  base_addr: 0x40000000
  size: 0x894
  registers:
  - !Register
    name: RST_SW_SET
    addr: 0x0
    size_bits: 32
    description: block software reset set register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7e5fffff
    fields:
    - !Field
      name: SET_FC0_RST
      bit_offset: 0
      bit_width: 1
      description: Write 1 to set FLEXCOMM0 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_FC1_RST
      bit_offset: 1
      bit_width: 1
      description: Write 1 to set FLEXCOMM1 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_FC2_RST
      bit_offset: 2
      bit_width: 1
      description: Write 1 to set FLEXCOMM2 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_FC3_RST
      bit_offset: 3
      bit_width: 1
      description: Write 1 to set FLEXCOMM3 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_TIM0_RST
      bit_offset: 4
      bit_width: 1
      description: Write 1 to set CTIMER0 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_TIM1_RST
      bit_offset: 5
      bit_width: 1
      description: Write 1 to set CTIMER1 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_TIM2_RST
      bit_offset: 6
      bit_width: 1
      description: Write 1 to set CTIMER2 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_TIM3_RST
      bit_offset: 7
      bit_width: 1
      description: Write 1 to set CTIMER3 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_SCT_RST
      bit_offset: 8
      bit_width: 1
      description: Write 1 to set SCT reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_WDT_RST
      bit_offset: 9
      bit_width: 1
      description: Write 1 to set Watch Dog reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_USB_RST
      bit_offset: 10
      bit_width: 1
      description: Write 1 to set USB reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_GPIO_RST
      bit_offset: 11
      bit_width: 1
      description: Write 1 to set GPIO reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_RTC_RST
      bit_offset: 12
      bit_width: 1
      description: Write 1 to set RTC reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_ADC_RST
      bit_offset: 13
      bit_width: 1
      description: Write 1 to set ADC interface reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_DAC_RST
      bit_offset: 14
      bit_width: 1
      description: Write 1 to set DAC interface reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_CS_RST
      bit_offset: 15
      bit_width: 1
      description: Write 1 to set Cap sensor interface reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_FSP_RST
      bit_offset: 16
      bit_width: 1
      description: Write 1 to set FSP reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_DMA_RST
      bit_offset: 17
      bit_width: 1
      description: Write 1 to set DMA reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_QDEC0_RST
      bit_offset: 19
      bit_width: 1
      description: Write 1 to set QDEC 0 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_QDEC1_RST
      bit_offset: 20
      bit_width: 1
      description: Write 1 to set QDEC 1 reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_SPIFI_RST
      bit_offset: 22
      bit_width: 1
      description: Write 1 to set SPIFI reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_CPU_RST
      bit_offset: 26
      bit_width: 1
      description: Write 1 to set CPU reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_BLE_RST
      bit_offset: 27
      bit_width: 1
      description: Write 1 to set BLE reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_FLASH_RST
      bit_offset: 28
      bit_width: 1
      description: Write 1 to set flash controller reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_DP_RST
      bit_offset: 29
      bit_width: 1
      description: Write 1 to set DataPath reset
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_REG_RST
      bit_offset: 30
      bit_width: 1
      description: Write 1 to reset retention register
      read_allowed: false
      write_allowed: true
    - !Field
      name: SET_REBOOT
      bit_offset: 31
      bit_width: 1
      description: Write 1 to Reboot entire system
      read_allowed: false
      write_allowed: true
  - !Register
    name: RST_SW_CLR
    addr: 0x4
    size_bits: 32
    description: block software reset clear register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7e5fffff
    fields:
    - !Field
      name: CLR_FC0_RST
      bit_offset: 0
      bit_width: 1
      description: Write 1 to clear FLEXCOMM0 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_FC1_RST
      bit_offset: 1
      bit_width: 1
      description: Write 1 to clear FLEXCOMM1 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_FC2_RST
      bit_offset: 2
      bit_width: 1
      description: Write 1 to clear FLEXCOMM2 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_FC3_RST
      bit_offset: 3
      bit_width: 1
      description: Write 1 to clear FLEXCOMM3 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_TIM0_RST
      bit_offset: 4
      bit_width: 1
      description: Write 1 to clear CTIMER0 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_TIM1_RST
      bit_offset: 5
      bit_width: 1
      description: Write 1 to clear CTIMER1 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_TIM2_RST
      bit_offset: 6
      bit_width: 1
      description: Write 1 to clear CTIMER2 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_TIM3_RST
      bit_offset: 7
      bit_width: 1
      description: Write 1 to clear CTIMER3 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_SCT_RST
      bit_offset: 8
      bit_width: 1
      description: Write 1 to clear SCT reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_WDT_RST
      bit_offset: 9
      bit_width: 1
      description: Write 1 to clear Watch Dog reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_USB_RST
      bit_offset: 10
      bit_width: 1
      description: Write 1 to clear USB reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_GPIO_RST
      bit_offset: 11
      bit_width: 1
      description: Write 1 to clear GPIO reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_RTC_RST
      bit_offset: 12
      bit_width: 1
      description: Write 1 to clear RTC reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_ADC_RST
      bit_offset: 13
      bit_width: 1
      description: Write 1 to clear ADC interface reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_DAC_RST
      bit_offset: 14
      bit_width: 1
      description: Write 1 to clear DAC interface reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_CS_RST
      bit_offset: 15
      bit_width: 1
      description: Write 1 to clear cap sensor interface reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_FSP_RST
      bit_offset: 16
      bit_width: 1
      description: Write 1 to clear FSP reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_DMA_RST
      bit_offset: 17
      bit_width: 1
      description: Write 1 to clear DMA reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_QDEC0_RST
      bit_offset: 19
      bit_width: 1
      description: Write 1 to clear QDEC 0 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_QDEC1_RST
      bit_offset: 20
      bit_width: 1
      description: Write 1 to clear QDEC 1 reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_SPIFI_RST
      bit_offset: 22
      bit_width: 1
      description: Write 1 to clear SPIFI reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_CPU_RST
      bit_offset: 26
      bit_width: 1
      description: Write 1 to clear CPU reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_BLE_RST
      bit_offset: 27
      bit_width: 1
      description: Write 1 to clear BLE reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_FLASH_RST
      bit_offset: 28
      bit_width: 1
      description: Write 1 to clear flash controller reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_DP_RST
      bit_offset: 29
      bit_width: 1
      description: Write 1 to clear DataPath reset
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLR_REG_RST
      bit_offset: 30
      bit_width: 1
      description: Write 1 to clear retention register reset
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_DIS
    addr: 0x8
    size_bits: 32
    description: clock disable register
    read_allowed: true
    write_allowed: true
    reset_value: 0xc0001200
    fields:
    - !Field
      name: CLK_FC0_DIS
      bit_offset: 0
      bit_width: 1
      description: Write 1 to disable FLEXCOMM0 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_FC1_DIS
      bit_offset: 1
      bit_width: 1
      description: Write 1 to disable FLEXCOMM1 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_FC2_DIS
      bit_offset: 2
      bit_width: 1
      description: Write 1 to disable FLEXCOMM2 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_FC3_DIS
      bit_offset: 3
      bit_width: 1
      description: Write 1 to disable FLEXCOMM3 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_TIM0_DIS
      bit_offset: 4
      bit_width: 1
      description: Write 1 to disable CTIMER0 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_TIM1_DIS
      bit_offset: 5
      bit_width: 1
      description: Write 1 to disable CTIMER1 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_TIM2_DIS
      bit_offset: 6
      bit_width: 1
      description: Write 1 to disable CTIMER2 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_TIM3_DIS
      bit_offset: 7
      bit_width: 1
      description: Write 1 to disable CTIMER3 clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_SCT_DIS
      bit_offset: 8
      bit_width: 1
      description: Write 1 to disable SCT clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_WDT_DIS
      bit_offset: 9
      bit_width: 1
      description: Write 1 to disable Watch Dog clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_USB_DIS
      bit_offset: 10
      bit_width: 1
      description: Write 1 to disable USB clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_GPIO_DIS
      bit_offset: 11
      bit_width: 1
      description: Write 1 to disable GPIO clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_BIV_DIS
      bit_offset: 12
      bit_width: 1
      description: Write 1 to disable BIV APB clock include RTC BiV register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_ADC_DIS
      bit_offset: 13
      bit_width: 1
      description: Write 1 to disable ADC clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_DAC_DIS
      bit_offset: 14
      bit_width: 1
      description: Write 1 to disable DAC clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_CS_DIS
      bit_offset: 15
      bit_width: 1
      description: Write 1 to disable Cap sensor clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_FSP_DIS
      bit_offset: 16
      bit_width: 1
      description: Write 1 to disable FSP clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_DMA_DIS
      bit_offset: 17
      bit_width: 1
      description: Write 1 to disable DMA clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_QDEC0_DIS
      bit_offset: 19
      bit_width: 1
      description: Write 1 to disable QDEC0 clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_QDEC1_DIS
      bit_offset: 20
      bit_width: 1
      description: Write 1 to disable QDEC1 clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_DP_DIS
      bit_offset: 21
      bit_width: 1
      description: Write 1 to disable Data Path 16/8MHz clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_SPIFI_DIS
      bit_offset: 22
      bit_width: 1
      description: Write 1 to disable SPIFI clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_CAL_DIS
      bit_offset: 25
      bit_width: 1
      description: Write 1 to disable Calibration clock;
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_BLE_DIS
      bit_offset: 27
      bit_width: 1
      description: Write 1 to disable BLE clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: PCLK_DIS
      bit_offset: 30
      bit_width: 1
      description: Write 1 to disable PCLK of some logic;
      read_allowed: true
      write_allowed: true
    - !Field
      name: FCLK_DIS
      bit_offset: 31
      bit_width: 1
      description: Write 1 to disable CPU FCLK;
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLK_EN
    addr: 0xc
    size_bits: 32
    description: clock enable register
    read_allowed: true
    write_allowed: true
    reset_value: 0xc0001200
    fields:
    - !Field
      name: CLK_FC0_EN
      bit_offset: 0
      bit_width: 1
      description: Write 1 to enable FLEXCOMM0 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_FC1_EN
      bit_offset: 1
      bit_width: 1
      description: Write 1 to enable FLEXCOMM1 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_FC2_EN
      bit_offset: 2
      bit_width: 1
      description: Write 1 to enable FLEXCOMM2 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_FC3_EN
      bit_offset: 3
      bit_width: 1
      description: Write 1 to enable FLEXCOMM3 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_TIM0_EN
      bit_offset: 4
      bit_width: 1
      description: Write 1 to enable CTIMER0 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_TIM1_EN
      bit_offset: 5
      bit_width: 1
      description: Write 1 to enable CTIMER1 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_TIM2_EN
      bit_offset: 6
      bit_width: 1
      description: Write 1 to enable CTIMER2 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_TIM3_EN
      bit_offset: 7
      bit_width: 1
      description: Write 1 to enable CTIMER3 clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_SCT_EN
      bit_offset: 8
      bit_width: 1
      description: Write 1 to enable SCT clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_WDT_EN
      bit_offset: 9
      bit_width: 1
      description: Write 1 to enable Watch Dog clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_USB_EN
      bit_offset: 10
      bit_width: 1
      description: Write 1 to enable USB clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_GPIO_EN
      bit_offset: 11
      bit_width: 1
      description: Write 1 to enable GPIO clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_BIV_EN
      bit_offset: 12
      bit_width: 1
      description: Write 1 to enable BIV APB clock include RTC BiV register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_ADC_EN
      bit_offset: 13
      bit_width: 1
      description: Write 1 to enable ADC clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_DAC_EN
      bit_offset: 14
      bit_width: 1
      description: Write 1 to enable DAC clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_CS_EN
      bit_offset: 15
      bit_width: 1
      description: Write 1 to enable Cap sensor clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_FSP_EN
      bit_offset: 16
      bit_width: 1
      description: Write 1 to enable FSP clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_DMA_EN
      bit_offset: 17
      bit_width: 1
      description: Write 1 to enable DMA clock
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_QDEC0_EN
      bit_offset: 19
      bit_width: 1
      description: Write 1 to enable QDEC0 clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_QDEC1_EN
      bit_offset: 20
      bit_width: 1
      description: Write 1 to enable QDEC1 clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_DP_EN
      bit_offset: 21
      bit_width: 1
      description: Write 1 to enable Data Path 16/8MHz clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_SPIFI_EN
      bit_offset: 22
      bit_width: 1
      description: Write 1 to enable SPIFI clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_CAL_EN
      bit_offset: 25
      bit_width: 1
      description: Write 1 to enable Calibration clock;
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLK_BLE_EN
      bit_offset: 27
      bit_width: 1
      description: Write 1 to enable BLE clock
      read_allowed: false
      write_allowed: true
  - !Register
    name: CLK_CTRL
    addr: 0x10
    size_bits: 32
    description: system clock source and divider register
    read_allowed: true
    write_allowed: true
    reset_value: 0x103c0000
    fields:
    - !Field
      name: APB_DIV
      bit_offset: 0
      bit_width: 4
      description: APB_CLK = AHB_CLK/(APB_DIV+1)
      read_allowed: true
      write_allowed: true
    - !Field
      name: AHB_DIV
      bit_offset: 4
      bit_width: 13
      description: AHB_CLK = SYS_CLK / (AHB_DIV+1);Note Before enable BLE clock (CLK_BLE_EN
        =1) It is mandatory to set AHB_CLK = 32 or 16 or 8 MHz.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_BLE_SEL
      bit_offset: 17
      bit_width: 1
      description: BLE frequency indicator
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLK_BLE_SEL_8M
        1: CLK_BLE_SEL_16M
    - !Field
      name: CLK_WDT_SEL
      bit_offset: 18
      bit_width: 1
      description: Select Watch Dog clock
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLK_WDT_SEL_32K
        1: APB
    - !Field
      name: CLK_XTAL_SEL
      bit_offset: 19
      bit_width: 1
      description: Crytal clock selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: XTAL16M
        1: XTAL32M
    - !Field
      name: CLK_OSC32M_DIV
      bit_offset: 20
      bit_width: 1
      description: digital OSC clock input selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BY1
        1: BY2
    - !Field
      name: CLK_32K_SEL
      bit_offset: 21
      bit_width: 1
      description: 32K clock source selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: XTAL32K
        1: RCO32K
    - !Field
      name: CLK_XTAL_OE
      bit_offset: 22
      bit_width: 1
      description: system clock output enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_32K_OE
      bit_offset: 23
      bit_width: 1
      description: 32K clock output enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_OUT_DIV
      bit_offset: 24
      bit_width: 4
      description: high frequency xtal clock output divider
      read_allowed: true
      write_allowed: true
    - !Field
      name: CGBYPASS
      bit_offset: 28
      bit_width: 1
      description: If it is 0, it can save CPU power in active mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: SYS_CLK_SEL
      bit_offset: 30
      bit_width: 2
      description: Select SYS_CLK source
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLK_OSC
        1: CLK_XTAL
        2: CLK_32K
  - !Register
    name: SYS_MODE_CTRL
    addr: 0x14
    size_bits: 32
    description: system mode and address remap register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: REMAP
      bit_offset: 0
      bit_width: 2
      description: software remap system address
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ROM
        1: FLASH
        2: RAM
    - !Field
      name: LOCKUP_EN
      bit_offset: 2
      bit_width: 1
      description: lock up enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_RDY
      bit_offset: 25
      bit_width: 1
      description: 16/32 MHz xtal ready readout
      read_allowed: true
      write_allowed: false
    - !Field
      name: XTAL32K_RDY
      bit_offset: 26
      bit_width: 1
      description: 32KHz xtal ready readout
      read_allowed: true
      write_allowed: false
    - !Field
      name: PLL48M_RDY
      bit_offset: 27
      bit_width: 1
      description: 48MHz PLL ready readout
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC32M_RDY
      bit_offset: 28
      bit_width: 1
      description: 32MHz oscillator ready readout
      read_allowed: true
      write_allowed: false
    - !Field
      name: BG_RDY
      bit_offset: 29
      bit_width: 1
      description: BG ready readout
      read_allowed: true
      write_allowed: false
    - !Field
      name: BOOT_MODE
      bit_offset: 31
      bit_width: 1
      description: boot mode pin status
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ISP
        1: NORMAL
  - !Register
    name: SYS_STAT
    addr: 0x80
    size_bits: 32
    description: system status register
    read_allowed: true
    write_allowed: false
    reset_value: 0x3000
    fields:
    - !Field
      name: FREQ_WORD
      bit_offset: 0
      bit_width: 8
      description: BLE Frequency word;
      read_allowed: true
      write_allowed: false
    - !Field
      name: BLE_FREQ_HOP
      bit_offset: 8
      bit_width: 1
      description: BLE frequency word change flag;
      read_allowed: true
      write_allowed: false
    - !Field
      name: EVENT_IN_PROCESS
      bit_offset: 9
      bit_width: 1
      description: BLE event indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: BLE_NONE_ENV
        1: BLE_IN_ENV
    - !Field
      name: RX_EN
      bit_offset: 10
      bit_width: 1
      description: when 1, system is in RX state
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_EN
      bit_offset: 11
      bit_width: 1
      description: when 1, system is in TX state
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC_EN
      bit_offset: 12
      bit_width: 1
      description: BLE osc_en output;
      read_allowed: true
      write_allowed: false
    - !Field
      name: RADIO_EN
      bit_offset: 13
      bit_width: 1
      description: BLE radio_en output;
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLK_STATUS
      bit_offset: 14
      bit_width: 1
      description: BLE status
      read_allowed: true
      write_allowed: false
      enum_values:
        0: BLE_IP_ACT
        1: BLE_IP_SLP
  - !Register
    name: SYS_TICK
    addr: 0x100
    size_bits: 32
    description: systick timer control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x81000147
    fields:
    - !Field
      name: TENMS
      bit_offset: 0
      bit_width: 24
      description: system tick timer calibration value
      read_allowed: true
      write_allowed: true
    - !Field
      name: SKEW
      bit_offset: 24
      bit_width: 1
      description: whether THE TENMS value will generate a precise 10 millisencod
        time or an approximation
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PRECISE
        1: NOT_PRECISE
    - !Field
      name: NOREF
      bit_offset: 25
      bit_width: 1
      description: whether an external reference clock is available
      read_allowed: true
      write_allowed: true
      enum_values:
        0: AVAILABLE
        1: NOT_AVAILABLE
    - !Field
      name: EN_STCLKEN
      bit_offset: 31
      bit_width: 1
      description: 1 is enable STCLKEN;
      read_allowed: true
      write_allowed: true
  - !Register
    name: SRAM_CTRL
    addr: 0x104
    size_bits: 32
    description: Exchange memory base address register
    read_allowed: true
    write_allowed: true
    reset_value: 0x2400
    fields:
    - !Field
      name: EM_BASE_ADDR
      bit_offset: 0
      bit_width: 15
      description: Exchange memory base address in system memory. Default value is
        9K word.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHIP_ID
    addr: 0x108
    size_bits: 32
    description: chip id register
    read_allowed: true
    write_allowed: false
    reset_value: 0xfc001010
    fields:
    - !Field
      name: CID0
      bit_offset: 0
      bit_width: 3
      description: CHIP ID for manufacture fab
      read_allowed: true
      write_allowed: false
    - !Field
      name: CID1
      bit_offset: 3
      bit_width: 3
      description: CHIP ID for product family
      read_allowed: true
      write_allowed: false
    - !Field
      name: CID2
      bit_offset: 6
      bit_width: 2
      description: CHIP ID for minor revision
      read_allowed: true
      write_allowed: false
    - !Field
      name: CID3
      bit_offset: 8
      bit_width: 6
      description: CHIP ID for product ID
      read_allowed: true
      write_allowed: false
      enum_values:
        0: QN9020
        1: QN9030
        2: QN9080
    - !Field
      name: CID4
      bit_offset: 14
      bit_width: 2
      description: CHIP ID for major revision
      read_allowed: true
      write_allowed: false
      enum_values:
        0: A
        1: B
        2: C
        3: D
    - !Field
      name: MEM_OPTION
      bit_offset: 26
      bit_width: 1
      description: memory bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: MEM_OPTION_64K
        1: MEM_OPTION_128K
    - !Field
      name: ADC_OPTION
      bit_offset: 27
      bit_width: 1
      description: adc bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: FLASH_OPTION
      bit_offset: 28
      bit_width: 1
      description: flash bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: FLASH_OPTION_256K
        1: FLASH_OPTION_512K
    - !Field
      name: FPU_OPTION
      bit_offset: 29
      bit_width: 1
      description: fpu bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NONE
        1: EXIST
    - !Field
      name: USB_OPTION
      bit_offset: 30
      bit_width: 1
      description: usb bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NONE
        1: EXIST
    - !Field
      name: FSP_OPTION
      bit_offset: 31
      bit_width: 1
      description: fsp bond indicator
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NONE
        1: EXIST
  - !Register
    name: ANA_CTRL0
    addr: 0x110
    size_bits: 32
    description: crystal and PA register
    read_allowed: true
    write_allowed: true
    reset_value: 0x820007f
    fields:
    - !Field
      name: PA_POWER
      bit_offset: 0
      bit_width: 8
      description: PA power control (all of below is minus data)
      read_allowed: true
      write_allowed: true
      enum_values:
        16: PA_POWER_20DBM
        18: PA_POWER_18DBM
        20: PA_POWER_16DBM
        25: PA_POWER_14DBM
        32: PA_POWER_12DBM
        40: PA_POWER_10DBM
        50: PA_POWER_8DBM
        64: PA_POWER_6DBM
        80: PA_POWER_4DBM
        101: PA_POWER_2DBM
        127: PA_POWER_0DBM
    - !Field
      name: XTAL_AMP
      bit_offset: 20
      bit_width: 2
      description: crystal amplitude set register
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_LOAD_CAP
      bit_offset: 22
      bit_width: 6
      description: Register controlled load cap of the XTAL in normal modeLOAD_CAP=5pF+0.35pF*CSEL+5pF*XADD_C
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_EXTRA_CAP
      bit_offset: 28
      bit_width: 1
      description: Add extra 16/32 MHz xtal load cap
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_MODE
      bit_offset: 30
      bit_width: 2
      description: Injection mode of the XTAL
      read_allowed: true
      write_allowed: true
      enum_values:
        0: XTAL
        1: DIG
        2: SINGLE
        3: DIFF
  - !Register
    name: XTAL_CTRL
    addr: 0x180
    size_bits: 32
    description: crystal control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x20200800
    fields:
    - !Field
      name: XTAL_XCUR_BOOST_REG
      bit_offset: 5
      bit_width: 1
      description: 1 to increase 16/32 MHz xtal current
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_BPXDLY
      bit_offset: 6
      bit_width: 1
      description: Bypass the power up delay in the XTAL core.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_BP_HYSRES_REG
      bit_offset: 7
      bit_width: 1
      description: 1 to bypass the degeneration resistor in order to reduce the hysteresis
        voltage
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_XSMT_EN_REG
      bit_offset: 8
      bit_width: 1
      description: 1 to use hysteresis buffer
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_XRDY_REG
      bit_offset: 9
      bit_width: 1
      description: 1 to set xtal ready signal by register
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_XOUT_DIS_REG
      bit_offset: 10
      bit_width: 1
      description: 1 not to send 16/32 MHz xtal clk out
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_DIFF_CLK_DIG_DIS
      bit_offset: 11
      bit_width: 1
      description: disable differential clock of digital
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_SU_CB_REG
      bit_offset: 16
      bit_width: 6
      description: Register controlled load cap of the XTAL_B in speed up modeCB=2pF+0.35pF*SU_CB+5pF*XADD_C
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_SU_CA_REG
      bit_offset: 24
      bit_width: 6
      description: Register controlled load cap of the XTAL_A in speed up modeCA=2pF+0.35pF*SU_CA+5pF*XADD_C
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_INV
      bit_offset: 30
      bit_width: 1
      description: Inverse crystal clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_DIV
      bit_offset: 31
      bit_width: 1
      description: Divide crystal clock when external crystal is 32M this bit should
        be configured into 1 otherwise 0.
      read_allowed: true
      write_allowed: true
  - !Register
    name: BUCK
    addr: 0x184
    size_bits: 32
    description: buck control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x302b03
    fields:
    - !Field
      name: BUCK_DRIVER_PART_EN
      bit_offset: 0
      bit_width: 1
      description: 1 to short external inductor
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_IND_USE_EN
      bit_offset: 1
      bit_width: 1
      description: 1 to turn on buck output stage gradually
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_ISEL
      bit_offset: 8
      bit_width: 2
      description: buck current bias control
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_VREF_SEL
      bit_offset: 10
      bit_width: 2
      description: buck current setting
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_VBG_SEL
      bit_offset: 12
      bit_width: 2
      description: buck reference setting
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_TMOS
      bit_offset: 16
      bit_width: 5
      description: buck constant on time control
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_IC
      bit_offset: 21
      bit_width: 1
      description: frequency compensation versus BVDD variation
      read_allowed: true
      write_allowed: true
  - !Register
    name: FC_FRG
    addr: 0x200
    size_bits: 32
    description: flexcomm 0 and 1 clock divider register
    read_allowed: true
    write_allowed: true
    reset_value: 0xff00ff
    fields:
    - !Field
      name: FRG_DIV0
      bit_offset: 0
      bit_width: 8
      description: flexcomm0 clock generator, Denominator of the fractional divider.
        DIV is equal to the programmed value +1. Always set to 0xFF to use with the
        fractional baud rate generator.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRG_MULT0
      bit_offset: 8
      bit_width: 8
      description: flexcomm0 clock generator, Numerator of the fractional divider.
        MULT is equal to the programmed value
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRG_DIV1
      bit_offset: 16
      bit_width: 8
      description: flexcomm1 clock generator, Denominator of the fractional divider.
        DIV is equal to the programmed value +1. Always set to 0xFF to use with the
        fractional baud rate generator.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRG_MULT1
      bit_offset: 24
      bit_width: 8
      description: flexcomm1 clock generator, Numerator of the fractional divider.
        MULT is equal to the programmed value
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_PULL_CFG0
    addr: 0x800
    size_bits: 32
    description: pad pull control register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0xaaaaaaaa
    fields:
    - !Field
      name: PA00_PULL
      bit_offset: 0
      bit_width: 2
      description: PA00 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_PULL
      bit_offset: 2
      bit_width: 2
      description: PA01 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_PULL
      bit_offset: 4
      bit_width: 2
      description: PA02 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_PULL
      bit_offset: 6
      bit_width: 2
      description: PA03 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_PULL
      bit_offset: 8
      bit_width: 2
      description: PA04 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_PULL
      bit_offset: 10
      bit_width: 2
      description: PA05 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_PULL
      bit_offset: 12
      bit_width: 2
      description: PA06 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_PULL
      bit_offset: 14
      bit_width: 2
      description: PA07 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA08_PULL
      bit_offset: 16
      bit_width: 2
      description: PA08 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_PULL
      bit_offset: 18
      bit_width: 2
      description: PA09 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_PULL
      bit_offset: 20
      bit_width: 2
      description: PA10 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_PULL
      bit_offset: 22
      bit_width: 2
      description: PA11 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_PULL
      bit_offset: 24
      bit_width: 2
      description: PA12 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_PULL
      bit_offset: 26
      bit_width: 2
      description: PA13 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_PULL
      bit_offset: 28
      bit_width: 2
      description: PA14 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_PULL
      bit_offset: 30
      bit_width: 2
      description: PA15 pull control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_PULL_CFG1
    addr: 0x804
    size_bits: 32
    description: pad pull control register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0xaaaaaaaa
    fields:
    - !Field
      name: PA16_PULL
      bit_offset: 0
      bit_width: 2
      description: PA16 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_PULL
      bit_offset: 2
      bit_width: 2
      description: PA17 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_PULL
      bit_offset: 4
      bit_width: 2
      description: PA18 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_PULL
      bit_offset: 6
      bit_width: 2
      description: PA19 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_PULL
      bit_offset: 8
      bit_width: 2
      description: PA20 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_PULL
      bit_offset: 10
      bit_width: 2
      description: PA21 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_PULL
      bit_offset: 12
      bit_width: 2
      description: PA22 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_PULL
      bit_offset: 14
      bit_width: 2
      description: PA23 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_PULL
      bit_offset: 16
      bit_width: 2
      description: PA24 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_PULL
      bit_offset: 18
      bit_width: 2
      description: PA25 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_PULL
      bit_offset: 20
      bit_width: 2
      description: PA26 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_PULL
      bit_offset: 22
      bit_width: 2
      description: PA27 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_PULL
      bit_offset: 24
      bit_width: 2
      description: PA28 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_PULL
      bit_offset: 26
      bit_width: 2
      description: PA29 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_PULL
      bit_offset: 28
      bit_width: 2
      description: PA30 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_PULL
      bit_offset: 30
      bit_width: 2
      description: PA31 pull control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_PULL_CFG2
    addr: 0x808
    size_bits: 32
    description: pad pull control register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0x2a
    fields:
    - !Field
      name: PB00_PULL
      bit_offset: 0
      bit_width: 2
      description: PB00 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_PULL
      bit_offset: 2
      bit_width: 2
      description: PB01 pull control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB02_PULL
      bit_offset: 4
      bit_width: 2
      description: PB02 pull control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: IO_CAP
    addr: 0x80c
    size_bits: 32
    description: io status capture register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PIN_RETENTION
      bit_offset: 0
      bit_width: 1
      description: Write 1 to capture pad output and output enable and the status
        will be saved in PIN_SLP_OEN0 PIN_SLP_OEN1 PIN_SLP_OUT0 and PIN_SLP_OUT1.
      read_allowed: false
      write_allowed: true
  - !Register
    name: PIO_DRV_CFG0
    addr: 0x810
    size_bits: 32
    description: pad drive strength register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA00_DRV
      bit_offset: 0
      bit_width: 1
      description: PA00 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_DRV
      bit_offset: 1
      bit_width: 1
      description: PA01 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_DRV
      bit_offset: 2
      bit_width: 1
      description: PA02 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_DRV
      bit_offset: 3
      bit_width: 1
      description: PA03 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_DRV
      bit_offset: 4
      bit_width: 1
      description: PA04 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_DRV
      bit_offset: 5
      bit_width: 1
      description: PA05 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_DRV
      bit_offset: 6
      bit_width: 1
      description: PA06 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_DRV
      bit_offset: 7
      bit_width: 1
      description: PA07 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA08_DRV
      bit_offset: 8
      bit_width: 1
      description: PA08 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_DRV
      bit_offset: 9
      bit_width: 1
      description: PA09 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_DRV
      bit_offset: 10
      bit_width: 1
      description: PA10 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_DRV
      bit_offset: 11
      bit_width: 1
      description: PA11 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_DRV
      bit_offset: 12
      bit_width: 1
      description: PA12 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_DRV
      bit_offset: 13
      bit_width: 1
      description: PA13 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_DRV
      bit_offset: 14
      bit_width: 1
      description: PA14 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_DRV
      bit_offset: 15
      bit_width: 1
      description: PA15 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA16_DRV
      bit_offset: 16
      bit_width: 1
      description: PA16 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_DRV
      bit_offset: 17
      bit_width: 1
      description: PA17 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_DRV
      bit_offset: 18
      bit_width: 1
      description: PA18 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_DRV
      bit_offset: 19
      bit_width: 1
      description: PA19 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_DRV
      bit_offset: 20
      bit_width: 1
      description: PA20 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_DRV
      bit_offset: 21
      bit_width: 1
      description: PA21 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_DRV
      bit_offset: 22
      bit_width: 1
      description: PA22 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_DRV
      bit_offset: 23
      bit_width: 1
      description: PA23 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_DRV
      bit_offset: 24
      bit_width: 1
      description: PA24 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_DRV
      bit_offset: 25
      bit_width: 1
      description: PA25 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_DRV
      bit_offset: 26
      bit_width: 1
      description: PA26 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_DRV
      bit_offset: 27
      bit_width: 1
      description: PA27 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_DRV
      bit_offset: 28
      bit_width: 1
      description: PA28 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_DRV
      bit_offset: 29
      bit_width: 1
      description: PA29 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_DRV
      bit_offset: 30
      bit_width: 1
      description: PA30 drive strength register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_DRV
      bit_offset: 31
      bit_width: 1
      description: PA31 drive strength register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_DRV_CFG1
    addr: 0x814
    size_bits: 32
    description: pad drive strength register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PB00_DRV
      bit_offset: 0
      bit_width: 1
      description: PB00 drive strengh register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_DRV
      bit_offset: 1
      bit_width: 1
      description: PB01 drive strengh register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB02_DRV
      bit_offset: 2
      bit_width: 1
      description: PB02 drive strengh register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_DRV_CFG2
    addr: 0x818
    size_bits: 32
    description: pad drive extra register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA06_DRV_EXTRA
      bit_offset: 6
      bit_width: 1
      description: Write 1 to enable extra driven on PA06
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_DRV_EXTRA
      bit_offset: 11
      bit_width: 1
      description: Write 1 to enable extra driven on PA11
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_DRV_EXTRA
      bit_offset: 19
      bit_width: 1
      description: Write 1 to enable extra driven on PA19
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_DRV_EXTRA
      bit_offset: 26
      bit_width: 1
      description: Write 1 to enable extra driven on PA26
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_DRV_EXTRA
      bit_offset: 27
      bit_width: 1
      description: Write 1 to enable extra driven on PA27
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_CFG_MISC
    addr: 0x81c
    size_bits: 32
    description: pin misc control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x3
    fields:
    - !Field
      name: PB00_AE
      bit_offset: 0
      bit_width: 1
      description: Enable PB00 analog function
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_AE
      bit_offset: 1
      bit_width: 1
      description: Enable PB01 analog function
      read_allowed: true
      write_allowed: true
    - !Field
      name: PSYNC
      bit_offset: 15
      bit_width: 1
      description: when 1, bypass first stage of synchronization of DMA pin trigger
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB02_MODE
      bit_offset: 16
      bit_width: 1
      description: chip mode pin function select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BOOT_MODE
        1: ANTENNA
    - !Field
      name: TRX_EN_INV
      bit_offset: 18
      bit_width: 1
      description: inverse TX_EN &amp; RX_EN pin mux output polarity
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TRX_EN_POL
    - !Field
      name: RFE_INV
      bit_offset: 19
      bit_width: 1
      description: Inverse RFE polarity
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RFE_POL
  - !Register
    name: PIO_WAKEUP_LVL0
    addr: 0x820
    size_bits: 32
    description: pin wakeup polarity register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA00_WAKEUP_LVL
      bit_offset: 0
      bit_width: 1
      description: 'Control the wake up polarity of PA00 in sleep mode. 0: high level
        wakeup, 1: low level wakeup'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_WAKEUP_LVL
      bit_offset: 1
      bit_width: 1
      description: Control the wake up polarity of PA01 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_WAKEUP_LVL
      bit_offset: 2
      bit_width: 1
      description: Control the wake up polarity of PA02 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_WAKEUP_LVL
      bit_offset: 3
      bit_width: 1
      description: Control the wake up polarity of PA03 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_WAKEUP_LVL
      bit_offset: 4
      bit_width: 1
      description: Control the wake up polarity of PA04 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_WAKEUP_LVL
      bit_offset: 5
      bit_width: 1
      description: Control the wake up polarity of PA05 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_WAKEUP_LVL
      bit_offset: 6
      bit_width: 1
      description: Control the wake up polarity of PA06 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_WAKEUP_LVL
      bit_offset: 7
      bit_width: 1
      description: Control the wake up polarity of PA07 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA08_WAKEUP_LVL
      bit_offset: 8
      bit_width: 1
      description: Control the wake up polarity of PA08 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_WAKEUP_LVL
      bit_offset: 9
      bit_width: 1
      description: Control the wake up polarity of PA09 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_WAKEUP_LVL
      bit_offset: 10
      bit_width: 1
      description: Control the wake up polarity of PA10 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_WAKEUP_LVL
      bit_offset: 11
      bit_width: 1
      description: Control the wake up polarity of PA11 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_WAKEUP_LVL
      bit_offset: 12
      bit_width: 1
      description: Control the wake up polarity of PA12 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_WAKEUP_LVL
      bit_offset: 13
      bit_width: 1
      description: Control the wake up polarity of PA13 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_WAKEUP_LVL
      bit_offset: 14
      bit_width: 1
      description: Control the wake up polarity of PA14 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_WAKEUP_LVL
      bit_offset: 15
      bit_width: 1
      description: Control the wake up polarity of PA15 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA16_WAKEUP_LVL
      bit_offset: 16
      bit_width: 1
      description: Control the wake up polarity of PA16 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_WAKEUP_LVL
      bit_offset: 17
      bit_width: 1
      description: Control the wake up polarity of PA17 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_WAKEUP_LVL
      bit_offset: 18
      bit_width: 1
      description: Control the wake up polarity of PA18 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_WAKEUP_LVL
      bit_offset: 19
      bit_width: 1
      description: Control the wake up polarity of PA19 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_WAKEUP_LVL
      bit_offset: 20
      bit_width: 1
      description: Control the wake up polarity of PA20 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_WAKEUP_LVL
      bit_offset: 21
      bit_width: 1
      description: Control the wake up polarity of PA21 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_WAKEUP_LVL
      bit_offset: 22
      bit_width: 1
      description: Control the wake up polarity of PA22 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_WAKEUP_LVL
      bit_offset: 23
      bit_width: 1
      description: Control the wake up polarity of PA23 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_WAKEUP_LVL
      bit_offset: 24
      bit_width: 1
      description: Control the wake up polarity of PA24 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_WAKEUP_LVL
      bit_offset: 25
      bit_width: 1
      description: Control the wake up polarity of PA25 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_WAKEUP_LVL
      bit_offset: 26
      bit_width: 1
      description: Control the wake up polarity of PA26 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_WAKEUP_LVL
      bit_offset: 27
      bit_width: 1
      description: Control the wake up polarity of PA27 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_WAKEUP_LVL
      bit_offset: 28
      bit_width: 1
      description: Control the wake up polarity of PA28 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_WAKEUP_LVL
      bit_offset: 29
      bit_width: 1
      description: Control the wake up polarity of PA29 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_WAKEUP_LVL
      bit_offset: 30
      bit_width: 1
      description: Control the wake up polarity of PA30 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_WAKEUP_LVL
      bit_offset: 31
      bit_width: 1
      description: Control the wake up polarity of PA31 in sleep mode.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_WAKEUP_LVL1
    addr: 0x824
    size_bits: 32
    description: pin wakeup polarity register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PB00_WAKEUP_LVL
      bit_offset: 0
      bit_width: 1
      description: Control the wake up polarity of PB01 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_WAKEUP_LVL
      bit_offset: 1
      bit_width: 1
      description: Control the wake up polarity of PB02 in sleep mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB02_WAKEUP_LVL
      bit_offset: 2
      bit_width: 1
      description: Control the wake up polarity of PB03 in sleep mode.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_IE_CFG0
    addr: 0x828
    size_bits: 32
    description: pad input enable register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PA00_IE
      bit_offset: 0
      bit_width: 1
      description: PA00 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_IE
      bit_offset: 1
      bit_width: 1
      description: PA01 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_IE
      bit_offset: 2
      bit_width: 1
      description: PA02 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_IE
      bit_offset: 3
      bit_width: 1
      description: PA03 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_IE
      bit_offset: 4
      bit_width: 1
      description: PA04 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_IE
      bit_offset: 5
      bit_width: 1
      description: PA05 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_IE
      bit_offset: 6
      bit_width: 1
      description: PA06 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_IE
      bit_offset: 7
      bit_width: 1
      description: PA07 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA08_IE
      bit_offset: 8
      bit_width: 1
      description: PA08 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_IE
      bit_offset: 9
      bit_width: 1
      description: PA09 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_IE
      bit_offset: 10
      bit_width: 1
      description: PA10 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_IE
      bit_offset: 11
      bit_width: 1
      description: PA11 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_IE
      bit_offset: 12
      bit_width: 1
      description: PA12 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_IE
      bit_offset: 13
      bit_width: 1
      description: PA13 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_IE
      bit_offset: 14
      bit_width: 1
      description: PA14 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_IE
      bit_offset: 15
      bit_width: 1
      description: PA15 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA16_IE
      bit_offset: 16
      bit_width: 1
      description: PA16 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_IE
      bit_offset: 17
      bit_width: 1
      description: PA17 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_IE
      bit_offset: 18
      bit_width: 1
      description: PA18 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_IE
      bit_offset: 19
      bit_width: 1
      description: PA19 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_IE
      bit_offset: 20
      bit_width: 1
      description: PA20 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_IE
      bit_offset: 21
      bit_width: 1
      description: PA21 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_IE
      bit_offset: 22
      bit_width: 1
      description: PA22 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_IE
      bit_offset: 23
      bit_width: 1
      description: PA23 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_IE
      bit_offset: 24
      bit_width: 1
      description: PA24 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_IE
      bit_offset: 25
      bit_width: 1
      description: PA25 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_IE
      bit_offset: 26
      bit_width: 1
      description: PA26 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_IE
      bit_offset: 27
      bit_width: 1
      description: PA27 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_IE
      bit_offset: 28
      bit_width: 1
      description: PA28 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_IE
      bit_offset: 29
      bit_width: 1
      description: PA29 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_IE
      bit_offset: 30
      bit_width: 1
      description: PA30 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_IE
      bit_offset: 31
      bit_width: 1
      description: PA31 digital input enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_IE_CFG1
    addr: 0x82c
    size_bits: 32
    description: pad input enable register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0x7
    fields:
    - !Field
      name: PB00_IE
      bit_offset: 0
      bit_width: 1
      description: PB00 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_IE
      bit_offset: 1
      bit_width: 1
      description: PB01 digital input enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOOT_MODE_IE
      bit_offset: 2
      bit_width: 1
      description: PB02 input enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_FUNC_CFG0
    addr: 0x830
    size_bits: 32
    description: pin mux control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA00_FUNC
      bit_offset: 0
      bit_width: 3
      description: PA00 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_FUNC
      bit_offset: 4
      bit_width: 3
      description: PA01 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_FUNC
      bit_offset: 8
      bit_width: 3
      description: PA02 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_FUNC
      bit_offset: 12
      bit_width: 3
      description: PA03 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_FUNC
      bit_offset: 16
      bit_width: 3
      description: PA04 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_FUNC
      bit_offset: 20
      bit_width: 3
      description: PA05 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_FUNC
      bit_offset: 24
      bit_width: 3
      description: PA06 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_FUNC
      bit_offset: 28
      bit_width: 3
      description: PA07 function control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_FUNC_CFG1
    addr: 0x834
    size_bits: 32
    description: pin mux control register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA08_FUNC
      bit_offset: 0
      bit_width: 3
      description: PA08 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_FUNC
      bit_offset: 4
      bit_width: 3
      description: PA09 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_FUNC
      bit_offset: 8
      bit_width: 3
      description: PA10 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_FUNC
      bit_offset: 12
      bit_width: 3
      description: PA11 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_FUNC
      bit_offset: 16
      bit_width: 3
      description: PA12 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_FUNC
      bit_offset: 20
      bit_width: 3
      description: PA13 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_FUNC
      bit_offset: 24
      bit_width: 3
      description: PA14 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_FUNC
      bit_offset: 28
      bit_width: 3
      description: PA15 function control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_FUNC_CFG2
    addr: 0x838
    size_bits: 32
    description: pin mux control register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA16_FUNC
      bit_offset: 0
      bit_width: 3
      description: PA16 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_FUNC
      bit_offset: 4
      bit_width: 3
      description: PA17 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_FUNC
      bit_offset: 8
      bit_width: 3
      description: PA18 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_FUNC
      bit_offset: 12
      bit_width: 3
      description: PA19 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_FUNC
      bit_offset: 16
      bit_width: 3
      description: PA20 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_FUNC
      bit_offset: 20
      bit_width: 3
      description: PA21 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_FUNC
      bit_offset: 24
      bit_width: 3
      description: PA22 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_FUNC
      bit_offset: 28
      bit_width: 3
      description: PA23 function control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_FUNC_CFG3
    addr: 0x83c
    size_bits: 32
    description: pin mux control register 3
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA24_FUNC
      bit_offset: 0
      bit_width: 3
      description: PA24 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_FUNC
      bit_offset: 4
      bit_width: 3
      description: PA25 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_FUNC
      bit_offset: 8
      bit_width: 3
      description: PA26 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_FUNC
      bit_offset: 12
      bit_width: 3
      description: PA27 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_FUNC
      bit_offset: 16
      bit_width: 3
      description: PA28 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_FUNC
      bit_offset: 20
      bit_width: 3
      description: PA29 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_FUNC
      bit_offset: 24
      bit_width: 3
      description: PA30 function control register
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_FUNC
      bit_offset: 28
      bit_width: 3
      description: PA31 function control register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_WAKEUP_EN0
    addr: 0x840
    size_bits: 32
    description: pin function selection in power down mode register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PA00_WAKEUP_EN
      bit_offset: 0
      bit_width: 1
      description: Control GPIOA[31-0] as Wakeup source.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA01_WAKEUP_EN
      bit_offset: 1
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA02_WAKEUP_EN
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA03_WAKEUP_EN
      bit_offset: 3
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_WAKEUP_EN
      bit_offset: 4
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_WAKEUP_EN
      bit_offset: 5
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA06_WAKEUP_EN
      bit_offset: 6
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA07_WAKEUP_EN
      bit_offset: 7
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA08_WAKEUP_EN
      bit_offset: 8
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA09_WAKEUP_EN
      bit_offset: 9
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_WAKEUP_EN
      bit_offset: 10
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_WAKEUP_EN
      bit_offset: 11
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA12_WAKEUP_EN
      bit_offset: 12
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA13_WAKEUP_EN
      bit_offset: 13
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA14_WAKEUP_EN
      bit_offset: 14
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA15_WAKEUP_EN
      bit_offset: 15
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA16_WAKEUP_EN
      bit_offset: 16
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA17_WAKEUP_EN
      bit_offset: 17
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_WAKEUP_EN
      bit_offset: 18
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_WAKEUP_EN
      bit_offset: 19
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA20_WAKEUP_EN
      bit_offset: 20
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA21_WAKEUP_EN
      bit_offset: 21
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA22_WAKEUP_EN
      bit_offset: 22
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA23_WAKEUP_EN
      bit_offset: 23
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_WAKEUP_EN
      bit_offset: 24
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_WAKEUP_EN
      bit_offset: 25
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA26_WAKEUP_EN
      bit_offset: 26
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA27_WAKEUP_EN
      bit_offset: 27
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA28_WAKEUP_EN
      bit_offset: 28
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA29_WAKEUP_EN
      bit_offset: 29
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA30_WAKEUP_EN
      bit_offset: 30
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA31_WAKEUP_EN
      bit_offset: 31
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_WAKEUP_EN1
    addr: 0x844
    size_bits: 32
    description: pin function selection in power down mode register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PB00_WAKEUP_EN
      bit_offset: 0
      bit_width: 1
      description: Control GPIOB as Wakeup source.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB01_WAKEUP_EN
      bit_offset: 1
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PB02_WAKEUP_EN
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA04_32K_OE
      bit_offset: 4
      bit_width: 1
      description: 32K clock output enable. When this bit is set to 1 PA04 will output
        32k clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA05_XTAL_OE
      bit_offset: 5
      bit_width: 1
      description: XTAL clock output enable. When this bit is set to 1 PA05 will output
        XTAL clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA10_32K_OE
      bit_offset: 10
      bit_width: 1
      description: 32K clock output enable. When this bit is set to 1 PA10 (GPIO10)
        will output 32k clock. At this time PIN_CTRL register is not effective to
        control this IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA11_XTAL_OE
      bit_offset: 11
      bit_width: 1
      description: XTAL clock output enable. When this bit is set to 1 PA11 will output
        XTAL clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA18_32K_OE
      bit_offset: 18
      bit_width: 1
      description: 32K clock output enable. When this bit is set to 1 PA18 will output
        32k clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA19_XTAL_OE
      bit_offset: 19
      bit_width: 1
      description: XTAL clock output enable. When this bit is set to 1 PA19 will output
        XTAL clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA24_32K_OE
      bit_offset: 24
      bit_width: 1
      description: 32K clock output enable. When this bit is set to 1 PA24 will output
        32k clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA25_XTAL_OE
      bit_offset: 25
      bit_width: 1
      description: XTAL clock output enable. When this bit is set to 1 PA25 will output
        XTAL clock. At this time PIN_CTRL register is not effective to control this
        IO's function.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDM_IO_SEL
      bit_offset: 31
      bit_width: 1
      description: pin status selection in power down mode
      read_allowed: true
      write_allowed: true
  - !Register
    name: PIO_CAP_OE0
    addr: 0x848
    size_bits: 32
    description: pin output enable status register 0 while captured by writing 1 to
      IO_CAP
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PA00_CAP_OE
      bit_offset: 0
      bit_width: 1
      description: PA00 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA01_CAP_OE
      bit_offset: 1
      bit_width: 1
      description: PA01 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA02_CAP_OE
      bit_offset: 2
      bit_width: 1
      description: PA02 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA03_CAP_OE
      bit_offset: 3
      bit_width: 1
      description: PA03 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA04_CAP_OE
      bit_offset: 4
      bit_width: 1
      description: PA04 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA05_CAP_OE
      bit_offset: 5
      bit_width: 1
      description: PA05 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA06_CAP_OE
      bit_offset: 6
      bit_width: 1
      description: PA06 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA07_CAP_OE
      bit_offset: 7
      bit_width: 1
      description: PA07 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA08_CAP_OE
      bit_offset: 8
      bit_width: 1
      description: PA08 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA09_CAP_OE
      bit_offset: 9
      bit_width: 1
      description: PA09 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA10_CAP_OE
      bit_offset: 10
      bit_width: 1
      description: PA10 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA11_CAP_OE
      bit_offset: 11
      bit_width: 1
      description: PA11 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA12_CAP_OE
      bit_offset: 12
      bit_width: 1
      description: PA12 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA13_CAP_OE
      bit_offset: 13
      bit_width: 1
      description: PA13 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA14_CAP_OE
      bit_offset: 14
      bit_width: 1
      description: PA14 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA15_CAP_OE
      bit_offset: 15
      bit_width: 1
      description: PA15 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA16_CAP_OE
      bit_offset: 16
      bit_width: 1
      description: PA16 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA17_CAP_OE
      bit_offset: 17
      bit_width: 1
      description: PA17 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA18_CAP_OE
      bit_offset: 18
      bit_width: 1
      description: PA18 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA19_CAP_OE
      bit_offset: 19
      bit_width: 1
      description: PA19 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA20_CAP_OE
      bit_offset: 20
      bit_width: 1
      description: PA20 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA21_CAP_OE
      bit_offset: 21
      bit_width: 1
      description: PA21 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA22_CAP_OE
      bit_offset: 22
      bit_width: 1
      description: PA22 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA23_CAP_OE
      bit_offset: 23
      bit_width: 1
      description: PA23 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA24_CAP_OE
      bit_offset: 24
      bit_width: 1
      description: PA24 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA25_CAP_OE
      bit_offset: 25
      bit_width: 1
      description: PA25 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA26_CAP_OE
      bit_offset: 26
      bit_width: 1
      description: PA26 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA27_CAP_OE
      bit_offset: 27
      bit_width: 1
      description: PA27 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA28_CAP_OE
      bit_offset: 28
      bit_width: 1
      description: PA28 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA29_CAP_OE
      bit_offset: 29
      bit_width: 1
      description: PA29 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA30_CAP_OE
      bit_offset: 30
      bit_width: 1
      description: PA30 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA31_CAP_OE
      bit_offset: 31
      bit_width: 1
      description: PA31 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
  - !Register
    name: PIO_CAP_OE1
    addr: 0x84c
    size_bits: 32
    description: pin output enable status register 1 while captured by writing 1 to
      IO_CAP
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PB00_CAP_OE
      bit_offset: 0
      bit_width: 1
      description: PB00 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PB01_CAP_OE
      bit_offset: 1
      bit_width: 1
      description: PB01 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PB02_CAP_OE
      bit_offset: 2
      bit_width: 1
      description: PB02 output enable status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
  - !Register
    name: PIO_CAP_OUT0
    addr: 0x850
    size_bits: 32
    description: pin output status register 0 while captured by writing 1 to IO_CAP
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PA00_CAP_OUT
      bit_offset: 0
      bit_width: 1
      description: PA00 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA01_CAP_OUT
      bit_offset: 1
      bit_width: 1
      description: PA01 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA02_CAP_OUT
      bit_offset: 2
      bit_width: 1
      description: PA02 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA03_CAP_OUT
      bit_offset: 3
      bit_width: 1
      description: PA03 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA04_CAP_OUT
      bit_offset: 4
      bit_width: 1
      description: PA04 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA05_CAP_OUT
      bit_offset: 5
      bit_width: 1
      description: PA05 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA06_CAP_OUT
      bit_offset: 6
      bit_width: 1
      description: PA06 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA07_CAP_OUT
      bit_offset: 7
      bit_width: 1
      description: PA07 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA08_CAP_OUT
      bit_offset: 8
      bit_width: 1
      description: PA08 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA09_CAP_OUT
      bit_offset: 9
      bit_width: 1
      description: PA09 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA10_CAP_OUT
      bit_offset: 10
      bit_width: 1
      description: PA10 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA11_CAP_OUT
      bit_offset: 11
      bit_width: 1
      description: PA11 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA12_CAP_OUT
      bit_offset: 12
      bit_width: 1
      description: PA12 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA13_CAP_OUT
      bit_offset: 13
      bit_width: 1
      description: PA13 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA14_CAP_OUT
      bit_offset: 14
      bit_width: 1
      description: PA14 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA15_CAP_OUT
      bit_offset: 15
      bit_width: 1
      description: PA15 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA16_CAP_OUT
      bit_offset: 16
      bit_width: 1
      description: PA16 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA17_CAP_OUT
      bit_offset: 17
      bit_width: 1
      description: PA17 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA18_CAP_OUT
      bit_offset: 18
      bit_width: 1
      description: PA18 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA19_CAP_OUT
      bit_offset: 19
      bit_width: 1
      description: PA19 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA20_CAP_OUT
      bit_offset: 20
      bit_width: 1
      description: PA20 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA21_CAP_OUT
      bit_offset: 21
      bit_width: 1
      description: PA21 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA22_CAP_OUT
      bit_offset: 22
      bit_width: 1
      description: PA22 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA23_CAP_OUT
      bit_offset: 23
      bit_width: 1
      description: PA23 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA24_CAP_OUT
      bit_offset: 24
      bit_width: 1
      description: PA24 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA25_CAP_OUT
      bit_offset: 25
      bit_width: 1
      description: PA25 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA26_CAP_OUT
      bit_offset: 26
      bit_width: 1
      description: PA26 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA27_CAP_OUT
      bit_offset: 27
      bit_width: 1
      description: PA27 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA28_CAP_OUT
      bit_offset: 28
      bit_width: 1
      description: PA28 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA29_CAP_OUT
      bit_offset: 29
      bit_width: 1
      description: PA29 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA30_CAP_OUT
      bit_offset: 30
      bit_width: 1
      description: PA30 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PA31_CAP_OUT
      bit_offset: 31
      bit_width: 1
      description: PA31 output status captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
  - !Register
    name: PIO_CAP_OUT1
    addr: 0x854
    size_bits: 32
    description: pin output status register 0 while captured by writing 1 to IO_CAP
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PB00_CAP_OUT
      bit_offset: 0
      bit_width: 1
      description: PB00 output status while captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PB01_CAP_OUT
      bit_offset: 1
      bit_width: 1
      description: PB01 output status while captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
    - !Field
      name: PB02_CAP_OUT
      bit_offset: 2
      bit_width: 1
      description: PB02 output status while captured by writing 1 to IO_CAP
      read_allowed: true
      write_allowed: false
  - !Register
    name: RST_CAUSE_SRC
    addr: 0x858
    size_bits: 32
    description: reset source status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RESET_CAUSE
      bit_offset: 0
      bit_width: 9
      description: reset source indicator. xxxxxxxx1b = Power-on Reset; xxxxxxx1xb
        = Brown-Down Reset; xxxxxx1xxb = External pin Reset; xxxxx1xxxb = Watch Dog
        Reset; xxxx1xxxxb = Lock Up Reset; xxx1xxxxxb = Reboot Reset; xx1000000b =
        CPU system Reset requirement; x10000000b = Wake Up reset 10000000b = CPU software
        Reset;
      read_allowed: true
      write_allowed: false
    - !Field
      name: RST_CAUSE_CLR
      bit_offset: 31
      bit_width: 1
      description: Write '1' clear RESET_CAUSE bits;
      read_allowed: false
      write_allowed: true
  - !Register
    name: PMU_CTRL0
    addr: 0x85c
    size_bits: 32
    description: power management uinit control register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0x80000000
    fields:
    - !Field
      name: MEM0_DIS
      bit_offset: 0
      bit_width: 1
      description: power down sram memory block 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM1_DIS
      bit_offset: 1
      bit_width: 1
      description: power down sram memory block 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM2_DIS
      bit_offset: 2
      bit_width: 1
      description: power down sram memory block 2
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM3_DIS
      bit_offset: 3
      bit_width: 1
      description: power down sram memory block 3
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM4_DIS
      bit_offset: 4
      bit_width: 1
      description: power down sram memory block 4
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM5_DIS
      bit_offset: 5
      bit_width: 1
      description: power down sram memory block 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM6_DIS
      bit_offset: 6
      bit_width: 1
      description: power down sram memory block 6
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM7_DIS
      bit_offset: 7
      bit_width: 1
      description: power down sram memory block 7
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM8_DIS
      bit_offset: 8
      bit_width: 1
      description: power down sram memory block 8
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM9_DIS
      bit_offset: 9
      bit_width: 1
      description: power down sram memory block 9
      read_allowed: true
      write_allowed: true
    - !Field
      name: BLE_DIS
      bit_offset: 16
      bit_width: 1
      description: power down BLE
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_DIS
      bit_offset: 17
      bit_width: 1
      description: power down FIR buffer
      read_allowed: true
      write_allowed: true
    - !Field
      name: FSP_DIS
      bit_offset: 18
      bit_width: 1
      description: power down FSP
      read_allowed: true
      write_allowed: true
    - !Field
      name: MCU_MODE
      bit_offset: 20
      bit_width: 1
      description: power control of BG, V2I, VREG_A, VREG_D
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ANA_PWRON
        1: ANA_PWROFF
    - !Field
      name: OSC_INT_EN
      bit_offset: 26
      bit_width: 1
      description: 1 to enable OSC_EN as interrupt and wakeup source
      read_allowed: true
      write_allowed: true
    - !Field
      name: RTC_SEC_WAKEUP_EN
      bit_offset: 27
      bit_width: 1
      description: 1 to enable RTC interrupt as wakeup source
      read_allowed: true
      write_allowed: true
    - !Field
      name: WAKEUP_EN
      bit_offset: 28
      bit_width: 1
      description: 1 to enable sleep wake up source
      read_allowed: true
      write_allowed: true
    - !Field
      name: PMU_EN
      bit_offset: 29
      bit_width: 1
      description: 1 to enable chip power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: RETENTION_EN
      bit_offset: 30
      bit_width: 1
      description: 1 to enable all CPU registers to be retentioned in sleep mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOND_EN
      bit_offset: 31
      bit_width: 1
      description: 1 to enable FSP_BOND_EN bond option
      read_allowed: true
      write_allowed: true
  - !Register
    name: PMU_CTRL1
    addr: 0x860
    size_bits: 32
    description: power management uinit control register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0xff0
    fields:
    - !Field
      name: RCO32K_DIS
      bit_offset: 0
      bit_width: 1
      description: 1 to switch off 32K RCO power
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL32K_DIS
      bit_offset: 1
      bit_width: 1
      description: 1 to switch off 32K XTAL power
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_DIS
      bit_offset: 2
      bit_width: 1
      description: 1 to switch off XTAL of digital power
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC32M_DIS
      bit_offset: 3
      bit_width: 1
      description: 1 to switch off 32M OSC power
      read_allowed: true
      write_allowed: true
    - !Field
      name: USBPLL_DIS
      bit_offset: 4
      bit_width: 1
      description: 1 to switch off USB 48M PLL power
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_BUF_DIS
      bit_offset: 5
      bit_width: 1
      description: 1 to switch off buffer in SD ADC
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_BG_DIS
      bit_offset: 6
      bit_width: 1
      description: 1 to switch off bandgap in SD ADC
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_DIS
      bit_offset: 7
      bit_width: 1
      description: 1 to switch off SD ADC
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_VCM_DIS
      bit_offset: 8
      bit_width: 1
      description: 1 to switch off VCM DRV in SD ADC
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_VREF_DIS
      bit_offset: 9
      bit_width: 1
      description: 1 to switch off VREF DRV in SD ADC
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAC_DIS
      bit_offset: 10
      bit_width: 1
      description: 1 to switch off DAC
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP_SEN_DIS
      bit_offset: 11
      bit_width: 1
      description: 1 to switch off CAP_SEN
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_CTRL
      bit_offset: 16
      bit_width: 4
      description: BUCK power control, 0x00 to power on, and 0x0F to power down
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCO32K_PDM_DIS
      bit_offset: 30
      bit_width: 1
      description: In sleep mode this bit ORs with DIS_RCO_32K to control the RCO
        32K power
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL32K_PDM_DIS
      bit_offset: 31
      bit_width: 1
      description: In sleep mode this bit ORs with DIS_XTAL32K to control the XTAL32
        power
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANA_EN
    addr: 0x864
    size_bits: 32
    description: analog setting register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BOD_AMP_EN
      bit_offset: 0
      bit_width: 1
      description: Enable the AMP of browned out detector
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_EN
      bit_offset: 1
      bit_width: 1
      description: Enable browned out detector
      read_allowed: true
      write_allowed: true
    - !Field
      name: BAT_MON_EN
      bit_offset: 2
      bit_width: 1
      description: Enable battery monitor
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP0_EN
      bit_offset: 3
      bit_width: 1
      description: Enable comparator 0
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP1_EN
      bit_offset: 4
      bit_width: 1
      description: Enable comparator 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOR_AMP_EN
      bit_offset: 5
      bit_width: 1
      description: Enable the AMP of browned reset detector
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOR_EN
      bit_offset: 6
      bit_width: 1
      description: Enable browned reset detector
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP0_REF
      bit_offset: 8
      bit_width: 4
      description: acmp0 reference voltage selection, vref0=Acmp_vref*ACMP0_REF/16
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP1_REF
      bit_offset: 12
      bit_width: 4
      description: acmp1 reference voltage selection, vref1=Acmp_vref*ACMP1_REF/16
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP0_HYST_EN
      bit_offset: 16
      bit_width: 1
      description: Hysteresis enable of ACMP0 when 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP1_HYST_EN
      bit_offset: 17
      bit_width: 1
      description: Hysteresis enable of ACMP1 when 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP_VREF_SEL
      bit_offset: 18
      bit_width: 1
      description: Acmp_vref selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: BOD_THR
      bit_offset: 19
      bit_width: 2
      description: Browned-out detector threshold voltages, when VDD is lower than
        this voltage, BOD_OUT interrupt happens. And the detector has a hysteresis.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BOD_THR0
        1: BOD_THR1
        2: BOD_THR2
        3: BOD_THR3
    - !Field
      name: BOR_THR
      bit_offset: 21
      bit_width: 2
      description: Browned-out reset threshold voltages
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BOR_THR0
        1: BOR_THR1
        2: BOR_THR2
        3: BOR_THR3
    - !Field
      name: ACMP0_OUT
      bit_offset: 24
      bit_width: 1
      description: Comparator 0 output.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ACMP1_OUT
      bit_offset: 25
      bit_width: 1
      description: Comparator 1 output.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ACMP0_EDGE_SEL
      bit_offset: 26
      bit_width: 2
      description: ACMP0 interrupt edge selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: POSEDGE
        1: NEGEDGE
        2: BOTHEDGE
    - !Field
      name: ACMP1_EDGE_SEL
      bit_offset: 28
      bit_width: 2
      description: ACMP1 interrupt edge selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP0_INTEN
      bit_offset: 30
      bit_width: 1
      description: 1 to enable ACMP0 interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACMP1_INTEN
      bit_offset: 31
      bit_width: 1
      description: 1 to enable ACMP1 interrupt
      read_allowed: true
      write_allowed: true
  - !Register
    name: XTAL32K_CTRL
    addr: 0x868
    size_bits: 32
    description: crystal 32K control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x3023
    fields:
    - !Field
      name: XTAL32K_ICTRL
      bit_offset: 0
      bit_width: 6
      description: Xtal 32 gm cell current bias Y
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL32K_INJ
      bit_offset: 6
      bit_width: 2
      description: Xtal 32KHz clk injection mode1xb = external sine wave clock
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ONCHIP_OSC
        1: EXT_DIG_CLK
    - !Field
      name: XTAL32K_LOAD_CAP
      bit_offset: 8
      bit_width: 6
      description: load cap selection of xtal32
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL32K_EXTRA_CAP
      bit_offset: 14
      bit_width: 1
      description: add extra xtal32 load cap
      read_allowed: true
      write_allowed: true
  - !Register
    name: USB_CFG
    addr: 0x86c
    size_bits: 32
    description: USB configuration register
    read_allowed: true
    write_allowed: true
    reset_value: 0x32
    fields:
    - !Field
      name: DPPUEN_B_PHY_POL
      bit_offset: 0
      bit_width: 1
      description: drive high to inverse the polarity of the connection
      read_allowed: true
      write_allowed: true
    - !Field
      name: DPPUEN_B_PHY_SEL
      bit_offset: 1
      bit_width: 1
      description: The control source selection for pull-up resistor
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BY_REG
        1: BY_USBCTRL
    - !Field
      name: USB_VBUS
      bit_offset: 3
      bit_width: 1
      description: USB connection voltage selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: USB_PHYSTDBY
      bit_offset: 4
      bit_width: 1
      description: 1 to enable USB_PHY in standby mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 'ON'
        1: 'OFF'
    - !Field
      name: USB_PHYSTDBY_WEN
      bit_offset: 5
      bit_width: 1
      description: 1 to enable USB_PHYSTDBY control by register
      read_allowed: true
      write_allowed: true
  - !Register
    name: PMU_CTRL2
    addr: 0x880
    size_bits: 32
    description: power management uinit control register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0x403ff0ff
    fields:
    - !Field
      name: BG_PDM_DIS
      bit_offset: 0
      bit_width: 1
      description: 1 to power down bandcap in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: V2I_PDM_DIS
      bit_offset: 1
      bit_width: 1
      description: 1 to power down V2I in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREG_A_PDM_DIS
      bit_offset: 2
      bit_width: 1
      description: 1 to power down VREG_A in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREG_D_PDM_DIS
      bit_offset: 3
      bit_width: 1
      description: 1 to power down VREG_D in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL_PDM_DIS
      bit_offset: 4
      bit_width: 1
      description: 1 to power down XTAL in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC32M_PDM_DIS
      bit_offset: 5
      bit_width: 1
      description: 1 to power down OSC32M in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFAGC_ON
      bit_offset: 6
      bit_width: 1
      description: 1 to enable RFAGC
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_EN_SEL
      bit_offset: 7
      bit_width: 1
      description: RX_EN width selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EX_NOISE
        1: IN_NOISE
    - !Field
      name: BG_DIS
      bit_offset: 8
      bit_width: 1
      description: 1 to switch off bandcap power
      read_allowed: true
      write_allowed: true
    - !Field
      name: V2I_DIS
      bit_offset: 9
      bit_width: 1
      description: 1 to switch off V2I power
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREG_A_DIS
      bit_offset: 10
      bit_width: 1
      description: 1 to switch off VREG_A power
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREG_D_DIS
      bit_offset: 11
      bit_width: 1
      description: 1 to switch off VREG_D power
      read_allowed: true
      write_allowed: true
    - !Field
      name: LO_DIS
      bit_offset: 12
      bit_width: 1
      description: 1 to switch off LO power
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_DIS
      bit_offset: 13
      bit_width: 1
      description: 1 to switch off VCO power
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_PK_DIS
      bit_offset: 14
      bit_width: 1
      description: 1 to switch off PA peek detector power
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_DIS
      bit_offset: 15
      bit_width: 1
      description: 1 to switch off PA power
      read_allowed: true
      write_allowed: true
    - !Field
      name: LNA_DIS
      bit_offset: 16
      bit_width: 1
      description: 1 to switch off LNA power
      read_allowed: true
      write_allowed: true
    - !Field
      name: MIXER_DIS
      bit_offset: 17
      bit_width: 1
      description: 1 to switch off MIXER power
      read_allowed: true
      write_allowed: true
    - !Field
      name: PKDET_DIS
      bit_offset: 18
      bit_width: 1
      description: 1 to switch off RRF and PPF peek detector power
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_DIS
      bit_offset: 19
      bit_width: 1
      description: 1 to switch off PPF power
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAR_DIS
      bit_offset: 20
      bit_width: 1
      description: 1 to switch off SAR ADC power
      read_allowed: true
      write_allowed: true
    - !Field
      name: RC_CAL_DIS
      bit_offset: 21
      bit_width: 1
      description: 1 to switch off RCCAL power
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLSH_DIS
      bit_offset: 29
      bit_width: 1
      description: 1 to switch off flash power
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLSH_PDM_DIS
      bit_offset: 30
      bit_width: 1
      description: 1 to power down flash VDD25 in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: SEL_PD
      bit_offset: 31
      bit_width: 1
      description: power control selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: HW_PWR
        1: SW_PWR
  - !Register
    name: ANA_CTRL1
    addr: 0x884
    size_bits: 32
    description: IVREF and DVREG setting register
    read_allowed: true
    write_allowed: true
    reset_value: 0xe4d98000
    fields:
    - !Field
      name: VDD_PMU_SET_PDM
      bit_offset: 0
      bit_width: 2
      description: Vdd_pmu while in power down
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_PMU_SET
      bit_offset: 2
      bit_width: 2
      description: Vdd_pmu while wakeup
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_MEM_SET_PDM
      bit_offset: 4
      bit_width: 2
      description: Vdd_mem while in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_MEM_SET
      bit_offset: 6
      bit_width: 2
      description: Vdd_mem while wakeup
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_PMU_SET_EXTRA
      bit_offset: 8
      bit_width: 1
      description: extra high setting for vdd_pmu
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_MEM_SET_EXTRA
      bit_offset: 9
      bit_width: 1
      description: extra high setting for vdd_mem
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_PMU_SET_ULTRA_LOW
      bit_offset: 10
      bit_width: 1
      description: ultra low setting for vdd_pmu
      read_allowed: true
      write_allowed: true
    - !Field
      name: VDD_PMU_MEM_SW
      bit_offset: 11
      bit_width: 1
      description: 1 to close the switch betwwen vdd_omu and vdd_mem
      read_allowed: true
      write_allowed: true
    - !Field
      name: IV_BG_SEL
      bit_offset: 12
      bit_width: 4
      description: VBG voltage select-
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDM_DIS_BUCK
      bit_offset: 16
      bit_width: 1
      description: 1 to power off buck in power down mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_PD_CCM
      bit_offset: 17
      bit_width: 1
      description: 0 buck in CCM mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_PD_DCM
      bit_offset: 18
      bit_width: 1
      description: 0 buck in DCM mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: IV_IREF_SEL
      bit_offset: 19
      bit_width: 2
      description: Reference current select
      read_allowed: true
      write_allowed: true
    - !Field
      name: IV_VREG11_SET
      bit_offset: 21
      bit_width: 3
      description: VREG11 setting
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTAL32K_FORCE_RDY
      bit_offset: 24
      bit_width: 1
      description: Xtal32k ready from register
      read_allowed: true
      write_allowed: true
    - !Field
      name: X32_SMT_EN
      bit_offset: 25
      bit_width: 1
      description: 1 to enable schmidt trigger in xtal32
      read_allowed: true
      write_allowed: true
    - !Field
      name: BM_X32BUF
      bit_offset: 26
      bit_width: 2
      description: Xtal 32 buffer current bias
      read_allowed: true
      write_allowed: true
    - !Field
      name: DVREG11_SET_DIG
      bit_offset: 28
      bit_width: 3
      description: Vregd set
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUCK_DPD
      bit_offset: 31
      bit_width: 1
      description: ZC control select
      read_allowed: true
      write_allowed: true
  - !Register
    name: MISC
    addr: 0x890
    size_bits: 32
    description: MISC register
    read_allowed: true
    write_allowed: true
    reset_value: 0x3000000
    fields:
    - !Field
      name: RCO_PWR_MODE
      bit_offset: 0
      bit_width: 2
      description: RCO VDD selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RCO_PWR_HIGH
        2: RCO_PWR_MIDDLE
        3: RCO_PWR_LOW
    - !Field
      name: EN_SWD
      bit_offset: 16
      bit_width: 1
      description: enable swd register when SWD is selected in PIO_FUNC_CTRL
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: DIS_FLSH_POWER
      bit_offset: 17
      bit_width: 1
      description: flash power disable
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLE
        1: DISABLE
    - !Field
      name: DIS_USB_PULLUP
      bit_offset: 18
      bit_width: 1
      description: USB pull resister connection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONNECT
        1: DISCONNECT
    - !Field
      name: DPPU_OPT_SEL
      bit_offset: 24
      bit_width: 1
      description: 'pull up strength source. 0: from DPPU_OPT_POL, 1: from usb device'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RES1P2K
        1: RES2P3K
    - !Field
      name: DPPU_OPT_POL
      bit_offset: 25
      bit_width: 1
      description: swap pull up strength value
      read_allowed: true
      write_allowed: true
- !Module
  name: WDT
  description: wdog
  base_addr: 0x40001000
  size: 0x24
  registers:
  - !Register
    name: LOAD
    addr: 0x0
    size_bits: 32
    description: watch dog counter start value register
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: LOAD
      bit_offset: 0
      bit_width: 32
      description: Contain the value from which the counter is to decrement. When
        this register is written to the count is immediately restarted from the new
        value. The minimum valid value is 1.
      read_allowed: true
      write_allowed: true
  - !Register
    name: VALUE
    addr: 0x4
    size_bits: 32
    description: watch dog counter value register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1fffffff
    fields:
    - !Field
      name: VALUE
      bit_offset: 0
      bit_width: 32
      description: The current value of the decrementing counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL
    addr: 0x8
    size_bits: 32
    description: watch dog control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTEN
      bit_offset: 0
      bit_width: 1
      description: Enable the interrupt event WDOGINT. Set HIGH to enable the counter
        and the interrupt and set LOW to disable the counter and interrupt. Reloads
        the counter from the value in WDOGLOAD when the interrupt is enabled, and
        was previously disabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESEN
      bit_offset: 1
      bit_width: 1
      description: Enable watchdog reset output WDOGRES. Acts as a mask for the reset
        output. Set HIGH to enablethe reset and LOW to disable the reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_CLR
    addr: 0xc
    size_bits: 32
    description: interrupt clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTCLR
      bit_offset: 0
      bit_width: 1
      description: A write of any value to the Register clears the watchdog interrupt
        and reloads the counter from the value in WDOGLOAD.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_RAW
    addr: 0x10
    size_bits: 32
    description: raw interrupt status register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RAWINTSTAT
      bit_offset: 0
      bit_width: 1
      description: Raw interrupt status from the counter
      read_allowed: true
      write_allowed: false
  - !Register
    name: MIS
    addr: 0x14
    size_bits: 32
    description: interrupt mask register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MASKINTSTAT
      bit_offset: 0
      bit_width: 1
      description: Enabled interrupt status from the counter
      read_allowed: true
      write_allowed: true
  - !Register
    name: LOCK
    addr: 0x20
    size_bits: 32
    description: watch dog lock register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: LOCK_31_0
      bit_offset: 0
      bit_width: 32
      description: Writing 0x1ACCE551to this register enables write access to all
        other registers.
      read_allowed: true
      write_allowed: true
- !Module
  name: CTIMER0
  description: timer
  base_addr: 0x40002000
  size: 0x78
  registers:
  - !Register
    name: IR
    addr: 0x0
    size_bits: 32
    description: Interrupt Register. The IR can be written to clear interrupts. The
      IR can be read to identify which of eight possible interrupt sources are pending.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0INT
      bit_offset: 0
      bit_width: 1
      description: Interrupt flag for match channel 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1INT
      bit_offset: 1
      bit_width: 1
      description: Interrupt flag for match channel 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2INT
      bit_offset: 2
      bit_width: 1
      description: Interrupt flag for match channel 2.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3INT
      bit_offset: 3
      bit_width: 1
      description: Interrupt flag for match channel 3.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR0INT
      bit_offset: 4
      bit_width: 1
      description: Interrupt flag for capture channel 0 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR1INT
      bit_offset: 5
      bit_width: 1
      description: Interrupt flag for capture channel 1 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR2INT
      bit_offset: 6
      bit_width: 1
      description: Interrupt flag for capture channel 2 event.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCR
    addr: 0x4
    size_bits: 32
    description: Timer Control Register. The TCR is used to control the Timer Counter
      functions. The Timer Counter can be disabled or reset through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CEN
      bit_offset: 0
      bit_width: 1
      description: Counter enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CRST
      bit_offset: 1
      bit_width: 1
      description: Counter reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: TC
    addr: 0x8
    size_bits: 32
    description: Timer Counter. The 32 bit TC is incremented every PR+1 cycles of
      the APB bus clock. The TC is controlled through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCVAL
      bit_offset: 0
      bit_width: 32
      description: Timer counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PR
    addr: 0xc
    size_bits: 32
    description: Prescale Register. When the Prescale Counter (PC) is equal to this
      value, the next clock increments the TC and clears the PC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PC
    addr: 0x10
    size_bits: 32
    description: Prescale Counter. The 32 bit PC is a counter which is incremented
      to the value stored in PR. When the value in PR is reached, the TC is incremented
      and the PC is cleared. The PC is observable and controllable through the bus
      interface.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PCVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCR
    addr: 0x14
    size_bits: 32
    description: Match Control Register. The MCR is used to control if an interrupt
      is generated and if the TC is reset when a Match occurs.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0I
      bit_offset: 0
      bit_width: 1
      description: 'Interrupt on MR0: an interrupt is generated when MR0 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0R
      bit_offset: 1
      bit_width: 1
      description: 'Reset on MR0: the TC will be reset if MR0 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0S
      bit_offset: 2
      bit_width: 1
      description: 'Stop on MR0: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR0 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1I
      bit_offset: 3
      bit_width: 1
      description: 'Interrupt on MR1: an interrupt is generated when MR1 matches the
        value in the TC. 0 = disabled. 1 = enabled. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1R
      bit_offset: 4
      bit_width: 1
      description: 'Reset on MR1: the TC will be reset if MR1 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1S
      bit_offset: 5
      bit_width: 1
      description: 'Stop on MR1: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR1 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2I
      bit_offset: 6
      bit_width: 1
      description: 'Interrupt on MR2: an interrupt is generated when MR2 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2R
      bit_offset: 7
      bit_width: 1
      description: 'Reset on MR2: the TC will be reset if MR2 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2S
      bit_offset: 8
      bit_width: 1
      description: 'Stop on MR2: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR2 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3I
      bit_offset: 9
      bit_width: 1
      description: 'Interrupt on MR3: an interrupt is generated when MR3 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3R
      bit_offset: 10
      bit_width: 1
      description: 'Reset on MR3: the TC will be reset if MR3 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3S
      bit_offset: 11
      bit_width: 1
      description: 'Stop on MR3: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR3 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR
    addr: 0x28
    size_bits: 32
    description: Capture Control Register. The CCR controls which edges of the capture
      inputs are used to load the Capture Registers and whether or not an interrupt
      is generated when a capture takes place.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAP0RE
      bit_offset: 0
      bit_width: 1
      description: 'Rising edge of capture channel 0: a sequence of 0 then 1 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0FE
      bit_offset: 1
      bit_width: 1
      description: 'Falling edge of capture channel 0: a sequence of 1 then 0 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0I
      bit_offset: 2
      bit_width: 1
      description: 'Generate interrupt on channel 0 capture event: a CR0 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1RE
      bit_offset: 3
      bit_width: 1
      description: 'Rising edge of capture channel 1: a sequence of 0 then 1 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1FE
      bit_offset: 4
      bit_width: 1
      description: 'Falling edge of capture channel 1: a sequence of 1 then 0 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1I
      bit_offset: 5
      bit_width: 1
      description: 'Generate interrupt on channel 1 capture event: a CR1 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2RE
      bit_offset: 6
      bit_width: 1
      description: 'Rising edge of capture channel 2: a sequence of 0 then 1 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2FE
      bit_offset: 7
      bit_width: 1
      description: 'Falling edge of capture channel 2: a sequence of 1 then 0 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2I
      bit_offset: 8
      bit_width: 1
      description: 'Generate interrupt on channel 2 capture event: a CR2 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EMR
    addr: 0x3c
    size_bits: 32
    description: External Match Register. The EMR controls the match function and
      the external match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EM0
      bit_offset: 0
      bit_width: 1
      description: External Match 0. This bit reflects the state of output MAT0, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[5:4]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM1
      bit_offset: 1
      bit_width: 1
      description: External Match 1. This bit reflects the state of output MAT1, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[7:6]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM2
      bit_offset: 2
      bit_width: 1
      description: External Match 2. This bit reflects the state of output MAT2, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[9:8]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM3
      bit_offset: 3
      bit_width: 1
      description: External Match 3. This bit reflects the state of output MAT3, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by MR[11:10]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMC0
      bit_offset: 4
      bit_width: 2
      description: External Match Control 0. Determines the functionality of External
        Match 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC1
      bit_offset: 6
      bit_width: 2
      description: External Match Control 1. Determines the functionality of External
        Match 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC2
      bit_offset: 8
      bit_width: 2
      description: External Match Control 2. Determines the functionality of External
        Match 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC3
      bit_offset: 10
      bit_width: 2
      description: External Match Control 3. Determines the functionality of External
        Match 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
  - !Register
    name: CTCR
    addr: 0x70
    size_bits: 32
    description: Count Control Register. The CTCR selects between Timer and Counter
      mode, and in Counter mode selects the signal and edge(s) for counting.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CTMODE
      bit_offset: 0
      bit_width: 2
      description: 'Counter/Timer Mode This field selects which rising APB bus clock
        edges can increment Timer''-s Prescale Counter (PC), or clear PC and increment
        Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter
        matches the Prescale Register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TIMER
        1: COUNTER_RISING_EDGE
        2: COUNTER_FALLING_EDGE
        3: COUNTER_DUAL_EDGE
    - !Field
      name: CINSEL
      bit_offset: 2
      bit_width: 2
      description: 'Count Input Select When bits 1:0 in this register are not 00,
        these bits select which CAP pin is sampled for clocking. Note: If Counter
        mode is selected for a particular CAPn input in the CTCR, the 3 bits for that
        input in the Capture Control Register (CCR) must be programmed as 000. However,
        capture and/or interrupt can be selected for the other 3 CAPn inputs in the
        same timer.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0
        1: CHANNEL_1
        2: CHANNEL_2
    - !Field
      name: ENCC
      bit_offset: 4
      bit_width: 1
      description: Setting this bit to 1 enables clearing of the timer and the prescaler
        when the capture-edge event specified in bits 7:5 occurs.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SELCC
      bit_offset: 5
      bit_width: 3
      description: Edge select. When bit 4 is 1, these bits select which capture input
        edge will cause the timer and prescaler to be cleared. These bits have no
        effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0_RISING
        1: CHANNEL_0_FALLING
        2: CHANNEL_1_RISING
        3: CHANNEL_1_FALLING
        4: CHANNEL_2_RISING
        5: CHANNEL_2_FALLING
  - !Register
    name: PWMC
    addr: 0x74
    size_bits: 32
    description: PWM Control Register. The PWMCON enables PWM mode for the external
      match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMEN0
      bit_offset: 0
      bit_width: 1
      description: PWM mode enable for channel0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN1
      bit_offset: 1
      bit_width: 1
      description: PWM mode enable for channel1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN2
      bit_offset: 2
      bit_width: 1
      description: PWM mode enable for channel2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN3
      bit_offset: 3
      bit_width: 1
      description: 'PWM mode enable for channel3. Note: It is recommended to use match
        channel 3 to set the PWM cycle.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
  - !Register
    name: MR[0]
    addr: 0x18
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[1]
    addr: 0x1c
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[2]
    addr: 0x20
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[3]
    addr: 0x24
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CR[0]
    addr: 0x2c
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[1]
    addr: 0x30
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[2]
    addr: 0x34
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
- !Module
  name: CTIMER1
  description: timer
  base_addr: 0x40003000
  size: 0x78
  registers:
  - !Register
    name: IR
    addr: 0x0
    size_bits: 32
    description: Interrupt Register. The IR can be written to clear interrupts. The
      IR can be read to identify which of eight possible interrupt sources are pending.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0INT
      bit_offset: 0
      bit_width: 1
      description: Interrupt flag for match channel 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1INT
      bit_offset: 1
      bit_width: 1
      description: Interrupt flag for match channel 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2INT
      bit_offset: 2
      bit_width: 1
      description: Interrupt flag for match channel 2.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3INT
      bit_offset: 3
      bit_width: 1
      description: Interrupt flag for match channel 3.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR0INT
      bit_offset: 4
      bit_width: 1
      description: Interrupt flag for capture channel 0 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR1INT
      bit_offset: 5
      bit_width: 1
      description: Interrupt flag for capture channel 1 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR2INT
      bit_offset: 6
      bit_width: 1
      description: Interrupt flag for capture channel 2 event.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCR
    addr: 0x4
    size_bits: 32
    description: Timer Control Register. The TCR is used to control the Timer Counter
      functions. The Timer Counter can be disabled or reset through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CEN
      bit_offset: 0
      bit_width: 1
      description: Counter enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CRST
      bit_offset: 1
      bit_width: 1
      description: Counter reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: TC
    addr: 0x8
    size_bits: 32
    description: Timer Counter. The 32 bit TC is incremented every PR+1 cycles of
      the APB bus clock. The TC is controlled through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCVAL
      bit_offset: 0
      bit_width: 32
      description: Timer counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PR
    addr: 0xc
    size_bits: 32
    description: Prescale Register. When the Prescale Counter (PC) is equal to this
      value, the next clock increments the TC and clears the PC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PC
    addr: 0x10
    size_bits: 32
    description: Prescale Counter. The 32 bit PC is a counter which is incremented
      to the value stored in PR. When the value in PR is reached, the TC is incremented
      and the PC is cleared. The PC is observable and controllable through the bus
      interface.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PCVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCR
    addr: 0x14
    size_bits: 32
    description: Match Control Register. The MCR is used to control if an interrupt
      is generated and if the TC is reset when a Match occurs.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0I
      bit_offset: 0
      bit_width: 1
      description: 'Interrupt on MR0: an interrupt is generated when MR0 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0R
      bit_offset: 1
      bit_width: 1
      description: 'Reset on MR0: the TC will be reset if MR0 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0S
      bit_offset: 2
      bit_width: 1
      description: 'Stop on MR0: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR0 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1I
      bit_offset: 3
      bit_width: 1
      description: 'Interrupt on MR1: an interrupt is generated when MR1 matches the
        value in the TC. 0 = disabled. 1 = enabled. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1R
      bit_offset: 4
      bit_width: 1
      description: 'Reset on MR1: the TC will be reset if MR1 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1S
      bit_offset: 5
      bit_width: 1
      description: 'Stop on MR1: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR1 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2I
      bit_offset: 6
      bit_width: 1
      description: 'Interrupt on MR2: an interrupt is generated when MR2 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2R
      bit_offset: 7
      bit_width: 1
      description: 'Reset on MR2: the TC will be reset if MR2 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2S
      bit_offset: 8
      bit_width: 1
      description: 'Stop on MR2: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR2 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3I
      bit_offset: 9
      bit_width: 1
      description: 'Interrupt on MR3: an interrupt is generated when MR3 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3R
      bit_offset: 10
      bit_width: 1
      description: 'Reset on MR3: the TC will be reset if MR3 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3S
      bit_offset: 11
      bit_width: 1
      description: 'Stop on MR3: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR3 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR
    addr: 0x28
    size_bits: 32
    description: Capture Control Register. The CCR controls which edges of the capture
      inputs are used to load the Capture Registers and whether or not an interrupt
      is generated when a capture takes place.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAP0RE
      bit_offset: 0
      bit_width: 1
      description: 'Rising edge of capture channel 0: a sequence of 0 then 1 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0FE
      bit_offset: 1
      bit_width: 1
      description: 'Falling edge of capture channel 0: a sequence of 1 then 0 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0I
      bit_offset: 2
      bit_width: 1
      description: 'Generate interrupt on channel 0 capture event: a CR0 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1RE
      bit_offset: 3
      bit_width: 1
      description: 'Rising edge of capture channel 1: a sequence of 0 then 1 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1FE
      bit_offset: 4
      bit_width: 1
      description: 'Falling edge of capture channel 1: a sequence of 1 then 0 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1I
      bit_offset: 5
      bit_width: 1
      description: 'Generate interrupt on channel 1 capture event: a CR1 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2RE
      bit_offset: 6
      bit_width: 1
      description: 'Rising edge of capture channel 2: a sequence of 0 then 1 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2FE
      bit_offset: 7
      bit_width: 1
      description: 'Falling edge of capture channel 2: a sequence of 1 then 0 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2I
      bit_offset: 8
      bit_width: 1
      description: 'Generate interrupt on channel 2 capture event: a CR2 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EMR
    addr: 0x3c
    size_bits: 32
    description: External Match Register. The EMR controls the match function and
      the external match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EM0
      bit_offset: 0
      bit_width: 1
      description: External Match 0. This bit reflects the state of output MAT0, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[5:4]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM1
      bit_offset: 1
      bit_width: 1
      description: External Match 1. This bit reflects the state of output MAT1, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[7:6]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM2
      bit_offset: 2
      bit_width: 1
      description: External Match 2. This bit reflects the state of output MAT2, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[9:8]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM3
      bit_offset: 3
      bit_width: 1
      description: External Match 3. This bit reflects the state of output MAT3, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by MR[11:10]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMC0
      bit_offset: 4
      bit_width: 2
      description: External Match Control 0. Determines the functionality of External
        Match 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC1
      bit_offset: 6
      bit_width: 2
      description: External Match Control 1. Determines the functionality of External
        Match 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC2
      bit_offset: 8
      bit_width: 2
      description: External Match Control 2. Determines the functionality of External
        Match 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC3
      bit_offset: 10
      bit_width: 2
      description: External Match Control 3. Determines the functionality of External
        Match 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
  - !Register
    name: CTCR
    addr: 0x70
    size_bits: 32
    description: Count Control Register. The CTCR selects between Timer and Counter
      mode, and in Counter mode selects the signal and edge(s) for counting.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CTMODE
      bit_offset: 0
      bit_width: 2
      description: 'Counter/Timer Mode This field selects which rising APB bus clock
        edges can increment Timer''-s Prescale Counter (PC), or clear PC and increment
        Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter
        matches the Prescale Register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TIMER
        1: COUNTER_RISING_EDGE
        2: COUNTER_FALLING_EDGE
        3: COUNTER_DUAL_EDGE
    - !Field
      name: CINSEL
      bit_offset: 2
      bit_width: 2
      description: 'Count Input Select When bits 1:0 in this register are not 00,
        these bits select which CAP pin is sampled for clocking. Note: If Counter
        mode is selected for a particular CAPn input in the CTCR, the 3 bits for that
        input in the Capture Control Register (CCR) must be programmed as 000. However,
        capture and/or interrupt can be selected for the other 3 CAPn inputs in the
        same timer.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0
        1: CHANNEL_1
        2: CHANNEL_2
    - !Field
      name: ENCC
      bit_offset: 4
      bit_width: 1
      description: Setting this bit to 1 enables clearing of the timer and the prescaler
        when the capture-edge event specified in bits 7:5 occurs.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SELCC
      bit_offset: 5
      bit_width: 3
      description: Edge select. When bit 4 is 1, these bits select which capture input
        edge will cause the timer and prescaler to be cleared. These bits have no
        effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0_RISING
        1: CHANNEL_0_FALLING
        2: CHANNEL_1_RISING
        3: CHANNEL_1_FALLING
        4: CHANNEL_2_RISING
        5: CHANNEL_2_FALLING
  - !Register
    name: PWMC
    addr: 0x74
    size_bits: 32
    description: PWM Control Register. The PWMCON enables PWM mode for the external
      match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMEN0
      bit_offset: 0
      bit_width: 1
      description: PWM mode enable for channel0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN1
      bit_offset: 1
      bit_width: 1
      description: PWM mode enable for channel1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN2
      bit_offset: 2
      bit_width: 1
      description: PWM mode enable for channel2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN3
      bit_offset: 3
      bit_width: 1
      description: 'PWM mode enable for channel3. Note: It is recommended to use match
        channel 3 to set the PWM cycle.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
  - !Register
    name: MR[0]
    addr: 0x18
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[1]
    addr: 0x1c
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[2]
    addr: 0x20
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[3]
    addr: 0x24
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CR[0]
    addr: 0x2c
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[1]
    addr: 0x30
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[2]
    addr: 0x34
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
- !Module
  name: CTIMER2
  description: timer
  base_addr: 0x40004000
  size: 0x78
  registers:
  - !Register
    name: IR
    addr: 0x0
    size_bits: 32
    description: Interrupt Register. The IR can be written to clear interrupts. The
      IR can be read to identify which of eight possible interrupt sources are pending.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0INT
      bit_offset: 0
      bit_width: 1
      description: Interrupt flag for match channel 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1INT
      bit_offset: 1
      bit_width: 1
      description: Interrupt flag for match channel 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2INT
      bit_offset: 2
      bit_width: 1
      description: Interrupt flag for match channel 2.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3INT
      bit_offset: 3
      bit_width: 1
      description: Interrupt flag for match channel 3.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR0INT
      bit_offset: 4
      bit_width: 1
      description: Interrupt flag for capture channel 0 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR1INT
      bit_offset: 5
      bit_width: 1
      description: Interrupt flag for capture channel 1 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR2INT
      bit_offset: 6
      bit_width: 1
      description: Interrupt flag for capture channel 2 event.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCR
    addr: 0x4
    size_bits: 32
    description: Timer Control Register. The TCR is used to control the Timer Counter
      functions. The Timer Counter can be disabled or reset through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CEN
      bit_offset: 0
      bit_width: 1
      description: Counter enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CRST
      bit_offset: 1
      bit_width: 1
      description: Counter reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: TC
    addr: 0x8
    size_bits: 32
    description: Timer Counter. The 32 bit TC is incremented every PR+1 cycles of
      the APB bus clock. The TC is controlled through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCVAL
      bit_offset: 0
      bit_width: 32
      description: Timer counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PR
    addr: 0xc
    size_bits: 32
    description: Prescale Register. When the Prescale Counter (PC) is equal to this
      value, the next clock increments the TC and clears the PC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PC
    addr: 0x10
    size_bits: 32
    description: Prescale Counter. The 32 bit PC is a counter which is incremented
      to the value stored in PR. When the value in PR is reached, the TC is incremented
      and the PC is cleared. The PC is observable and controllable through the bus
      interface.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PCVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCR
    addr: 0x14
    size_bits: 32
    description: Match Control Register. The MCR is used to control if an interrupt
      is generated and if the TC is reset when a Match occurs.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0I
      bit_offset: 0
      bit_width: 1
      description: 'Interrupt on MR0: an interrupt is generated when MR0 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0R
      bit_offset: 1
      bit_width: 1
      description: 'Reset on MR0: the TC will be reset if MR0 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0S
      bit_offset: 2
      bit_width: 1
      description: 'Stop on MR0: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR0 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1I
      bit_offset: 3
      bit_width: 1
      description: 'Interrupt on MR1: an interrupt is generated when MR1 matches the
        value in the TC. 0 = disabled. 1 = enabled. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1R
      bit_offset: 4
      bit_width: 1
      description: 'Reset on MR1: the TC will be reset if MR1 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1S
      bit_offset: 5
      bit_width: 1
      description: 'Stop on MR1: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR1 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2I
      bit_offset: 6
      bit_width: 1
      description: 'Interrupt on MR2: an interrupt is generated when MR2 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2R
      bit_offset: 7
      bit_width: 1
      description: 'Reset on MR2: the TC will be reset if MR2 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2S
      bit_offset: 8
      bit_width: 1
      description: 'Stop on MR2: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR2 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3I
      bit_offset: 9
      bit_width: 1
      description: 'Interrupt on MR3: an interrupt is generated when MR3 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3R
      bit_offset: 10
      bit_width: 1
      description: 'Reset on MR3: the TC will be reset if MR3 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3S
      bit_offset: 11
      bit_width: 1
      description: 'Stop on MR3: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR3 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR
    addr: 0x28
    size_bits: 32
    description: Capture Control Register. The CCR controls which edges of the capture
      inputs are used to load the Capture Registers and whether or not an interrupt
      is generated when a capture takes place.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAP0RE
      bit_offset: 0
      bit_width: 1
      description: 'Rising edge of capture channel 0: a sequence of 0 then 1 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0FE
      bit_offset: 1
      bit_width: 1
      description: 'Falling edge of capture channel 0: a sequence of 1 then 0 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0I
      bit_offset: 2
      bit_width: 1
      description: 'Generate interrupt on channel 0 capture event: a CR0 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1RE
      bit_offset: 3
      bit_width: 1
      description: 'Rising edge of capture channel 1: a sequence of 0 then 1 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1FE
      bit_offset: 4
      bit_width: 1
      description: 'Falling edge of capture channel 1: a sequence of 1 then 0 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1I
      bit_offset: 5
      bit_width: 1
      description: 'Generate interrupt on channel 1 capture event: a CR1 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2RE
      bit_offset: 6
      bit_width: 1
      description: 'Rising edge of capture channel 2: a sequence of 0 then 1 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2FE
      bit_offset: 7
      bit_width: 1
      description: 'Falling edge of capture channel 2: a sequence of 1 then 0 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2I
      bit_offset: 8
      bit_width: 1
      description: 'Generate interrupt on channel 2 capture event: a CR2 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EMR
    addr: 0x3c
    size_bits: 32
    description: External Match Register. The EMR controls the match function and
      the external match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EM0
      bit_offset: 0
      bit_width: 1
      description: External Match 0. This bit reflects the state of output MAT0, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[5:4]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM1
      bit_offset: 1
      bit_width: 1
      description: External Match 1. This bit reflects the state of output MAT1, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[7:6]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM2
      bit_offset: 2
      bit_width: 1
      description: External Match 2. This bit reflects the state of output MAT2, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[9:8]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM3
      bit_offset: 3
      bit_width: 1
      description: External Match 3. This bit reflects the state of output MAT3, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by MR[11:10]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMC0
      bit_offset: 4
      bit_width: 2
      description: External Match Control 0. Determines the functionality of External
        Match 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC1
      bit_offset: 6
      bit_width: 2
      description: External Match Control 1. Determines the functionality of External
        Match 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC2
      bit_offset: 8
      bit_width: 2
      description: External Match Control 2. Determines the functionality of External
        Match 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC3
      bit_offset: 10
      bit_width: 2
      description: External Match Control 3. Determines the functionality of External
        Match 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
  - !Register
    name: CTCR
    addr: 0x70
    size_bits: 32
    description: Count Control Register. The CTCR selects between Timer and Counter
      mode, and in Counter mode selects the signal and edge(s) for counting.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CTMODE
      bit_offset: 0
      bit_width: 2
      description: 'Counter/Timer Mode This field selects which rising APB bus clock
        edges can increment Timer''-s Prescale Counter (PC), or clear PC and increment
        Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter
        matches the Prescale Register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TIMER
        1: COUNTER_RISING_EDGE
        2: COUNTER_FALLING_EDGE
        3: COUNTER_DUAL_EDGE
    - !Field
      name: CINSEL
      bit_offset: 2
      bit_width: 2
      description: 'Count Input Select When bits 1:0 in this register are not 00,
        these bits select which CAP pin is sampled for clocking. Note: If Counter
        mode is selected for a particular CAPn input in the CTCR, the 3 bits for that
        input in the Capture Control Register (CCR) must be programmed as 000. However,
        capture and/or interrupt can be selected for the other 3 CAPn inputs in the
        same timer.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0
        1: CHANNEL_1
        2: CHANNEL_2
    - !Field
      name: ENCC
      bit_offset: 4
      bit_width: 1
      description: Setting this bit to 1 enables clearing of the timer and the prescaler
        when the capture-edge event specified in bits 7:5 occurs.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SELCC
      bit_offset: 5
      bit_width: 3
      description: Edge select. When bit 4 is 1, these bits select which capture input
        edge will cause the timer and prescaler to be cleared. These bits have no
        effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0_RISING
        1: CHANNEL_0_FALLING
        2: CHANNEL_1_RISING
        3: CHANNEL_1_FALLING
        4: CHANNEL_2_RISING
        5: CHANNEL_2_FALLING
  - !Register
    name: PWMC
    addr: 0x74
    size_bits: 32
    description: PWM Control Register. The PWMCON enables PWM mode for the external
      match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMEN0
      bit_offset: 0
      bit_width: 1
      description: PWM mode enable for channel0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN1
      bit_offset: 1
      bit_width: 1
      description: PWM mode enable for channel1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN2
      bit_offset: 2
      bit_width: 1
      description: PWM mode enable for channel2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN3
      bit_offset: 3
      bit_width: 1
      description: 'PWM mode enable for channel3. Note: It is recommended to use match
        channel 3 to set the PWM cycle.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
  - !Register
    name: MR[0]
    addr: 0x18
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[1]
    addr: 0x1c
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[2]
    addr: 0x20
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[3]
    addr: 0x24
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CR[0]
    addr: 0x2c
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[1]
    addr: 0x30
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[2]
    addr: 0x34
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
- !Module
  name: CTIMER3
  description: timer
  base_addr: 0x40005000
  size: 0x78
  registers:
  - !Register
    name: IR
    addr: 0x0
    size_bits: 32
    description: Interrupt Register. The IR can be written to clear interrupts. The
      IR can be read to identify which of eight possible interrupt sources are pending.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0INT
      bit_offset: 0
      bit_width: 1
      description: Interrupt flag for match channel 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1INT
      bit_offset: 1
      bit_width: 1
      description: Interrupt flag for match channel 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2INT
      bit_offset: 2
      bit_width: 1
      description: Interrupt flag for match channel 2.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3INT
      bit_offset: 3
      bit_width: 1
      description: Interrupt flag for match channel 3.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR0INT
      bit_offset: 4
      bit_width: 1
      description: Interrupt flag for capture channel 0 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR1INT
      bit_offset: 5
      bit_width: 1
      description: Interrupt flag for capture channel 1 event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CR2INT
      bit_offset: 6
      bit_width: 1
      description: Interrupt flag for capture channel 2 event.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TCR
    addr: 0x4
    size_bits: 32
    description: Timer Control Register. The TCR is used to control the Timer Counter
      functions. The Timer Counter can be disabled or reset through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CEN
      bit_offset: 0
      bit_width: 1
      description: Counter enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CRST
      bit_offset: 1
      bit_width: 1
      description: Counter reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: TC
    addr: 0x8
    size_bits: 32
    description: Timer Counter. The 32 bit TC is incremented every PR+1 cycles of
      the APB bus clock. The TC is controlled through the TCR.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TCVAL
      bit_offset: 0
      bit_width: 32
      description: Timer counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PR
    addr: 0xc
    size_bits: 32
    description: Prescale Register. When the Prescale Counter (PC) is equal to this
      value, the next clock increments the TC and clears the PC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PC
    addr: 0x10
    size_bits: 32
    description: Prescale Counter. The 32 bit PC is a counter which is incremented
      to the value stored in PR. When the value in PR is reached, the TC is incremented
      and the PC is cleared. The PC is observable and controllable through the bus
      interface.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PCVAL
      bit_offset: 0
      bit_width: 32
      description: Prescale counter value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCR
    addr: 0x14
    size_bits: 32
    description: Match Control Register. The MCR is used to control if an interrupt
      is generated and if the TC is reset when a Match occurs.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MR0I
      bit_offset: 0
      bit_width: 1
      description: 'Interrupt on MR0: an interrupt is generated when MR0 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0R
      bit_offset: 1
      bit_width: 1
      description: 'Reset on MR0: the TC will be reset if MR0 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR0S
      bit_offset: 2
      bit_width: 1
      description: 'Stop on MR0: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR0 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1I
      bit_offset: 3
      bit_width: 1
      description: 'Interrupt on MR1: an interrupt is generated when MR1 matches the
        value in the TC. 0 = disabled. 1 = enabled. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1R
      bit_offset: 4
      bit_width: 1
      description: 'Reset on MR1: the TC will be reset if MR1 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR1S
      bit_offset: 5
      bit_width: 1
      description: 'Stop on MR1: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR1 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2I
      bit_offset: 6
      bit_width: 1
      description: 'Interrupt on MR2: an interrupt is generated when MR2 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2R
      bit_offset: 7
      bit_width: 1
      description: 'Reset on MR2: the TC will be reset if MR2 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR2S
      bit_offset: 8
      bit_width: 1
      description: 'Stop on MR2: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR2 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3I
      bit_offset: 9
      bit_width: 1
      description: 'Interrupt on MR3: an interrupt is generated when MR3 matches the
        value in the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3R
      bit_offset: 10
      bit_width: 1
      description: 'Reset on MR3: the TC will be reset if MR3 matches it. 0 = disabled.
        1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MR3S
      bit_offset: 11
      bit_width: 1
      description: 'Stop on MR3: the TC and PC will be stopped and TCR[0] will be
        set to 0 if MR3 matches the TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CCR
    addr: 0x28
    size_bits: 32
    description: Capture Control Register. The CCR controls which edges of the capture
      inputs are used to load the Capture Registers and whether or not an interrupt
      is generated when a capture takes place.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAP0RE
      bit_offset: 0
      bit_width: 1
      description: 'Rising edge of capture channel 0: a sequence of 0 then 1 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0FE
      bit_offset: 1
      bit_width: 1
      description: 'Falling edge of capture channel 0: a sequence of 1 then 0 causes
        CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP0I
      bit_offset: 2
      bit_width: 1
      description: 'Generate interrupt on channel 0 capture event: a CR0 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1RE
      bit_offset: 3
      bit_width: 1
      description: 'Rising edge of capture channel 1: a sequence of 0 then 1 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1FE
      bit_offset: 4
      bit_width: 1
      description: 'Falling edge of capture channel 1: a sequence of 1 then 0 causes
        CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP1I
      bit_offset: 5
      bit_width: 1
      description: 'Generate interrupt on channel 1 capture event: a CR1 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2RE
      bit_offset: 6
      bit_width: 1
      description: 'Rising edge of capture channel 2: a sequence of 0 then 1 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2FE
      bit_offset: 7
      bit_width: 1
      description: 'Falling edge of capture channel 2: a sequence of 1 then 0 causes
        CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAP2I
      bit_offset: 8
      bit_width: 1
      description: 'Generate interrupt on channel 2 capture event: a CR2 load generates
        an interrupt.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EMR
    addr: 0x3c
    size_bits: 32
    description: External Match Register. The EMR controls the match function and
      the external match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EM0
      bit_offset: 0
      bit_width: 1
      description: External Match 0. This bit reflects the state of output MAT0, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[5:4]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM1
      bit_offset: 1
      bit_width: 1
      description: External Match 1. This bit reflects the state of output MAT1, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[7:6]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM2
      bit_offset: 2
      bit_width: 1
      description: External Match 2. This bit reflects the state of output MAT2, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by EMR[9:8]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EM3
      bit_offset: 3
      bit_width: 1
      description: External Match 3. This bit reflects the state of output MAT3, whether
        or not this output is connected to a pin. When a match occurs between the
        TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as
        selected by MR[11:10]. This bit is driven to the MAT pins if the match function
        is selected via IOCON. 0 = LOW. 1 = HIGH.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMC0
      bit_offset: 4
      bit_width: 2
      description: External Match Control 0. Determines the functionality of External
        Match 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC1
      bit_offset: 6
      bit_width: 2
      description: External Match Control 1. Determines the functionality of External
        Match 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC2
      bit_offset: 8
      bit_width: 2
      description: External Match Control 2. Determines the functionality of External
        Match 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
    - !Field
      name: EMC3
      bit_offset: 10
      bit_width: 2
      description: External Match Control 3. Determines the functionality of External
        Match 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DO_NOTHING
        1: CLEAR
        2: SET
        3: TOGGLE
  - !Register
    name: CTCR
    addr: 0x70
    size_bits: 32
    description: Count Control Register. The CTCR selects between Timer and Counter
      mode, and in Counter mode selects the signal and edge(s) for counting.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CTMODE
      bit_offset: 0
      bit_width: 2
      description: 'Counter/Timer Mode This field selects which rising APB bus clock
        edges can increment Timer''-s Prescale Counter (PC), or clear PC and increment
        Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter
        matches the Prescale Register.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TIMER
        1: COUNTER_RISING_EDGE
        2: COUNTER_FALLING_EDGE
        3: COUNTER_DUAL_EDGE
    - !Field
      name: CINSEL
      bit_offset: 2
      bit_width: 2
      description: 'Count Input Select When bits 1:0 in this register are not 00,
        these bits select which CAP pin is sampled for clocking. Note: If Counter
        mode is selected for a particular CAPn input in the CTCR, the 3 bits for that
        input in the Capture Control Register (CCR) must be programmed as 000. However,
        capture and/or interrupt can be selected for the other 3 CAPn inputs in the
        same timer.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0
        1: CHANNEL_1
        2: CHANNEL_2
    - !Field
      name: ENCC
      bit_offset: 4
      bit_width: 1
      description: Setting this bit to 1 enables clearing of the timer and the prescaler
        when the capture-edge event specified in bits 7:5 occurs.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SELCC
      bit_offset: 5
      bit_width: 3
      description: Edge select. When bit 4 is 1, these bits select which capture input
        edge will cause the timer and prescaler to be cleared. These bits have no
        effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANNEL_0_RISING
        1: CHANNEL_0_FALLING
        2: CHANNEL_1_RISING
        3: CHANNEL_1_FALLING
        4: CHANNEL_2_RISING
        5: CHANNEL_2_FALLING
  - !Register
    name: PWMC
    addr: 0x74
    size_bits: 32
    description: PWM Control Register. The PWMCON enables PWM mode for the external
      match pins.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PWMEN0
      bit_offset: 0
      bit_width: 1
      description: PWM mode enable for channel0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN1
      bit_offset: 1
      bit_width: 1
      description: PWM mode enable for channel1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN2
      bit_offset: 2
      bit_width: 1
      description: PWM mode enable for channel2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
    - !Field
      name: PWMEN3
      bit_offset: 3
      bit_width: 1
      description: 'PWM mode enable for channel3. Note: It is recommended to use match
        channel 3 to set the PWM cycle.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MATCH
        1: PWM
  - !Register
    name: MR[0]
    addr: 0x18
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[1]
    addr: 0x1c
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[2]
    addr: 0x20
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MR[3]
    addr: 0x24
    size_bits: 32
    description: Match Register . MR can be enabled through the MCR to reset the TC,
      stop both the TC and PC, and/or generate an interrupt every time MR matches
      the TC.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCH
      bit_offset: 0
      bit_width: 32
      description: Timer counter match value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CR[0]
    addr: 0x2c
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[1]
    addr: 0x30
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CR[2]
    addr: 0x34
    size_bits: 32
    description: Capture Register . CR is loaded with the value of TC when there is
      an event on the CAPn. input.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CAP
      bit_offset: 0
      bit_width: 32
      description: Timer counter capture value.
      read_allowed: true
      write_allowed: false
- !Module
  name: PINT
  description: QN908X Pin interrupt and pattern match (PINT)
  base_addr: 0x40006000
  size: 0x34
  registers:
  - !Register
    name: ISEL
    addr: 0x0
    size_bits: 32
    description: Pin Interrupt Mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PMODE
      bit_offset: 0
      bit_width: 4
      description: Selects the interrupt mode for each pin interrupt. Bit n configures
        the pin interrupt selected in PINTSELn. 0 = Edge sensitive 1 = Level sensitive
      read_allowed: true
      write_allowed: true
  - !Register
    name: IENR
    addr: 0x4
    size_bits: 32
    description: Pin interrupt level or rising edge interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENRL
      bit_offset: 0
      bit_width: 4
      description: Enables the rising edge or level interrupt for each pin interrupt.
        Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable rising
        edge or level interrupt. 1 = Enable rising edge or level interrupt.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIENR
    addr: 0x8
    size_bits: 32
    description: Pin interrupt level or rising edge interrupt set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SETENRL
      bit_offset: 0
      bit_width: 4
      description: Ones written to this address set bits in the IENR, thus enabling
        interrupts. Bit n sets bit n in the IENR register. 0 = No operation. 1 = Enable
        rising edge or level interrupt.
      read_allowed: false
      write_allowed: true
  - !Register
    name: CIENR
    addr: 0xc
    size_bits: 32
    description: Pin interrupt level (rising edge interrupt) clear register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CENRL
      bit_offset: 0
      bit_width: 4
      description: Ones written to this address clear bits in the IENR, thus disabling
        the interrupts. Bit n clears bit n in the IENR register. 0 = No operation.
        1 = Disable rising edge or level interrupt.
      read_allowed: false
      write_allowed: true
  - !Register
    name: IENF
    addr: 0x10
    size_bits: 32
    description: Pin interrupt active level or falling edge interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENAF
      bit_offset: 0
      bit_width: 4
      description: Enables the falling edge or configures the active level interrupt
        for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn.
        0 = Disable falling edge interrupt or set active interrupt level LOW. 1 =
        Enable falling edge interrupt enabled or set active interrupt level HIGH.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIENF
    addr: 0x14
    size_bits: 32
    description: Pin interrupt active level or falling edge interrupt set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SETENAF
      bit_offset: 0
      bit_width: 4
      description: Ones written to this address set bits in the IENF, thus enabling
        interrupts. Bit n sets bit n in the IENF register. 0 = No operation. 1 = Select
        HIGH-active interrupt or enable falling edge interrupt.
      read_allowed: false
      write_allowed: true
  - !Register
    name: CIENF
    addr: 0x18
    size_bits: 32
    description: Pin interrupt active level or falling edge interrupt clear register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CENAF
      bit_offset: 0
      bit_width: 4
      description: Ones written to this address clears bits in the IENF, thus disabling
        interrupts. Bit n clears bit n in the IENF register. 0 = No operation. 1 =
        LOW-active interrupt selected or falling edge interrupt disabled.
      read_allowed: false
      write_allowed: true
  - !Register
    name: RISE
    addr: 0x1c
    size_bits: 32
    description: Pin interrupt rising edge register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RDET
      bit_offset: 0
      bit_width: 4
      description: 'Rising edge detect. Bit n detects the rising edge of the pin selected
        in PINTSELn. Read 0: No rising edge has been detected on this pin since Reset
        or the last time a one was written to this bit. Write 0: no operation. Read
        1: a rising edge has been detected since Reset or the last time a one was
        written to this bit. Write 1: clear rising edge detection for this pin.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: FALL
    addr: 0x20
    size_bits: 32
    description: Pin interrupt falling edge register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FDET
      bit_offset: 0
      bit_width: 4
      description: 'Falling edge detect. Bit n detects the falling edge of the pin
        selected in PINTSELn. Read 0: No falling edge has been detected on this pin
        since Reset or the last time a one was written to this bit. Write 0: no operation.
        Read 1: a falling edge has been detected since Reset or the last time a one
        was written to this bit. Write 1: clear falling edge detection for this pin.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: IST
    addr: 0x24
    size_bits: 32
    description: Pin interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PSTAT
      bit_offset: 0
      bit_width: 4
      description: 'Pin interrupt status. Bit n returns the status, clears the edge
        interrupt, or inverts the active level of the pin selected in PINTSELn. Read
        0: interrupt is not being requested for this interrupt pin. Write 0: no operation.
        Read 1: interrupt is being requested for this interrupt pin. Write 1 (edge-sensitive):
        clear rising- and falling-edge detection for this pin. Write 1 (level-sensitive):
        switch the active level for this pin (in the IENF register).'
      read_allowed: true
      write_allowed: true
  - !Register
    name: PMCTRL
    addr: 0x28
    size_bits: 32
    description: Pattern match interrupt control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SEL_PMATCH
      bit_offset: 0
      bit_width: 1
      description: Specifies whether the 8 pin interrupts are controlled by the pin
        interrupt function or by the pattern match function.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PIN_INTERRUPT
        1: PATTERN_MATCH
    - !Field
      name: ENA_RXEV
      bit_offset: 1
      bit_width: 1
      description: Enables the RXEV output to the CPU and/or to a GPIO output when
        the specified boolean expression evaluates to true.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: PMAT
      bit_offset: 24
      bit_width: 8
      description: This field displays the current state of pattern matches. A 1 in
        any bit of this field indicates that the corresponding product term is matched
        by the current state of the appropriate inputs.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PMSRC
    addr: 0x2c
    size_bits: 32
    description: Pattern match interrupt bit-slice source register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SRC0
      bit_offset: 8
      bit_width: 3
      description: Selects the input source for bit slice 0
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC1
      bit_offset: 11
      bit_width: 3
      description: Selects the input source for bit slice 1
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC2
      bit_offset: 14
      bit_width: 3
      description: Selects the input source for bit slice 2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC3
      bit_offset: 17
      bit_width: 3
      description: Selects the input source for bit slice 3
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC4
      bit_offset: 20
      bit_width: 3
      description: Selects the input source for bit slice 4
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC5
      bit_offset: 23
      bit_width: 3
      description: Selects the input source for bit slice 5
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC6
      bit_offset: 26
      bit_width: 3
      description: Selects the input source for bit slice 6
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
    - !Field
      name: SRC7
      bit_offset: 29
      bit_width: 3
      description: Selects the input source for bit slice 7
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT0
        1: INPUT1
        2: INPUT2
        3: INPUT3
        4: INPUT4
        5: INPUT5
        6: INPUT6
        7: INPUT7
  - !Register
    name: PMCFG
    addr: 0x30
    size_bits: 32
    description: Pattern match interrupt bit slice configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PROD_ENDPTS0
      bit_offset: 0
      bit_width: 1
      description: Determines whether slice 0 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS1
      bit_offset: 1
      bit_width: 1
      description: Determines whether slice 1 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS2
      bit_offset: 2
      bit_width: 1
      description: Determines whether slice 2 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS3
      bit_offset: 3
      bit_width: 1
      description: Determines whether slice 3 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS4
      bit_offset: 4
      bit_width: 1
      description: Determines whether slice 4 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS5
      bit_offset: 5
      bit_width: 1
      description: Determines whether slice 5 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: PROD_ENDPTS6
      bit_offset: 6
      bit_width: 1
      description: Determines whether slice 6 is an endpoint.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: ENDPOINT
    - !Field
      name: CFG0
      bit_offset: 8
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG1
      bit_offset: 11
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG2
      bit_offset: 14
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG3
      bit_offset: 17
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG4
      bit_offset: 20
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 4.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG5
      bit_offset: 23
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 5.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG6
      bit_offset: 26
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 6.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
    - !Field
      name: CFG7
      bit_offset: 29
      bit_width: 3
      description: Specifies the match contribution condition for bit slice 7.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CONSTANT_HIGH
        1: STICKY_RISING_EDGE
        2: STICKY_FALLING_EDGE
        3: STICKY_RISING_FALLING_EDGE
        4: HIGH_LEVEL
        5: LOW_LEVEL
        6: CONSTANT_ZERO
        7: EVENT
- !Module
  name: INPUTMUX
  description: dmamux
  base_addr: 0x40006200
  size: 0x810
  registers:
  - !Register
    name: PINTSEL[0]
    addr: 0x0
    size_bits: 32
    description: Pin interrupt select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPIN
      bit_offset: 0
      bit_width: 5
      description: Pin number select for pin interrupt or pattern match engine input.
        (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
      read_allowed: true
      write_allowed: true
  - !Register
    name: PINTSEL[1]
    addr: 0x4
    size_bits: 32
    description: Pin interrupt select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPIN
      bit_offset: 0
      bit_width: 5
      description: Pin number select for pin interrupt or pattern match engine input.
        (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
      read_allowed: true
      write_allowed: true
  - !Register
    name: PINTSEL[2]
    addr: 0x8
    size_bits: 32
    description: Pin interrupt select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPIN
      bit_offset: 0
      bit_width: 5
      description: Pin number select for pin interrupt or pattern match engine input.
        (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
      read_allowed: true
      write_allowed: true
  - !Register
    name: PINTSEL[3]
    addr: 0xc
    size_bits: 32
    description: Pin interrupt select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPIN
      bit_offset: 0
      bit_width: 5
      description: Pin number select for pin interrupt or pattern match engine input.
        (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[0]
    addr: 0x200
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[1]
    addr: 0x204
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[2]
    addr: 0x208
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[3]
    addr: 0x20c
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[4]
    addr: 0x210
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[5]
    addr: 0x214
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[6]
    addr: 0x218
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[7]
    addr: 0x21c
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[8]
    addr: 0x220
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[9]
    addr: 0x224
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[10]
    addr: 0x228
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[11]
    addr: 0x22c
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[12]
    addr: 0x230
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[13]
    addr: 0x234
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[14]
    addr: 0x238
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[15]
    addr: 0x23c
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[16]
    addr: 0x240
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[17]
    addr: 0x244
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[18]
    addr: 0x248
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_ITRIG_INMUX[19]
    addr: 0x24c
    size_bits: 32
    description: Trigger select register for DMA channel
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: Trigger input number (decimal value) for DMA channel n (n = 0 to
        21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0
        DMA request 0 3 = SCT0 DMA request 1 4 = Timer CT32B0 Match 0 5 = Timer CT32B0
        Match 1 6 = Timer CT32B1 Match 0 7 = Timer CT32B2 Match 0 8 = Timer CT32B2
        Match 1 9 = Timer CT32B3 Match 0 10 = Timer CT32B4 Match 0 11 = Timer CT32B4
        Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15
        = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux
        1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_OTRIG_INMUX[0]
    addr: 0x800
    size_bits: 32
    description: DMA output trigger selection to become DMA trigger
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: DMA trigger output number (decimal value) for DMA channel n (n
        = 0 to 19).
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_OTRIG_INMUX[1]
    addr: 0x804
    size_bits: 32
    description: DMA output trigger selection to become DMA trigger
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: DMA trigger output number (decimal value) for DMA channel n (n
        = 0 to 19).
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_OTRIG_INMUX[2]
    addr: 0x808
    size_bits: 32
    description: DMA output trigger selection to become DMA trigger
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: DMA trigger output number (decimal value) for DMA channel n (n
        = 0 to 19).
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA_OTRIG_INMUX[3]
    addr: 0x80c
    size_bits: 32
    description: DMA output trigger selection to become DMA trigger
    read_allowed: true
    write_allowed: true
    reset_value: 0x1f
    fields:
    - !Field
      name: INP
      bit_offset: 0
      bit_width: 5
      description: DMA trigger output number (decimal value) for DMA channel n (n
        = 0 to 19).
      read_allowed: true
      write_allowed: true
- !Module
  name: ADC
  description: adc
  base_addr: 0x40007000
  size: 0x100
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: ADC control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1000
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: ADC enable. Write 1 to Writing 1 before starting conversion and
        0 to end conversion.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CONV_MODE
      bit_offset: 1
      bit_width: 1
      description: ADC conversion mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BURST
        1: SINGLE
    - !Field
      name: SCAN_EN
      bit_offset: 2
      bit_width: 1
      description: 1 to enable scan mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: WCMP_EN
      bit_offset: 3
      bit_width: 1
      description: 1 to enable window compare
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_START
      bit_offset: 7
      bit_width: 1
      description: Software start ADC conversion write1 to trigger one time ADC conversion,
        no need clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: CLKSEL
      bit_offset: 8
      bit_width: 5
      description: Sigma-Delta ADC clock select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLKSEL_31P25K
        4: CLKSEL_62P5K
        8: CLKSEL_125K
        12: CLKSEL_250K
        16: CLKSEL_500K
        20: CLKSEL_1M
        24: CLKSEL_2M
        29: CLKSEL_32K
    - !Field
      name: SIG_INV_EN
      bit_offset: 13
      bit_width: 1
      description: 1 to invert Signma-Delta input signal
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREF_SEL
      bit_offset: 14
      bit_width: 2
      description: Sigma-Delta ADC Reference source selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INT_1P2V
        1: EXT_DRV
        2: EXT_NO_DRV
        3: VCC
    - !Field
      name: CH_IDX_EN
      bit_offset: 18
      bit_width: 1
      description: 1 to append channel index in data result to be used in scan mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_FORMAT
      bit_offset: 19
      bit_width: 1
      description: Data output format. When DATA_FORMAT ==0, When CH_IDX_EN ==0, the
        ADC_DATA[31:0] is adc data, signed data, 31 bit frac. When CH_IDX_EN ==1,
        the ADC_DATA[4:0] is channel output, {ADC_DATA[31:5],5'h0} is adc data, signed
        data, 31 bit frac. When DATA_FORMAT ==1, When CH_IDX_EN ==0, the ADC_DATA[22:0]
        is adc data, signed data, 22 bit frac. When CH_IDX_EN ==1, the ADC_DATA[31:27]
        is channel output, ADC_DATA[22:0] is adc data, signed data, 22 bit frac.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREFO_EN
      bit_offset: 20
      bit_width: 1
      description: 1 to enable bandgap out-chip capacitor
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRST_DIS
      bit_offset: 21
      bit_width: 1
      description: 1 to disable adc reset.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIGGER
      bit_offset: 23
      bit_width: 6
      description: Adc start trigger. 0 to 31 PA00 to PA31; 32 to 34 GPIOB0 to GPIOB2;
        35, software trigger; 36, rng trigger; 56 to 59, timer 0 to timer 3; 60 to
        63 pwm 0 to pwm 3
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH_SEL
    addr: 0x4
    size_bits: 32
    description: ADC channel selection register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: CH_SEL
      bit_offset: 0
      bit_width: 32
      description: In scan conversion mode, the channels with 1 set will be scanned,
        from LSB to MSB. In none scan conversion mode, only the first channel from
        LSB with 1 set will be converted. If all bits are set to 0, no ADC conversion
        will be started.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CH_CFG
    addr: 0x8
    size_bits: 32
    description: ADC channel configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CH_CFG
      bit_offset: 0
      bit_width: 32
      description: whenCH_CONFIG[N] is 0, the N channelwill select the configure 0
        option(seeregister SD_CONFIG0). whenCH_CONFIG[N] is 1, the N channelwill select
        the configure 1 option(seeregister SD_CONFIG1).
      read_allowed: true
      write_allowed: true
  - !Register
    name: WCMP_THR
    addr: 0xc
    size_bits: 32
    description: Window compare threshold register
    read_allowed: true
    write_allowed: true
    reset_value: 0x7fff8000
    fields:
    - !Field
      name: WCMP_THR_LOW
      bit_offset: 0
      bit_width: 16
      description: '&lt;s 0 15&gt; Windows compare low threshold.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: WCMP_THR_HIGH
      bit_offset: 16
      bit_width: 16
      description: '&lt;s 0 15&gt; Windows compare high threshold If ADC decimation
        result is out of the window one compare interrupt will be triggered.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x10
    size_bits: 32
    description: ADC interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DAT_RDY_INTEN
      bit_offset: 0
      bit_width: 1
      description: 1 to enable Data ready interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: WCMP_INTEN
      bit_offset: 1
      bit_width: 1
      description: 1 to enable Window compare interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIFO_OF_INTEN
      bit_offset: 2
      bit_width: 1
      description: 1 to enalble FIFO overflow interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_INTEN
      bit_offset: 31
      bit_width: 1
      description: 1 to enable ADC interrupt
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT
    addr: 0x14
    size_bits: 32
    description: ADC interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DAT_RDY_INT
      bit_offset: 0
      bit_width: 1
      description: Data ready interrupt will be cleared after fifo data is read can
        not be cleared by write 1.
      read_allowed: true
      write_allowed: false
    - !Field
      name: WCMP_INT
      bit_offset: 1
      bit_width: 1
      description: Window compare interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIFO_OF_INT
      bit_offset: 2
      bit_width: 1
      description: FIFO overflow interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_INT
      bit_offset: 31
      bit_width: 1
      description: ADC interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: DATA
    addr: 0x18
    size_bits: 32
    description: ADC converted data output
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 32
      description: ADC data read from FIFO.
      read_allowed: true
      write_allowed: false
  - !Register
    name: BG_BF
    addr: 0x28
    size_bits: 32
    description: ADC bandcap and buffer setting register
    read_allowed: true
    write_allowed: true
    reset_value: 0x82
    fields:
    - !Field
      name: PGA_BM
      bit_offset: 0
      bit_width: 3
      description: SD ADC buffer bias current selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PGA_BM_50PCNT
        1: PGA_BM_75PCNT
        2: PGA_BM_100PCNT
        3: PGA_BM_150PCNT
        4: PGA_BM_200PCNT
        5: PGA_BM_300PCNT
    - !Field
      name: BG_SEL
      bit_offset: 4
      bit_width: 4
      description: Bandgap voltage selection to compensate PVT variations8 steps with
        5mV each upward. VBG=1205+5*BGSEL(mV)
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEMP_EN
      bit_offset: 12
      bit_width: 1
      description: 1 to enable temperature sensor
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_CHOP_EN
      bit_offset: 13
      bit_width: 1
      description: 1 to enable chopper in PGA
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_BM_DIV2
      bit_offset: 14
      bit_width: 1
      description: 1 to half PGA bias current
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANA_CTRL
    addr: 0x2c
    size_bits: 32
    description: ADC core and reference setting regsiter
    read_allowed: true
    write_allowed: true
    reset_value: 0x55564
    fields:
    - !Field
      name: ADC_BM
      bit_offset: 0
      bit_width: 3
      description: ADC bias current selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_BM_50PCNT
        1: ADC_BM_75PCNT
        2: ADC_BM_100PCNT
        3: ADC_BM_150PCNT
        4: ADC_BM_200PCNT
        5: ADC_BM_300PCNT
    - !Field
      name: ADC_ORDER
      bit_offset: 4
      bit_width: 1
      description: 1 to enable SD ADC 2 order mode selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_ORDER_3ORDER
        1: ADC_ORDER_2ORDER
    - !Field
      name: DITHER_EN
      bit_offset: 5
      bit_width: 1
      description: 1 to enable SD ADC PN Sequence in chopper mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHOP_EN
      bit_offset: 6
      bit_width: 1
      description: 1 to enable SD ADC chopper
      read_allowed: true
      write_allowed: true
    - !Field
      name: INV_CLK
      bit_offset: 7
      bit_width: 1
      description: 1 to invert SD ADC Output Clock
      read_allowed: true
      write_allowed: true
    - !Field
      name: VREF_BM
      bit_offset: 8
      bit_width: 3
      description: SD ADC Reference Driver bias current selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VREF_BM_50PCNT
        1: VREF_BM_75PCNT
        2: VREF_BM_100PCNT
        3: VREF_BM_150PCNT
        4: VREF_BM_200PCNT
        5: VREF_BM_300PCNT
    - !Field
      name: VREF_BM_X3
      bit_offset: 11
      bit_width: 1
      description: SD ADC Reference Driver bias current triple.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VINN_IN_BM
      bit_offset: 12
      bit_width: 3
      description: PGA VlNN Input Driver bias current selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VINN_IN_BM_50PCNT
        1: VINN_IN_BM_75PCNT
        2: VINN_IN_BM_100PCNT
        3: VINN_IN_BM_150PCNT
        4: VINN_IN_BM_200PCNT
        5: VINN_IN_BM_300PCNT
    - !Field
      name: VINN_OUT_BM
      bit_offset: 16
      bit_width: 3
      description: PGA VlNN Output Driver bias current selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VINN_OUT_BM_50PCNT
        1: VINN_OUT_BM_75PCNT
        2: VINN_OUT_BM_100PCNT
        3: VINN_OUT_BM_150PCNT
        4: VINN_OUT_BM_200PCNT
        5: VINN_OUT_BM_300PCNT
    - !Field
      name: VINN_OUT_BM_X3
      bit_offset: 19
      bit_width: 1
      description: PGA VlNN Output Driver bias current triple.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_BM_DIV2
      bit_offset: 20
      bit_width: 1
      description: SD ADC bias current half.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CFG[0]
    addr: 0x20
    size_bits: 32
    description: ADC configuration register
    read_allowed: true
    write_allowed: true
    reset_value: 0x83802950
    fields:
    - !Field
      name: PGA_GAIN
      bit_offset: 0
      bit_width: 3
      description: SD ADC input PGA gain=2^value the range is 1-16.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_BP
      bit_offset: 3
      bit_width: 1
      description: 1 to bypass SD ADC input PGA
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_VINN
      bit_offset: 4
      bit_width: 2
      description: SD ADC PGA VIN input offset selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VREF
        1: VREF_0P75
        2: VREF_0P5
        3: AVSS
    - !Field
      name: ADC_GAIN
      bit_offset: 6
      bit_width: 2
      description: SD ADC gain selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_GAIN_0P5X
        1: ADC_GAIN_1X
        2: ADC_GAIN_1P5X
        3: ADC_GAIN_2X
    - !Field
      name: VREF_GAIN
      bit_offset: 8
      bit_width: 1
      description: SD ADC Reference Gain seletion
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VREF_GAIN_1X
        1: VREF_GAIN_1P5X
    - !Field
      name: ADC_VCM
      bit_offset: 9
      bit_width: 3
      description: SD ADC input common voltage selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_VCM_1D16
        1: ADC_VCM_1D8
        2: ADC_VCM_2D8
        3: ADC_VCM_3D8
        4: ADC_VCM_4D8
        5: ADC_VCM_5D8
        6: ADC_VCM_6D8
        7: ADC_VCM_7D8
    - !Field
      name: PGA_VCM_EN
      bit_offset: 12
      bit_width: 1
      description: SD ADC PGA output common voltage control enable signal.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_VCM_DIR
      bit_offset: 13
      bit_width: 1
      description: SD ADC PGA output common voltage control direction signal.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DOWN
        1: UP
    - !Field
      name: PGA_VCM
      bit_offset: 14
      bit_width: 6
      description: SD ADC PGA output common voltage, adjustment = (PGA_VCM0[5]+1)*(PGA_VCM0[3:0]+1)*40mv
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOWN_SAMPLE_RATE
      bit_offset: 20
      bit_width: 3
      description: Down sample rate
      read_allowed: true
      write_allowed: true
      enum_values:
        1: DOWN_SAMPLE_32
        3: DOWN_SAMPLE_64
        4: DOWN_SAMPLE_256
        5: DOWN_SAMPLE_128
    - !Field
      name: DS_DATA_STABLE
      bit_offset: 23
      bit_width: 6
      description: Down sample date stable number. you can keep the bit 1:0 to 2'b11.
        DS_DATA_STABLE0[5:2]+1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCAN_INTV
      bit_offset: 29
      bit_width: 3
      description: Interval when switching ADC source; 2/4/8/16/32/64/128/256 clock
        cycle.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SCAN_INTV_2CLK
        1: SCAN_INTV_4CLK
        2: SCAN_INTV_8CLK
        3: SCAN_INTV_16CLK
        4: SCAN_INTV_32CLK
        5: SCAN_INTV_64CLK
        6: SCAN_INTV_128CLK
        7: SCAN_INTV_256CLK
  - !Register
    name: CFG[1]
    addr: 0x24
    size_bits: 32
    description: ADC configuration register
    read_allowed: true
    write_allowed: true
    reset_value: 0x83802950
    fields:
    - !Field
      name: PGA_GAIN
      bit_offset: 0
      bit_width: 3
      description: SD ADC input PGA gain=2^value the range is 1-16.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_BP
      bit_offset: 3
      bit_width: 1
      description: 1 to bypass SD ADC input PGA
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_VINN
      bit_offset: 4
      bit_width: 2
      description: SD ADC PGA VIN input offset selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VREF
        1: VREF_0P75
        2: VREF_0P5
        3: AVSS
    - !Field
      name: ADC_GAIN
      bit_offset: 6
      bit_width: 2
      description: SD ADC gain selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_GAIN_0P5X
        1: ADC_GAIN_1X
        2: ADC_GAIN_1P5X
        3: ADC_GAIN_2X
    - !Field
      name: VREF_GAIN
      bit_offset: 8
      bit_width: 1
      description: SD ADC Reference Gain seletion
      read_allowed: true
      write_allowed: true
      enum_values:
        0: VREF_GAIN_1X
        1: VREF_GAIN_1P5X
    - !Field
      name: ADC_VCM
      bit_offset: 9
      bit_width: 3
      description: SD ADC input common voltage selection.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADC_VCM_1D16
        1: ADC_VCM_1D8
        2: ADC_VCM_2D8
        3: ADC_VCM_3D8
        4: ADC_VCM_4D8
        5: ADC_VCM_5D8
        6: ADC_VCM_6D8
        7: ADC_VCM_7D8
    - !Field
      name: PGA_VCM_EN
      bit_offset: 12
      bit_width: 1
      description: SD ADC PGA output common voltage control enable signal.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PGA_VCM_DIR
      bit_offset: 13
      bit_width: 1
      description: SD ADC PGA output common voltage control direction signal.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DOWN
        1: UP
    - !Field
      name: PGA_VCM
      bit_offset: 14
      bit_width: 6
      description: SD ADC PGA output common voltage, adjustment = (PGA_VCM0[5]+1)*(PGA_VCM0[3:0]+1)*40mv
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOWN_SAMPLE_RATE
      bit_offset: 20
      bit_width: 3
      description: Down sample rate
      read_allowed: true
      write_allowed: true
      enum_values:
        1: DOWN_SAMPLE_32
        3: DOWN_SAMPLE_64
        4: DOWN_SAMPLE_256
        5: DOWN_SAMPLE_128
    - !Field
      name: DS_DATA_STABLE
      bit_offset: 23
      bit_width: 6
      description: Down sample date stable number. you can keep the bit 1:0 to 2'b11.
        DS_DATA_STABLE0[5:2]+1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCAN_INTV
      bit_offset: 29
      bit_width: 3
      description: Interval when switching ADC source; 2/4/8/16/32/64/128/256 clock
        cycle.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SCAN_INTV_2CLK
        1: SCAN_INTV_4CLK
        2: SCAN_INTV_8CLK
        3: SCAN_INTV_16CLK
        4: SCAN_INTV_32CLK
        5: SCAN_INTV_64CLK
        6: SCAN_INTV_128CLK
        7: SCAN_INTV_256CLK
- !Module
  name: DAC
  description: dac
  base_addr: 0x40007400
  size: 0x2c
  registers:
  - !Register
    name: ANA_CFG
    addr: 0x0
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x71022
    fields:
    - !Field
      name: FILTER_BM
      bit_offset: 0
      bit_width: 3
      description: Set the filter bias current
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAC_AMP
      bit_offset: 4
      bit_width: 3
      description: Set the current bias of the DAC
      read_allowed: true
      write_allowed: true
    - !Field
      name: FILTER_BW
      bit_offset: 8
      bit_width: 2
      description: Set the Miller compensation capacitance of the OPAMP. This compensation
        capacitance is determined by the off-chip load resistance
      read_allowed: true
      write_allowed: true
    - !Field
      name: FILTER_150K_EN
      bit_offset: 12
      bit_width: 1
      description: Set the filter type and bandwidth
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCM
      bit_offset: 16
      bit_width: 4
      description: Set the common mode I of the driver.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL
    addr: 0x4
    size_bits: 32
    description: DAC clock invert
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: DAC module enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIN_EN
      bit_offset: 1
      bit_width: 1
      description: Sin wave enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: MOD_EN
      bit_offset: 2
      bit_width: 1
      description: Modulator enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: MOD_WD
      bit_offset: 3
      bit_width: 1
      description: Modulator output width
      read_allowed: true
      write_allowed: true
    - !Field
      name: SMPL_RATE
      bit_offset: 4
      bit_width: 3
      description: sigma delta modulator down sample rate
      read_allowed: true
      write_allowed: true
    - !Field
      name: SGN_INV
      bit_offset: 7
      bit_width: 1
      description: Sign bit inverse
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_IN_ALGN
      bit_offset: 8
      bit_width: 1
      description: FIFO input data align
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_OUT_ALGN
      bit_offset: 9
      bit_width: 1
      description: FIFO output data and Sine wave generator output align mode when
        no modulation mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRG_MODE
      bit_offset: 10
      bit_width: 1
      description: Trigger mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRG_EDGE
      bit_offset: 11
      bit_width: 2
      description: Trigger edge select
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRG_SEL
      bit_offset: 16
      bit_width: 6
      description: Trigger select
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_DIV
      bit_offset: 24
      bit_width: 7
      description: DAC clock divider
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_INV
      bit_offset: 31
      bit_width: 1
      description: DAC clock invert
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIN_CFG0
    addr: 0x8
    size_bits: 32
    description: sin amplitude
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SIN_FREQ
      bit_offset: 0
      bit_width: 16
      description: sin frequency
      read_allowed: true
      write_allowed: true
    - !Field
      name: SIN_AMP
      bit_offset: 16
      bit_width: 16
      description: sin amplitude
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIN_CFG1
    addr: 0xc
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SIN_DC
      bit_offset: 0
      bit_width: 20
      description: DC value of sin wave
      read_allowed: true
      write_allowed: true
  - !Register
    name: GAIN_CTRL
    addr: 0x10
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x10
    fields:
    - !Field
      name: GAIN_CTRL
      bit_offset: 0
      bit_width: 8
      description: digital FIFO output multiply with GAIN_CTRL to scale to certain
        range. Where GAIN_CTRL is a &amp;lt;u 4 4&amp;gt; value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLR_TRG
    addr: 0x14
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUF_CLR
      bit_offset: 0
      bit_width: 1
      description: clear buffer signal write 1 to clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SW_TRG
      bit_offset: 1
      bit_width: 1
      description: Software trigger
      read_allowed: false
      write_allowed: true
  - !Register
    name: DIN
    addr: 0x18
    size_bits: 32
    description: DAC data input
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: DIN
      bit_offset: 0
      bit_width: 32
      description: DAC data input
      read_allowed: false
      write_allowed: true
  - !Register
    name: INT
    addr: 0x1c
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUF_NFUL_INT
      bit_offset: 0
      bit_width: 1
      description: Buffer not full interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_FUL_INT
      bit_offset: 1
      bit_width: 1
      description: Buffer full interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_EMT_INT
      bit_offset: 2
      bit_width: 1
      description: Buffer empty interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_HEMT_INT
      bit_offset: 3
      bit_width: 1
      description: buffer half empty interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_OV_INT
      bit_offset: 4
      bit_width: 1
      description: Buffer overflow interrupt write 1 to clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_UD_INT
      bit_offset: 5
      bit_width: 1
      description: Buffer underflow interrupt write 1 to clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_HFUL_INT
      bit_offset: 6
      bit_width: 1
      description: Buffer half full interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTEN
    addr: 0x20
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUF_NFUL_INTEN
      bit_offset: 0
      bit_width: 1
      description: buffer not full interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_FUL_INTEN
      bit_offset: 1
      bit_width: 1
      description: buffer full interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_EMT_INTEN
      bit_offset: 2
      bit_width: 1
      description: buffer empty interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_HEMT_INTEN
      bit_offset: 3
      bit_width: 1
      description: buffer half empty interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_OV_INTEN
      bit_offset: 4
      bit_width: 1
      description: buffer over flow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_UD_INTEN
      bit_offset: 5
      bit_width: 1
      description: Buffer under flow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_HFUL_INTEN
      bit_offset: 6
      bit_width: 1
      description: buffer half full interrupt enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_STAT
    addr: 0x24
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BUF_NFUL_INT_STAT
      bit_offset: 0
      bit_width: 1
      description: buffer not full interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_FUL_INT_STAT
      bit_offset: 1
      bit_width: 1
      description: buffer full interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_EMT_INT_STAT
      bit_offset: 2
      bit_width: 1
      description: buffer empty interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_HEMT_INT_STAT
      bit_offset: 3
      bit_width: 1
      description: buffer half empty interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_OV_INT_STAT
      bit_offset: 4
      bit_width: 1
      description: buffer over flow interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_UD_INT_STAT
      bit_offset: 5
      bit_width: 1
      description: Buffer under flow interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_HFUL_INT_STAT
      bit_offset: 6
      bit_width: 1
      description: buffer half full interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: DAC_INT_STAT
      bit_offset: 16
      bit_width: 1
      description: DAC all interrupt status
      read_allowed: true
      write_allowed: false
  - !Register
    name: STATUS
    addr: 0x28
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BUSY
      bit_offset: 0
      bit_width: 1
      description: busy
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_WR_PTR
      bit_offset: 16
      bit_width: 3
      description: Buffer write pointer
      read_allowed: true
      write_allowed: false
    - !Field
      name: BUF_RD_PTR
      bit_offset: 20
      bit_width: 3
      description: Buffer read pointer
      read_allowed: true
      write_allowed: false
- !Module
  name: CS
  description: tsc
  base_addr: 0x40007800
  size: 0x24
  registers:
  - !Register
    name: CTRL0
    addr: 0x0
    size_bits: 32
    description: CapSense control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: CapSense enable. Write 1 to start work, 0 to stop.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: SRST
      bit_offset: 1
      bit_width: 1
      description: Soft reset. Set 1 to reset, and 0 to de-assert.
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC_FREQ
      bit_offset: 2
      bit_width: 6
      description: Oscillation frequency control. The driving current will change
        accordingly.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_DIV
      bit_offset: 16
      bit_width: 9
      description: 'Clock divider from CLK_APB : CLK_CS_DIV = CLK_APB/(CLK_DIV + 1)'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL1
    addr: 0x4
    size_bits: 32
    description: CapSense control register 1
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIOD
      bit_offset: 0
      bit_width: 16
      description: The scan period for one channel, which is PERIOD/(CLK_DIV+1) clock
        cycles of CLK_APB.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CH
      bit_offset: 16
      bit_width: 8
      description: Channel enable, each bit represent one channel, with CH[0] for
        CS0, CH[1] for CS1
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT
    addr: 0x8
    size_bits: 32
    description: Interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIFO_NOTEMPTY_INT
      bit_offset: 0
      bit_width: 1
      description: FIFO not empty status indicator. Will clear automatically if no
        data available.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIFO_HFULL_INT
      bit_offset: 1
      bit_width: 1
      description: FIFO half full status indicator. Will clear automatically once
        less than half.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIFO_FULL_INT
      bit_offset: 2
      bit_width: 1
      description: FIFO full status indicator. Will clear automatically once not full.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SCAN_INT
      bit_offset: 3
      bit_width: 1
      description: Scan done status flag for all enabled channels. Write 1 to clear.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0xc
    size_bits: 32
    description: Interrupt mask register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIFO_NOTEMPTY_INTEN
      bit_offset: 0
      bit_width: 1
      description: Interrupt mask of FIFO_NOTEMPTY_INT. Set 1 to enable the interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIFO_HFULL_INTEN
      bit_offset: 1
      bit_width: 1
      description: Interrupt mask of FIFO_HFULL_INT. Set 1 to enable the interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIFO_FULL_INTEN
      bit_offset: 2
      bit_width: 1
      description: Interrupt mask of FIFO_FULL_INT. Set 1 to enable the interrupt.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SCAN_INTEN
      bit_offset: 3
      bit_width: 1
      description: Interrupt mask of SCAN_INT. Set 1 to enable the interrupt.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DATA
    addr: 0x10
    size_bits: 32
    description: Output data register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 19
      description: 'Output data to MCU: DATA[18:16]: channel index, DATA[15:0]: counter
        output for that channel.'
      read_allowed: true
      write_allowed: false
  - !Register
    name: LP_CTRL
    addr: 0x14
    size_bits: 32
    description: Control register for low power mode
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DEBONCE_NUM
      bit_offset: 0
      bit_width: 4
      description: (DEBONCE_NUM+1) consecutive samples to judge one touch action.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LP_EN
      bit_offset: 4
      bit_width: 1
      description: Enable for low power mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLE
        1: ENABLE
    - !Field
      name: LP_CH
      bit_offset: 5
      bit_width: 3
      description: The index of the channel to monitor in low power mode, representing
        0~7.
      read_allowed: true
      write_allowed: true
    - !Field
      name: THR
      bit_offset: 16
      bit_width: 16
      description: Threshold to decide the touch action.
      read_allowed: true
      write_allowed: true
  - !Register
    name: LP_INT
    addr: 0x18
    size_bits: 32
    description: Low power interrupt register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: LP_INT
      bit_offset: 0
      bit_width: 1
      description: Interrupt in low power mode when counter output is less than THR.
      read_allowed: true
      write_allowed: false
  - !Register
    name: LP_INTEN
    addr: 0x1c
    size_bits: 32
    description: low power interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: LP_INTEN
      bit_offset: 0
      bit_width: 1
      description: Interrupt enable of LP_INT. Set 1 to enable.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IDLE_PERIOD
    addr: 0x20
    size_bits: 32
    description: Idle preiod number register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IDLE_PERIOD
      bit_offset: 0
      bit_width: 16
      description: Number of idle period. Zero represents no idle time between consecutive
        scan.
      read_allowed: true
      write_allowed: true
- !Module
  name: RNG
  description: rng
  base_addr: 0x40007c00
  size: 0x14
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: write 1 to enable randome number generator
      read_allowed: true
      write_allowed: true
    - !Field
      name: START
      bit_offset: 1
      bit_width: 1
      description: write 1 to start random number generation, auto clear
      read_allowed: false
      write_allowed: true
    - !Field
      name: NUM
      bit_offset: 4
      bit_width: 2
      description: total bits
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x4
    size_bits: 32
    description: status register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BUSY
      bit_offset: 0
      bit_width: 1
      description: module in processing
      read_allowed: true
      write_allowed: false
  - !Register
    name: DATA
    addr: 0x8
    size_bits: 32
    description: random data output register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 32
      description: final random data read by SW
      read_allowed: true
      write_allowed: false
  - !Register
    name: INT
    addr: 0xc
    size_bits: 32
    description: interrupt register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DONE
      bit_offset: 0
      bit_width: 1
      description: random data generate done
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x10
    size_bits: 32
    description: interrupt mask register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DONE_INTEN
      bit_offset: 0
      bit_width: 1
      description: random data generate done mask
      read_allowed: true
      write_allowed: true
- !Module
  name: QDEC0
  description: qdec
  base_addr: 0x40009000
  size: 0x28
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: QDEC_EN
      bit_offset: 0
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: START
      bit_offset: 1
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: STOP
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: SOFT_CLR
      bit_offset: 3
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: AUTO_CLR_EN
      bit_offset: 4
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SINGLE_SAMPLE_SRST_EN
      bit_offset: 5
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_FILTER_EN
      bit_offset: 6
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: SAMP_CTRL
    addr: 0x4
    size_bits: 32
    description: QDEC sample settting register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDE
      bit_offset: 0
      bit_width: 5
      description: divide number to APB clk 0~20 total 21modes
      read_allowed: true
      write_allowed: true
    - !Field
      name: PTS
      bit_offset: 8
      bit_width: 4
      description: total sample points 0~11 total 12modes cf. 8.2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PTS0
        1: PTS1
        2: PTS2
        3: PTS3
        4: PTS4
        5: PTS5
        6: PTS6
        7: PTS7
        8: PTS8
        9: PTS9
        10: PTS10
        11: PTS11
    - !Field
      name: DB_SAMP_DIV
      bit_offset: 16
      bit_width: 4
      description: Debounce filter sample clk devide cf. 8.3
      read_allowed: true
      write_allowed: true
  - !Register
    name: SAMPLE
    addr: 0x8
    size_bits: 32
    description: QDEC sample result register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SAMPLE
      bit_offset: 0
      bit_width: 2
      description: Sample value each time (2's complement)
      read_allowed: true
      write_allowed: false
  - !Register
    name: ACC
    addr: 0xc
    size_bits: 32
    description: QDEC accumulate register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACC
      bit_offset: 0
      bit_width: 11
      description: shift counter (-1 &amp; +1 ) normal case
      read_allowed: true
      write_allowed: false
  - !Register
    name: ACC_R
    addr: 0x10
    size_bits: 32
    description: QDEC accumulate snapshot register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACC_R
      bit_offset: 0
      bit_width: 11
      description: ACC RO snapshot when END event is valid
      read_allowed: true
      write_allowed: false
  - !Register
    name: DB
    addr: 0x14
    size_bits: 32
    description: double sample register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DB
      bit_offset: 0
      bit_width: 4
      description: 2 trans counter ERROR case max value 15.
      read_allowed: true
      write_allowed: false
  - !Register
    name: DB_R
    addr: 0x18
    size_bits: 32
    description: DB snapshot register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DB_R
      bit_offset: 0
      bit_width: 4
      description: DB_R RO snapshot when END event is valid
      read_allowed: true
      write_allowed: false
  - !Register
    name: INT
    addr: 0x1c
    size_bits: 32
    description: interrupt register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SINGLE_SAMPLE
      bit_offset: 0
      bit_width: 1
      description: Each time when normal sample is done
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAMPLE_END
      bit_offset: 1
      bit_width: 1
      description: END event triggered
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACC_OF
      bit_offset: 2
      bit_width: 1
      description: Normal sample (+1/-1) number is overflow
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_OF
      bit_offset: 3
      bit_width: 1
      description: Double sample (2 trans )number is overflow
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x20
    size_bits: 32
    description: interrupt mask register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SINGLE_SAMPLE_INTEN
      bit_offset: 0
      bit_width: 1
      description: single sample done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAMPLE_END_INTEN
      bit_offset: 1
      bit_width: 1
      description: sample end interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACC_OF_INTEN
      bit_offset: 2
      bit_width: 1
      description: normal sample overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_OF_INTEN
      bit_offset: 3
      bit_width: 1
      description: double sample overflow interrupt enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x24
    size_bits: 32
    description: QDEC is running
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BUSY
      bit_offset: 0
      bit_width: 1
      description: QDEC is running
      read_allowed: true
      write_allowed: false
- !Module
  name: QDEC1
  description: qdec
  base_addr: 0x40009800
  size: 0x28
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: QDEC_EN
      bit_offset: 0
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: START
      bit_offset: 1
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: STOP
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: SOFT_CLR
      bit_offset: 3
      bit_width: 1
      description: no description available
      read_allowed: false
      write_allowed: true
    - !Field
      name: AUTO_CLR_EN
      bit_offset: 4
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SINGLE_SAMPLE_SRST_EN
      bit_offset: 5
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_FILTER_EN
      bit_offset: 6
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: SAMP_CTRL
    addr: 0x4
    size_bits: 32
    description: QDEC sample settting register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVIDE
      bit_offset: 0
      bit_width: 5
      description: divide number to APB clk 0~20 total 21modes
      read_allowed: true
      write_allowed: true
    - !Field
      name: PTS
      bit_offset: 8
      bit_width: 4
      description: total sample points 0~11 total 12modes cf. 8.2
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PTS0
        1: PTS1
        2: PTS2
        3: PTS3
        4: PTS4
        5: PTS5
        6: PTS6
        7: PTS7
        8: PTS8
        9: PTS9
        10: PTS10
        11: PTS11
    - !Field
      name: DB_SAMP_DIV
      bit_offset: 16
      bit_width: 4
      description: Debounce filter sample clk devide cf. 8.3
      read_allowed: true
      write_allowed: true
  - !Register
    name: SAMPLE
    addr: 0x8
    size_bits: 32
    description: QDEC sample result register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SAMPLE
      bit_offset: 0
      bit_width: 2
      description: Sample value each time (2's complement)
      read_allowed: true
      write_allowed: false
  - !Register
    name: ACC
    addr: 0xc
    size_bits: 32
    description: QDEC accumulate register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACC
      bit_offset: 0
      bit_width: 11
      description: shift counter (-1 &amp; +1 ) normal case
      read_allowed: true
      write_allowed: false
  - !Register
    name: ACC_R
    addr: 0x10
    size_bits: 32
    description: QDEC accumulate snapshot register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACC_R
      bit_offset: 0
      bit_width: 11
      description: ACC RO snapshot when END event is valid
      read_allowed: true
      write_allowed: false
  - !Register
    name: DB
    addr: 0x14
    size_bits: 32
    description: double sample register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DB
      bit_offset: 0
      bit_width: 4
      description: 2 trans counter ERROR case max value 15.
      read_allowed: true
      write_allowed: false
  - !Register
    name: DB_R
    addr: 0x18
    size_bits: 32
    description: DB snapshot register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DB_R
      bit_offset: 0
      bit_width: 4
      description: DB_R RO snapshot when END event is valid
      read_allowed: true
      write_allowed: false
  - !Register
    name: INT
    addr: 0x1c
    size_bits: 32
    description: interrupt register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SINGLE_SAMPLE
      bit_offset: 0
      bit_width: 1
      description: Each time when normal sample is done
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAMPLE_END
      bit_offset: 1
      bit_width: 1
      description: END event triggered
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACC_OF
      bit_offset: 2
      bit_width: 1
      description: Normal sample (+1/-1) number is overflow
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_OF
      bit_offset: 3
      bit_width: 1
      description: Double sample (2 trans )number is overflow
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x20
    size_bits: 32
    description: interrupt mask register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SINGLE_SAMPLE_INTEN
      bit_offset: 0
      bit_width: 1
      description: single sample done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SAMPLE_END_INTEN
      bit_offset: 1
      bit_width: 1
      description: sample end interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: ACC_OF_INTEN
      bit_offset: 2
      bit_width: 1
      description: normal sample overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DB_OF_INTEN
      bit_offset: 3
      bit_width: 1
      description: double sample overflow interrupt enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x24
    size_bits: 32
    description: QDEC is running
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BUSY
      bit_offset: 0
      bit_width: 1
      description: QDEC is running
      read_allowed: true
      write_allowed: false
- !Module
  name: RTC
  description: rtc
  base_addr: 0x4000b000
  size: 0x30
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: RTC control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x100
    fields:
    - !Field
      name: SEC_INT_EN
      bit_offset: 0
      bit_width: 1
      description: RTC second interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFG
      bit_offset: 2
      bit_width: 1
      description: RTC second configuration control. This bit is self-cleared after
        synchronization
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAL_EN
      bit_offset: 8
      bit_width: 1
      description: Calibration enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: STATUS
    addr: 0x4
    size_bits: 32
    description: RTC status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SEC_INT
      bit_offset: 0
      bit_width: 1
      description: Second interrupt flag
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTRL_SYNC
      bit_offset: 8
      bit_width: 1
      description: Control Register synchronization busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: STATUS_SYNC
      bit_offset: 9
      bit_width: 1
      description: Status Register synchronization busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: SEC_SYNC
      bit_offset: 10
      bit_width: 1
      description: Second configuration Register synchronization busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: CALIB_SYNC
      bit_offset: 12
      bit_width: 1
      description: Calibration Register synchronization busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: FREE_SYNC
      bit_offset: 16
      bit_width: 1
      description: Free running counter control Register synchronization busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: THR_INT_SYNC
      bit_offset: 17
      bit_width: 1
      description: Free running counter interrupt Threshold Register synchronization
        busy indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: THR_RST_SYNC
      bit_offset: 18
      bit_width: 1
      description: Free running counter Reset Threshold Register synchronization busy
        indicator
      read_allowed: true
      write_allowed: false
    - !Field
      name: FREE_RUNNING_INT
      bit_offset: 31
      bit_width: 1
      description: Free running interrupt status.
      read_allowed: true
      write_allowed: false
  - !Register
    name: SEC
    addr: 0x8
    size_bits: 32
    description: RTC second register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SEC
      bit_offset: 0
      bit_width: 32
      description: Second configuration register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAL
    addr: 0x10
    size_bits: 32
    description: RTC calibration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PPM
      bit_offset: 0
      bit_width: 16
      description: RTC calibration ppm value the precision is 1 ppm.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIR
      bit_offset: 16
      bit_width: 1
      description: RTC calibration direction indicator
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FORWARD
        1: BACKWARD
  - !Register
    name: CNT_VAL
    addr: 0x14
    size_bits: 32
    description: RTC count value register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CNT
      bit_offset: 0
      bit_width: 15
      description: RTC counter current value read only.
      read_allowed: true
      write_allowed: false
  - !Register
    name: CNT2_CTRL
    addr: 0x20
    size_bits: 32
    description: Free running control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CNT2_EN
      bit_offset: 0
      bit_width: 1
      description: 1 to enable free running counter
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNT2_INT_EN
      bit_offset: 1
      bit_width: 1
      description: 1 to enable free running interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNT2_WAKEUP
      bit_offset: 2
      bit_width: 1
      description: 1 to enable free running wakeup
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNT2_RST
      bit_offset: 3
      bit_width: 1
      description: 1 to enable free running reset
      read_allowed: true
      write_allowed: true
  - !Register
    name: THR_INT
    addr: 0x24
    size_bits: 32
    description: interrupt threshold of free running counter register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf000000
    fields:
    - !Field
      name: THR_INT
      bit_offset: 0
      bit_width: 32
      description: The Threshold of free running counter is to generate free running
        interrupt.
      read_allowed: true
      write_allowed: true
  - !Register
    name: THR_RST
    addr: 0x28
    size_bits: 32
    description: reset threshold of free running counter register
    read_allowed: true
    write_allowed: true
    reset_value: 0xff000000
    fields:
    - !Field
      name: THR_RST
      bit_offset: 0
      bit_width: 32
      description: The Threshold of free running counter is to generate free running
        reset.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CNT2
    addr: 0x2c
    size_bits: 32
    description: free running count value
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: CNT2
      bit_offset: 0
      bit_width: 32
      description: The current value of free running counter
      read_allowed: true
      write_allowed: false
- !Module
  name: AGC
  description: agc
  base_addr: 0x4000c000
  size: 0x1c
  registers:
  - !Register
    name: CTRL0
    addr: 0x0
    size_bits: 32
    description: AGC control register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0x3954001
    fields:
    - !Field
      name: PPF_INTRPT_MOD
      bit_offset: 0
      bit_width: 2
      description: Control whether fsm can interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FREZ_MOD
      bit_offset: 2
      bit_width: 2
      description: Control whether fsm can restore last value when correalation trigh
        happens
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_GAIN_SEL
      bit_offset: 4
      bit_width: 3
      description: LNA gain controlGAIN=26-12*LNA_GAIN_SEL
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_WEN
      bit_offset: 7
      bit_width: 1
      description: Lna gain write enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_GAIN
      bit_offset: 8
      bit_width: 4
      description: PPF gain controlGain=36-3*PPF_GAIN
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_WEN
      bit_offset: 12
      bit_width: 1
      description: Ppf gain write enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PKWT_TH_DIG_1
      bit_offset: 13
      bit_width: 5
      description: PKWT_TH_DIG + PKWT_TH_DIG_ADD in ccode
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_CLR_EN
      bit_offset: 18
      bit_width: 1
      description: Force clear analog PD
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD_RST_LEN
      bit_offset: 19
      bit_width: 3
      description: Pd disable time when reset0h0us 1h8us 2h16us 7h56us
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFAGC_FSYNC_DET_DIS
      bit_offset: 22
      bit_width: 1
      description: Use to control rfagc gain adjust0brfagc stops when sync 1brfagc
        always on
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFAGC_DIRECTION_FREEZE
      bit_offset: 23
      bit_width: 1
      description: Use to disable rfagc gain adjust when switching antenna at direction
        found mode0b rfagc enable 1brfagc disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOWN_24_EN
      bit_offset: 24
      bit_width: 1
      description: Lna decrease 24dbm0bdisable 1benable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_PD_RST_LEN
      bit_offset: 25
      bit_width: 2
      description: Pd disable time when direction found rfagc reset00b2us 01b4us 10b8us
        11b16us
      read_allowed: true
      write_allowed: true
    - !Field
      name: GLNA_MAX_REDU
      bit_offset: 27
      bit_width: 1
      description: Lna max gain reduce 12dbm0bdisable 1benable
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL1
    addr: 0x4
    size_bits: 32
    description: AGC control register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0x5a10831
    fields:
    - !Field
      name: PD3_TH_REG
      bit_offset: 0
      bit_width: 3
      description: Pd3 threshold
      read_allowed: true
      write_allowed: true
    - !Field
      name: PD3_TH_HYST_REG
      bit_offset: 3
      bit_width: 4
      description: Desired upper boundary
      read_allowed: true
      write_allowed: true
    - !Field
      name: PKWT_TH_ANA_1
      bit_offset: 7
      bit_width: 6
      description: PKWT_TH_ANA + PKWT_TH_ANA_ADD
      read_allowed: true
      write_allowed: true
    - !Field
      name: PKWT_TH_ANA_0
      bit_offset: 13
      bit_width: 5
      description: PKWT_TH_ANA in ccode
      read_allowed: true
      write_allowed: true
    - !Field
      name: PKWT_TH_DIG_0
      bit_offset: 18
      bit_width: 5
      description: PKWT_TH_DIG in ccode
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_PPF_2
      bit_offset: 23
      bit_width: 5
      description: SETL_TH_PPF_2 + DLY_DIG 1 in ccode
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL2
    addr: 0x8
    size_bits: 32
    description: AGC control register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0x4800
    fields:
    - !Field
      name: PPF_PDVTH_LOW
      bit_offset: 8
      bit_width: 1
      description: PPF peak detect threshold select
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_MG_PK
      bit_offset: 9
      bit_width: 3
      description: LNA medium gain peak detect threshold selectAMP=(400-25* LNA_MG_PK)mv
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_HG_PK
      bit_offset: 12
      bit_width: 3
      description: LNA high gain peak detect threshold selectAMP=(100-8* LNA_HG_PK)mv
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL3
    addr: 0xc
    size_bits: 32
    description: AGC control register 3
    read_allowed: true
    write_allowed: true
    reset_value: 0x12cc6c
    fields:
    - !Field
      name: GF2_PAR00
      bit_offset: 0
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: GF2_PAR01
      bit_offset: 4
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: GF2_PAR10
      bit_offset: 8
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_OVSHT_DIG
      bit_offset: 12
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_OVSHT_INTRPT
      bit_offset: 15
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_OVSHT
      bit_offset: 18
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL4
    addr: 0x10
    size_bits: 32
    description: AGC control register 4
    read_allowed: true
    write_allowed: true
    reset_value: 0xc49974
    fields:
    - !Field
      name: SETL_TH_PD1
      bit_offset: 0
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_PD2
      bit_offset: 4
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_PD3_1
      bit_offset: 8
      bit_width: 6
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETL_TH_PD3_2
      bit_offset: 14
      bit_width: 6
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: GF2_STAT24_TH
      bit_offset: 20
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL5
    addr: 0x14
    size_bits: 32
    description: AGC control register 5
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TEST_CTRL
      bit_offset: 0
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x18
    size_bits: 32
    description: AGC status register
    read_allowed: true
    write_allowed: false
    reset_value: 0x5700
    fields:
    - !Field
      name: GLNA_CODE_OUT
      bit_offset: 0
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: GF2_CODE_OUT
      bit_offset: 3
      bit_width: 4
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: RFAGC_TRIGGER_O
      bit_offset: 7
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: RF_GAIN
      bit_offset: 8
      bit_width: 7
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: NUM_GAIN_ADJ
      bit_offset: 15
      bit_width: 5
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: CUR_STAT
      bit_offset: 20
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: false
- !Module
  name: PROP
  description: prop
  base_addr: 0x4000d000
  size: 0xc
  registers:
  - !Register
    name: TX_BUF
    addr: 0x0
    size_bits: 32
    description: transmit data buffer input port register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_BUF
      bit_offset: 0
      bit_width: 8
      description: TX BUF
      read_allowed: true
      write_allowed: true
  - !Register
    name: RX_BUF
    addr: 0x4
    size_bits: 32
    description: received data buffer output register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RX_BUF
      bit_offset: 0
      bit_width: 8
      description: RX BUF
      read_allowed: true
      write_allowed: false
  - !Register
    name: STAT
    addr: 0x8
    size_bits: 32
    description: status register
    read_allowed: true
    write_allowed: true
    reset_value: 0x6
    fields:
    - !Field
      name: BIT_ORDER
      bit_offset: 0
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_INTEN
      bit_offset: 1
      bit_width: 1
      description: TX interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_INTEN
      bit_offset: 2
      bit_width: 1
      description: RX interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_INT
      bit_offset: 3
      bit_width: 1
      description: RX interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_INT
      bit_offset: 4
      bit_width: 1
      description: TX interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_BUSY
      bit_offset: 5
      bit_width: 1
      description: RX is busy
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_BUSY
      bit_offset: 6
      bit_width: 1
      description: TX is busy
      read_allowed: true
      write_allowed: false
    - !Field
      name: CLR
      bit_offset: 7
      bit_width: 1
      description: Clear intf control register.
      read_allowed: true
      write_allowed: true
- !Module
  name: BLEDP
  description: bledp
  base_addr: 0x4000e000
  size: 0xa4
  registers:
  - !Register
    name: DP_TOP_SYSTEM_CTRL
    addr: 0x0
    size_bits: 32
    description: datapath system control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x808000f0
    fields:
    - !Field
      name: RX_PDU_LEN_IN
      bit_offset: 0
      bit_width: 14
      description: pdu length user programmed header+payload unit is bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AA_SEL
      bit_offset: 14
      bit_width: 1
      description: access address selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDU_LEN_SEL
      bit_offset: 15
      bit_width: 1
      description: pdu length selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: H_IDX
      bit_offset: 16
      bit_width: 8
      description: h index from 0.25 to 0.75 default is 0.5.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_EN_SEL
      bit_offset: 24
      bit_width: 1
      description: rx enable select signal
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_EN_SEL
      bit_offset: 25
      bit_width: 1
      description: tx enable select signal
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_REQ
      bit_offset: 26
      bit_width: 1
      description: rx request.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_REQ
      bit_offset: 27
      bit_width: 1
      description: tx request.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_MODE
      bit_offset: 28
      bit_width: 2
      description: rx mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: ANT_DATA_START
      bit_offset: 30
      bit_width: 1
      description: ant mode data start signal need write 0 first then to 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DET_MODE
      bit_offset: 31
      bit_width: 1
      description: detection mode 0low ppwer mode 1high performance mode.
      read_allowed: true
      write_allowed: true
  - !Register
    name: PROP_MODE_CTRL
    addr: 0x4
    size_bits: 32
    description: properity mode control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x50002300
    fields:
    - !Field
      name: PROP_AA_ADDR_IN
      bit_offset: 0
      bit_width: 8
      description: prop mode when access address is 5 byte the access address is {prop_aa_addr_in
        aa_addr_in} otherwise is aa_addr_in
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_CRC_NUM
      bit_offset: 8
      bit_width: 2
      description: prop mode crc number
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_AA_NUM
      bit_offset: 12
      bit_width: 2
      description: prop mode network address number
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_PRE_NUM
      bit_offset: 16
      bit_width: 3
      description: prop mode preamble number
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_DATA_RATE
      bit_offset: 20
      bit_width: 2
      description: prop mode data rate
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_DIRECTION_RATE
      bit_offset: 22
      bit_width: 2
      description: prop direction find mode sample rate
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_DIRECTION_MODE
      bit_offset: 24
      bit_width: 1
      description: prop direction find mode just work at prop mode.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_ALWAYS_ON
      bit_offset: 25
      bit_width: 1
      description: rx always on
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_ALWAYS_ON
      bit_offset: 26
      bit_width: 1
      description: tx always on
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_POWER_DONE_TIME
      bit_offset: 27
      bit_width: 5
      description: tx power down time in ant mode and prop mode unit is us.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ACCESS_ADDRESS
    addr: 0x8
    size_bits: 32
    description: access address register
    read_allowed: true
    write_allowed: true
    reset_value: 0x8e89bed6
    fields:
    - !Field
      name: AA_ADDR_IN
      bit_offset: 0
      bit_width: 32
      description: access address user programmed.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA0
    addr: 0xc
    size_bits: 32
    description: pdu data 0 to 1 byte, and preamble register
    read_allowed: true
    write_allowed: true
    reset_value: 0x5502ff3b
    fields:
    - !Field
      name: PDU_DATA0
      bit_offset: 0
      bit_width: 16
      description: pdu data 0 to 1 byte
      read_allowed: true
      write_allowed: true
    - !Field
      name: PATTERN_SEL
      bit_offset: 16
      bit_width: 4
      description: pattern selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_PATTERN_EN
      bit_offset: 20
      bit_width: 1
      description: enable test pattern.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_PREAMBLE_WEN
      bit_offset: 23
      bit_width: 1
      description: when high enable manual prop mode preamble.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_PREAMBLE
      bit_offset: 24
      bit_width: 8
      description: prop mode preamble.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA1
    addr: 0x10
    size_bits: 32
    description: pdu data 2 to 5 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0x7be2e64
    fields:
    - !Field
      name: PDU_DATA1
      bit_offset: 0
      bit_width: 32
      description: pdu data 2 to 5 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA2
    addr: 0x14
    size_bits: 32
    description: pdu data 6 to 9 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0x129da3cf
    fields:
    - !Field
      name: PDU_DATA2
      bit_offset: 0
      bit_width: 32
      description: pdu data 6 to 9 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA3
    addr: 0x18
    size_bits: 32
    description: pdu data 10 to 13 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0x9b15238d
    fields:
    - !Field
      name: PDU_DATA3
      bit_offset: 0
      bit_width: 32
      description: pdu data 10 to 13 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA4
    addr: 0x1c
    size_bits: 32
    description: pdu data 14 to 17 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0xab898880
    fields:
    - !Field
      name: PDU_DATA4
      bit_offset: 0
      bit_width: 32
      description: pdu data 14 to 17 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA5
    addr: 0x20
    size_bits: 32
    description: pdu data 18 to 21 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0x42309cab
    fields:
    - !Field
      name: PDU_DATA5
      bit_offset: 0
      bit_width: 32
      description: pdu data 18 to 21 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA6
    addr: 0x24
    size_bits: 32
    description: pdu data 22 to 25 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0xde9b914
    fields:
    - !Field
      name: PDU_DATA6
      bit_offset: 0
      bit_width: 32
      description: pdu data 22 to 25 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANT_PDU_DATA7
    addr: 0x28
    size_bits: 32
    description: pdu data 26 to 29 byte
    read_allowed: true
    write_allowed: true
    reset_value: 0x2b4fd925
    fields:
    - !Field
      name: PDU_DATA7
      bit_offset: 0
      bit_width: 32
      description: pdu data 26 to 29 byte
      read_allowed: true
      write_allowed: true
  - !Register
    name: CRCSEED
    addr: 0x2c
    size_bits: 32
    description: crc seed
    read_allowed: true
    write_allowed: true
    reset_value: 0xffffff
    fields:
    - !Field
      name: CRC_SEED_IN
      bit_offset: 0
      bit_width: 24
      description: user programmed crc seed.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CRC_SEED_WEN
      bit_offset: 24
      bit_width: 1
      description: when high enable manual program crc seed.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DP_FUNCTION_CTRL
    addr: 0x30
    size_bits: 32
    description: datapath function control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1c273a40
    fields:
    - !Field
      name: DP_STATISTICS_SEL
      bit_offset: 0
      bit_width: 3
      description: datapath statistics selection.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHF_COEF_WEN
      bit_offset: 3
      bit_width: 1
      description: manual select channel filter coefficent.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHF_COEF_IDX
      bit_offset: 4
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: LP_SNR_LEN_AUTO
      bit_offset: 6
      bit_width: 1
      description: when enable auto adjust lp mode snr acc length otherwise the legnth
        fixed.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT_ADJ_DIS
      bit_offset: 7
      bit_width: 1
      description: data delay adjust disable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LP_ADJ_MODE
      bit_offset: 8
      bit_width: 1
      description: lp mode delay adjust mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: FR_OFFSET_EN
      bit_offset: 9
      bit_width: 1
      description: pdu frequency offset track enable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_AVE_EN
      bit_offset: 10
      bit_width: 1
      description: when high enable cfo estimation average.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIX_DELAY_EN
      bit_offset: 11
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRACK_LEN
      bit_offset: 12
      bit_width: 2
      description: track length
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRACK_LEN_WEN
      bit_offset: 14
      bit_width: 1
      description: when high manual track length.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_FILT_EN
      bit_offset: 16
      bit_width: 1
      description: when high enable xcorr filter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_FULLWIN_EN
      bit_offset: 17
      bit_width: 1
      description: when xcorr_win_auto_en low full sync enable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_AA_LEN
      bit_offset: 18
      bit_width: 1
      description: select access address bit number
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_AA_LEN_WEN
      bit_offset: 19
      bit_width: 1
      description: enable manual correlation aa length.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_WIN_AUTO_EN
      bit_offset: 20
      bit_width: 1
      description: correlation window size auto selection enable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESAMPLER_TAP
      bit_offset: 21
      bit_width: 1
      description: resampler tap number
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESAMPLER_TAP_WEN
      bit_offset: 22
      bit_width: 1
      description: when high enable manual resampler tap number otherwise auto selection.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESAMPLER_BP
      bit_offset: 23
      bit_width: 1
      description: resampler enable or bypass
      read_allowed: true
      write_allowed: true
    - !Field
      name: FAGC_WIN_LEN
      bit_offset: 24
      bit_width: 1
      description: select estimation length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FAGC_WEN
      bit_offset: 25
      bit_width: 1
      description: when high enable manual fine agc gain.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_CFO_EN
      bit_offset: 26
      bit_width: 1
      description: when hp mode cfo estimation enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFO_TRACK_EN
      bit_offset: 27
      bit_width: 1
      description: tracking cfo enable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFO_INI_EN
      bit_offset: 28
      bit_width: 1
      description: initial cfo enable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC_IN_FLIP
      bit_offset: 29
      bit_width: 1
      description: when 1 exchange i and q signals.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_EN_MODE
      bit_offset: 30
      bit_width: 1
      description: transmit mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_EN_MODE
      bit_offset: 31
      bit_width: 1
      description: receiver mode
      read_allowed: true
      write_allowed: true
  - !Register
    name: DP_TEST_CTRL
    addr: 0x34
    size_bits: 32
    description: datapath test iinterface register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TIF_SEL
      bit_offset: 0
      bit_width: 8
      description: test interface selection.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIF_CLK_SEL
      bit_offset: 8
      bit_width: 2
      description: test interface clock selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_DAC_OUT
      bit_offset: 11
      bit_width: 1
      description: when high cordic to dac
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIF_EN
      bit_offset: 12
      bit_width: 1
      description: test interface enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMR_INV
      bit_offset: 13
      bit_width: 1
      description: datapath mixer nco if selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_TX_GATE_DIS
      bit_offset: 14
      bit_width: 1
      description: clock tx gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_FULL_OFFRF_DIS
      bit_offset: 15
      bit_width: 1
      description: (new standard)______when high rf always on in rx_en other wise
        when buffer full rf will be off.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_BUST_GATE_DIS
      bit_offset: 16
      bit_width: 1
      description: clock burst gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_RX_GATE_DIS
      bit_offset: 17
      bit_width: 1
      description: clock rx gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_LPDET_GATE_DIS
      bit_offset: 18
      bit_width: 1
      description: clock lp mode detector gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_HPDET_GATE_DIS
      bit_offset: 19
      bit_width: 1
      description: clock hp mode detector gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLK_RFE_GATE_DIS
      bit_offset: 20
      bit_width: 1
      description: clock rfe gate disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: IQSWAP_XOR
      bit_offset: 21
      bit_width: 1
      description: iq swap xor.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAC_TEST_EN
      bit_offset: 23
      bit_width: 1
      description: dac test enable dac input comes from register
      read_allowed: true
      write_allowed: true
    - !Field
      name: DAC_TEST
      bit_offset: 24
      bit_width: 8
      description: dac input data value
      read_allowed: true
      write_allowed: true
  - !Register
    name: BLE_DP_STATUS1
    addr: 0x38
    size_bits: 32
    description: datapath status register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SNR_EST
      bit_offset: 0
      bit_width: 8
      description: snr estimation
      read_allowed: true
      write_allowed: false
    - !Field
      name: CNR_EST
      bit_offset: 8
      bit_width: 6
      description: cnr estimation
      read_allowed: true
      write_allowed: false
    - !Field
      name: AGC_RSSI
      bit_offset: 16
      bit_width: 8
      description: signal rssi db value.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AGC_RSSI_READY
      bit_offset: 24
      bit_width: 1
      description: signal rssi valid.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SNR_VLD
      bit_offset: 25
      bit_width: 1
      description: snr estimation valid.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CNR_VLD
      bit_offset: 26
      bit_width: 1
      description: cnr estimation valid.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_BUSY
      bit_offset: 27
      bit_width: 1
      description: tx busy signal.
      read_allowed: true
      write_allowed: false
  - !Register
    name: BLE_DP_STATUS2
    addr: 0x3c
    size_bits: 32
    description: datapath status register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALID_PCK_NUM
      bit_offset: 0
      bit_width: 16
      description: received valid packet number.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AA_ERR_NUM
      bit_offset: 16
      bit_width: 6
      description: access address error number.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CRC_ERROR
      bit_offset: 29
      bit_width: 1
      description: indicator of packet crc error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: BURST_DET
      bit_offset: 30
      bit_width: 1
      description: indicator of burst detection
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_STATUS_VLD_0
      bit_offset: 31
      bit_width: 1
      description: data path status valid after access address valid.
      read_allowed: true
      write_allowed: false
  - !Register
    name: BLE_DP_STATUS3
    addr: 0x40
    size_bits: 32
    description: datapath status register 3
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: FD_CFO_TRACK
      bit_offset: 0
      bit_width: 11
      description: normalized cfo tracking estimation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CFO_EST_FD
      bit_offset: 16
      bit_width: 11
      description: normalized lp cfo initial estimation.
      read_allowed: true
      write_allowed: false
  - !Register
    name: BLE_DP_STATUS4
    addr: 0x44
    size_bits: 32
    description: datapath status register 4
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RESAMPLER_PH
      bit_offset: 0
      bit_width: 10
      description: resampler phase.
      read_allowed: true
      write_allowed: false
    - !Field
      name: HP_CFO
      bit_offset: 16
      bit_width: 12
      description: normalized hp cfo estimation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: HP_CFO_VLD
      bit_offset: 31
      bit_width: 1
      description: hp mode cfo estimation result valid
      read_allowed: true
      write_allowed: false
  - !Register
    name: RX_FRONT_END_CTRL1
    addr: 0x48
    size_bits: 32
    description: rx front end control register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0x10000
    fields:
    - !Field
      name: CFO_COMP
      bit_offset: 0
      bit_width: 15
      description: ______cfo user programmed.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DCNOTCH_GIN
      bit_offset: 16
      bit_width: 2
      description: dc notch coefficient
      read_allowed: true
      write_allowed: true
  - !Register
    name: RX_FRONT_END_CTRL2
    addr: 0x4c
    size_bits: 32
    description: rx front end control register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0x10403000
    fields:
    - !Field
      name: FAGC_GAIN
      bit_offset: 0
      bit_width: 11
      description: fine agc gain.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FAGC_INI_VAL
      bit_offset: 11
      bit_width: 1
      description: fagc gain initial value
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNR_IDX_DELTA
      bit_offset: 12
      bit_width: 4
      description: cnr index delta.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FAGC_REF
      bit_offset: 16
      bit_width: 8
      description: fine agc signal reference.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_MIN_VIN_TH
      bit_offset: 24
      bit_width: 4
      description: cordic input signal min threshold
      read_allowed: true
      write_allowed: true
    - !Field
      name: FREQ_TRADE_EN
      bit_offset: 28
      bit_width: 1
      description: enable frequency trade when cordic input signal small than cordic_min_vin_th
      read_allowed: true
      write_allowed: true
    - !Field
      name: CHN_SHIFT
      bit_offset: 29
      bit_width: 3
      description: channel filter shift
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL1
    addr: 0x50
    size_bits: 32
    description: frequency domain control register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0x7f068000
    fields:
    - !Field
      name: SYNC_WORD_IN0
      bit_offset: 0
      bit_width: 8
      description: manul sync word [3932]
      read_allowed: true
      write_allowed: true
    - !Field
      name: SYNC_WORD_WEN
      bit_offset: 8
      bit_width: 1
      description: when high enable manul sync word
      read_allowed: true
      write_allowed: true
    - !Field
      name: SYNC_P_SEL
      bit_offset: 15
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RD_EXBIT_EN
      bit_offset: 16
      bit_width: 1
      description: read extra 8 samples after sync
      read_allowed: true
      write_allowed: true
    - !Field
      name: RFAGC_TRACK_DLY
      bit_offset: 17
      bit_width: 3
      description: buffer settle threshold from 1us to 127us step is 1us
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_DF_16US
      bit_offset: 24
      bit_width: 8
      description: prop mode direct found waiting 16 us.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL2
    addr: 0x54
    size_bits: 32
    description: frequency domain control register 2
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SYNC_WORD_IN1
      bit_offset: 0
      bit_width: 32
      description: manul sync word [310]
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL3
    addr: 0x58
    size_bits: 32
    description: frequency domain control register 3
    read_allowed: true
    write_allowed: true
    reset_value: 0xf101816
    fields:
    - !Field
      name: XCORR_PAR_TH3
      bit_offset: 0
      bit_width: 6
      description: xcorr trigger par threshold3
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_PAR_TH2
      bit_offset: 8
      bit_width: 6
      description: xcorr trigger par threshold2
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_PAR_TH1
      bit_offset: 16
      bit_width: 6
      description: xcorr trigger par threshold1
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_PAR_TH0
      bit_offset: 24
      bit_width: 6
      description: xcorr trigger par threshold0
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL4
    addr: 0x5c
    size_bits: 32
    description: frequency domain control register 4
    read_allowed: true
    write_allowed: true
    reset_value: 0x304090b
    fields:
    - !Field
      name: XCORR_POW_TH3
      bit_offset: 0
      bit_width: 6
      description: xcorr power threshold3
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_POW_TH2
      bit_offset: 8
      bit_width: 6
      description: xcorr power threshold2
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_POW_TH1
      bit_offset: 16
      bit_width: 6
      description: xcorr power threshold1
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_POW_TH0
      bit_offset: 24
      bit_width: 6
      description: xcorr power threshold0
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL5
    addr: 0x60
    size_bits: 32
    description: frequency domain control register 5
    read_allowed: true
    write_allowed: true
    reset_value: 0x457a8001
    fields:
    - !Field
      name: GAIN_TED
      bit_offset: 0
      bit_width: 2
      description: ted gain
      read_allowed: true
      write_allowed: true
    - !Field
      name: SYNC_DIN_SAT_VALUE
      bit_offset: 4
      bit_width: 3
      description: '&lt;u 1 2&gt;sync din amplitude limit value 0 to 1.75 correspond
        to 2 to 3.75'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SYNC_DIN_SAT_EN
      bit_offset: 7
      bit_width: 1
      description: sync din amplitude limit enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNT_SETTLE_IDX
      bit_offset: 8
      bit_width: 3
      description: buffer settle threshold from 32 to 256 step is 32
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRIG_XCORR_CNT
      bit_offset: 12
      bit_width: 4
      description: correlation search window size.
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_RSSI_TH3
      bit_offset: 16
      bit_width: 4
      description: xcorr triger rssi threshold0
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_RSSI_TH2
      bit_offset: 20
      bit_width: 4
      description: xcorr triger rssi threshold0
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_RSSI_TH1
      bit_offset: 24
      bit_width: 4
      description: xcorr triger rssi threshold0
      read_allowed: true
      write_allowed: true
    - !Field
      name: XCORR_RSSI_TH0
      bit_offset: 28
      bit_width: 4
      description: xcorr triger rssi threshold0
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_CTRL6
    addr: 0x64
    size_bits: 32
    description: frequency domain control register 5
    read_allowed: true
    write_allowed: true
    reset_value: 0x11207b09
    fields:
    - !Field
      name: HP_TRAIN_SIZ
      bit_offset: 0
      bit_width: 5
      description: hp mode training size.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_HIDX_GAIN
      bit_offset: 8
      bit_width: 8
      description: h index reference gain when hp mode default is 1.0
      read_allowed: true
      write_allowed: true
    - !Field
      name: H_REF_GAIN
      bit_offset: 16
      bit_width: 6
      description: h index reference gain when frequency offset track default is 1.0
      read_allowed: true
      write_allowed: true
    - !Field
      name: DET_FR_IDX
      bit_offset: 24
      bit_width: 2
      description: pdu cfo tracking loop gain
      read_allowed: true
      write_allowed: true
    - !Field
      name: CFO_FR_IDX
      bit_offset: 28
      bit_width: 2
      description: aa cfo tracking loop gain
      read_allowed: true
      write_allowed: true
  - !Register
    name: HP_MODE_CTRL1
    addr: 0x68
    size_bits: 32
    description: when high hp mode training size same as cfo tracking.
    read_allowed: true
    write_allowed: true
    reset_value: 0x80120d0a
    fields:
    - !Field
      name: HP_BMC_P_TRACK
      bit_offset: 0
      bit_width: 6
      description: p paramter in search period of frequency offset iir of bmc
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_BMC_P_TRAIN
      bit_offset: 8
      bit_width: 6
      description: p paramter in training period of frequency offset iir of bmc
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_BMC_CZ1
      bit_offset: 16
      bit_width: 6
      description: cz1 parameter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUF_IDX_DELTA
      bit_offset: 24
      bit_width: 4
      description: buffer index delta
      read_allowed: true
      write_allowed: true
    - !Field
      name: WMF2_DSAMP_IDX
      bit_offset: 28
      bit_width: 3
      description: wmf2 down sampling position -4 to 3
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_TRAIN_SIZ_FIX
      bit_offset: 31
      bit_width: 1
      description: when high hp mode training size same as cfo tracking.
      read_allowed: true
      write_allowed: true
  - !Register
    name: HP_MODE_CTRL2
    addr: 0x6c
    size_bits: 32
    description: q paramter in training period of phase offset iir of bmc
    read_allowed: true
    write_allowed: true
    reset_value: 0x717b1122
    fields:
    - !Field
      name: SNR_EST_REF
      bit_offset: 0
      bit_width: 8
      description: signal amplitude used in snr estimation whose unit is db
      read_allowed: true
      write_allowed: true
    - !Field
      name: SNR_EST_LEN
      bit_offset: 8
      bit_width: 2
      description: symbol number used in snr estimation when pdu length is less than
        4 8 32 will be used otherwise the value configured from register will be used
      read_allowed: true
      write_allowed: true
    - !Field
      name: SNR_EST_EN
      bit_offset: 12
      bit_width: 1
      description: snr estimation in time domain enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_BMC_Q_TRACK
      bit_offset: 16
      bit_width: 8
      description: q paramter in search period of phase offset iir of bmc
      read_allowed: true
      write_allowed: true
    - !Field
      name: HP_BMC_Q_TRAIN
      bit_offset: 24
      bit_width: 8
      description: q paramter in training period of phase offset iir of bmc
      read_allowed: true
      write_allowed: true
  - !Register
    name: FREQ_DOMAIN_STATUS1
    addr: 0x70
    size_bits: 32
    description: frequency domain status register 1
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MAX_XCORR
      bit_offset: 0
      bit_width: 10
      description: xcorr_org value at the max par position
      read_allowed: true
      write_allowed: false
    - !Field
      name: PKT_OFFSET_COM
      bit_offset: 16
      bit_width: 9
      description: time from access addres last bit to trigger finish.
      read_allowed: true
      write_allowed: false
    - !Field
      name: NIDX
      bit_offset: 28
      bit_width: 4
      description: noise db buffer index
      read_allowed: true
      write_allowed: false
  - !Register
    name: FREQ_DOMAIN_STATUS2
    addr: 0x74
    size_bits: 32
    description: frequency domain status register 2
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MAX_PAR_SPWR
      bit_offset: 0
      bit_width: 10
      description: spwr value at the max par position
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAX_PAR_XCORR
      bit_offset: 16
      bit_width: 10
      description: xcorr*xcorr value at the max par position
      read_allowed: true
      write_allowed: false
  - !Register
    name: DP_AA_ERROR_CTRL
    addr: 0x84
    size_bits: 32
    description: AA error control register
    read_allowed: true
    write_allowed: true
    reset_value: 0xf
    fields:
    - !Field
      name: IQSWAP_SEL
      bit_offset: 0
      bit_width: 1
      description: when high adc data iq swap with analog iqswap. datapath mixer nco
        if selection changed with analog iqswap.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AA_ERROR_EN
      bit_offset: 1
      bit_width: 1
      description: when high it will reset datapath when aa error.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AA_ERROR_CNR_EN
      bit_offset: 2
      bit_width: 1
      description: when high the aa error reset condition is cnr &gt; threshold and
        aa error. when low it don care cnr.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AA_ERROR_CNR_SEL
      bit_offset: 3
      bit_width: 1
      description: when high the cnr threshold is 24. when low the cnr threshold is
        32.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DP_INT
    addr: 0x88
    size_bits: 32
    description: data path interrupt register
    read_allowed: true
    write_allowed: true
    reset_value: 0xc0000000
    fields:
    - !Field
      name: DP_INTERRUPT0
      bit_offset: 0
      bit_width: 1
      description: datapath interrupt0
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_INTERRUPT1
      bit_offset: 1
      bit_width: 1
      description: datapath interrupt1
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_INTERRUPT2
      bit_offset: 2
      bit_width: 1
      description: datapath interrupt2
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_INTERRUPT
      bit_offset: 3
      bit_width: 1
      description: datapath interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: DP_INTERRUPT0_SEL
      bit_offset: 16
      bit_width: 4
      description: datapath interrupt0 selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT1_SEL
      bit_offset: 20
      bit_width: 4
      description: datapath interrupt1 selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT2_SEL
      bit_offset: 24
      bit_width: 4
      description: datapath interrupt2 selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT0_MSK
      bit_offset: 28
      bit_width: 1
      description: datapath interrupt0 msk
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT1_MSK
      bit_offset: 29
      bit_width: 1
      description: datapath interrupt1 msk
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT2_MSK
      bit_offset: 30
      bit_width: 1
      description: datapath interrupt2 msk
      read_allowed: true
      write_allowed: true
    - !Field
      name: DP_INTERRUPT_MSK
      bit_offset: 31
      bit_width: 1
      description: datapath interrupt msk
      read_allowed: true
      write_allowed: true
  - !Register
    name: DP_AA_ERROR_TH
    addr: 0x8c
    size_bits: 32
    description: AA error threshold register
    read_allowed: true
    write_allowed: true
    reset_value: 0x35351820
    fields:
    - !Field
      name: HP_TRAIN_POSITION
      bit_offset: 0
      bit_width: 1
      description: when high use the bits just ahead of pdu for rsve training. when
        low the training bit starts at the track bits.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_IN_SCALE
      bit_offset: 1
      bit_width: 1
      description: when high cordic input will be auto scaled(shift) according to
        the magnitude of real/imag data.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAR_AUTO_HIGHER_SEL
      bit_offset: 2
      bit_width: 1
      description: when high par auto higher 1/4 when low par auto higher 1/8 it will
        work together with par_auto_higher_en and rssi_good_dbm.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAR_AUTO_HIGHER_EN
      bit_offset: 3
      bit_width: 1
      description: when high when signal is good ( rssi large than rssi_good_dbm)
        it will auto higher the par threshold.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SNR_GOOD_TH
      bit_offset: 4
      bit_width: 3
      description: threshold for snr(fd mode calculated use aa) to reset datapath
        cooperate with cnr snr and aa error.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CNR_GOOD_TH
      bit_offset: 8
      bit_width: 6
      description: threshold for cnr to reset datapath cooperate with cnr snr and
        aa error.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSSI_GOOD_TH
      bit_offset: 16
      bit_width: 8
      description: threshold for rssi to reset datapath cooperate with cnr snr and
        aa error.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RSSI_GOOD_DBM
      bit_offset: 24
      bit_width: 8
      description: when rssi dbm large than the -rssi_good_dbm the signal is good
        enough to higher the par threshold if the function enable.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DF_ANTENNA_CTRL
    addr: 0x90
    size_bits: 32
    description: antenna register
    read_allowed: true
    write_allowed: true
    reset_value: 0x6
    fields:
    - !Field
      name: SWITCH_MAP_SEL_8F
      bit_offset: 0
      bit_width: 2
      description: switch antenna map selection 8 to f
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_MAP_SEL_07
      bit_offset: 2
      bit_width: 2
      description: switch antenna map selection 0 to 7
      read_allowed: true
      write_allowed: true
    - !Field
      name: EXT_ANTENNA_NUM
      bit_offset: 4
      bit_width: 4
      description: user programmed switch antenna number
      read_allowed: true
      write_allowed: true
    - !Field
      name: EXT_ANTENNA_NUM_WEN
      bit_offset: 8
      bit_width: 1
      description: user programmed switch antenna enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUFFER_BP
      bit_offset: 16
      bit_width: 1
      description: when high, bypass buffer, and not write/read buffer for datapath
        power test
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_TD_POWER
      bit_offset: 17
      bit_width: 1
      description: when high, test rfe,td detector power, other module don't work,
        the cordic work or not decided by resampler_bp
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_FD_POWER
      bit_offset: 18
      bit_width: 1
      description: when high, test rfe, cordic and fd detector power, other module
        don't work
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_SYNC_POWER
      bit_offset: 19
      bit_width: 1
      description: when high, test rfe. Cordic and sync power. Other module don't
        work
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_RFE_CORDIC_POWER
      bit_offset: 20
      bit_width: 1
      description: when high, test rfe and cordic power, other module don't work
      read_allowed: true
      write_allowed: true
    - !Field
      name: TEST_RFE_POWER
      bit_offset: 21
      bit_width: 1
      description: when high, test rfe power, other module don't work
      read_allowed: true
      write_allowed: true
    - !Field
      name: ADC01_SAMPLE_TIME
      bit_offset: 22
      bit_width: 1
      description: when high, will exchange the adc0/adc1 sample time, to avoid the
        error sample time for adc0/adc1
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHY_RATE_MUX
      bit_offset: 23
      bit_width: 1
      description: 'ble data rate used in datapath, 0: 1mbps 1: 2mbps'
      read_allowed: true
      write_allowed: false
    - !Field
      name: PHY_RATE_REG
      bit_offset: 24
      bit_width: 1
      description: user programmed phy data rate
      read_allowed: true
      write_allowed: true
    - !Field
      name: PHY_RATE_WEN
      bit_offset: 25
      bit_width: 1
      description: '0: phy rate comes from ble ip 1:phy rate comes from regsiter phy_rate_reg'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDU_RSSI_WAIT_TIME
      bit_offset: 26
      bit_width: 1
      description: '0:wait 0us 1: wait 4us'
      read_allowed: true
      write_allowed: true
    - !Field
      name: PDU_RSSI_WIN_LEN
      bit_offset: 27
      bit_width: 1
      description: select estimation length for pdu rssi calculate
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAL_PDU_RSSI_EN
      bit_offset: 28
      bit_width: 1
      description: calculate rssi use pdu data enbale.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_CRC_AA_DIS
      bit_offset: 29
      bit_width: 1
      description: prop mode crc check disable check access address.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PROP_AA_LSB_FIRST
      bit_offset: 30
      bit_width: 1
      description: prop mode access address lsb first for cbt test.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRE_NUM_WEN
      bit_offset: 31
      bit_width: 1
      description: preamble number write enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANTENNA_MAP01
    addr: 0x94
    size_bits: 32
    description: antenna switch map register 0
    read_allowed: true
    write_allowed: true
    reset_value: 0x18801840
    fields:
    - !Field
      name: SWITCH_MAP_1
      bit_offset: 0
      bit_width: 14
      description: switch antenna map 1
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_MAP_0
      bit_offset: 16
      bit_width: 14
      description: switch antenna map 0
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANTENNA_MAP23
    addr: 0x98
    size_bits: 32
    description: antenna switch map register 1
    read_allowed: true
    write_allowed: true
    reset_value: 0x14201410
    fields:
    - !Field
      name: SWITCH_MAP_3
      bit_offset: 0
      bit_width: 14
      description: switch antenna map 3
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_MAP_2
      bit_offset: 16
      bit_width: 14
      description: switch antenna map 2
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANTENNA_MAP45
    addr: 0x9c
    size_bits: 32
    description: antenna switch map register 2
    read_allowed: true
    write_allowed: true
    reset_value: 0x22082204
    fields:
    - !Field
      name: SWITCH_MAP_5
      bit_offset: 0
      bit_width: 14
      description: switch antenna map 5
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_MAP_4
      bit_offset: 16
      bit_width: 14
      description: switch antenna map 4
      read_allowed: true
      write_allowed: true
  - !Register
    name: ANTENNA_MAP67
    addr: 0xa0
    size_bits: 32
    description: antenna switch map register 3
    read_allowed: true
    write_allowed: true
    reset_value: 0x21022101
    fields:
    - !Field
      name: SWITCH_MAP_7
      bit_offset: 0
      bit_width: 14
      description: switch antenna map 7
      read_allowed: true
      write_allowed: true
    - !Field
      name: SWITCH_MAP_6
      bit_offset: 16
      bit_width: 14
      description: switch antenna map 6
      read_allowed: true
      write_allowed: true
- !Module
  name: CALIB
  description: calib
  base_addr: 0x4000f000
  size: 0x83c
  registers:
  - !Register
    name: START
    addr: 0x0
    size_bits: 32
    description: calibration start register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PO_CLB_START
      bit_offset: 0
      bit_width: 1
      description: Power on calibration start
      read_allowed: false
      write_allowed: true
    - !Field
      name: HOP_CLB_START
      bit_offset: 1
      bit_width: 1
      description: Frequency hop calibration start
      read_allowed: false
      write_allowed: true
    - !Field
      name: OSC_CLB_START
      bit_offset: 2
      bit_width: 1
      description: OSC calibration start
      read_allowed: false
      write_allowed: true
    - !Field
      name: REF_CLB_START
      bit_offset: 3
      bit_width: 1
      description: REF PLL calibration start
      read_allowed: false
      write_allowed: true
    - !Field
      name: RCO_CLB_START
      bit_offset: 4
      bit_width: 1
      description: RCO calibration start
      read_allowed: false
      write_allowed: true
    - !Field
      name: XTL_CLB_START
      bit_offset: 5
      bit_width: 1
      description: XTAL calibration start
      read_allowed: false
      write_allowed: true
  - !Register
    name: STATUS
    addr: 0x4
    size_bits: 32
    description: calibration FSM status register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TOP_FSM
      bit_offset: 0
      bit_width: 5
      description: TOP FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: DC_FSM
      bit_offset: 5
      bit_width: 4
      description: DC FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: VCOA_FSM
      bit_offset: 9
      bit_width: 3
      description: VCOA FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: VCOF_FSM
      bit_offset: 12
      bit_width: 5
      description: VCOF FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: KVCO_FSM
      bit_offset: 17
      bit_width: 4
      description: KVCO FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: RCO_FSM
      bit_offset: 21
      bit_width: 3
      description: RCO FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC_FSM
      bit_offset: 24
      bit_width: 3
      description: OSC FSM
      read_allowed: true
      write_allowed: false
    - !Field
      name: REF_FSM
      bit_offset: 27
      bit_width: 3
      description: REF FSM
      read_allowed: true
      write_allowed: false
  - !Register
    name: DC_CODE
    addr: 0x8
    size_bits: 32
    description: DC code status register
    read_allowed: true
    write_allowed: false
    reset_value: 0x20200088
    fields:
    - !Field
      name: PPF_DCCAL2_I
      bit_offset: 0
      bit_width: 4
      description: Power on DC calibration i code
      read_allowed: true
      write_allowed: false
    - !Field
      name: PPF_DCCAL2_Q
      bit_offset: 4
      bit_width: 4
      description: Power on DC calibration q code
      read_allowed: true
      write_allowed: false
    - !Field
      name: PPF_DCCAL_I
      bit_offset: 16
      bit_width: 6
      description: DC re-calibration i code
      read_allowed: true
      write_allowed: false
    - !Field
      name: PPF_DCCAL_Q
      bit_offset: 24
      bit_width: 6
      description: DC re-calibration q code
      read_allowed: true
      write_allowed: false
  - !Register
    name: DC_CFG
    addr: 0xc
    size_bits: 32
    description: DC code configured code register
    read_allowed: true
    write_allowed: true
    reset_value: 0x400000
    fields:
    - !Field
      name: PPF_DCCAL2_CFG_I
      bit_offset: 0
      bit_width: 4
      description: Power on DC calibration i code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_DCCAL2_CFG_Q
      bit_offset: 4
      bit_width: 4
      description: Power on DC calibration q code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_2NDCAL_DIS
      bit_offset: 8
      bit_width: 1
      description: DC calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_2NDCAL_REQ
      bit_offset: 9
      bit_width: 1
      description: DC calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_DCCAL_CFG_I
      bit_offset: 16
      bit_width: 6
      description: DC re-calibration i code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_HOP_CAL_BP
      bit_offset: 22
      bit_width: 1
      description: DC hop calibration bypass
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_DCCAL_CFG_Q
      bit_offset: 24
      bit_width: 6
      description: DC re-calibration q code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_1STCAL_DIS
      bit_offset: 30
      bit_width: 1
      description: DC hop calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: DC_1STCAL_REQ
      bit_offset: 31
      bit_width: 1
      description: DC hop calibration request
      read_allowed: true
      write_allowed: true
  - !Register
    name: RCO_RC_REF_OSC_CODE
    addr: 0x10
    size_bits: 32
    description: RCO RC PLL48M OSC code status register
    read_allowed: true
    write_allowed: false
    reset_value: 0x8001f00
    fields:
    - !Field
      name: CAU_RCO_CAP
      bit_offset: 0
      bit_width: 4
      description: RCO calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: CAU_OSC_CUR
      bit_offset: 8
      bit_width: 5
      description: OSC calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: CAU_RC_CAL_OUT2REG
      bit_offset: 16
      bit_width: 4
      description: RC calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: PLL48_ENREF
      bit_offset: 24
      bit_width: 4
      description: REF calibration output code
      read_allowed: true
      write_allowed: false
  - !Register
    name: RCO_RC_REF_OSC_CFG
    addr: 0x14
    size_bits: 32
    description: RCO RC PLL48M OSC configured code register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAU_RCO_CAP_CFG
      bit_offset: 0
      bit_width: 4
      description: RCO calibration code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCO_CAL_DIS
      bit_offset: 4
      bit_width: 1
      description: RCO calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCO_CAL_REQ
      bit_offset: 5
      bit_width: 1
      description: RCO calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAU_OSC_CUR_CFG
      bit_offset: 8
      bit_width: 5
      description: OSC calibration output code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC_CAL_DIS
      bit_offset: 13
      bit_width: 1
      description: OSC calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC_CAL_REQ
      bit_offset: 14
      bit_width: 1
      description: OSC calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAU_RC_CAL_REG_IN
      bit_offset: 16
      bit_width: 4
      description: RC calibration code to analog
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAU_RC_CAL_DIS
      bit_offset: 20
      bit_width: 1
      description: RC calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RC_CAL_REQ
      bit_offset: 21
      bit_width: 1
      description: RC calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: PLL48_ENREF_CFG
      bit_offset: 24
      bit_width: 4
      description: REF calibration output code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: REF_CAL_DIS
      bit_offset: 28
      bit_width: 1
      description: REF PLL calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: REF_CAL_REQ
      bit_offset: 29
      bit_width: 1
      description: REF PLL calibration request
      read_allowed: true
      write_allowed: true
  - !Register
    name: VCOA_KVCO2M_CODE
    addr: 0x18
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x400
    fields:
    - !Field
      name: KCALF2M_PO
      bit_offset: 0
      bit_width: 11
      description: KVCO 2M mode calibration power on code
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_VCO_AMP
      bit_offset: 16
      bit_width: 5
      description: VCO TX amplitude calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_VCO_AMP
      bit_offset: 24
      bit_width: 5
      description: VCO RX amplitude calibration output code
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCOA_KVCO2M_CFG
    addr: 0x1c
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: KCALF2M_CFG
      bit_offset: 0
      bit_width: 11
      description: KVCO 2M mode calibration code configure
      read_allowed: true
      write_allowed: true
    - !Field
      name: KCALF2M_BP
      bit_offset: 11
      bit_width: 1
      description: bypass KVCO 2M mode power on calibration
      read_allowed: true
      write_allowed: true
    - !Field
      name: KVCO_CAL_E
      bit_offset: 12
      bit_width: 3
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_VCO_AMP_CFG
      bit_offset: 16
      bit_width: 5
      description: TX VCO amplitude calibration output code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOA_CAL_DIS
      bit_offset: 21
      bit_width: 1
      description: VCO amplitude calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOA_CAL_REQ
      bit_offset: 22
      bit_width: 1
      description: VCO amplitude calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_VCO_AMP_CFG
      bit_offset: 24
      bit_width: 5
      description: RX VCO amplitude calibration output code configured
      read_allowed: true
      write_allowed: true
  - !Register
    name: VCOF_KVCO_PO_CODE
    addr: 0x20
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x20200400
    fields:
    - !Field
      name: KCALF_PO
      bit_offset: 0
      bit_width: 11
      description: KVCO power up calibration result
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_VCO_CBANK_PO
      bit_offset: 16
      bit_width: 6
      description: TX VCO frequency power on calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_VCO_CBANK_PO
      bit_offset: 24
      bit_width: 6
      description: RX VCO frequency power on calibration output code
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCOF_KVCO_CFG
    addr: 0x24
    size_bits: 32
    description: VCOF hop calibration bypass
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: KCALF_CFG
      bit_offset: 0
      bit_width: 11
      description: KVCO calibration code configure
      read_allowed: true
      write_allowed: true
    - !Field
      name: KVCO_REQ
      bit_offset: 11
      bit_width: 1
      description: KVCO calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: KVCO_DIS
      bit_offset: 12
      bit_width: 1
      description: KVCO calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: KVCO_SKIP
      bit_offset: 13
      bit_width: 1
      description: KVCO hop calibration calculation skip
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_VCO_CBANK_CFG
      bit_offset: 16
      bit_width: 6
      description: TX VCO frequency calibration output code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOF_CAL_DIS
      bit_offset: 22
      bit_width: 1
      description: VCO frequency calibration disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOF_CAL_REQ
      bit_offset: 23
      bit_width: 1
      description: VCO frequency calibration request
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_VCO_CBANK_CFG
      bit_offset: 24
      bit_width: 6
      description: RX VCO frequency calibration output code configured
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOF_SKIP
      bit_offset: 30
      bit_width: 1
      description: VCOF hop calibration calculation skip
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCOF_HOP_BP
      bit_offset: 31
      bit_width: 1
      description: VCOF hop calibration bypass
      read_allowed: true
      write_allowed: true
  - !Register
    name: VCOF_KVCO_CODE
    addr: 0x28
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x20200400
    fields:
    - !Field
      name: KCALF
      bit_offset: 0
      bit_width: 11
      description: KVCO calibration output at carrier frequency
      read_allowed: true
      write_allowed: false
    - !Field
      name: TX_VCO_CBANK
      bit_offset: 16
      bit_width: 6
      description: TX VCO frequency calibration output code
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_VCO_CBANK
      bit_offset: 24
      bit_width: 6
      description: RX VCO frequency calibration output code
      read_allowed: true
      write_allowed: false
  - !Register
    name: KVCO_HOP_CODE
    addr: 0x2c
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x4000400
    fields:
    - !Field
      name: KCALF1M
      bit_offset: 0
      bit_width: 11
      description: KVCO hop calibration output at carrier frequency in 1M mode
      read_allowed: true
      write_allowed: false
    - !Field
      name: KCALF2M
      bit_offset: 16
      bit_width: 11
      description: KVCO hop calibration output at carrier frequency in 2M mode
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCOF_CNT_SLOPE
    addr: 0x30
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TX_VCOF_CNT
      bit_offset: 0
      bit_width: 8
      description: TX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_SLOPE
      bit_offset: 8
      bit_width: 6
      description: TX frequency curve slope
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_VCOF_CNT
      bit_offset: 16
      bit_width: 8
      description: RX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_SLOPE
      bit_offset: 24
      bit_width: 6
      description: RX frequency curve slope
      read_allowed: true
      write_allowed: true
  - !Register
    name: XTL_CODE
    addr: 0x34
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x3f
    fields:
    - !Field
      name: XTL_XICTRL_CODE
      bit_offset: 0
      bit_width: 6
      description: crystal calibration code
      read_allowed: true
      write_allowed: false
    - !Field
      name: XTL_AMP_DET_OUT
      bit_offset: 8
      bit_width: 1
      description: crystal comparator output result
      read_allowed: true
      write_allowed: false
  - !Register
    name: XTL_CFG
    addr: 0x38
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x3f
    fields:
    - !Field
      name: XTL_XICTRL_CFG
      bit_offset: 0
      bit_width: 6
      description: crystal calibration CFG
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_CAL_DIS
      bit_offset: 6
      bit_width: 1
      description: crystal code disable
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_CAL_REQ
      bit_offset: 7
      bit_width: 1
      description: crystal calibration request
      read_allowed: true
      write_allowed: true
  - !Register
    name: CAL_DLY
    addr: 0x3c
    size_bits: 32
    description: hop calibration delay bypass
    read_allowed: true
    write_allowed: true
    reset_value: 0x36464113
    fields:
    - !Field
      name: HOP_DLY
      bit_offset: 0
      bit_width: 6
      description: hop calibration delay time
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOP_DLY_BP
      bit_offset: 7
      bit_width: 1
      description: hop calibration delay bypass
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DLY_DIG1M
      bit_offset: 8
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DLY_DIG2M
      bit_offset: 10
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DLY_DAC_1M
      bit_offset: 12
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_DLY_DAC_2M
      bit_offset: 14
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_PWRUP_CNT_TH1M
      bit_offset: 16
      bit_width: 8
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_PWRUP_CNT_TH2M
      bit_offset: 24
      bit_width: 8
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: DONE
    addr: 0x40
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: false
    reset_value: 0x1fdc
    fields:
    - !Field
      name: OSC_CAL_DONE
      bit_offset: 2
      bit_width: 1
      description: OSC calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: REF_CAL_DONE
      bit_offset: 3
      bit_width: 1
      description: REF PLL calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: RCO_CAL_DONE
      bit_offset: 4
      bit_width: 1
      description: RCO calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: RC_CAL_DONE
      bit_offset: 5
      bit_width: 1
      description: RC calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: VCOF_CAL_DONE
      bit_offset: 6
      bit_width: 1
      description: VCO frequency calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: VCOA_CAL_DONE
      bit_offset: 7
      bit_width: 1
      description: VCO amplitude calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: DC2ND_CAL_DONE
      bit_offset: 8
      bit_width: 1
      description: DC 2nd stage calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: DC1ST_CAL_DONE
      bit_offset: 9
      bit_width: 1
      description: DC 1st stage calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: XTL_CAL_DONE
      bit_offset: 10
      bit_width: 1
      description: XTL calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: KVCO_CAL_DONE
      bit_offset: 11
      bit_width: 1
      description: KVCO calibration done
      read_allowed: true
      write_allowed: false
    - !Field
      name: KVCO_HOP_DONE
      bit_offset: 12
      bit_width: 1
      description: KVCO calibration done
      read_allowed: true
      write_allowed: false
  - !Register
    name: RRF1
    addr: 0x400
    size_bits: 32
    description: Amplitude of LO buffer for active mixer
    read_allowed: true
    write_allowed: true
    reset_value: 0xa8aadc44
    fields:
    - !Field
      name: RRF_INCAP2
      bit_offset: 0
      bit_width: 3
      description: LNA input LC cap bank
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_LOAD_CAP
      bit_offset: 3
      bit_width: 4
      description: LNA load LC cap bank
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_TX_INCAP1
      bit_offset: 7
      bit_width: 3
      description: LNA&amp;PA matching cap bank
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_RX_INCAP1
      bit_offset: 10
      bit_width: 3
      description: LNA&amp;PA matching cap bank
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_VGATE11_LNA
      bit_offset: 13
      bit_width: 3
      description: LNA vrega voltage
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_BM_GM
      bit_offset: 16
      bit_width: 2
      description: Constant gm current control
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_BM_LNA
      bit_offset: 18
      bit_width: 2
      description: LNA bias current control-
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_BM_MIXER
      bit_offset: 20
      bit_width: 2
      description: Mixer current bias
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_DCCAL_RES
      bit_offset: 22
      bit_width: 2
      description: Input res selection of ppf for dccal
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_CAL_MIX_EN
      bit_offset: 24
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_CAL_MIX1_EN
      bit_offset: 25
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_LO_SEL_P
      bit_offset: 26
      bit_width: 2
      description: Dc voltage bias control for the pmos switch of active mixer
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_LO_SEL_N
      bit_offset: 28
      bit_width: 2
      description: Dc voltage bias control for the nmos switch of active mixer
      read_allowed: true
      write_allowed: true
    - !Field
      name: RRF_LO_AMP
      bit_offset: 30
      bit_width: 2
      description: Amplitude of LO buffer for active mixer
      read_allowed: true
      write_allowed: true
  - !Register
    name: PLL48_PPF
    addr: 0x404
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x5a
    fields:
    - !Field
      name: PPF_BM
      bit_offset: 0
      bit_width: 2
      description: Ppf current control-
      read_allowed: true
      write_allowed: true
    - !Field
      name: PPF_IQSW
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PLL48_DIFF_CLK_48M_DIS
      bit_offset: 3
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: PLL48_TST_CPREF
      bit_offset: 4
      bit_width: 4
      description: CP current selecting
      read_allowed: true
      write_allowed: true
  - !Register
    name: LO0
    addr: 0x408
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x8a8f50
    fields:
    - !Field
      name: VCO_DAC_IPTAT
      bit_offset: 0
      bit_width: 4
      description: Set the temperature characteristic of TX DAC in order to compensate
        the modulation gain error of the VCO
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_TST_CP
      bit_offset: 4
      bit_width: 4
      description: LO CP current control-
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_VTUN_SET
      bit_offset: 8
      bit_width: 5
      description: Set VTUNE voltage change in order to properly compensate the VUNE
        error introduced by charge injection when the PLL loop is broken;VTUNE change
        introduced by this register is around 50uV*(VTUNE_SET-16)
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_ACAL_SET
      bit_offset: 13
      bit_width: 3
      description: Set the threshold (differential peak) in VCO amplitude calibration-VTH=0.2+0.05*ACAL_SET
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_BM_TXFIL
      bit_offset: 16
      bit_width: 2
      description: Set the bias current of the TX filter
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_BM_TXDAC
      bit_offset: 18
      bit_width: 2
      description: Set the bias current of the TX DAC
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_SAMP_EN
      bit_offset: 23
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_CAP_HALF_EN
      bit_offset: 24
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_SET_VCO_VDD_LOW
      bit_offset: 25
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_8OR16M_INV_EN
      bit_offset: 26
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_DIV_PD_EN
      bit_offset: 27
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_TXDLY1M
      bit_offset: 28
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_TXDLY2M
      bit_offset: 29
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_RX_CK_TST
      bit_offset: 30
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_DSM_INT_EN
      bit_offset: 31
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: LO1
    addr: 0x40c
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0xba010
    fields:
    - !Field
      name: SPEED_UP_TIME
      bit_offset: 0
      bit_width: 5
      description: LO speed up time
      read_allowed: true
      write_allowed: true
    - !Field
      name: SW_LO_SPEED_UP
      bit_offset: 5
      bit_width: 1
      description: software LO speed up
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_PLLPFD_EN
      bit_offset: 6
      bit_width: 1
      description: PLL pfd enable in RX mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_PLLPFD_EN
      bit_offset: 7
      bit_width: 1
      description: PLL pfd enable in TX mode
      read_allowed: true
      write_allowed: true
    - !Field
      name: LO_SET_TIME
      bit_offset: 8
      bit_width: 6
      description: LO settle time
      read_allowed: true
      write_allowed: true
    - !Field
      name: MOD_TEST
      bit_offset: 14
      bit_width: 1
      description: LO open loop or close loop select
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_DIFF_CLK_LO_DIS
      bit_offset: 15
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: TX_VCO_FTC_SET
      bit_offset: 16
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: RX_VCO_FTC_SET
      bit_offset: 18
      bit_width: 2
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: PA_CTRL
    addr: 0x410
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0xac040a
    fields:
    - !Field
      name: PA_ON_DLY
      bit_offset: 0
      bit_width: 6
      description: PA turn on delay time
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_OFF_DLY
      bit_offset: 8
      bit_width: 4
      description: PA turn off delay time
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_INCREASE_SEL
      bit_offset: 16
      bit_width: 3
      description: PA output power increasing control
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_SEL_BIAS
      bit_offset: 19
      bit_width: 1
      description: PA duty cycle voltage bias
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_BM_CUR
      bit_offset: 20
      bit_width: 2
      description: Pa bias current control
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_VDUTY_CYCLE_SEL
      bit_offset: 22
      bit_width: 2
      description: PA duty cycle control voltage select
      read_allowed: true
      write_allowed: true
    - !Field
      name: PA_VCDCG
      bit_offset: 24
      bit_width: 1
      description: PA duty cycle control
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL
    addr: 0x800
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    reset_value: 0x50000
    fields:
    - !Field
      name: RC_TIM
      bit_offset: 0
      bit_width: 2
      description: RC calibration reset time
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_TEST_INT
      bit_offset: 4
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOP_CLB_SEL
      bit_offset: 8
      bit_width: 1
      description: Frequency hop calibration start select
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_PO_TIM
      bit_offset: 16
      bit_width: 2
      description: crystal calibration power on wait time
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_CAL_TIM
      bit_offset: 18
      bit_width: 2
      description: crystal calibration code wait time
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_AMP_DET_PWR_SEL
      bit_offset: 20
      bit_width: 2
      description: crystal amplitude detector power select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: PO1MS
        1: POCAL
        2: POALWAYS
        3: PDALWAYS
    - !Field
      name: XTL_SWCAL_EN
      bit_offset: 22
      bit_width: 1
      description: crystal software calibration enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_RAW
    addr: 0x804
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PO_CAL_DONE_INT
      bit_offset: 0
      bit_width: 1
      description: power on calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOP_CAL_DONE_INT
      bit_offset: 1
      bit_width: 1
      description: hop calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC_CAL_DONE_INT
      bit_offset: 2
      bit_width: 1
      description: OSC calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: REF_CAL_DONE_INT
      bit_offset: 3
      bit_width: 1
      description: REF PLL calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCO_CAL_DONE_INT
      bit_offset: 4
      bit_width: 1
      description: RCO calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_CAL_DONE_INT
      bit_offset: 5
      bit_width: 1
      description: XTL calibration done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: PO_ALL_DONE_INT
      bit_offset: 8
      bit_width: 1
      description: RCO &amp; REF &amp; OSC &amp; Power on calibration all done interrupt.
        And signal of above interrupt
      read_allowed: true
      write_allowed: false
    - !Field
      name: CAL_INT
      bit_offset: 16
      bit_width: 1
      description: or signal of all calibration interrupt
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTEN
    addr: 0x808
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PO_CAL_DONE_INTEN
      bit_offset: 0
      bit_width: 1
      description: power on calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: HOP_CAL_DONE_INTEN
      bit_offset: 1
      bit_width: 1
      description: hop calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: OSC_CAL_DONE_INTEN
      bit_offset: 2
      bit_width: 1
      description: OSC calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: REF_CAL_DONE_INTEN
      bit_offset: 3
      bit_width: 1
      description: REF PLL calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: RCO_CAL_DONE_INTEN
      bit_offset: 4
      bit_width: 1
      description: RCO calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: XTL_CAL_DONE_INTEN
      bit_offset: 5
      bit_width: 1
      description: XTL calibration done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PO_ALL_DONE_INTEN
      bit_offset: 8
      bit_width: 1
      description: PO_ALL_DONE_INT enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_STAT
    addr: 0x80c
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: PO_CAL_DONE_INT_STAT
      bit_offset: 0
      bit_width: 1
      description: power on calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: HOP_CAL_DONE_INT_STAT
      bit_offset: 1
      bit_width: 1
      description: hop calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: OSC_CAL_DONE_INT_STAT
      bit_offset: 2
      bit_width: 1
      description: OSC calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: REF_CAL_DONE_INT_STAT
      bit_offset: 3
      bit_width: 1
      description: REF PLL calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: RCO_CAL_DONE_INT_STAT
      bit_offset: 4
      bit_width: 1
      description: RCO calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: XTL_CAL_DONE_INT_STAT
      bit_offset: 5
      bit_width: 1
      description: XTL calibration done interrupt status
      read_allowed: true
      write_allowed: false
    - !Field
      name: PO_ALL_DONE_INT_STAT
      bit_offset: 8
      bit_width: 1
      description: PO_ALL_DONE_INT status
      read_allowed: true
      write_allowed: false
    - !Field
      name: CAL_INT_STAT
      bit_offset: 16
      bit_width: 1
      description: calibration all interrupt status
      read_allowed: true
      write_allowed: false
  - !Register
    name: TIF
    addr: 0x810
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TEST_CTRL
      bit_offset: 0
      bit_width: 4
      description: Test interface selection
      read_allowed: true
      write_allowed: true
  - !Register
    name: KVCO_MEAN
    addr: 0x814
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: KVCO_CNT_MEAN
      bit_offset: 0
      bit_width: 21
      description: KVCO counter 1 and counter 2 mean
      read_allowed: true
      write_allowed: false
  - !Register
    name: KVCO_DLT
    addr: 0x818
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: KVCO_CNT_DLT
      bit_offset: 0
      bit_width: 9
      description: KVCO counter 1 and counter 2 delta
      read_allowed: true
      write_allowed: false
  - !Register
    name: LO_CFG
    addr: 0x81c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: true
    reset_value: 0x3b6db6e
    fields:
    - !Field
      name: LO_INT_CFG
      bit_offset: 0
      bit_width: 6
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: LO_FRAC_CFG
      bit_offset: 6
      bit_width: 22
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: LO_SEL
      bit_offset: 30
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
    - !Field
      name: LO_CHANGE
      bit_offset: 31
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: LO_TABLE
    addr: 0x820
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0x3b6db6e
    fields:
    - !Field
      name: LO_INT_TABLE
      bit_offset: 0
      bit_width: 6
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: LO_FRAC_TABLE
      bit_offset: 6
      bit_width: 20
      description: no description available
      read_allowed: true
      write_allowed: false
  - !Register
    name: LO_RATIO
    addr: 0x824
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0x3b6db6e
    fields:
    - !Field
      name: LO_INT
      bit_offset: 0
      bit_width: 6
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: LO_FRAC
      bit_offset: 6
      bit_width: 22
      description: no description available
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCO_MOD_CFG
    addr: 0x828
    size_bits: 32
    description: TRX 2M mode selection signal
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: VCO_MOD_TX_CFG
      bit_offset: 0
      bit_width: 1
      description: VCO_MOD_TX register configured value. See section 6.10.5 for detail.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VCO_MOD_TX_SEL
      bit_offset: 1
      bit_width: 1
      description: VCO_MOD_TX selection
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRX2M_MODE_CFG
      bit_offset: 2
      bit_width: 1
      description: TRX 2M mode software configured value
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRX2M_MODE_SEL
      bit_offset: 3
      bit_width: 1
      description: TRX 2M mode selection signal
      read_allowed: true
      write_allowed: true
    - !Field
      name: IMR
      bit_offset: 4
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: true
  - !Register
    name: VCO_MOD_STAT
    addr: 0x82c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VCO_MOD_TX
      bit_offset: 0
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: false
    - !Field
      name: TRX2M_MODE
      bit_offset: 2
      bit_width: 1
      description: no description available
      read_allowed: true
      write_allowed: false
  - !Register
    name: CH_IDX
    addr: 0x830
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0x1
    fields:
    - !Field
      name: CH_IDX
      bit_offset: 0
      bit_width: 8
      description: no description available
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCOF_CNT_UP
    addr: 0x834
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TX_VCOF_CNT_UP
      bit_offset: 0
      bit_width: 8
      description: TX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_VCOF_CNT_UP
      bit_offset: 16
      bit_width: 8
      description: RX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: false
  - !Register
    name: VCOF_CNT_DN
    addr: 0x838
    size_bits: 32
    description: reserved
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TX_VCOF_CNT_DN
      bit_offset: 0
      bit_width: 8
      description: TX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: false
    - !Field
      name: RX_VCOF_CNT_DN
      bit_offset: 16
      bit_width: 8
      description: RX VCO frequency power up calibration 8us count value
      read_allowed: true
      write_allowed: false
- !Module
  name: SPIFI0
  description: spifi
  base_addr: 0x40080000
  size: 0x20
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: SPIFI control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x400fffff
    fields:
    - !Field
      name: TIMEOUT
      bit_offset: 0
      bit_width: 16
      description: This field contains the number of serial clock periods without
        the processor reading data in memory mode, which will cause the SPIFI hardware
        to terminate the command by driving the CS pin high and negating the CMD bit
        in the Status register. (This allows the flash memory to enter a lower-power
        state.) If the processor reads data from the flash region after a time-out,
        the command in the Memory Command Register is issued again.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CSHIGH
      bit_offset: 16
      bit_width: 4
      description: This field controls the minimum CS high time, expressed as a number
        of serial clock periods minus one.
      read_allowed: true
      write_allowed: true
    - !Field
      name: D_PRFTCH_DIS
      bit_offset: 21
      bit_width: 1
      description: This bit allows conditioning of memory mode prefetches based on
        the AHB HPROT (instruction/data) access information. A 1 in this register
        means that the SPIFI will not attempt a speculative prefetch when it encounters
        data accesses.
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTEN
      bit_offset: 22
      bit_width: 1
      description: If this bit is 1 when a command ends, the SPIFI will assert its
        interrupt request output. See INTRQ in the status register for further details.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MODE3
      bit_offset: 23
      bit_width: 1
      description: SPI Mode 3 select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SCK_LOW
        1: SCK_HIGH
    - !Field
      name: PRFTCH_DIS
      bit_offset: 27
      bit_width: 1
      description: Cache prefetching enable. The SPIFI includes an internal cache.
        A 1 in this bit disables prefetching of cache lines.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLE
        1: DISABLE
    - !Field
      name: DUAL
      bit_offset: 28
      bit_width: 1
      description: Select dual protocol.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: QUAD
        1: DUAL
    - !Field
      name: RFCLK
      bit_offset: 29
      bit_width: 1
      description: Select active clock edge for input data.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: RISING_EDGE
        1: FALLING_EDGE
    - !Field
      name: FBCLK
      bit_offset: 30
      bit_width: 1
      description: Feedback clock select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INTERNAL_CLOCK
        1: FEEDBACK_CLOCK
    - !Field
      name: DMAEN
      bit_offset: 31
      bit_width: 1
      description: A 1 in this bit enables the DMA Request output from the SPIFI.
        Set this bit only when a DMA channel is used to transfer data in peripheral
        mode. Do not set this bit when a DMA channel is used for memory-to-memory
        transfers from the SPIFI memory area. DMAEN should only be used in Command
        mode.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CMD
    addr: 0x4
    size_bits: 32
    description: SPIFI command register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATALEN
      bit_offset: 0
      bit_width: 14
      description: Except when the POLL bit in this register is 1, this field controls
        how many data bytes are in the command. 0 indicates that the command does
        not contain a data field.
      read_allowed: true
      write_allowed: true
    - !Field
      name: POLL
      bit_offset: 14
      bit_width: 1
      description: This bit should be written as 1 only with an opcode that a) contains
        an input data field, and b) causes the serial flash device to return byte
        status repetitively (e.g., a Read Status command). When this bit is 1, the
        SPIFI hardware continues to read bytes until the test specified by the DATALEN
        field is met. The hardware tests the bit in each status byte selected by DATALEN
        bits 2:0, until a bit is found that is equal to DATALEN bit 3. When the test
        succeeds, the SPIFI captures the byte that meets this test so that it can
        be read from the Data Register, and terminates the command by raising CS.
        The end-of-command interrupt can be enabled to inform software when this occurs
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT
      bit_offset: 15
      bit_width: 1
      description: 'If the DATALEN field is not zero, this bit controls the direction
        of the data:'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: INTLEN
      bit_offset: 16
      bit_width: 3
      description: This field controls how many intermediate bytes precede the data.
        (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate
        field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output
        by the SPIFI, and include post-address control information, dummy and delay
        bytes. See the description of the Intermediate Data register for the contents
        of such bytes.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIELDFORM
      bit_offset: 19
      bit_width: 2
      description: This field controls how the fields of the command are sent.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ALL_SERIAL
        1: QUAD_DUAL_DATA
        2: SERIAL_OPCODE
        3: ALL_QUAD_DUAL
    - !Field
      name: FRAMEFORM
      bit_offset: 21
      bit_width: 3
      description: This field controls the opcode and address fields.
      read_allowed: true
      write_allowed: true
      enum_values:
        1: OPCODE
        2: OPCODE_1_BYTE
        3: OPCODE_2_BYTES
        4: OPCODE_3_BYTES
        5: OPCODE_4_BYTES
        6: NO_OPCODE_3_BYTES
        7: NO_OPCODE_4_BYTES
    - !Field
      name: OPCODE
      bit_offset: 24
      bit_width: 8
      description: The opcode of the command (not used for some FRAMEFORM values).
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR
    addr: 0x8
    size_bits: 32
    description: SPIFI address register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 32
      description: Address.
      read_allowed: true
      write_allowed: true
  - !Register
    name: IDATA
    addr: 0xc
    size_bits: 32
    description: SPIFI intermediate data register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IDATA
      bit_offset: 0
      bit_width: 32
      description: Value of intermediate bytes.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLIMIT
    addr: 0x10
    size_bits: 32
    description: SPIFI limit register
    read_allowed: true
    write_allowed: true
    reset_value: 0x8000000
    fields:
    - !Field
      name: CLIMIT
      bit_offset: 0
      bit_width: 32
      description: Zero-based upper limit of cacheable memory
      read_allowed: true
      write_allowed: true
  - !Register
    name: DATA
    addr: 0x14
    size_bits: 32
    description: SPIFI data register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 32
      description: Input or output data
      read_allowed: true
      write_allowed: true
  - !Register
    name: MCMD
    addr: 0x18
    size_bits: 32
    description: SPIFI memory command register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: POLL
      bit_offset: 14
      bit_width: 1
      description: This bit should be written as 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOUT
      bit_offset: 15
      bit_width: 1
      description: This bit should be written as 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTLEN
      bit_offset: 16
      bit_width: 3
      description: This field controls how many intermediate bytes precede the data.
        (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate
        field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output
        by the SPIFI, and include post-address control information, dummy and delay
        bytes. See the description of the Intermediate Data register for the contents
        of such bytes.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIELDFORM
      bit_offset: 19
      bit_width: 2
      description: This field controls how the fields of the command are sent.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ALL_SERIAL
        1: QUAD_DUAL_DATA
        2: SERIAL_OPCODE
        3: ALL_QUAD_DUAL
    - !Field
      name: FRAMEFORM
      bit_offset: 21
      bit_width: 3
      description: This field controls the opcode and address fields.
      read_allowed: true
      write_allowed: true
      enum_values:
        1: OPCODE
        2: OPCODE_1_BYTE
        3: OPCODE_2_BYTES
        4: OPCODE_3_BYTES
        5: OPCODE_4_BYTES
        6: NO_OPCODE_3_BYTES
        7: NO_OPCODE_4_BYTES
    - !Field
      name: OPCODE
      bit_offset: 24
      bit_width: 8
      description: The opcode of the command (not used for some FRAMEFORM values).
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x1c
    size_bits: 32
    description: SPIFI status register
    read_allowed: true
    write_allowed: true
    reset_value: 0x2000000
    fields:
    - !Field
      name: MCINIT
      bit_offset: 0
      bit_width: 1
      description: This bit is set when software successfully writes the Memory Command
        register, and is cleared by Reset or by writing a 1 to the RESET bit in this
        register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMD
      bit_offset: 1
      bit_width: 1
      description: This bit is 1 when the Command register is written. It is cleared
        by a hardware reset, a write to the RESET bit in this register, or the deassertion
        of CS which indicates that the command has completed communication with the
        SPI Flash.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RESET
      bit_offset: 4
      bit_width: 1
      description: Write a 1 to this bit to abort a current command or memory mode.
        This bit is cleared when the hardware is ready for a new command to be written
        to the Command register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: INTRQ
      bit_offset: 5
      bit_width: 1
      description: This bit reflects the SPIFI interrupt request. Write a 1 to this
        bit to clear it. This bit is set when a CMD was previously 1 and has been
        cleared due to the deassertion of CS.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VERSION
      bit_offset: 24
      bit_width: 8
      description: '-'
      read_allowed: true
      write_allowed: true
- !Module
  name: FLASH
  description: flash
  base_addr: 0x40081000
  size: 0xb0
  registers:
  - !Register
    name: INI_RD_EN
    addr: 0x0
    size_bits: 32
    description: flash initial read register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INI_RD_EN
      bit_offset: 0
      bit_width: 1
      description: enable contoller to automatically read GDR repaired information
        and lock bit
      read_allowed: true
      write_allowed: true
  - !Register
    name: ERASE_CTRL
    addr: 0x4
    size_bits: 32
    description: flash erase control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PAGE_IDXL
      bit_offset: 0
      bit_width: 7
      description: Low 256KB page erase index
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAGE_IDXH
      bit_offset: 8
      bit_width: 7
      description: High 256KB page erase index
      read_allowed: true
      write_allowed: true
    - !Field
      name: HALF_ERASEL_EN
      bit_offset: 28
      bit_width: 1
      description: Write '1' to Enable Mass Erase Low 256KB Flash; Write '0' is inactive.
        This bit is set by software and reset at the end of low 256KB flash mass erase
        operation by hardware.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HALF_ERASEH_EN
      bit_offset: 29
      bit_width: 1
      description: Write '1' to Enable Mass Erase High 256KB Flash; Write '0' is inactive.
        This bit is set by software and reset at the end of high 256KB flash mass
        erase operation by hardware.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAGE_ERASEL_EN
      bit_offset: 30
      bit_width: 1
      description: Low 256KB block page erase enable. This bit initiates a page erase
        operation when set. This bit is set by software and reset at the end of page
        erase operation by hardware.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PAGE_ERASEH_EN
      bit_offset: 31
      bit_width: 1
      description: High 256KB block page erase enable. This bit initiates a page erase
        operation when set. This bit is set by software and reset at the end of page
        erase operation by hardware.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ERASE_TIME
    addr: 0x8
    size_bits: 32
    description: flash erase time setting register
    read_allowed: true
    write_allowed: true
    reset_value: 0x9c400
    fields:
    - !Field
      name: ERASE_TIME_BASE
      bit_offset: 0
      bit_width: 20
      description: Erase time, which is used to control Terase, Tme and Tsme. An 8MHz
        clock is to count the erase time. The maximum time of erase is 100ms. Default
        value is 640000 cycles in 8 MHz, that's 80 ms. User should set a pessimistic
        value to avoid possible error in erase operation.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TIME_CTRL
    addr: 0xc
    size_bits: 32
    description: flash operation time setting register
    read_allowed: true
    write_allowed: true
    reset_value: 0x4001e
    fields:
    - !Field
      name: PRGM_CYCLE
      bit_offset: 0
      bit_width: 12
      description: Time base of some flash timing parameters, which represents 2 us.
        Default value is 64 cycles in 32 MHz (ahb clock). It is used in write and
        erase operations.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TIME_BASE
      bit_offset: 12
      bit_width: 8
      description: 'Max write operation times in one program, which are used to control
        Terase and Tme. User should set a pessimistic value to avoid possible error
        in erase/page erase operation. When user do write operation: It is used to
        limit allowed write numbers. (Max 21 ms-Tnvs-Tpgs-Tpgh-Tnvh)/18us = 1167 This
        register is only used when common write.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SMART_CTRL
    addr: 0x10
    size_bits: 32
    description: smart erase control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x553c
    fields:
    - !Field
      name: PRGML_EN
      bit_offset: 0
      bit_width: 1
      description: It enable Low 256KB Flash write operation;
      read_allowed: true
      write_allowed: true
    - !Field
      name: PRGMH_EN
      bit_offset: 1
      bit_width: 1
      description: It enable High 256KB Flash write operation;
      read_allowed: true
      write_allowed: true
    - !Field
      name: SMART_WRITEL_EN
      bit_offset: 2
      bit_width: 1
      description: It enable Low 256KB Flash Smart program flow. When smart write
        is done, hardware automatically clear it
      read_allowed: true
      write_allowed: true
    - !Field
      name: SMART_WRITEH_EN
      bit_offset: 3
      bit_width: 1
      description: It enable High 256KB Flash Smart program flow. When smart write
        is done, hardware automatically clear it
      read_allowed: true
      write_allowed: true
    - !Field
      name: SMART_ERASEL_EN
      bit_offset: 4
      bit_width: 1
      description: It enable Low 256KB Flash Smart erase flow; When smart erase is
        done, hardware automatically clear it
      read_allowed: true
      write_allowed: true
    - !Field
      name: SMART_ERASEH_EN
      bit_offset: 5
      bit_width: 1
      description: It enable High 256KB Flash Smart erase flow; When smart erase is
        done, hardware automatically clear it
      read_allowed: true
      write_allowed: true
    - !Field
      name: MAX_WRITE
      bit_offset: 8
      bit_width: 4
      description: When smart program is used, this is the maximum retry number for
        one write operation.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MAX_ERASE
      bit_offset: 12
      bit_width: 6
      description: When smart erase is used, this is the maximum retry number for
        one erase operation.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x14
    size_bits: 32
    description: interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AHBL_INTEN
      bit_offset: 0
      bit_width: 1
      description: low 256K flash AHB error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKL_INTEN
      bit_offset: 1
      bit_width: 1
      description: low 256K flash lock error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEL_INTEN
      bit_offset: 2
      bit_width: 1
      description: low 256K flash erase status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEL_INTEN
      bit_offset: 3
      bit_width: 1
      description: low 256K flash write status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRBUFL_INTEN
      bit_offset: 4
      bit_width: 1
      description: low 256K flash write buffer status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: AHBH_INTEN
      bit_offset: 8
      bit_width: 1
      description: high 256K flash AHB error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKH_INTEN
      bit_offset: 9
      bit_width: 1
      description: high 256K flash lock error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEH_INTEN
      bit_offset: 10
      bit_width: 1
      description: high 256K flash erase status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEH_INTEN
      bit_offset: 11
      bit_width: 1
      description: high 256K flash write status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRBUFH_INTEN
      bit_offset: 12
      bit_width: 1
      description: high 256K flash write buffer status interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FLASH_INTEN
      bit_offset: 31
      bit_width: 1
      description: flash total interrupt enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: INT_STAT
    addr: 0x18
    size_bits: 32
    description: interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AHBL_INT
      bit_offset: 0
      bit_width: 1
      description: 'It is low 256KB Flash AHB error interrupt stat. 1 indicates AHB
        operation error AHB error include: Write/read unmapped space; AHB align rules
        violation; Byte/half-word Flash write operation;'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKL_INT
      bit_offset: 1
      bit_width: 1
      description: It is low 256KB Flash Lock page be accessed interrupt status
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEL_INT
      bit_offset: 2
      bit_width: 1
      description: It is low 256KB Erase operation done interrupt status If erase
        is used, it indicates one erase is done.
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEL_INT
      bit_offset: 3
      bit_width: 1
      description: It is low 256KB write operation done interrupt status If write
        is used, it indicates one program is done.
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRBUFL_INT
      bit_offset: 4
      bit_width: 1
      description: It is low 256KB Write Buffer empty interrupt status 0 = write buffer
        is not empty 1 = write buffer is empty It is auto cleared when write buffer
        is written. It is enabled only when PRGML_EN is enabled and write buffer is
        empty
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_FAIL_L_INT
      bit_offset: 5
      bit_width: 1
      description: When smart write of low 256KB Flash is enable, 0 = Smart write
        is successful, 1 = Smart write is fail.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASE_FAIL_L_INT
      bit_offset: 6
      bit_width: 1
      description: When smart erase of low 256KB Flash is enable, 0 = Smart erase
        is successful, 1 = Smart erase is fail.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AHBH_INT
      bit_offset: 8
      bit_width: 1
      description: 'it is high 256KB Flash AHB error interrupt stat 1 indicates AHB
        operation error AHB error include: Write/read unmapped space; AHB align rules
        violation; Byte/half-word Flash write operation;'
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKH_INT
      bit_offset: 9
      bit_width: 1
      description: it is high 256KB Flash Lock page be accessed interrupt status
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEH_INT
      bit_offset: 10
      bit_width: 1
      description: it is high 256KB Flash Erase operation done interrupt status If
        erase is used, it indicates one erase is done.
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEH_INT
      bit_offset: 11
      bit_width: 1
      description: it is high 256KB Flash write operation done interrupt status If
        write is used, it indicates one program is done.
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRBUFH_INT
      bit_offset: 12
      bit_width: 1
      description: it is high 256KB Flash Write Buffer empty interrupt status 0 =
        write buffer is not empty 1 = write buffer is empty It is auto cleared when
        write buffer is written. It is enabled only when PRGMH_EN is enabled and write
        buffer is empty
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITE_FAIL_H_INT
      bit_offset: 13
      bit_width: 1
      description: When smart write of high 256KB Flash is enable, 0 = Smart write
        is successful, 1 = Smart write is fail.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASE_FAIL_H_INT
      bit_offset: 14
      bit_width: 1
      description: When smart erase of high 256KB Flash is enable, 0 = Smart erase
        is successful, 1 = Smart erase is fail.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTCLR
    addr: 0x1c
    size_bits: 32
    description: interrupt clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: AHBL_INTCLR
      bit_offset: 0
      bit_width: 1
      description: low 256K flash AHB error interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKL_INTCLR
      bit_offset: 1
      bit_width: 1
      description: low 256K flash lock error interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEL_INTCLR
      bit_offset: 2
      bit_width: 1
      description: low 256K flash erase status interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEL_INTCLR
      bit_offset: 3
      bit_width: 1
      description: low 256K flash write status interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: AHBH_INTCLR
      bit_offset: 8
      bit_width: 1
      description: high 256K flash AHB error interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: LOCKH_INTCLR
      bit_offset: 9
      bit_width: 1
      description: high 256K flash lock error interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: ERASEH_INTCLR
      bit_offset: 10
      bit_width: 1
      description: high 256K flash erase status interrupt clear
      read_allowed: true
      write_allowed: true
    - !Field
      name: WRITEH_INTCLR
      bit_offset: 11
      bit_width: 1
      description: high 256K flash write status interrupt clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: LOCK_STAT0
    addr: 0x20
    size_bits: 32
    description: lock control register 0
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK0
      bit_offset: 0
      bit_width: 32
      description: Low 256K flash main memory page 0-31 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT1
    addr: 0x24
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK1
      bit_offset: 0
      bit_width: 32
      description: Low 256K flash main memory page 32-63 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT2
    addr: 0x28
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK2
      bit_offset: 0
      bit_width: 32
      description: Low 256K flash main memory page 64-95 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT3
    addr: 0x2c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK3
      bit_offset: 0
      bit_width: 32
      description: Low 256K flash main memory page 96-127 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT4
    addr: 0x30
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK4
      bit_offset: 0
      bit_width: 32
      description: high 256K flash main memory page 0-31 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT5
    addr: 0x34
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK5
      bit_offset: 0
      bit_width: 32
      description: high 256K flash main memory page 32-63 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT6
    addr: 0x38
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK6
      bit_offset: 0
      bit_width: 32
      description: high 256K flash main memory page 64-95 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT7
    addr: 0x3c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0xffffffff
    fields:
    - !Field
      name: PAGE_LOCK7
      bit_offset: 0
      bit_width: 32
      description: high 256K flash main memory page 96-127 write and erase lock status
      read_allowed: true
      write_allowed: false
  - !Register
    name: LOCK_STAT8
    addr: 0x40
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: true
    reset_value: 0xf
    fields:
    - !Field
      name: MASS_ERASE_LOCK
      bit_offset: 0
      bit_width: 1
      description: 'Mass erase operation lock status 0 : Mass erase operation is locked
        1 : Mass erase operation is unlocked'
      read_allowed: true
      write_allowed: true
    - !Field
      name: FSH_PROTECT
      bit_offset: 1
      bit_width: 1
      description: 'SWD flash protection status 0 : flash is unprotected 1 : flash
        is protected'
      read_allowed: true
      write_allowed: true
    - !Field
      name: MEM_PROTECT
      bit_offset: 2
      bit_width: 1
      description: 'SWD memory protection status 0 : Memory is unprotected 1 : Memory
        is protected'
      read_allowed: true
      write_allowed: true
  - !Register
    name: STATUS1
    addr: 0x48
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    reset_value: 0x4010001
    fields:
    - !Field
      name: FSH_ERA_BUSY_L
      bit_offset: 9
      bit_width: 1
      description: 'flash block 0 erase operation status 0 : no flash block 0 erase
        operation in progress. 1 : flash block 0 erase operation is in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FSH_WR_BUSY_L
      bit_offset: 10
      bit_width: 1
      description: 'flash block 0 write operation status: 0 : no flash block 0 write
        operation in progress. 1 : flash block 0 write operation is in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DBG_ERA_DONE_L
      bit_offset: 11
      bit_width: 1
      description: 'A flash block 0 debug initiated smart mass erase status. 0 : no
        debug port initiated flash block 0 smart mass erase operation in progress.
        1 : debug port initiated flash block 0 smart mass erase operation in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FSH_ERA_BUSY_H
      bit_offset: 12
      bit_width: 1
      description: 'flash block 1 erase operation status 0 : no flash block 1 erase
        operation in progress. 1 : flash block 1 erase operation is in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: FSH_WR_BUSY_H
      bit_offset: 13
      bit_width: 1
      description: 'flash block 1 write operation status: 0 : no flash block 1 write
        operation in progress. 1 : flash block 1 write operation is in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: DBG_ERA_DONE_H
      bit_offset: 14
      bit_width: 1
      description: 'A flash block 1 debug initiated smart mass erase status. 0 : no
        debug port initiated flash block 1 smart mass erase operation in progress.
        1 : debug port initiated flash block 1 smart mass erase operation in progress.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: INI_RD_DONE
      bit_offset: 15
      bit_width: 1
      description: flash initial read done.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FSH_STA
      bit_offset: 26
      bit_width: 1
      description: when 0 means data information is 0x55AA.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RESERVED
      bit_offset: 27
      bit_width: 5
      description: reserved
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOL1
    addr: 0x5c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: WR_FAILEDL_ADDR
      bit_offset: 0
      bit_width: 18
      description: When a flash block 0 smart write fails, the address is stored in
        this bit filed
      read_allowed: true
      write_allowed: false
    - !Field
      name: SMART_FAILL_CTR
      bit_offset: 18
      bit_width: 6
      description: The amount of fails during a smart write or smart erase is stored
        in this bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOL2
    addr: 0x60
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: WR_FAILEDL_DATA
      bit_offset: 0
      bit_width: 32
      description: When a flash block 0 smart write fails, the data is stored in this
        bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOL3
    addr: 0x64
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ERA_FAILEDL_INFO
      bit_offset: 0
      bit_width: 18
      description: When a smart erase on flash block 0 fails, the address is stored
        in this bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOH1
    addr: 0x68
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: WR_FAILEDH_ADDR
      bit_offset: 0
      bit_width: 18
      description: When a flash block 1 smart write fails, the address is stored in
        this bit field
      read_allowed: true
      write_allowed: false
    - !Field
      name: SMART_FAILH_CTR
      bit_offset: 18
      bit_width: 6
      description: The amount of fails during a msart write or smart erase is stored
        int his bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOH2
    addr: 0x6c
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: WR_FAILEDH_DATA
      bit_offset: 0
      bit_width: 32
      description: When a flash block 1 smart write fails, the data is stored in this
        bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERR_INFOH3
    addr: 0x70
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ERA_FAILEDH_INFO
      bit_offset: 0
      bit_width: 18
      description: when a smart erase on flash block 1 fails, the address is stored
        in this bit field
      read_allowed: true
      write_allowed: false
  - !Register
    name: DEBUG_PASSWORD
    addr: 0xa8
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DEBUG_PASSWORD
      bit_offset: 0
      bit_width: 32
      description: An SWD initiated smart mass erase operation will only be issued
        if this register is programmed with the value 0xCA1E093F.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ERASE_PASSWORD
    addr: 0xac
    size_bits: 32
    description: no description available
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ERASE_PASSWORD
      bit_offset: 0
      bit_width: 32
      description: When this register is programmed with the value 0xCA1E093F, a FW
        initiated mass erase or page erase operation will bypass the current lock
        and protection scheme.
      read_allowed: true
      write_allowed: true
- !Module
  name: DMA0
  description: LPC5411x DMA controller
  base_addr: 0x40082000
  size: 0x53c
  registers:
  - !Register
    name: CTRL
    addr: 0x0
    size_bits: 32
    description: DMA control.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: DMA controller master enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: INTSTAT
    addr: 0x4
    size_bits: 32
    description: Interrupt status.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACTIVEINT
      bit_offset: 1
      bit_width: 1
      description: Summarizes whether any enabled interrupts (other than error interrupts)
        are pending.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PENDING
        1: PENDING
    - !Field
      name: ACTIVEERRINT
      bit_offset: 2
      bit_width: 1
      description: Summarizes whether any error interrupts are pending.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PENDING
        1: PENDING
  - !Register
    name: SRAMBASE
    addr: 0x8
    size_bits: 32
    description: SRAM address of the channel configuration table.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OFFSET
      bit_offset: 9
      bit_width: 23
      description: Address bits 31:9 of the beginning of the DMA descriptor table.
        For 18 channels, the table must begin on a 512 byte boundary.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ENABLESET0
    addr: 0x20
    size_bits: 32
    description: Channel Enable read and Set for all DMA channels.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENA
      bit_offset: 0
      bit_width: 32
      description: Enable for DMA channels. Bit n enables or disables DMA channel
        n. The number of bits = number of DMA channels in this device. Other bits
        are reserved. 0 = disabled. 1 = enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ENABLECLR0
    addr: 0x28
    size_bits: 32
    description: Channel Enable Clear for all DMA channels.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 32
      description: Writing ones to this register clears the corresponding bits in
        ENABLESET0. Bit n clears the channel enable bit n. The number of bits = number
        of DMA channels in this device. Other bits are reserved.
      read_allowed: false
      write_allowed: true
  - !Register
    name: ACTIVE0
    addr: 0x30
    size_bits: 32
    description: Channel Active status for all DMA channels.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: ACT
      bit_offset: 0
      bit_width: 32
      description: Active flag for DMA channel n. Bit n corresponds to DMA channel
        n. The number of bits = number of DMA channels in this device. Other bits
        are reserved. 0 = not active. 1 = active.
      read_allowed: true
      write_allowed: false
  - !Register
    name: BUSY0
    addr: 0x38
    size_bits: 32
    description: Channel Busy status for all DMA channels.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: BSY
      bit_offset: 0
      bit_width: 32
      description: Busy flag for DMA channel n. Bit n corresponds to DMA channel n.
        The number of bits = number of DMA channels in this device. Other bits are
        reserved. 0 = not busy. 1 = busy.
      read_allowed: true
      write_allowed: false
  - !Register
    name: ERRINT0
    addr: 0x40
    size_bits: 32
    description: Error Interrupt status for all DMA channels.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ERR
      bit_offset: 0
      bit_width: 32
      description: Error Interrupt flag for DMA channel n. Bit n corresponds to DMA
        channel n. The number of bits = number of DMA channels in this device. Other
        bits are reserved. 0 = error interrupt is not active. 1 = error interrupt
        is active.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENSET0
    addr: 0x48
    size_bits: 32
    description: Interrupt Enable read and Set for all DMA channels.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTEN
      bit_offset: 0
      bit_width: 32
      description: Interrupt Enable read and set for DMA channel n. Bit n corresponds
        to DMA channel n. The number of bits = number of DMA channels in this device.
        Other bits are reserved. 0 = interrupt for DMA channel is disabled. 1 = interrupt
        for DMA channel is enabled.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENCLR0
    addr: 0x50
    size_bits: 32
    description: Interrupt Enable Clear for all DMA channels.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 32
      description: Writing ones to this register clears corresponding bits in the
        INTENSET0. Bit n corresponds to DMA channel n. The number of bits = number
        of DMA channels in this device. Other bits are reserved.
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTA0
    addr: 0x58
    size_bits: 32
    description: Interrupt A status for all DMA channels.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IA
      bit_offset: 0
      bit_width: 32
      description: Interrupt A status for DMA channel n. Bit n corresponds to DMA
        channel n. The number of bits = number of DMA channels in this device. Other
        bits are reserved. 0 = the DMA channel interrupt A is not active. 1 = the
        DMA channel interrupt A is active.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTB0
    addr: 0x60
    size_bits: 32
    description: Interrupt B status for all DMA channels.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IB
      bit_offset: 0
      bit_width: 32
      description: Interrupt B status for DMA channel n. Bit n corresponds to DMA
        channel n. The number of bits = number of DMA channels in this device. Other
        bits are reserved. 0 = the DMA channel interrupt B is not active. 1 = the
        DMA channel interrupt B is active.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SETVALID0
    addr: 0x68
    size_bits: 32
    description: Set ValidPending control bits for all DMA channels.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SV
      bit_offset: 0
      bit_width: 32
      description: SETVALID control for DMA channel n. Bit n corresponds to DMA channel
        n. The number of bits = number of DMA channels in this device. Other bits
        are reserved. 0 = no effect. 1 = sets the VALIDPENDING control bit for DMA
        channel n
      read_allowed: false
      write_allowed: true
  - !Register
    name: SETTRIG0
    addr: 0x70
    size_bits: 32
    description: Set Trigger control bits for all DMA channels.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TRIG
      bit_offset: 0
      bit_width: 32
      description: Set Trigger control bit for DMA channel 0. Bit n corresponds to
        DMA channel n. The number of bits = number of DMA channels in this device.
        Other bits are reserved. 0 = no effect. 1 = sets the TRIG bit for DMA channel
        n.
      read_allowed: false
      write_allowed: true
  - !Register
    name: ABORT0
    addr: 0x78
    size_bits: 32
    description: Channel Abort control for all DMA channels.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: ABORTCTRL
      bit_offset: 0
      bit_width: 32
      description: Abort control for DMA channel 0. Bit n corresponds to DMA channel
        n. 0 = no effect. 1 = aborts DMA operations on channel n.
      read_allowed: false
      write_allowed: true
  - !Register
    name: CHANNEL[0]_CFG
    addr: 0x400
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[0]_CTLSTAT
    addr: 0x404
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[0]_XFERCFG
    addr: 0x408
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[1]_CFG
    addr: 0x410
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[1]_CTLSTAT
    addr: 0x414
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[1]_XFERCFG
    addr: 0x418
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[2]_CFG
    addr: 0x420
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[2]_CTLSTAT
    addr: 0x424
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[2]_XFERCFG
    addr: 0x428
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[3]_CFG
    addr: 0x430
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[3]_CTLSTAT
    addr: 0x434
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[3]_XFERCFG
    addr: 0x438
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[4]_CFG
    addr: 0x440
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[4]_CTLSTAT
    addr: 0x444
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[4]_XFERCFG
    addr: 0x448
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[5]_CFG
    addr: 0x450
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[5]_CTLSTAT
    addr: 0x454
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[5]_XFERCFG
    addr: 0x458
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[6]_CFG
    addr: 0x460
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[6]_CTLSTAT
    addr: 0x464
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[6]_XFERCFG
    addr: 0x468
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[7]_CFG
    addr: 0x470
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[7]_CTLSTAT
    addr: 0x474
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[7]_XFERCFG
    addr: 0x478
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[8]_CFG
    addr: 0x480
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[8]_CTLSTAT
    addr: 0x484
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[8]_XFERCFG
    addr: 0x488
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[9]_CFG
    addr: 0x490
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[9]_CTLSTAT
    addr: 0x494
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[9]_XFERCFG
    addr: 0x498
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[10]_CFG
    addr: 0x4a0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[10]_CTLSTAT
    addr: 0x4a4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[10]_XFERCFG
    addr: 0x4a8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[11]_CFG
    addr: 0x4b0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[11]_CTLSTAT
    addr: 0x4b4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[11]_XFERCFG
    addr: 0x4b8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[12]_CFG
    addr: 0x4c0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[12]_CTLSTAT
    addr: 0x4c4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[12]_XFERCFG
    addr: 0x4c8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[13]_CFG
    addr: 0x4d0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[13]_CTLSTAT
    addr: 0x4d4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[13]_XFERCFG
    addr: 0x4d8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[14]_CFG
    addr: 0x4e0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[14]_CTLSTAT
    addr: 0x4e4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[14]_XFERCFG
    addr: 0x4e8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[15]_CFG
    addr: 0x4f0
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[15]_CTLSTAT
    addr: 0x4f4
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[15]_XFERCFG
    addr: 0x4f8
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[16]_CFG
    addr: 0x500
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[16]_CTLSTAT
    addr: 0x504
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[16]_XFERCFG
    addr: 0x508
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[17]_CFG
    addr: 0x510
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[17]_CTLSTAT
    addr: 0x514
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[17]_XFERCFG
    addr: 0x518
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[18]_CFG
    addr: 0x520
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[18]_CTLSTAT
    addr: 0x524
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[18]_XFERCFG
    addr: 0x528
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[19]_CFG
    addr: 0x530
    size_bits: 32
    description: Configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PERIPHREQEN
      bit_offset: 0
      bit_width: 1
      description: Peripheral request Enable. If a DMA channel is used to perform
        a memory-to-memory move, any peripheral DMA request associated with that channel
        can be disabled to prevent any interaction between the peripheral and the
        DMA controller.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: HWTRIGEN
      bit_offset: 1
      bit_width: 1
      description: Hardware Triggering Enable for this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TRIGPOL
      bit_offset: 4
      bit_width: 1
      description: Trigger Polarity. Selects the polarity of a hardware trigger for
        this channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ACTIVE_LOW_FALLING
        1: ACTIVE_HIGH_RISING
    - !Field
      name: TRIGTYPE
      bit_offset: 5
      bit_width: 1
      description: Trigger Type. Selects hardware trigger as edge triggered or level
        triggered.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: EDGE
        1: LEVEL
    - !Field
      name: TRIGBURST
      bit_offset: 6
      bit_width: 1
      description: Trigger Burst. Selects whether hardware triggers cause a single
        or burst transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SINGLE
        1: BURST
    - !Field
      name: BURSTPOWER
      bit_offset: 8
      bit_width: 4
      description: 'Burst Power is used in two ways. It always selects the address
        wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions
        elsewhere in this register). When the TRIGBURST field elsewhere in this register
        = 1, Burst Power selects how many transfers are performed for each DMA trigger.
        This can be used, for example, with peripherals that contain a FIFO that can
        initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst
        size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010:
        Burst size = 1024 (210). This corresponds to the maximum supported transfer
        count. others: not supported. The total transfer length as defined in the
        XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst
        size.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: SRCBURSTWRAP
      bit_offset: 14
      bit_width: 1
      description: Source Burst Wrap. When enabled, the source data address for the
        DMA is 'wrapped', meaning that the source address range for each burst will
        be the same. As an example, this could be used to read several sequential
        registers from a peripheral for each DMA burst, reading the same registers
        again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DSTBURSTWRAP
      bit_offset: 15
      bit_width: 1
      description: Destination Burst Wrap. When enabled, the destination data address
        for the DMA is 'wrapped', meaning that the destination address range for each
        burst will be the same. As an example, this could be used to write several
        sequential registers to a peripheral for each DMA burst, writing the same
        registers again for each burst.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CHPRIORITY
      bit_offset: 16
      bit_width: 3
      description: 'Priority of this channel when multiple DMA requests are pending.
        Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest
        priority.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: CHANNEL[19]_CTLSTAT
    addr: 0x534
    size_bits: 32
    description: Control and status register for DMA channel .
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: VALIDPENDING
      bit_offset: 0
      bit_width: 1
      description: Valid pending flag for this channel. This bit is set when a 1 is
        written to the corresponding bit in the related SETVALID register when CFGVALID
        = 1 for the same channel.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_EFFECT
        1: VALID_PENDING
    - !Field
      name: TRIG
      bit_offset: 2
      bit_width: 1
      description: Trigger flag. Indicates that the trigger for this channel is currently
        set. This bit is cleared at the end of an entire transfer or upon reload when
        CLRTRIG = 1.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
  - !Register
    name: CHANNEL[19]_XFERCFG
    addr: 0x538
    size_bits: 32
    description: Transfer configuration register for DMA channel .
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CFGVALID
      bit_offset: 0
      bit_width: 1
      description: Configuration Valid flag. This bit indicates whether the current
        channel descriptor is valid and can potentially be acted upon, if all other
        activation criteria are fulfilled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_VALID
        1: VALID
    - !Field
      name: RELOAD
      bit_offset: 1
      bit_width: 1
      description: Indicates whether the channel's control structure will be reloaded
        when the current descriptor is exhausted. Reloading allows ping-pong and linked
        transfers.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SWTRIG
      bit_offset: 2
      bit_width: 1
      description: Software Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_SET
        1: SET
    - !Field
      name: CLRTRIG
      bit_offset: 3
      bit_width: 1
      description: Clear Trigger.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_CLEARED
        1: CLEARED
    - !Field
      name: SETINTA
      bit_offset: 4
      bit_width: 1
      description: Set Interrupt flag A for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: SETINTB
      bit_offset: 5
      bit_width: 1
      description: Set Interrupt flag B for this channel. There is no hardware distinction
        between interrupt A and B. They can be used by software to assist with more
        complex descriptor usage. By convention, interrupt A may be used when only
        one interrupt flag is needed.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: SET
    - !Field
      name: WIDTH
      bit_offset: 8
      bit_width: 2
      description: Transfer width used for this DMA channel.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: BIT_8
        1: BIT_16
        2: BIT_32
    - !Field
      name: SRCINC
      bit_offset: 12
      bit_width: 2
      description: Determines whether the source address is incremented for each DMA
        transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: DSTINC
      bit_offset: 14
      bit_width: 2
      description: Determines whether the destination address is incremented for each
        DMA transfer.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_INCREMENT
        1: WIDTH_X_1
        2: WIDTH_X_2
        3: WIDTH_X_4
    - !Field
      name: XFERCOUNT
      bit_offset: 16
      bit_width: 10
      description: 'Total number of transfers to be performed, minus 1 encoded. The
        number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by
        the WIDTH field). The DMA controller uses this bit field during transfer to
        count down. Hence, it cannot be used by software to read back the size of
        the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer
        will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF =
        a total of 1,024 transfers will be performed.'
      read_allowed: true
      write_allowed: true
- !Module
  name: FLEXCOMM0
  description: flexcomm
  base_addr: 0x40083000
  size: 0x1000
  registers:
  - !Register
    name: IOMODE
    addr: 0xf00
    size_bits: 32
    description: io mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIO_MODE
      bit_offset: 0
      bit_width: 1
      description: IO mode register, SPI share MISO/MOSI at MOSI, USART share TXD/RXD
        at RXD
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOSHAREPIN
        1: SHAREPIN
    - !Field
      name: DIO_OEN
      bit_offset: 1
      bit_width: 1
      description: shared pin direction register
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SP_NOEN
        1: SP_OEN
  - !Register
    name: PSELID
    addr: 0xff8
    size_bits: 32
    description: Peripheral Select and Flexcomm ID register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101000
    fields:
    - !Field
      name: PERSEL
      bit_offset: 0
      bit_width: 3
      description: Peripheral Select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PERIPH_SELECTED
        1: USART
        2: SPI
        3: I2C
        4: I2S_TRANSMIT
        5: I2S_RECEIVE
    - !Field
      name: LOCK
      bit_offset: 3
      bit_width: 1
      description: Lock the peripheral select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UNLOCKED
        1: LOCKED
    - !Field
      name: USARTPRESENT
      bit_offset: 4
      bit_width: 1
      description: USART present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SPIPRESENT
      bit_offset: 5
      bit_width: 1
      description: SPI present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2CPRESENT
      bit_offset: 6
      bit_width: 1
      description: I2C present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2SPRESENT
      bit_offset: 7
      bit_width: 1
      description: I 2S present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SC3W
      bit_offset: 8
      bit_width: 1
      description: Smart card/SPI 3 wire mode feature indicator. This field is Read-only
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: ID
      bit_offset: 12
      bit_width: 20
      description: Flexcomm ID.
      read_allowed: true
      write_allowed: false
  - !Register
    name: PID
    addr: 0xffc
    size_bits: 32
    description: Peripheral identification register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: Minor_Rev
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: Major_Rev
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Module identifier for the selected function.
      read_allowed: true
      write_allowed: false
- !Module
  name: FLEXCOMM1
  description: flexcomm
  base_addr: 0x40086000
  size: 0x1000
  registers:
  - !Register
    name: IOMODE
    addr: 0xf00
    size_bits: 32
    description: io mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIO_MODE
      bit_offset: 0
      bit_width: 1
      description: IO mode register, SPI share MISO/MOSI at MOSI, USART share TXD/RXD
        at RXD
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOSHAREPIN
        1: SHAREPIN
    - !Field
      name: DIO_OEN
      bit_offset: 1
      bit_width: 1
      description: shared pin direction register
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SP_NOEN
        1: SP_OEN
  - !Register
    name: PSELID
    addr: 0xff8
    size_bits: 32
    description: Peripheral Select and Flexcomm ID register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101000
    fields:
    - !Field
      name: PERSEL
      bit_offset: 0
      bit_width: 3
      description: Peripheral Select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PERIPH_SELECTED
        1: USART
        2: SPI
        3: I2C
        4: I2S_TRANSMIT
        5: I2S_RECEIVE
    - !Field
      name: LOCK
      bit_offset: 3
      bit_width: 1
      description: Lock the peripheral select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UNLOCKED
        1: LOCKED
    - !Field
      name: USARTPRESENT
      bit_offset: 4
      bit_width: 1
      description: USART present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SPIPRESENT
      bit_offset: 5
      bit_width: 1
      description: SPI present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2CPRESENT
      bit_offset: 6
      bit_width: 1
      description: I2C present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2SPRESENT
      bit_offset: 7
      bit_width: 1
      description: I 2S present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SC3W
      bit_offset: 8
      bit_width: 1
      description: Smart card/SPI 3 wire mode feature indicator. This field is Read-only
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: ID
      bit_offset: 12
      bit_width: 20
      description: Flexcomm ID.
      read_allowed: true
      write_allowed: false
  - !Register
    name: PID
    addr: 0xffc
    size_bits: 32
    description: Peripheral identification register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: Minor_Rev
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: Major_Rev
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Module identifier for the selected function.
      read_allowed: true
      write_allowed: false
- !Module
  name: FLEXCOMM2
  description: flexcomm
  base_addr: 0x40087000
  size: 0x1000
  registers:
  - !Register
    name: IOMODE
    addr: 0xf00
    size_bits: 32
    description: io mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIO_MODE
      bit_offset: 0
      bit_width: 1
      description: IO mode register, SPI share MISO/MOSI at MOSI, USART share TXD/RXD
        at RXD
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOSHAREPIN
        1: SHAREPIN
    - !Field
      name: DIO_OEN
      bit_offset: 1
      bit_width: 1
      description: shared pin direction register
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SP_NOEN
        1: SP_OEN
  - !Register
    name: PSELID
    addr: 0xff8
    size_bits: 32
    description: Peripheral Select and Flexcomm ID register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101000
    fields:
    - !Field
      name: PERSEL
      bit_offset: 0
      bit_width: 3
      description: Peripheral Select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PERIPH_SELECTED
        1: USART
        2: SPI
        3: I2C
        4: I2S_TRANSMIT
        5: I2S_RECEIVE
    - !Field
      name: LOCK
      bit_offset: 3
      bit_width: 1
      description: Lock the peripheral select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UNLOCKED
        1: LOCKED
    - !Field
      name: USARTPRESENT
      bit_offset: 4
      bit_width: 1
      description: USART present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SPIPRESENT
      bit_offset: 5
      bit_width: 1
      description: SPI present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2CPRESENT
      bit_offset: 6
      bit_width: 1
      description: I2C present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2SPRESENT
      bit_offset: 7
      bit_width: 1
      description: I 2S present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SC3W
      bit_offset: 8
      bit_width: 1
      description: Smart card/SPI 3 wire mode feature indicator. This field is Read-only
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: ID
      bit_offset: 12
      bit_width: 20
      description: Flexcomm ID.
      read_allowed: true
      write_allowed: false
  - !Register
    name: PID
    addr: 0xffc
    size_bits: 32
    description: Peripheral identification register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: Minor_Rev
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: Major_Rev
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Module identifier for the selected function.
      read_allowed: true
      write_allowed: false
- !Module
  name: FLEXCOMM3
  description: flexcomm
  base_addr: 0x4008f000
  size: 0x1000
  registers:
  - !Register
    name: IOMODE
    addr: 0xf00
    size_bits: 32
    description: io mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIO_MODE
      bit_offset: 0
      bit_width: 1
      description: IO mode register, SPI share MISO/MOSI at MOSI, USART share TXD/RXD
        at RXD
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOSHAREPIN
        1: SHAREPIN
    - !Field
      name: DIO_OEN
      bit_offset: 1
      bit_width: 1
      description: shared pin direction register
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SP_NOEN
        1: SP_OEN
  - !Register
    name: PSELID
    addr: 0xff8
    size_bits: 32
    description: Peripheral Select and Flexcomm ID register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x101000
    fields:
    - !Field
      name: PERSEL
      bit_offset: 0
      bit_width: 3
      description: Peripheral Select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PERIPH_SELECTED
        1: USART
        2: SPI
        3: I2C
        4: I2S_TRANSMIT
        5: I2S_RECEIVE
    - !Field
      name: LOCK
      bit_offset: 3
      bit_width: 1
      description: Lock the peripheral select. This field is writable by software.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UNLOCKED
        1: LOCKED
    - !Field
      name: USARTPRESENT
      bit_offset: 4
      bit_width: 1
      description: USART present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SPIPRESENT
      bit_offset: 5
      bit_width: 1
      description: SPI present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2CPRESENT
      bit_offset: 6
      bit_width: 1
      description: I2C present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: I2SPRESENT
      bit_offset: 7
      bit_width: 1
      description: I 2S present indicator. This field is Read-only.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: SC3W
      bit_offset: 8
      bit_width: 1
      description: Smart card/SPI 3 wire mode feature indicator. This field is Read-only
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_PRESENT
        1: PRESENT
    - !Field
      name: ID
      bit_offset: 12
      bit_width: 20
      description: Flexcomm ID.
      read_allowed: true
      write_allowed: false
  - !Register
    name: PID
    addr: 0xffc
    size_bits: 32
    description: Peripheral identification register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: Minor_Rev
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: Major_Rev
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Module identifier for the selected function.
      read_allowed: true
      write_allowed: false
- !Module
  name: USART0
  description: usart
  base_addr: 0x40083000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x0
    size_bits: 32
    description: USART Configuration register. Basic USART configuration settings
      that typically are not changed during operation.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: USART Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DATALEN
      bit_offset: 2
      bit_width: 2
      description: Selects the data size for the USART.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _7_BIT
        1: _8_BIT
        2: _9_BIT
    - !Field
      name: PARITYSEL
      bit_offset: 4
      bit_width: 2
      description: Selects what type of parity is used by the USART.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PARITY
        2: EVEN_PARITY
        3: ODD_PARITY
    - !Field
      name: STOPLEN
      bit_offset: 6
      bit_width: 1
      description: Number of stop bits appended to transmitted data. Only a single
        stop bit is required for received data.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _1_BIT
        1: _2_BITS
    - !Field
      name: MODE32K
      bit_offset: 7
      bit_width: 1
      description: Selects standard or 32 kHz clocking mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: LINMODE
      bit_offset: 8
      bit_width: 1
      description: LIN break mode enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CTSEN
      bit_offset: 9
      bit_width: 1
      description: CTS Enable. Determines whether CTS is used for flow control. CTS
        can be from the input pin, or from the USART'-s own RTS if loopback mode is
        enabled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SYNCEN
      bit_offset: 11
      bit_width: 1
      description: Selects synchronous or asynchronous operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ASYNCHRONOUS_MODE
        1: SYNCHRONOUS_MODE
    - !Field
      name: CLKPOL
      bit_offset: 12
      bit_width: 1
      description: Selects the clock polarity and sampling edge of received data in
        synchronous mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FALLING_EDGE
        1: RISING_EDGE
    - !Field
      name: SYNCMST
      bit_offset: 14
      bit_width: 1
      description: Synchronous mode Master select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE
        1: MASTER
    - !Field
      name: LOOP
      bit_offset: 15
      bit_width: 1
      description: Selects data loopback mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: LOOPBACK
    - !Field
      name: OETA
      bit_offset: 18
      bit_width: 1
      description: Output Enable Turnaround time enable for RS-485 operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: AUTOADDR
      bit_offset: 19
      bit_width: 1
      description: Automatic Address matching enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: OESEL
      bit_offset: 20
      bit_width: 1
      description: Output Enable Select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: RS_485
    - !Field
      name: OEPOL
      bit_offset: 21
      bit_width: 1
      description: Output Enable Polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: RXPOL
      bit_offset: 22
      bit_width: 1
      description: Receive data polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: INVERTED
    - !Field
      name: TXPOL
      bit_offset: 23
      bit_width: 1
      description: Transmit data polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: INVERTED
  - !Register
    name: CTL
    addr: 0x4
    size_bits: 32
    description: USART Control register. USART control settings that are more likely
      to change during operation.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXBRKEN
      bit_offset: 1
      bit_width: 1
      description: Break Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: CONTINOUS
    - !Field
      name: ADDRDET
      bit_offset: 2
      bit_width: 1
      description: Enable address detect mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXDIS
      bit_offset: 6
      bit_width: 1
      description: Transmit Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: CC
      bit_offset: 8
      bit_width: 1
      description: Continuous Clock generation. By default, SCLK is only output while
        data is being transmitted in synchronous mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLOCK_ON_CHARACTER
        1: CONTINOUS_CLOCK
    - !Field
      name: CLRCCONRX
      bit_offset: 9
      bit_width: 1
      description: Clear Continuous Clock.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: AUTO_CLEAR
    - !Field
      name: AUTOBAUD
      bit_offset: 16
      bit_width: 1
      description: Autobaud enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: STAT
    addr: 0x8
    size_bits: 32
    description: USART Status register. The complete status value can be read here.
      Writing ones clears some bits in the register. Some bits can be cleared by writing
      a 1 to them.
    read_allowed: true
    write_allowed: true
    reset_value: 0xa
    fields:
    - !Field
      name: RXIDLE
      bit_offset: 1
      bit_width: 1
      description: Receiver Idle. When 0, indicates that the receiver is currently
        in the process of receiving data. When 1, indicates that the receiver is not
        currently in the process of receiving data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXIDLE
      bit_offset: 3
      bit_width: 1
      description: Transmitter Idle. When 0, indicates that the transmitter is currently
        in the process of sending data.When 1, indicate that the transmitter is not
        currently in the process of sending data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS
      bit_offset: 4
      bit_width: 1
      description: This bit reflects the current state of the CTS signal, regardless
        of the setting of the CTSEN bit in the CFG register. This will be the value
        of the CTS input pin unless loopback mode is enabled.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTACTS
      bit_offset: 5
      bit_width: 1
      description: This bit is set when a change in the state is detected for the
        CTS flag above. This bit is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXDISSTAT
      bit_offset: 6
      bit_width: 1
      description: Transmitter Disabled Status flag. When 1, this bit indicates that
        the USART transmitter is fully idle after being disabled via the TXDIS bit
        in the CFG register (TXDIS = 1).
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXBRK
      bit_offset: 10
      bit_width: 1
      description: Received Break. This bit reflects the current state of the receiver
        break detection logic. It is set when the Un_RXD pin remains low for 16 bit
        times. Note that FRAMERRINT will also be set when this condition occurs because
        the stop bit(s) for the character would be missing. RXBRK is cleared when
        the Un_RXD pin goes high.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTARXBRK
      bit_offset: 11
      bit_width: 1
      description: This bit is set when a change in the state of receiver break detection
        occurs. Cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: START
      bit_offset: 12
      bit_width: 1
      description: This bit is set when a start is detected on the receiver input.
        Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode
        immediately when a start is detected. Cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: FRAMERRINT
      bit_offset: 13
      bit_width: 1
      description: Framing Error interrupt flag. This flag is set when a character
        is received with a missing stop bit at the expected location. This could be
        an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PARITYERRINT
      bit_offset: 14
      bit_width: 1
      description: Parity Error interrupt flag. This flag is set when a parity error
        is detected in a received character.
      read_allowed: false
      write_allowed: true
    - !Field
      name: RXNOISEINT
      bit_offset: 15
      bit_width: 1
      description: Received Noise interrupt flag. Three samples of received data are
        taken in order to determine the value of each received data bit, except in
        synchronous mode. This acts as a noise filter if one sample disagrees. This
        flag is set when a received data bit contains one disagreeing sample. This
        could indicate line noise, a baud rate or character format mismatch, or loss
        of synchronization during data reception.
      read_allowed: false
      write_allowed: true
    - !Field
      name: ABERR
      bit_offset: 16
      bit_width: 1
      description: Auto baud Error. An auto baud error can occur if the BRG counts
        to its limit before the end of the start bit that is being measured, essentially
        an auto baud time-out.
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTENSET
    addr: 0xc
    size_bits: 32
    description: Interrupt Enable read and Set register for USART (not FIFO) status.
      Contains individual interrupt enable bits for each potential USART interrupt.
      A complete value may be read from this register. Writing a 1 to any implemented
      bit position causes that bit to be set.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXIDLEEN
      bit_offset: 3
      bit_width: 1
      description: When 1, enables an interrupt when the transmitter becomes idle
        (TXIDLE = 1).
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELTACTSEN
      bit_offset: 5
      bit_width: 1
      description: When 1, enables an interrupt when there is a change in the state
        of the CTS input.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXDISEN
      bit_offset: 6
      bit_width: 1
      description: When 1, enables an interrupt when the transmitter is fully disabled
        as indicated by the TXDISINT flag in STAT. See description of the TXDISINT
        bit for details.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELTARXBRKEN
      bit_offset: 11
      bit_width: 1
      description: When 1, enables an interrupt when a change of state has occurred
        in the detection of a received break condition (break condition asserted or
        deasserted).
      read_allowed: true
      write_allowed: true
    - !Field
      name: STARTEN
      bit_offset: 12
      bit_width: 1
      description: When 1, enables an interrupt when a received start bit has been
        detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAMERREN
      bit_offset: 13
      bit_width: 1
      description: When 1, enables an interrupt when a framing error has been detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PARITYERREN
      bit_offset: 14
      bit_width: 1
      description: When 1, enables an interrupt when a parity error has been detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXNOISEEN
      bit_offset: 15
      bit_width: 1
      description: When 1, enables an interrupt when noise is detected. See description
        of the RXNOISEINT bit in Table 354.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ABERREN
      bit_offset: 16
      bit_width: 1
      description: When 1, enables an interrupt when an auto baud error occurs.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENCLR
    addr: 0x10
    size_bits: 32
    description: Interrupt Enable Clear register. Allows clearing any combination
      of bits in the INTENSET register. Writing a 1 to any implemented bit position
      causes the corresponding bit to be cleared.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TXIDLECLR
      bit_offset: 3
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: DELTACTSCLR
      bit_offset: 5
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXDISCLR
      bit_offset: 6
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: DELTARXBRKCLR
      bit_offset: 11
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: STARTCLR
      bit_offset: 12
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: FRAMERRCLR
      bit_offset: 13
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PARITYERRCLR
      bit_offset: 14
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: RXNOISECLR
      bit_offset: 15
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: ABERRCLR
      bit_offset: 16
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
  - !Register
    name: BRG
    addr: 0x20
    size_bits: 32
    description: Baud Rate Generator register. 16-bit integer baud rate divisor value.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BRGVAL
      bit_offset: 0
      bit_width: 16
      description: This value is used to divide the USART input clock to determine
        the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly
        by the USART function. 1 = FCLK is divided by 2 before use by the USART function.
        2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is
        divided by 65,536 before use by the USART function.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x24
    size_bits: 32
    description: Interrupt status register. Reflects interrupts that are currently
      enabled.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXIDLE
      bit_offset: 3
      bit_width: 1
      description: Transmitter Idle status.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTACTS
      bit_offset: 5
      bit_width: 1
      description: This bit is set when a change in the state of the CTS input is
        detected.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXDISINT
      bit_offset: 6
      bit_width: 1
      description: Transmitter Disabled Interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTARXBRK
      bit_offset: 11
      bit_width: 1
      description: This bit is set when a change in the state of receiver break detection
        occurs.
      read_allowed: true
      write_allowed: false
    - !Field
      name: START
      bit_offset: 12
      bit_width: 1
      description: This bit is set when a start is detected on the receiver input.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERRINT
      bit_offset: 13
      bit_width: 1
      description: Framing Error interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERRINT
      bit_offset: 14
      bit_width: 1
      description: Parity Error interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISEINT
      bit_offset: 15
      bit_width: 1
      description: Received Noise interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABERRINT
      bit_offset: 16
      bit_width: 1
      description: Auto baud Error Interrupt flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: OSR
    addr: 0x28
    size_bits: 32
    description: Oversample selection register for asynchronous communication.
    read_allowed: true
    write_allowed: true
    reset_value: 0xf
    fields:
    - !Field
      name: OSRVAL
      bit_offset: 0
      bit_width: 4
      description: Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function
        clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks
        are used to transmit and receive each data bit. 0xF= 16 function clocks are
        used to transmit and receive each data bit.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR
    addr: 0x2c
    size_bits: 32
    description: Address register for automatic address matching.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 8
      description: 8-bit address used with automatic address matching. Used when address
        detection is enabled (ADDRDET in CTL = 1) and automatic address matching is
        enabled (AUTOADDR in CFG = 1).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOCFG
    addr: 0xe00
    size_bits: 32
    description: FIFO configuration and enable register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLETX
      bit_offset: 0
      bit_width: 1
      description: Enable the transmit FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: ENABLERX
      bit_offset: 1
      bit_width: 1
      description: Enable the receive FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SIZE
      bit_offset: 4
      bit_width: 2
      description: FIFO size configuration. This is a read-only field. 0x0 = FIFO
        is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DMATX
      bit_offset: 12
      bit_width: 1
      description: DMA configuration for transmit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DMARX
      bit_offset: 13
      bit_width: 1
      description: DMA configuration for receive.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: EMPTYTX
      bit_offset: 16
      bit_width: 1
      description: Empty command for the transmit FIFO. When a 1 is written to this
        bit, the TX FIFO is emptied.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMPTYRX
      bit_offset: 17
      bit_width: 1
      description: Empty command for the receive FIFO. When a 1 is written to this
        bit, the RX FIFO is emptied.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOSTAT
    addr: 0xe04
    size_bits: 32
    description: FIFO status register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x30
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error. Will be set if a transmit FIFO error occurs. This
        could be an overflow caused by pushing data into a full FIFO, or by an underflow
        if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error. Will be set if a receive FIFO overflow occurs, caused
        by software or DMA not emptying the FIFO fast enough. Cleared by writing a
        1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PERINT
      bit_offset: 3
      bit_width: 1
      description: Peripheral interrupt. When 1, this indicates that the peripheral
        function has asserted an interrupt. The details can be found by reading the
        peripheral'-s STAT register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEMPTY
      bit_offset: 4
      bit_width: 1
      description: Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral
        may still be processing the last piece of data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXNOTFULL
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO not full. When 1, the transmit FIFO is not full,
        so more data can be written. When 0, the transmit FIFO is full and another
        write would cause it to overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOTEMPTY
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO not empty. When 1, the receive FIFO is not empty,
        so data can be read. When 0, the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 7
      bit_width: 1
      description: Receive FIFO full. When 1, the receive FIFO is full. Data needs
        to be read out to prevent the peripheral from causing an overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 5
      description: Transmit FIFO current level. A 0 means the TX FIFO is currently
        empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how
        much data is actually in the TX FIFO at the point where the read occurs. If
        the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 5
      description: Receive FIFO current level. A 0 means the RX FIFO is currently
        empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how
        much data is actually in the RX FIFO at the point where the read occurs. If
        the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOTRIG
    addr: 0xe08
    size_bits: 32
    description: FIFO trigger settings for interrupt and DMA request.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXLVLENA
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVLENA
      bit_offset: 1
      bit_width: 1
      description: Receive FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 4
      description: Transmit FIFO level trigger point. This field is used only when
        TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just
        enough to perform DMA, then return to the reduced power mode. See Hardware
        Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 =
        trigger when the TX FIFO level decreases to one entry. 15 = trigger when the
        TX FIFO level decreases to 15 entries (is no longer full).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 4
      description: Receive FIFO level trigger point. The RX FIFO level is checked
        when a new piece of data is received. This field is used only when RXLVLENA
        = 1. If enabled to do so, the FIFO level can wake up the device just enough
        to perform DMA, then return to the reduced power mode. See Hardware Wake-up
        control register. 0 = trigger when the RX FIFO has received one entry (is
        no longer empty). 1 = trigger when the RX FIFO has received two entries. 15
        = trigger when the RX FIFO has received 16 entries (has become full).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTENSET
    addr: 0xe10
    size_bits: 32
    description: FIFO interrupt enable set (enable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Determines whether an interrupt occurs when a transmit error occurs,
        based on the TXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Determines whether an interrupt occurs when a receive error occurs,
        based on the RXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Determines whether an interrupt occurs when a the transmit FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Determines whether an interrupt occurs when a the receive FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: FIFOINTENCLR
    addr: 0xe14
    size_bits: 32
    description: FIFO interrupt enable clear (disable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTSTAT
    addr: 0xe18
    size_bits: 32
    description: FIFO interrupt status register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Transmit FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERINT
      bit_offset: 4
      bit_width: 1
      description: Peripheral interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOWR
    addr: 0xe20
    size_bits: 32
    description: FIFO write data.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 9
      description: Transmit data to the FIFO.
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFORD
    addr: 0xe30
    size_bits: 32
    description: FIFO read data.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 9
      description: Received data from the FIFO. The number of bits used depends on
        the DATALEN and PARITYSEL settings.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERR
      bit_offset: 13
      bit_width: 1
      description: Framing Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO, and indicates that the character
        was received with a missing stop bit at the expected location. This could
        be an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERR
      bit_offset: 14
      bit_width: 1
      description: Parity Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO. This bit will be set when a parity
        error is detected in a received character.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISE
      bit_offset: 15
      bit_width: 1
      description: Received Noise flag. See description of the RxNoiseInt bit in Table
        354.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFORDNOPOP
    addr: 0xe40
    size_bits: 32
    description: FIFO data read with no FIFO pop.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 9
      description: Received data from the FIFO. The number of bits used depends on
        the DATALEN and PARITYSEL settings.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERR
      bit_offset: 13
      bit_width: 1
      description: Framing Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO, and indicates that the character
        was received with a missing stop bit at the expected location. This could
        be an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERR
      bit_offset: 14
      bit_width: 1
      description: Parity Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO. This bit will be set when a parity
        error is detected in a received character.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISE
      bit_offset: 15
      bit_width: 1
      description: Received Noise flag. See description of the RxNoiseInt bit in Table
        354.
      read_allowed: true
      write_allowed: false
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: USART module Identification. This value appears in the shared Flexcomm
      peripheral ID register when USART is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0100000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
- !Module
  name: USART1
  description: usart
  base_addr: 0x40086000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x0
    size_bits: 32
    description: USART Configuration register. Basic USART configuration settings
      that typically are not changed during operation.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: USART Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DATALEN
      bit_offset: 2
      bit_width: 2
      description: Selects the data size for the USART.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _7_BIT
        1: _8_BIT
        2: _9_BIT
    - !Field
      name: PARITYSEL
      bit_offset: 4
      bit_width: 2
      description: Selects what type of parity is used by the USART.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_PARITY
        2: EVEN_PARITY
        3: ODD_PARITY
    - !Field
      name: STOPLEN
      bit_offset: 6
      bit_width: 1
      description: Number of stop bits appended to transmitted data. Only a single
        stop bit is required for received data.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _1_BIT
        1: _2_BITS
    - !Field
      name: MODE32K
      bit_offset: 7
      bit_width: 1
      description: Selects standard or 32 kHz clocking mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: LINMODE
      bit_offset: 8
      bit_width: 1
      description: LIN break mode enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: CTSEN
      bit_offset: 9
      bit_width: 1
      description: CTS Enable. Determines whether CTS is used for flow control. CTS
        can be from the input pin, or from the USART'-s own RTS if loopback mode is
        enabled.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SYNCEN
      bit_offset: 11
      bit_width: 1
      description: Selects synchronous or asynchronous operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ASYNCHRONOUS_MODE
        1: SYNCHRONOUS_MODE
    - !Field
      name: CLKPOL
      bit_offset: 12
      bit_width: 1
      description: Selects the clock polarity and sampling edge of received data in
        synchronous mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FALLING_EDGE
        1: RISING_EDGE
    - !Field
      name: SYNCMST
      bit_offset: 14
      bit_width: 1
      description: Synchronous mode Master select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE
        1: MASTER
    - !Field
      name: LOOP
      bit_offset: 15
      bit_width: 1
      description: Selects data loopback mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: LOOPBACK
    - !Field
      name: OETA
      bit_offset: 18
      bit_width: 1
      description: Output Enable Turnaround time enable for RS-485 operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: AUTOADDR
      bit_offset: 19
      bit_width: 1
      description: Automatic Address matching enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: OESEL
      bit_offset: 20
      bit_width: 1
      description: Output Enable Select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: RS_485
    - !Field
      name: OEPOL
      bit_offset: 21
      bit_width: 1
      description: Output Enable Polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: RXPOL
      bit_offset: 22
      bit_width: 1
      description: Receive data polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: INVERTED
    - !Field
      name: TXPOL
      bit_offset: 23
      bit_width: 1
      description: Transmit data polarity.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: INVERTED
  - !Register
    name: CTL
    addr: 0x4
    size_bits: 32
    description: USART Control register. USART control settings that are more likely
      to change during operation.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXBRKEN
      bit_offset: 1
      bit_width: 1
      description: Break Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: CONTINOUS
    - !Field
      name: ADDRDET
      bit_offset: 2
      bit_width: 1
      description: Enable address detect mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXDIS
      bit_offset: 6
      bit_width: 1
      description: Transmit Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: CC
      bit_offset: 8
      bit_width: 1
      description: Continuous Clock generation. By default, SCLK is only output while
        data is being transmitted in synchronous mode.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CLOCK_ON_CHARACTER
        1: CONTINOUS_CLOCK
    - !Field
      name: CLRCCONRX
      bit_offset: 9
      bit_width: 1
      description: Clear Continuous Clock.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: AUTO_CLEAR
    - !Field
      name: AUTOBAUD
      bit_offset: 16
      bit_width: 1
      description: Autobaud enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: STAT
    addr: 0x8
    size_bits: 32
    description: USART Status register. The complete status value can be read here.
      Writing ones clears some bits in the register. Some bits can be cleared by writing
      a 1 to them.
    read_allowed: true
    write_allowed: true
    reset_value: 0xa
    fields:
    - !Field
      name: RXIDLE
      bit_offset: 1
      bit_width: 1
      description: Receiver Idle. When 0, indicates that the receiver is currently
        in the process of receiving data. When 1, indicates that the receiver is not
        currently in the process of receiving data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXIDLE
      bit_offset: 3
      bit_width: 1
      description: Transmitter Idle. When 0, indicates that the transmitter is currently
        in the process of sending data.When 1, indicate that the transmitter is not
        currently in the process of sending data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: CTS
      bit_offset: 4
      bit_width: 1
      description: This bit reflects the current state of the CTS signal, regardless
        of the setting of the CTSEN bit in the CFG register. This will be the value
        of the CTS input pin unless loopback mode is enabled.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTACTS
      bit_offset: 5
      bit_width: 1
      description: This bit is set when a change in the state is detected for the
        CTS flag above. This bit is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXDISSTAT
      bit_offset: 6
      bit_width: 1
      description: Transmitter Disabled Status flag. When 1, this bit indicates that
        the USART transmitter is fully idle after being disabled via the TXDIS bit
        in the CFG register (TXDIS = 1).
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXBRK
      bit_offset: 10
      bit_width: 1
      description: Received Break. This bit reflects the current state of the receiver
        break detection logic. It is set when the Un_RXD pin remains low for 16 bit
        times. Note that FRAMERRINT will also be set when this condition occurs because
        the stop bit(s) for the character would be missing. RXBRK is cleared when
        the Un_RXD pin goes high.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTARXBRK
      bit_offset: 11
      bit_width: 1
      description: This bit is set when a change in the state of receiver break detection
        occurs. Cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: START
      bit_offset: 12
      bit_width: 1
      description: This bit is set when a start is detected on the receiver input.
        Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode
        immediately when a start is detected. Cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: FRAMERRINT
      bit_offset: 13
      bit_width: 1
      description: Framing Error interrupt flag. This flag is set when a character
        is received with a missing stop bit at the expected location. This could be
        an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PARITYERRINT
      bit_offset: 14
      bit_width: 1
      description: Parity Error interrupt flag. This flag is set when a parity error
        is detected in a received character.
      read_allowed: false
      write_allowed: true
    - !Field
      name: RXNOISEINT
      bit_offset: 15
      bit_width: 1
      description: Received Noise interrupt flag. Three samples of received data are
        taken in order to determine the value of each received data bit, except in
        synchronous mode. This acts as a noise filter if one sample disagrees. This
        flag is set when a received data bit contains one disagreeing sample. This
        could indicate line noise, a baud rate or character format mismatch, or loss
        of synchronization during data reception.
      read_allowed: false
      write_allowed: true
    - !Field
      name: ABERR
      bit_offset: 16
      bit_width: 1
      description: Auto baud Error. An auto baud error can occur if the BRG counts
        to its limit before the end of the start bit that is being measured, essentially
        an auto baud time-out.
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTENSET
    addr: 0xc
    size_bits: 32
    description: Interrupt Enable read and Set register for USART (not FIFO) status.
      Contains individual interrupt enable bits for each potential USART interrupt.
      A complete value may be read from this register. Writing a 1 to any implemented
      bit position causes that bit to be set.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXIDLEEN
      bit_offset: 3
      bit_width: 1
      description: When 1, enables an interrupt when the transmitter becomes idle
        (TXIDLE = 1).
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELTACTSEN
      bit_offset: 5
      bit_width: 1
      description: When 1, enables an interrupt when there is a change in the state
        of the CTS input.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXDISEN
      bit_offset: 6
      bit_width: 1
      description: When 1, enables an interrupt when the transmitter is fully disabled
        as indicated by the TXDISINT flag in STAT. See description of the TXDISINT
        bit for details.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DELTARXBRKEN
      bit_offset: 11
      bit_width: 1
      description: When 1, enables an interrupt when a change of state has occurred
        in the detection of a received break condition (break condition asserted or
        deasserted).
      read_allowed: true
      write_allowed: true
    - !Field
      name: STARTEN
      bit_offset: 12
      bit_width: 1
      description: When 1, enables an interrupt when a received start bit has been
        detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAMERREN
      bit_offset: 13
      bit_width: 1
      description: When 1, enables an interrupt when a framing error has been detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PARITYERREN
      bit_offset: 14
      bit_width: 1
      description: When 1, enables an interrupt when a parity error has been detected.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXNOISEEN
      bit_offset: 15
      bit_width: 1
      description: When 1, enables an interrupt when noise is detected. See description
        of the RXNOISEINT bit in Table 354.
      read_allowed: true
      write_allowed: true
    - !Field
      name: ABERREN
      bit_offset: 16
      bit_width: 1
      description: When 1, enables an interrupt when an auto baud error occurs.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENCLR
    addr: 0x10
    size_bits: 32
    description: Interrupt Enable Clear register. Allows clearing any combination
      of bits in the INTENSET register. Writing a 1 to any implemented bit position
      causes the corresponding bit to be cleared.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: TXIDLECLR
      bit_offset: 3
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: DELTACTSCLR
      bit_offset: 5
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXDISCLR
      bit_offset: 6
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: DELTARXBRKCLR
      bit_offset: 11
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: STARTCLR
      bit_offset: 12
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: FRAMERRCLR
      bit_offset: 13
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: PARITYERRCLR
      bit_offset: 14
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: RXNOISECLR
      bit_offset: 15
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: ABERRCLR
      bit_offset: 16
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
  - !Register
    name: BRG
    addr: 0x20
    size_bits: 32
    description: Baud Rate Generator register. 16-bit integer baud rate divisor value.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BRGVAL
      bit_offset: 0
      bit_width: 16
      description: This value is used to divide the USART input clock to determine
        the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly
        by the USART function. 1 = FCLK is divided by 2 before use by the USART function.
        2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is
        divided by 65,536 before use by the USART function.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x24
    size_bits: 32
    description: Interrupt status register. Reflects interrupts that are currently
      enabled.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXIDLE
      bit_offset: 3
      bit_width: 1
      description: Transmitter Idle status.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTACTS
      bit_offset: 5
      bit_width: 1
      description: This bit is set when a change in the state of the CTS input is
        detected.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXDISINT
      bit_offset: 6
      bit_width: 1
      description: Transmitter Disabled Interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DELTARXBRK
      bit_offset: 11
      bit_width: 1
      description: This bit is set when a change in the state of receiver break detection
        occurs.
      read_allowed: true
      write_allowed: false
    - !Field
      name: START
      bit_offset: 12
      bit_width: 1
      description: This bit is set when a start is detected on the receiver input.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERRINT
      bit_offset: 13
      bit_width: 1
      description: Framing Error interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERRINT
      bit_offset: 14
      bit_width: 1
      description: Parity Error interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISEINT
      bit_offset: 15
      bit_width: 1
      description: Received Noise interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ABERRINT
      bit_offset: 16
      bit_width: 1
      description: Auto baud Error Interrupt flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: OSR
    addr: 0x28
    size_bits: 32
    description: Oversample selection register for asynchronous communication.
    read_allowed: true
    write_allowed: true
    reset_value: 0xf
    fields:
    - !Field
      name: OSRVAL
      bit_offset: 0
      bit_width: 4
      description: Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function
        clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks
        are used to transmit and receive each data bit. 0xF= 16 function clocks are
        used to transmit and receive each data bit.
      read_allowed: true
      write_allowed: true
  - !Register
    name: ADDR
    addr: 0x2c
    size_bits: 32
    description: Address register for automatic address matching.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ADDRESS
      bit_offset: 0
      bit_width: 8
      description: 8-bit address used with automatic address matching. Used when address
        detection is enabled (ADDRDET in CTL = 1) and automatic address matching is
        enabled (AUTOADDR in CFG = 1).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOCFG
    addr: 0xe00
    size_bits: 32
    description: FIFO configuration and enable register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLETX
      bit_offset: 0
      bit_width: 1
      description: Enable the transmit FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: ENABLERX
      bit_offset: 1
      bit_width: 1
      description: Enable the receive FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SIZE
      bit_offset: 4
      bit_width: 2
      description: FIFO size configuration. This is a read-only field. 0x0 = FIFO
        is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DMATX
      bit_offset: 12
      bit_width: 1
      description: DMA configuration for transmit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DMARX
      bit_offset: 13
      bit_width: 1
      description: DMA configuration for receive.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: EMPTYTX
      bit_offset: 16
      bit_width: 1
      description: Empty command for the transmit FIFO. When a 1 is written to this
        bit, the TX FIFO is emptied.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EMPTYRX
      bit_offset: 17
      bit_width: 1
      description: Empty command for the receive FIFO. When a 1 is written to this
        bit, the RX FIFO is emptied.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOSTAT
    addr: 0xe04
    size_bits: 32
    description: FIFO status register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x30
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error. Will be set if a transmit FIFO error occurs. This
        could be an overflow caused by pushing data into a full FIFO, or by an underflow
        if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error. Will be set if a receive FIFO overflow occurs, caused
        by software or DMA not emptying the FIFO fast enough. Cleared by writing a
        1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PERINT
      bit_offset: 3
      bit_width: 1
      description: Peripheral interrupt. When 1, this indicates that the peripheral
        function has asserted an interrupt. The details can be found by reading the
        peripheral'-s STAT register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEMPTY
      bit_offset: 4
      bit_width: 1
      description: Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral
        may still be processing the last piece of data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXNOTFULL
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO not full. When 1, the transmit FIFO is not full,
        so more data can be written. When 0, the transmit FIFO is full and another
        write would cause it to overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOTEMPTY
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO not empty. When 1, the receive FIFO is not empty,
        so data can be read. When 0, the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 7
      bit_width: 1
      description: Receive FIFO full. When 1, the receive FIFO is full. Data needs
        to be read out to prevent the peripheral from causing an overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 5
      description: Transmit FIFO current level. A 0 means the TX FIFO is currently
        empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how
        much data is actually in the TX FIFO at the point where the read occurs. If
        the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 5
      description: Receive FIFO current level. A 0 means the RX FIFO is currently
        empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how
        much data is actually in the RX FIFO at the point where the read occurs. If
        the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOTRIG
    addr: 0xe08
    size_bits: 32
    description: FIFO trigger settings for interrupt and DMA request.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXLVLENA
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVLENA
      bit_offset: 1
      bit_width: 1
      description: Receive FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 4
      description: Transmit FIFO level trigger point. This field is used only when
        TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just
        enough to perform DMA, then return to the reduced power mode. See Hardware
        Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 =
        trigger when the TX FIFO level decreases to one entry. 15 = trigger when the
        TX FIFO level decreases to 15 entries (is no longer full).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 4
      description: Receive FIFO level trigger point. The RX FIFO level is checked
        when a new piece of data is received. This field is used only when RXLVLENA
        = 1. If enabled to do so, the FIFO level can wake up the device just enough
        to perform DMA, then return to the reduced power mode. See Hardware Wake-up
        control register. 0 = trigger when the RX FIFO has received one entry (is
        no longer empty). 1 = trigger when the RX FIFO has received two entries. 15
        = trigger when the RX FIFO has received 16 entries (has become full).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTENSET
    addr: 0xe10
    size_bits: 32
    description: FIFO interrupt enable set (enable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Determines whether an interrupt occurs when a transmit error occurs,
        based on the TXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Determines whether an interrupt occurs when a receive error occurs,
        based on the RXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Determines whether an interrupt occurs when a the transmit FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Determines whether an interrupt occurs when a the receive FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: FIFOINTENCLR
    addr: 0xe14
    size_bits: 32
    description: FIFO interrupt enable clear (disable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTSTAT
    addr: 0xe18
    size_bits: 32
    description: FIFO interrupt status register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Transmit FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERINT
      bit_offset: 4
      bit_width: 1
      description: Peripheral interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOWR
    addr: 0xe20
    size_bits: 32
    description: FIFO write data.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 9
      description: Transmit data to the FIFO.
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFORD
    addr: 0xe30
    size_bits: 32
    description: FIFO read data.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 9
      description: Received data from the FIFO. The number of bits used depends on
        the DATALEN and PARITYSEL settings.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERR
      bit_offset: 13
      bit_width: 1
      description: Framing Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO, and indicates that the character
        was received with a missing stop bit at the expected location. This could
        be an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERR
      bit_offset: 14
      bit_width: 1
      description: Parity Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO. This bit will be set when a parity
        error is detected in a received character.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISE
      bit_offset: 15
      bit_width: 1
      description: Received Noise flag. See description of the RxNoiseInt bit in Table
        354.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFORDNOPOP
    addr: 0xe40
    size_bits: 32
    description: FIFO data read with no FIFO pop.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 9
      description: Received data from the FIFO. The number of bits used depends on
        the DATALEN and PARITYSEL settings.
      read_allowed: true
      write_allowed: false
    - !Field
      name: FRAMERR
      bit_offset: 13
      bit_width: 1
      description: Framing Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO, and indicates that the character
        was received with a missing stop bit at the expected location. This could
        be an indication of a baud rate or configuration mismatch with the transmitting
        source.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PARITYERR
      bit_offset: 14
      bit_width: 1
      description: Parity Error status flag. This bit reflects the status for the
        data it is read along with from the FIFO. This bit will be set when a parity
        error is detected in a received character.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOISE
      bit_offset: 15
      bit_width: 1
      description: Received Noise flag. See description of the RxNoiseInt bit in Table
        354.
      read_allowed: true
      write_allowed: false
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: USART module Identification. This value appears in the shared Flexcomm
      peripheral ID register when USART is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0100000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
- !Module
  name: USB0
  description: usb
  base_addr: 0x40084000
  size: 0x38
  registers:
  - !Register
    name: DEVCMDSTAT
    addr: 0x0
    size_bits: 32
    description: USB Device Command/Status register
    read_allowed: true
    write_allowed: true
    reset_value: 0x800
    fields:
    - !Field
      name: DEV_ADDR
      bit_offset: 0
      bit_width: 7
      description: USB device address. After bus reset, the address is reset to 0x00.
        If the enable bit is set, the device will respond on packets for function
        address DEV_ADDR. When receiving a SetAddress Control Request from the USB
        host, software must program the new address before completing the status phase
        of the SetAddress Control Request.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_EN
      bit_offset: 7
      bit_width: 1
      description: USB device enable. If this bit is set, the HW will start responding
        on packets for function address DEV_ADDR.
      read_allowed: true
      write_allowed: true
    - !Field
      name: SETUP
      bit_offset: 8
      bit_width: 1
      description: SETUP token received. If a SETUP token is received and acknowledged
        by the device, this bit is set. As long as this bit is set all received IN
        and OUT tokens will be NAKed by HW. SW must clear this bit by writing a one.
        If this bit is zero, HW will handle the tokens to the CTRL EP0 as indicated
        by the CTRL EP0 IN and OUT data information programmed by SW.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FORCE_NEEDCLK
      bit_offset: 9
      bit_width: 1
      description: 'Forces the NEEDCLK output to always be on:'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: ALWAYS_ON
    - !Field
      name: LPM_SUP
      bit_offset: 11
      bit_width: 1
      description: 'LPM Supported:'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: 'NO'
        1: 'YES'
    - !Field
      name: INTONNAK_AO
      bit_offset: 12
      bit_width: 1
      description: Interrupt on NAK for interrupt and bulk OUT EP
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: INTONNAK_AI
      bit_offset: 13
      bit_width: 1
      description: Interrupt on NAK for interrupt and bulk IN EP
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: INTONNAK_CO
      bit_offset: 14
      bit_width: 1
      description: Interrupt on NAK for control OUT EP
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: INTONNAK_CI
      bit_offset: 15
      bit_width: 1
      description: Interrupt on NAK for control IN EP
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: DCON
      bit_offset: 16
      bit_width: 1
      description: Device status - connect. The connect bit must be set by SW to indicate
        that the device must signal a connect. The pull-up resistor on USB_DP will
        be enabled when this bit is set and the VBUSDEBOUNCED bit is one.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSUS
      bit_offset: 17
      bit_width: 1
      description: Device status - suspend. The suspend bit indicates the current
        suspend state. It is set to 1 when the device hasn'-t seen any activity on
        its upstream port for more than 3 milliseconds. It is reset to 0 on any activity.
        When the device is suspended (Suspend bit DSUS = 1) and the software writes
        a 0 to it, the device will generate a remote wake-up. This will only happen
        when the device is connected (Connect bit = 1). When the device is not connected
        or not suspended, a writing a 0 has no effect. Writing a 1 never has an effect.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LPM_SUS
      bit_offset: 19
      bit_width: 1
      description: Device status - LPM Suspend. This bit represents the current LPM
        suspend state. It is set to 1 by HW when the device has acknowledged the LPM
        request from the USB host and the Token Retry Time of 10 ms has elapsed. When
        the device is in the LPM suspended state (LPM suspend bit = 1) and the software
        writes a zero to this bit, the device will generate a remote walk-up. Software
        can only write a zero to this bit when the LPM_REWP bit is set to 1. HW resets
        this bit when it receives a host initiated resume. HW only updates the LPM_SUS
        bit when the LPM_SUPP bit is equal to one.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LPM_REWP
      bit_offset: 20
      bit_width: 1
      description: LPM Remote Wake-up Enabled by USB host. HW sets this bit to one
        when the bRemoteWake bit in the LPM extended token is set to 1. HW will reset
        this bit to 0 when it receives the host initiated LPM resume, when a remote
        wake-up is sent by the device or when a USB bus reset is received. Software
        can use this bit to check if the remote wake-up feature is enabled by the
        host for the LPM transaction.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DCON_C
      bit_offset: 24
      bit_width: 1
      description: Device status - connect change. The Connect Change bit is set when
        the device'-s pull-up resistor is disconnected because VBus disappeared. The
        bit is reset by writing a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DSUS_C
      bit_offset: 25
      bit_width: 1
      description: 'Device status - suspend change. The suspend change bit is set
        to 1 when the suspend bit toggles. The suspend bit can toggle because: - The
        device goes in the suspended state - The device is disconnected - The device
        receives resume signaling on its upstream port. The bit is reset by writing
        a one to it.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRES_C
      bit_offset: 26
      bit_width: 1
      description: Device status - reset change. This bit is set when the device received
        a bus reset. On a bus reset the device will automatically go to the default
        state (unconfigured and responding to address 0). The bit is reset by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: VBUSDEBOUNCED
      bit_offset: 28
      bit_width: 1
      description: This bit indicates if Vbus is detected or not. The bit raises immediately
        when Vbus becomes high. It drops to zero if Vbus is low for at least 3 ms.
        If this bit is high and the DCon bit is set, the HW will enable the pull-up
        resistor to signal a connect.
      read_allowed: true
      write_allowed: false
  - !Register
    name: INFO
    addr: 0x4
    size_bits: 32
    description: USB Info register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FRAME_NR
      bit_offset: 0
      bit_width: 11
      description: Frame number. This contains the frame number of the last successfully
        received SOF. In case no SOF was received by the device at the beginning of
        a frame, the frame number returned is that of the last successfully received
        SOF. In case the SOF frame number contained a CRC error, the frame number
        returned will be the corrupted frame number as received by the device.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ERR_CODE
      bit_offset: 11
      bit_width: 4
      description: 'The error code which last occurred:'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_ERROR
        1: PID_ENCODING_ERROR
        2: PID_UNKNOWN
        3: PACKET_UNEXPECTED
        4: TOKEN_CRC_ERROR
        5: DATA_CRC_ERROR
        6: TIMEOUT
        7: BABBLE
        8: TRUNCATED_EOP
        9: SENT_RECEIVED_NAK
        10: SENT_STALL
        11: OVERRUN
        12: SENT_EMPTY_PACKET
        13: BITSTUFF_ERROR
        14: SYNC_ERROR
        15: WRONG_DATA_TOGGLE
  - !Register
    name: EPLISTSTART
    addr: 0x8
    size_bits: 32
    description: USB EP Command/Status List start address
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_LIST
      bit_offset: 8
      bit_width: 24
      description: Start address of the USB EP Command/Status List.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DATABUFSTART
    addr: 0xc
    size_bits: 32
    description: USB Data buffer start address
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DA_BUF
      bit_offset: 22
      bit_width: 10
      description: Start address of the buffer pointer page where all endpoint data
        buffers are located.
      read_allowed: true
      write_allowed: true
  - !Register
    name: LPM
    addr: 0x10
    size_bits: 32
    description: USB Link Power Management register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: HIRD_HW
      bit_offset: 0
      bit_width: 4
      description: Host Initiated Resume Duration - HW. This is the HIRD value from
        the last received LPM token
      read_allowed: true
      write_allowed: false
    - !Field
      name: HIRD_SW
      bit_offset: 4
      bit_width: 4
      description: Host Initiated Resume Duration - SW. This is the time duration
        required by the USB device system to come out of LPM initiated suspend after
        receiving the host initiated LPM resume.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DATA_PENDING
      bit_offset: 8
      bit_width: 1
      description: As long as this bit is set to one and LPM supported bit is set
        to one, HW will return a NYET handshake on every LPM token it receives. If
        LPM supported bit is set to one and this bit is zero, HW will return an ACK
        handshake on every LPM token it receives. If SW has still data pending and
        LPM is supported, it must set this bit to 1.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EPSKIP
    addr: 0x14
    size_bits: 32
    description: USB Endpoint skip
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SKIP
      bit_offset: 0
      bit_width: 30
      description: 'Endpoint skip: Writing 1 to one of these bits, will indicate to
        HW that it must deactivate the buffer assigned to this endpoint and return
        control back to software. When HW has deactivated the endpoint, it will clear
        this bit, but it will not modify the EPINUSE bit. An interrupt will be generated
        when the Active bit goes from 1 to 0. Note: In case of double-buffering, HW
        will only clear the Active bit of the buffer indicated by the EPINUSE bit.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EPINUSE
    addr: 0x18
    size_bits: 32
    description: USB Endpoint Buffer in use
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUF
      bit_offset: 2
      bit_width: 8
      description: 'Buffer in use: This register has one bit per physical endpoint.
        0: HW is accessing buffer 0. 1: HW is accessing buffer 1.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: EPBUFCFG
    addr: 0x1c
    size_bits: 32
    description: USB Endpoint Buffer Configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: BUF_SB
      bit_offset: 2
      bit_width: 8
      description: 'Buffer usage: This register has one bit per physical endpoint.
        0: Single-buffer. 1: Double-buffer. If the bit is set to single-buffer (0),
        it will not toggle the corresponding EPINUSE bit when it clears the active
        bit. If the bit is set to double-buffer (1), HW will toggle the EPINUSE bit
        when it clears the Active bit for the buffer.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x20
    size_bits: 32
    description: USB interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP0OUT
      bit_offset: 0
      bit_width: 1
      description: Interrupt status register bit for the Control EP0 OUT direction.
        This bit will be set if NBytes transitions to zero or the skip bit is set
        by software or a SETUP packet is successfully received for the control EP0.
        If the IntOnNAK_CO is set, this bit will also be set when a NAK is transmitted
        for the Control EP0 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP0IN
      bit_offset: 1
      bit_width: 1
      description: Interrupt status register bit for the Control EP0 IN direction.
        This bit will be set if NBytes transitions to zero or the skip bit is set
        by software. If the IntOnNAK_CI is set, this bit will also be set when a NAK
        is transmitted for the Control EP0 IN direction. Software can clear this bit
        by writing a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1OUT
      bit_offset: 2
      bit_width: 1
      description: Interrupt status register bit for the EP1 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP1 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP1IN
      bit_offset: 3
      bit_width: 1
      description: Interrupt status register bit for the EP1 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP1 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2OUT
      bit_offset: 4
      bit_width: 1
      description: Interrupt status register bit for the EP2 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP2 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP2IN
      bit_offset: 5
      bit_width: 1
      description: Interrupt status register bit for the EP2 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP2 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3OUT
      bit_offset: 6
      bit_width: 1
      description: Interrupt status register bit for the EP3 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP3 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP3IN
      bit_offset: 7
      bit_width: 1
      description: Interrupt status register bit for the EP3 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP3 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4OUT
      bit_offset: 8
      bit_width: 1
      description: Interrupt status register bit for the EP4 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP4 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP4IN
      bit_offset: 9
      bit_width: 1
      description: Interrupt status register bit for the EP4 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP4 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5OUT
      bit_offset: 10
      bit_width: 1
      description: Interrupt status register bit for the EP5 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP5 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP5IN
      bit_offset: 11
      bit_width: 1
      description: Interrupt status register bit for the EP5 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP5 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6OUT
      bit_offset: 12
      bit_width: 1
      description: Interrupt status register bit for the EP6 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP6 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP6IN
      bit_offset: 13
      bit_width: 1
      description: Interrupt status register bit for the EP6 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP6 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7OUT
      bit_offset: 14
      bit_width: 1
      description: Interrupt status register bit for the EP7 OUT direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AO is set, this bit will also be set when a NAK
        is transmitted for the EP7 OUT direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: EP7IN
      bit_offset: 15
      bit_width: 1
      description: Interrupt status register bit for the EP7 IN direction. This bit
        will be set if the corresponding Active bit is cleared by HW. This is done
        in case the programmed NBytes transitions to zero or the skip bit is set by
        software. If the IntOnNAK_AI is set, this bit will also be set when a NAK
        is transmitted for the EP7 IN direction. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAME_INT
      bit_offset: 30
      bit_width: 1
      description: Frame interrupt. This bit is set to one every millisecond when
        the VbusDebounced bit and the DCON bit are set. This bit can be used by software
        when handling isochronous endpoints. Software can clear this bit by writing
        a one to it.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_INT
      bit_offset: 31
      bit_width: 1
      description: Device status interrupt. This bit is set by HW when one of the
        bits in the Device Status Change register are set. Software can clear this
        bit by writing a one to it.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTEN
    addr: 0x24
    size_bits: 32
    description: USB interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_INT_EN
      bit_offset: 0
      bit_width: 16
      description: If this bit is set and the corresponding USB interrupt status bit
        is set, a HW interrupt is generated on the interrupt line indicated by the
        corresponding USB interrupt routing bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAME_INT_EN
      bit_offset: 30
      bit_width: 1
      description: If this bit is set and the corresponding USB interrupt status bit
        is set, a HW interrupt is generated on the interrupt line indicated by the
        corresponding USB interrupt routing bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_INT_EN
      bit_offset: 31
      bit_width: 1
      description: If this bit is set and the corresponding USB interrupt status bit
        is set, a HW interrupt is generated on the interrupt line indicated by the
        corresponding USB interrupt routing bit.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSETSTAT
    addr: 0x28
    size_bits: 32
    description: USB set interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: EP_SET_INT
      bit_offset: 0
      bit_width: 16
      description: If software writes a one to one of these bits, the corresponding
        USB interrupt status bit is set. When this register is read, the same value
        as the USB interrupt status register is returned.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAME_SET_INT
      bit_offset: 30
      bit_width: 1
      description: If software writes a one to one of these bits, the corresponding
        USB interrupt status bit is set. When this register is read, the same value
        as the USB interrupt status register is returned.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DEV_SET_INT
      bit_offset: 31
      bit_width: 1
      description: If software writes a one to one of these bits, the corresponding
        USB interrupt status bit is set. When this register is read, the same value
        as the USB interrupt status register is returned.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EPTOGGLE
    addr: 0x34
    size_bits: 32
    description: USB Endpoint toggle register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TOGGLE
      bit_offset: 0
      bit_width: 16
      description: 'Endpoint data toggle: This field indicates the current value of
        the data toggle for the corresponding endpoint.'
      read_allowed: true
      write_allowed: false
- !Module
  name: SCT0
  description: LPC5411x SCTimer/PWM (SCT)
  base_addr: 0x40085000
  size: 0x800
  registers:
  - !Register
    name: CONFIG
    addr: 0x0
    size_bits: 32
    description: SCT configuration register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1e00
    fields:
    - !Field
      name: UNIFY
      bit_offset: 0
      bit_width: 1
      description: SCT operation
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DUAL_COUNTER
        1: UNIFIED_COUNTER
    - !Field
      name: CLKMODE
      bit_offset: 1
      bit_width: 2
      description: SCT clock mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SYSTEM_CLOCK_MODE
        1: SAMPLED_SYSTEM_CLOCK_MODE
        2: SCT_INPUT_CLOCK_MODE
        3: ASYNCHRONOUS_MODE
    - !Field
      name: CKSEL
      bit_offset: 3
      bit_width: 4
      description: SCT clock select. The specific functionality of the designated
        input/edge is dependent on the CLKMODE bit selection in this register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT_0_RISING_EDGES
        1: INPUT_0_FALLING_EDGE
        2: INPUT_1_RISING_EDGES
        3: INPUT_1_FALLING_EDGE
        4: INPUT_2_RISING_EDGES
        5: INPUT_2_FALLING_EDGE
        6: INPUT_3_RISING_EDGES
        7: INPUT_3_FALLING_EDGE
    - !Field
      name: NORELAOD_L
      bit_offset: 7
      bit_width: 1
      description: A 1 in this bit prevents the lower match registers from being reloaded
        from their respective reload registers. Setting this bit eliminates the need
        to write to the reload registers MATCHREL if the match values are fixed. Software
        can write to set or clear this bit at any time. This bit applies to both the
        higher and lower registers when the UNIFY bit is set.
      read_allowed: true
      write_allowed: true
    - !Field
      name: NORELOAD_H
      bit_offset: 8
      bit_width: 1
      description: A 1 in this bit prevents the higher match registers from being
        reloaded from their respective reload registers. Setting this bit eliminates
        the need to write to the reload registers MATCHREL if the match values are
        fixed. Software can write to set or clear this bit at any time. This bit is
        not used when the UNIFY bit is set.
      read_allowed: true
      write_allowed: true
    - !Field
      name: INSYNC
      bit_offset: 9
      bit_width: 4
      description: 'Synchronization for input N (bit 9 = input 0, bit 10 = input 1,,
        bit 12 = input 3); all other bits are reserved. A 1 in one of these bits subjects
        the corresponding input to synchronization to the SCT clock, before it is
        used to create an event. If an input is known to already be synchronous to
        the SCT clock, this bit may be set to 0 for faster input response. (Note:
        The SCT clock is the system clock for CKMODEs 0-2. It is the selected, asynchronous
        SCT input clock for CKMODE3). Note that the INSYNC field only affects inputs
        used for event generation. It does not apply to the clock input specified
        in the CKSEL field.'
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOLIMIT_L
      bit_offset: 17
      bit_width: 1
      description: A one in this bit causes a match on match register 0 to be treated
        as a de-facto LIMIT condition without the need to define an associated event.
        As with any LIMIT event, this automatic limit causes the counter to be cleared
        to zero in unidirectional mode or to change the direction of count in bi-directional
        mode. Software can write to set or clear this bit at any time. This bit applies
        to both the higher and lower registers when the UNIFY bit is set.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTOLIMIT_H
      bit_offset: 18
      bit_width: 1
      description: A one in this bit will cause a match on match register 0 to be
        treated as a de-facto LIMIT condition without the need to define an associated
        event. As with any LIMIT event, this automatic limit causes the counter to
        be cleared to zero in unidirectional mode or to change the direction of count
        in bi-directional mode. Software can write to set or clear this bit at any
        time. This bit is not used when the UNIFY bit is set.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CTRL
    addr: 0x4
    size_bits: 32
    description: SCT control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x40004
    fields:
    - !Field
      name: DOWN_L
      bit_offset: 0
      bit_width: 1
      description: This bit is 1 when the L or unified counter is counting down. Hardware
        sets this bit when the counter is counting up, counter limit occurs, and BIDIR
        = 1.Hardware clears this bit when the counter is counting down and a limit
        condition occurs or when the counter reaches 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STOP_L
      bit_offset: 1
      bit_width: 1
      description: When this bit is 1 and HALT is 0, the L or unified counter does
        not run, but I/O events related to the counter can occur. If a designated
        start event occurs, this bit is cleared and counting resumes.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HALT_L
      bit_offset: 2
      bit_width: 1
      description: When this bit is 1, the L or unified counter does not run and no
        events can occur. A reset sets this bit. When the HALT_L bit is one, the STOP_L
        bit is cleared. It is possible to remove the halt condition while keeping
        the SCT in the stop condition (not running) with a single write to this register
        to simultaneously clear the HALT bit and set the STOP bit. Once set, only
        software can clear this bit to restore counter operation. This bit is set
        on reset.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLRCTR_L
      bit_offset: 3
      bit_width: 1
      description: Writing a 1 to this bit clears the L or unified counter. This bit
        always reads as 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BIDIR_L
      bit_offset: 4
      bit_width: 1
      description: L or unified counter direction select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UP
        1: UP_DOWN
    - !Field
      name: PRE_L
      bit_offset: 5
      bit_width: 8
      description: Specifies the factor by which the SCT clock is prescaled to produce
        the L or unified counter clock. The counter clock is clocked at the rate of
        the SCT clock divided by PRE_L+1. Clear the counter (by writing a 1 to the
        CLRCTR bit) whenever changing the PRE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DOWN_H
      bit_offset: 16
      bit_width: 1
      description: This bit is 1 when the H counter is counting down. Hardware sets
        this bit when the counter is counting, a counter limit condition occurs, and
        BIDIR is 1. Hardware clears this bit when the counter is counting down and
        a limit condition occurs or when the counter reaches 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STOP_H
      bit_offset: 17
      bit_width: 1
      description: When this bit is 1 and HALT is 0, the H counter does not, run but
        I/O events related to the counter can occur. If such an event matches the
        mask in the Start register, this bit is cleared and counting resumes.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HALT_H
      bit_offset: 18
      bit_width: 1
      description: When this bit is 1, the H counter does not run and no events can
        occur. A reset sets this bit. When the HALT_H bit is one, the STOP_H bit is
        cleared. It is possible to remove the halt condition while keeping the SCT
        in the stop condition (not running) with a single write to this register to
        simultaneously clear the HALT bit and set the STOP bit. Once set, this bit
        can only be cleared by software to restore counter operation. This bit is
        set on reset.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CLRCTR_H
      bit_offset: 19
      bit_width: 1
      description: Writing a 1 to this bit clears the H counter. This bit always reads
        as 0.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BIDIR_H
      bit_offset: 20
      bit_width: 1
      description: Direction select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: UP
        1: UP_DOWN
    - !Field
      name: PRE_H
      bit_offset: 21
      bit_width: 8
      description: Specifies the factor by which the SCT clock is prescaled to produce
        the H counter clock. The counter clock is clocked at the rate of the SCT clock
        divided by PRELH+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever
        changing the PRE value.
      read_allowed: true
      write_allowed: true
  - !Register
    name: LIMIT
    addr: 0x8
    size_bits: 32
    description: SCT limit event select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: LIMMSK_L
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n is used as a counter limit for the L or
        unified counter (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits
        = number of events in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LIMMSK_H
      bit_offset: 16
      bit_width: 16
      description: If bit n is one, event n is used as a counter limit for the H counter
        (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of
        events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: HALT
    addr: 0xc
    size_bits: 32
    description: SCT halt event select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: HALTMSK_L
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n sets the HALT_L bit in the CTRL register
        (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events
        in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HALTMSK_H
      bit_offset: 16
      bit_width: 16
      description: If bit n is one, event n sets the HALT_H bit in the CTRL register
        (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of
        events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: STOP
    addr: 0x10
    size_bits: 32
    description: SCT stop event select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STOPMSK_L
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n sets the STOP_L bit in the CTRL register
        (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events
        in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STOPMSK_H
      bit_offset: 16
      bit_width: 16
      description: If bit n is one, event n sets the STOP_H bit in the CTRL register
        (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of
        events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: START
    addr: 0x14
    size_bits: 32
    description: SCT start event select register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STARTMSK_L
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n clears the STOP_L bit in the CTRL register
        (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events
        in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STARTMSK_H
      bit_offset: 16
      bit_width: 16
      description: If bit n is one, event n clears the STOP_H bit in the CTRL register
        (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of
        events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: COUNT
    addr: 0x40
    size_bits: 32
    description: SCT counter register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CTR_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit L counter value. When
        UNIFY = 1, read or write the lower 16 bits of the 32-bit unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CTR_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit H counter value. When
        UNIFY = 1, read or write the upper 16 bits of the 32-bit unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: STATE
    addr: 0x44
    size_bits: 32
    description: SCT state register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATE_L
      bit_offset: 0
      bit_width: 5
      description: State variable.
      read_allowed: true
      write_allowed: true
    - !Field
      name: STATE_H
      bit_offset: 16
      bit_width: 5
      description: State variable.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INPUT
    addr: 0x48
    size_bits: 32
    description: SCT input register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: AIN0
      bit_offset: 0
      bit_width: 1
      description: Input 0 state. Input 0 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN1
      bit_offset: 1
      bit_width: 1
      description: Input 1 state. Input 1 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN2
      bit_offset: 2
      bit_width: 1
      description: Input 2 state. Input 2 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN3
      bit_offset: 3
      bit_width: 1
      description: Input 3 state. Input 3 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN4
      bit_offset: 4
      bit_width: 1
      description: Input 4 state. Input 4 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN5
      bit_offset: 5
      bit_width: 1
      description: Input 5 state. Input 5 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN6
      bit_offset: 6
      bit_width: 1
      description: Input 6 state. Input 6 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN7
      bit_offset: 7
      bit_width: 1
      description: Input 7 state. Input 7 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN8
      bit_offset: 8
      bit_width: 1
      description: Input 8 state. Input 8 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN9
      bit_offset: 9
      bit_width: 1
      description: Input 9 state. Input 9 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN10
      bit_offset: 10
      bit_width: 1
      description: Input 10 state. Input 10 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN11
      bit_offset: 11
      bit_width: 1
      description: Input 11 state. Input 11 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN12
      bit_offset: 12
      bit_width: 1
      description: Input 12 state. Input 12 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN13
      bit_offset: 13
      bit_width: 1
      description: Input 13 state. Input 13 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN14
      bit_offset: 14
      bit_width: 1
      description: Input 14 state. Input 14 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: AIN15
      bit_offset: 15
      bit_width: 1
      description: Input 15 state. Input 15 state on the last SCT clock edge.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN0
      bit_offset: 16
      bit_width: 1
      description: Input 0 state. Input 0 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN1
      bit_offset: 17
      bit_width: 1
      description: Input 1 state. Input 1 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN2
      bit_offset: 18
      bit_width: 1
      description: Input 2 state. Input 2 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN3
      bit_offset: 19
      bit_width: 1
      description: Input 3 state. Input 3 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN4
      bit_offset: 20
      bit_width: 1
      description: Input 4 state. Input 4 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN5
      bit_offset: 21
      bit_width: 1
      description: Input 5 state. Input 5 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN6
      bit_offset: 22
      bit_width: 1
      description: Input 6 state. Input 6 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN7
      bit_offset: 23
      bit_width: 1
      description: Input 7 state. Input 7 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN8
      bit_offset: 24
      bit_width: 1
      description: Input 8 state. Input 8 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN9
      bit_offset: 25
      bit_width: 1
      description: Input 9 state. Input 9 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN10
      bit_offset: 26
      bit_width: 1
      description: Input 10 state. Input 10 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN11
      bit_offset: 27
      bit_width: 1
      description: Input 11 state. Input 11 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN12
      bit_offset: 28
      bit_width: 1
      description: Input 12 state. Input 12 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN13
      bit_offset: 29
      bit_width: 1
      description: Input 13 state. Input 13 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN14
      bit_offset: 30
      bit_width: 1
      description: Input 14 state. Input 14 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SIN15
      bit_offset: 31
      bit_width: 1
      description: Input 15 state. Input 15 state following the synchronization specified
        by INSYNC.
      read_allowed: true
      write_allowed: false
  - !Register
    name: REGMODE
    addr: 0x4c
    size_bits: 32
    description: SCT match/capture mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: REGMOD_L
      bit_offset: 0
      bit_width: 16
      description: Each bit controls one match/capture register (register 0 = bit
        0, register 1 = bit 1, etc.). The number of bits = number of match/captures
        in this SCT. 0 = register operates as match register. 1 = register operates
        as capture register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: REGMOD_H
      bit_offset: 16
      bit_width: 16
      description: Each bit controls one match/capture register (register 0 = bit
        16, register 1 = bit 17, etc.). The number of bits = number of match/captures
        in this SCT. 0 = register operates as match registers. 1 = register operates
        as capture registers.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTPUT
    addr: 0x50
    size_bits: 32
    description: SCT output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OUT
      bit_offset: 0
      bit_width: 16
      description: Writing a 1 to bit n forces the corresponding output HIGH. Writing
        a 0 forces the corresponding output LOW (output 0 = bit 0, output 1 = bit
        1, etc.). The number of bits = number of outputs in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTPUTDIRCTRL
    addr: 0x54
    size_bits: 32
    description: SCT output counter direction control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SETCLR0
      bit_offset: 0
      bit_width: 2
      description: Set/clear operation on output 0. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR1
      bit_offset: 2
      bit_width: 2
      description: Set/clear operation on output 1. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR2
      bit_offset: 4
      bit_width: 2
      description: Set/clear operation on output 2. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR3
      bit_offset: 6
      bit_width: 2
      description: Set/clear operation on output 3. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR4
      bit_offset: 8
      bit_width: 2
      description: Set/clear operation on output 4. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR5
      bit_offset: 10
      bit_width: 2
      description: Set/clear operation on output 5. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR6
      bit_offset: 12
      bit_width: 2
      description: Set/clear operation on output 6. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR7
      bit_offset: 14
      bit_width: 2
      description: Set/clear operation on output 7. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR8
      bit_offset: 16
      bit_width: 2
      description: Set/clear operation on output 8. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR9
      bit_offset: 18
      bit_width: 2
      description: Set/clear operation on output 9. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR10
      bit_offset: 20
      bit_width: 2
      description: Set/clear operation on output 10. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR11
      bit_offset: 22
      bit_width: 2
      description: Set/clear operation on output 11. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR12
      bit_offset: 24
      bit_width: 2
      description: Set/clear operation on output 12. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR13
      bit_offset: 26
      bit_width: 2
      description: Set/clear operation on output 13. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR14
      bit_offset: 28
      bit_width: 2
      description: Set/clear operation on output 14. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
    - !Field
      name: SETCLR15
      bit_offset: 30
      bit_width: 2
      description: Set/clear operation on output 15. Value 0x3 is reserved. Do not
        program this value.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INDEPENDENT
        1: L_REVERSED
        2: H_REVERSED
  - !Register
    name: RES
    addr: 0x58
    size_bits: 32
    description: SCT conflict resolution register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: O0RES
      bit_offset: 0
      bit_width: 2
      description: Effect of simultaneous set and clear on output 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O1RES
      bit_offset: 2
      bit_width: 2
      description: Effect of simultaneous set and clear on output 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O2RES
      bit_offset: 4
      bit_width: 2
      description: Effect of simultaneous set and clear on output 2.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O3RES
      bit_offset: 6
      bit_width: 2
      description: Effect of simultaneous set and clear on output 3.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O4RES
      bit_offset: 8
      bit_width: 2
      description: Effect of simultaneous set and clear on output 4.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O5RES
      bit_offset: 10
      bit_width: 2
      description: Effect of simultaneous set and clear on output 5.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O6RES
      bit_offset: 12
      bit_width: 2
      description: Effect of simultaneous set and clear on output 6.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O7RES
      bit_offset: 14
      bit_width: 2
      description: Effect of simultaneous set and clear on output 7.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O8RES
      bit_offset: 16
      bit_width: 2
      description: Effect of simultaneous set and clear on output 8.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O9RES
      bit_offset: 18
      bit_width: 2
      description: Effect of simultaneous set and clear on output 9.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O10RES
      bit_offset: 20
      bit_width: 2
      description: Effect of simultaneous set and clear on output 10.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O11RES
      bit_offset: 22
      bit_width: 2
      description: Effect of simultaneous set and clear on output 11.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O12RES
      bit_offset: 24
      bit_width: 2
      description: Effect of simultaneous set and clear on output 12.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O13RES
      bit_offset: 26
      bit_width: 2
      description: Effect of simultaneous set and clear on output 13.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O14RES
      bit_offset: 28
      bit_width: 2
      description: Effect of simultaneous set and clear on output 14.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
    - !Field
      name: O15RES
      bit_offset: 30
      bit_width: 2
      description: Effect of simultaneous set and clear on output 15.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_CHANGE
        1: SET
        2: CLEAR
        3: TOGGLE_OUTPUT
  - !Register
    name: DMA0REQUEST
    addr: 0x5c
    size_bits: 32
    description: SCT DMA request 0 register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DEV_0
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n triggers DMA request 0 (event 0 = bit
        0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRL0
      bit_offset: 30
      bit_width: 1
      description: A 1 in this bit triggers DMA request 0 when it loads the MATCH_L/Unified
        registers from the RELOAD_L/Unified registers.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRQ0
      bit_offset: 31
      bit_width: 1
      description: This read-only bit indicates the state of DMA Request 0. Note that
        if the related DMA channel is enabled and properly set up, it is unlikely
        that software will see this flag, it will be cleared rapidly by the DMA service.
        The flag remaining set could point to an issue with DMA setup.
      read_allowed: true
      write_allowed: true
  - !Register
    name: DMA1REQUEST
    addr: 0x60
    size_bits: 32
    description: SCT DMA request 1 register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DEV_1
      bit_offset: 0
      bit_width: 16
      description: If bit n is one, event n triggers DMA request 1 (event 0 = bit
        0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRL1
      bit_offset: 30
      bit_width: 1
      description: A 1 in this bit triggers DMA request 1 when it loads the Match
        L/Unified registers from the Reload L/Unified registers.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DRQ1
      bit_offset: 31
      bit_width: 1
      description: This read-only bit indicates the state of DMA Request 1. Note that
        if the related DMA channel is enabled and properly set up, it is unlikely
        that software will see this flag, it will be cleared rapidly by the DMA service.
        The flag remaining set could point to an issue with DMA setup.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVEN
    addr: 0xf0
    size_bits: 32
    description: SCT event interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: IEN
      bit_offset: 0
      bit_width: 16
      description: The SCT requests an interrupt when bit n of this register and the
        event flag register are both one (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVFLAG
    addr: 0xf4
    size_bits: 32
    description: SCT event flag register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FLAG
      bit_offset: 0
      bit_width: 16
      description: Bit n is one if event n has occurred since reset or a 1 was last
        written to this bit (event 0 = bit 0, event 1 = bit 1, etc.). The number of
        bits = number of events in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CONEN
    addr: 0xf8
    size_bits: 32
    description: SCT conflict interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: NCEN
      bit_offset: 0
      bit_width: 16
      description: The SCT requests an interrupt when bit n of this register and the
        SCT conflict flag register are both one (output 0 = bit 0, output 1 = bit
        1, etc.). The number of bits = number of outputs in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CONFLAG
    addr: 0xfc
    size_bits: 32
    description: SCT conflict flag register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: NCFLAG
      bit_offset: 0
      bit_width: 16
      description: Bit n is one if a no-change conflict event occurred on output n
        since reset or a 1 was last written to this bit (output 0 = bit 0, output
        1 = bit 1, etc.). The number of bits = number of outputs in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSERRL
      bit_offset: 30
      bit_width: 1
      description: The most recent bus error from this SCT involved writing CTR L/Unified,
        STATE L/Unified, MATCH L/Unified, or the Output register when the L/U counter
        was not halted. A word write to certain L and H registers can be half successful
        and half unsuccessful.
      read_allowed: true
      write_allowed: true
    - !Field
      name: BUSERRH
      bit_offset: 31
      bit_width: 1
      description: The most recent bus error from this SCT involved writing CTR H,
        STATE H, MATCH H, or the Output register when the H counter was not halted.
      read_allowed: true
      write_allowed: true
  - !Register
    name: MODULECONTENT
    addr: 0x7fc
    size_bits: 32
    description: Reserved
    read_allowed: true
    write_allowed: true
    fields: []
  - !Register
    name: SCTCAP[0]
    addr: 0x100
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[1]
    addr: 0x104
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[2]
    addr: 0x108
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[3]
    addr: 0x10c
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[4]
    addr: 0x110
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[5]
    addr: 0x114
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[6]
    addr: 0x118
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[7]
    addr: 0x11c
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[8]
    addr: 0x120
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAP[9]
    addr: 0x124
    size_bits: 32
    description: SCT capture register of capture channel
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read the 16-bit counter value at which this register
        was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value
        at which this register was last captured.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[0]
    addr: 0x100
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[1]
    addr: 0x104
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[2]
    addr: 0x108
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[3]
    addr: 0x10c
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[4]
    addr: 0x110
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[5]
    addr: 0x114
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[6]
    addr: 0x118
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[7]
    addr: 0x11c
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[8]
    addr: 0x120
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCH[9]
    addr: 0x124
    size_bits: 32
    description: SCT match value register of match channels
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, read or write the 16-bit value to be compared to
        the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit
        value to be compared to the unified counter.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[0]
    addr: 0x200
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[1]
    addr: 0x204
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[2]
    addr: 0x208
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[3]
    addr: 0x20c
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[4]
    addr: 0x210
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[5]
    addr: 0x214
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[6]
    addr: 0x218
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[7]
    addr: 0x21c
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[8]
    addr: 0x220
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTCAPCTRL[9]
    addr: 0x224
    size_bits: 32
    description: SCT capture control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CAPCONn_L
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn
        (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.).
        The number of bits = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
    - !Field
      name: CAPCONn_H
      bit_offset: 16
      bit_width: 16
      description: If bit m is one, event m causes the CAPn_H (UNIFY = 0) register
        to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits
        = number of match/captures in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[0]
    addr: 0x200
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[1]
    addr: 0x204
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[2]
    addr: 0x208
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[3]
    addr: 0x20c
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[4]
    addr: 0x210
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[5]
    addr: 0x214
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[6]
    addr: 0x218
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[7]
    addr: 0x21c
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[8]
    addr: 0x220
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SCTMATCHREL[9]
    addr: 0x224
    size_bits: 32
    description: SCT match reload value register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: RELOADn_L
      bit_offset: 0
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit value to be loaded into the
        MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit
        value to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RELOADn_H
      bit_offset: 16
      bit_width: 16
      description: When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H
        register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value
        to be loaded into the MATCHn register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[0]_STATE
    addr: 0x300
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[0]_CTRL
    addr: 0x304
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[1]_STATE
    addr: 0x308
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[1]_CTRL
    addr: 0x30c
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[2]_STATE
    addr: 0x310
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[2]_CTRL
    addr: 0x314
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[3]_STATE
    addr: 0x318
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[3]_CTRL
    addr: 0x31c
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[4]_STATE
    addr: 0x320
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[4]_CTRL
    addr: 0x324
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[5]_STATE
    addr: 0x328
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[5]_CTRL
    addr: 0x32c
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[6]_STATE
    addr: 0x330
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[6]_CTRL
    addr: 0x334
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[7]_STATE
    addr: 0x338
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[7]_CTRL
    addr: 0x33c
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[8]_STATE
    addr: 0x340
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[8]_CTRL
    addr: 0x344
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: EVENT[9]_STATE
    addr: 0x348
    size_bits: 32
    description: SCT event state register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: STATEMSKn
      bit_offset: 0
      bit_width: 16
      description: If bit m is one, event n happens in state m of the counter selected
        by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state
        1= bit 1, etc.). The number of bits = number of states in this SCT.
      read_allowed: true
      write_allowed: true
  - !Register
    name: EVENT[9]_CTRL
    addr: 0x34c
    size_bits: 32
    description: SCT event control register 0
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MATCHSEL
      bit_offset: 0
      bit_width: 4
      description: Selects the Match register associated with this event (if any).
        A match can occur only when the counter selected by the HEVENT bit is running.
      read_allowed: true
      write_allowed: true
    - !Field
      name: HEVENT
      bit_offset: 4
      bit_width: 1
      description: Select L/H counter. Do not set this bit if UNIFY = 1.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: L_COUNTER
        1: H_COUNTER
    - !Field
      name: OUTSEL
      bit_offset: 5
      bit_width: 1
      description: Input/output select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INPUT
        1: OUTPUT
    - !Field
      name: IOSEL
      bit_offset: 6
      bit_width: 4
      description: Selects the input or output signal number associated with this
        event (if any). Do not select an input in this register if CKMODE is 1x. In
        this case the clock input is an implicit ingredient of every event.
      read_allowed: true
      write_allowed: true
    - !Field
      name: IOCOND
      bit_offset: 10
      bit_width: 2
      description: Selects the I/O condition for event n. (The detection of edges
        on outputs lag the conditions that switch the outputs by one SCT clock). In
        order to guarantee proper edge/state detection, an input must have a minimum
        pulse width of at least one SCT clock period .
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: RISE
        2: FALL
        3: HIGH
    - !Field
      name: COMBMODE
      bit_offset: 12
      bit_width: 2
      description: Selects how the specified match and I/O condition are used and
        combined.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: OR
        1: MATCH
        2: IO
        3: AND
    - !Field
      name: STATELD
      bit_offset: 14
      bit_width: 1
      description: This bit controls how the STATEV value modifies the state selected
        by HEVENT when this event is the highest-numbered event occurring for that
        state.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ADD
        1: LOAD
    - !Field
      name: STATEV
      bit_offset: 15
      bit_width: 5
      description: This value is loaded into or added to the state selected by HEVENT,
        depending on STATELD, when this event is the highest-numbered event occurring
        for that state. If STATELD and STATEV are both zero, there is no change to
        the STATE value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MATCHMEM
      bit_offset: 20
      bit_width: 1
      description: If this bit is one and the COMBMODE field specifies a match component
        to the triggering of this event, then a match is considered to be active whenever
        the counter value is GREATER THAN OR EQUAL TO the value specified in the match
        register when counting up, LESS THEN OR EQUAL TO the match value when counting
        down. If this bit is zero, a match is only be active during the cycle when
        the counter is equal to the match value.
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIRECTION
      bit_offset: 21
      bit_width: 2
      description: Direction qualifier for event generation. This field only applies
        when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores
        this field. Value 0x3 is reserved.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DIRECTION_INDEPENDENT
        1: COUNTING_UP
        2: COUNTING_DOWN
  - !Register
    name: OUT[0]_SET
    addr: 0x500
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[0]_CLR
    addr: 0x504
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[1]_SET
    addr: 0x508
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[1]_CLR
    addr: 0x50c
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[2]_SET
    addr: 0x510
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[2]_CLR
    addr: 0x514
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[3]_SET
    addr: 0x518
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[3]_CLR
    addr: 0x51c
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[4]_SET
    addr: 0x520
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[4]_CLR
    addr: 0x524
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[5]_SET
    addr: 0x528
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[5]_CLR
    addr: 0x52c
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[6]_SET
    addr: 0x530
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[6]_CLR
    addr: 0x534
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[7]_SET
    addr: 0x538
    size_bits: 32
    description: SCT output 0 set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SET
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to set output n (or clear it if SETCLRn
        = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits
        = number of events in this SCT. When the counter is used in bi-directional
        mode, it is possible to reverse the action specified by the output set and
        clear registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUT[7]_CLR
    addr: 0x53c
    size_bits: 32
    description: SCT output 0 clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CLR
      bit_offset: 0
      bit_width: 16
      description: A 1 in bit m selects event m to clear output n (or set it if SETCLRn
        = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits =
        number of events in this SCT. When the counter is used in bi-directional mode,
        it is possible to reverse the action specified by the output set and clear
        registers when counting down, See the OUTPUTCTRL register.
      read_allowed: true
      write_allowed: true
- !Module
  name: I2C0
  description: i2c
  base_addr: 0x40086000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x800
    size_bits: 32
    description: Configuration for shared functions.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTEN
      bit_offset: 0
      bit_width: 1
      description: Master Enable. When disabled, configurations settings for the Master
        function are not changed, but the Master function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVEN
      bit_offset: 1
      bit_width: 1
      description: Slave Enable. When disabled, configurations settings for the Slave
        function are not changed, but the Slave function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONEN
      bit_offset: 2
      bit_width: 1
      description: Monitor Enable. When disabled, configurations settings for the
        Monitor function are not changed, but the Monitor function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TIMEOUTEN
      bit_offset: 3
      bit_width: 1
      description: I2C bus Time-out Enable. When disabled, the time-out function is
        internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONCLKSTR
      bit_offset: 4
      bit_width: 1
      description: Monitor function Clock Stretching.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: STAT
    addr: 0x804
    size_bits: 32
    description: Status register for Master, Slave, and Monitor functions.
    read_allowed: true
    write_allowed: true
    reset_value: 0x801
    fields:
    - !Field
      name: MSTPENDING
      bit_offset: 0
      bit_width: 1
      description: Master Pending. Indicates that the Master is waiting to continue
        communication on the I2C-bus (pending) or is idle. When the master is pending,
        the MSTSTATE bits indicate what type of software service if any the master
        expects. This flag will cause an interrupt when set if, enabled via the INTENSET
        register. The MSTPENDING flag is not set when the DMA is handling an event
        (if the MSTDMA bit in the MSTCTL register is set). If the master is in the
        idle state, and no communication is needed, mask this interrupt.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IN_PROGRESS
        1: PENDING
    - !Field
      name: MSTSTATE
      bit_offset: 1
      bit_width: 3
      description: Master State code. The master state code reflects the master state
        when the MSTPENDING bit is set, that is the master is pending or in the idle
        state. Each value of this field indicates a specific required service for
        the Master function. All other values are reserved. See Table 400 for details
        of state values and appropriate responses.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: RECEIVE_READY
        2: TRANSMIT_READY
        3: NACK_ADDRESS
        4: NACK_DATA
    - !Field
      name: MSTARBLOSS
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss flag. This flag can be cleared by software
        writing a 1 to this bit. It is also cleared automatically a 1 is written to
        MSTCONTINUE.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_LOSS
        1: ARBITRATION_LOSS
    - !Field
      name: MSTSTSTPERR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error flag. This flag can be cleared by software
        writing a 1 to this bit. It is also cleared automatically a 1 is written to
        MSTCONTINUE.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_ERROR
        1: ERROR
    - !Field
      name: SLVPENDING
      bit_offset: 8
      bit_width: 1
      description: Slave Pending. Indicates that the Slave function is waiting to
        continue communication on the I2C-bus and needs software service. This flag
        will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag
        is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL
        register is set). The SLVPENDING flag is read-only and is automatically cleared
        when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point
        in time when SlvPending is set depends on whether the I2C interface is in
        HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured
        to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements
        of the HS I2C specification, slave addresses must also be detected automatically,
        since the address must be acknowledged before the clock can be stretched.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IN_PROGRESS
        1: PENDING
    - !Field
      name: SLVSTATE
      bit_offset: 9
      bit_width: 2
      description: Slave State code. Each value of this field indicates a specific
        required service for the Slave function. All other values are reserved. See
        Table 401 for state values and actions. note that the occurrence of some states
        and how they are handled are affected by DMA mode and Automatic Operation
        modes.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: SLAVE_ADDRESS
        1: SLAVE_RECEIVE
        2: SLAVE_TRANSMIT
    - !Field
      name: SLVNOTSTR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching. Indicates when the slave function is stretching
        the I2C clock. This is needed in order to gracefully invoke Deep Sleep or
        Power-down modes during slave operation. This read-only flag reflects the
        slave function status in real time.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: STRETCHING
        1: NOT_STRETCHING
    - !Field
      name: SLVIDX
      bit_offset: 12
      bit_width: 2
      description: Slave address match Index. This field is valid when the I2C slave
        function has been selected by receiving an address that matches one of the
        slave addresses defined by any enabled slave address registers, and provides
        an identification of the address that was matched. It is possible that more
        than one address could be matched, but only one match can be reported here.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ADDRESS0
        1: ADDRESS1
        2: ADDRESS2
        3: ADDRESS3
    - !Field
      name: SLVSEL
      bit_offset: 14
      bit_width: 1
      description: Slave selected flag. SLVSEL is set after an address match when
        software tells the Slave function to acknowledge the address, or when the
        address has been automatically acknowledged. It is cleared when another address
        cycle presents an address that does not match an enabled address on the Slave
        function, when slave software decides to NACK a matched address, when there
        is a Stop detected on the bus, when the master NACKs slave data, and in some
        combinations of Automatic Operation. SLVSEL is not cleared if software NACKs
        data.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_SELECTED
        1: SELECTED
    - !Field
      name: SLVDESEL
      bit_offset: 15
      bit_width: 1
      description: Slave Deselected flag. This flag will cause an interrupt when set
        if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_DESELECTED
        1: DESELECTED
    - !Field
      name: MONRDY
      bit_offset: 16
      bit_width: 1
      description: Monitor Ready. This flag is cleared when the MONRXDAT register
        is read.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_DATA
        1: DATA_WAITING
    - !Field
      name: MONOV
      bit_offset: 17
      bit_width: 1
      description: Monitor Overflow flag.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_OVERRUN
        1: OVERRUN
    - !Field
      name: MONACTIVE
      bit_offset: 18
      bit_width: 1
      description: 'Monitor Active flag. Indicates when the Monitor function considers
        the I 2C bus to be active. Active is defined here as when some Master is on
        the bus: a bus Start has occurred more recently than a bus Stop.'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: MONIDLE
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle flag. This flag is set when the Monitor function sees
        the I2C bus change from active to inactive. This can be used by software to
        decide when to process data accumulated by the Monitor function. This flag
        will cause an interrupt when set if enabled via the INTENSET register. The
        flag can be cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_IDLE
        1: IDLE
    - !Field
      name: EVENTTIMEOUT
      bit_offset: 24
      bit_width: 1
      description: Event Time-out Interrupt flag. Indicates when the time between
        events has been longer than the time specified by the TIMEOUT register. Events
        include Start, Stop, and clock edges. The flag is cleared by writing a 1 to
        this bit. No time-out is created when the I2C-bus is idle.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_TIMEOUT
        1: EVEN_TIMEOUT
    - !Field
      name: SCLTIMEOUT
      bit_offset: 25
      bit_width: 1
      description: SCL Time-out Interrupt flag. Indicates when SCL has remained low
        longer than the time specific by the TIMEOUT register. The flag is cleared
        by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_TIMEOUT
        1: TIMEOUT
  - !Register
    name: INTENSET
    addr: 0x808
    size_bits: 32
    description: Interrupt Enable Set and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTPENDINGEN
      bit_offset: 0
      bit_width: 1
      description: Master Pending interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTARBLOSSEN
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTSTSTPERREN
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVPENDINGEN
      bit_offset: 8
      bit_width: 1
      description: Slave Pending interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVNOTSTREN
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVDESELEN
      bit_offset: 15
      bit_width: 1
      description: Slave Deselect interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONRDYEN
      bit_offset: 16
      bit_width: 1
      description: Monitor data Ready interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONOVEN
      bit_offset: 17
      bit_width: 1
      description: Monitor Overrun interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONIDLEEN
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: EVENTTIMEOUTEN
      bit_offset: 24
      bit_width: 1
      description: Event time-out interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SCLTIMEOUTEN
      bit_offset: 25
      bit_width: 1
      description: SCL time-out interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: INTENCLR
    addr: 0x80c
    size_bits: 32
    description: Interrupt Enable Clear register.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: MSTPENDINGCLR
      bit_offset: 0
      bit_width: 1
      description: Master Pending interrupt clear. Writing 1 to this bit clears the
        corresponding bit in the INTENSET register if implemented.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTARBLOSSCLR
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTSTSTPERRCLR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVPENDINGCLR
      bit_offset: 8
      bit_width: 1
      description: Slave Pending interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVNOTSTRCLR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVDESELCLR
      bit_offset: 15
      bit_width: 1
      description: Slave Deselect interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONRDYCLR
      bit_offset: 16
      bit_width: 1
      description: Monitor data Ready interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONOVCLR
      bit_offset: 17
      bit_width: 1
      description: Monitor Overrun interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONIDLECLR
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: EVENTTIMEOUTCLR
      bit_offset: 24
      bit_width: 1
      description: Event time-out interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SCLTIMEOUTCLR
      bit_offset: 25
      bit_width: 1
      description: SCL time-out interrupt clear.
      read_allowed: false
      write_allowed: true
  - !Register
    name: TIMEOUT
    addr: 0x810
    size_bits: 32
    description: Time-out value register.
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: TOMIN
      bit_offset: 0
      bit_width: 4
      description: Time-out time value, bottom four bits. These are hard-wired to
        0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out
        resolution of 16 I2C function clocks.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TO
      bit_offset: 4
      bit_width: 12
      description: Time-out time value. Specifies the time-out interval value in increments
        of 16 I 2C function clocks, as defined by the CLKDIV register. To change this
        value while I2C is in operation, disable all time-outs, write a new value
        to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after
        16 counts of the I2C function clock. 0x001 = A time-out will occur after 32
        counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536
        counts of the I2C function clock.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKDIV
    addr: 0x814
    size_bits: 32
    description: Clock pre-divider for the entire I2C interface. This determines what
      time increments are used for the MSTTIME register, and controls some timing
      of the Slave function.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVVAL
      bit_offset: 0
      bit_width: 16
      description: This field controls how the Flexcomm clock (FCLK) is used by the
        I2C functions that need an internal clock in order to operate. 0x0000 = FCLK
        is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002
        = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before
        use.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x818
    size_bits: 32
    description: Interrupt Status register for Master, Slave, and Monitor functions.
    read_allowed: true
    write_allowed: false
    reset_value: 0x801
    fields:
    - !Field
      name: MSTPENDING
      bit_offset: 0
      bit_width: 1
      description: Master Pending.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTARBLOSS
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTSTSTPERR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVPENDING
      bit_offset: 8
      bit_width: 1
      description: Slave Pending.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVNOTSTR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching status.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVDESEL
      bit_offset: 15
      bit_width: 1
      description: Slave Deselected flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONRDY
      bit_offset: 16
      bit_width: 1
      description: Monitor Ready.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONOV
      bit_offset: 17
      bit_width: 1
      description: Monitor Overflow flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONIDLE
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: EVENTTIMEOUT
      bit_offset: 24
      bit_width: 1
      description: Event time-out Interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SCLTIMEOUT
      bit_offset: 25
      bit_width: 1
      description: SCL time-out Interrupt flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: MSTCTL
    addr: 0x820
    size_bits: 32
    description: Master control register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTCONTINUE
      bit_offset: 0
      bit_width: 1
      description: Master Continue. This bit is write-only.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: CONTINUE
    - !Field
      name: MSTSTART
      bit_offset: 1
      bit_width: 1
      description: Master Start control. This bit is write-only.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: START
    - !Field
      name: MSTSTOP
      bit_offset: 2
      bit_width: 1
      description: Master Stop control. This bit is write-only.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: STOP
    - !Field
      name: MSTDMA
      bit_offset: 3
      bit_width: 1
      description: Master DMA enable. Data operations of the I2C can be performed
        with DMA. Protocol type operations such as Start, address, Stop, and address
        match must always be done with software, typically via an interrupt. Address
        acknowledgement must also be done by software except when the I2C is configured
        to be HSCAPABLE (and address acknowledgement is handled entirely by hardware)
        or when Automatic Operation is enabled. When a DMA data transfer is complete,
        MSTDMA must be cleared prior to beginning the next operation, typically a
        Start or Stop.This bit is read/write.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: MSTTIME
    addr: 0x824
    size_bits: 32
    description: Master timing configuration.
    read_allowed: true
    write_allowed: true
    reset_value: 0x77
    fields:
    - !Field
      name: MSTSCLLOW
      bit_offset: 0
      bit_width: 3
      description: Master SCL Low time. Specifies the minimum low time that will be
        asserted by this master on SCL. Other devices on the bus (masters or slaves)
        could lengthen this time. This corresponds to the parameter t LOW in the I2C
        bus specification. I2C bus specification parameters tBUF and tSU;STA have
        the same values and are also controlled by MSTSCLLOW.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _2_CLOCKS
        1: _3_CLOCKS
        2: _4_CLOCKS
        3: _5_CLOCKS
        4: _6_CLOCKS
        5: _7_CLOCKS
        6: _8_CLOCKS
        7: _9_CLOCKS
    - !Field
      name: MSTSCLHIGH
      bit_offset: 4
      bit_width: 3
      description: Master SCL High time. Specifies the minimum high time that will
        be asserted by this master on SCL. Other masters in a multi-master system
        could shorten this time. This corresponds to the parameter tHIGH in the I2C
        bus specification. I2C bus specification parameters tSU;STO and tHD;STA have
        the same values and are also controlled by MSTSCLHIGH.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _2_CLOCKS
        1: _3_CLOCKS
        2: _4_CLOCKS
        3: _5_CLOCKS
        4: _6_CLOCKS
        5: _7_CLOCKS
        6: _8_CLOCKS
        7: _9_CLOCKS
  - !Register
    name: MSTDAT
    addr: 0x828
    size_bits: 32
    description: Combined Master receiver and transmitter data register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: 'Master function data register. Read: read the most recently received
        data for the Master function. Write: transmit data using the Master function.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLVCTL
    addr: 0x840
    size_bits: 32
    description: Slave control register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SLVCONTINUE
      bit_offset: 0
      bit_width: 1
      description: Slave Continue.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: CONTINUE
    - !Field
      name: SLVNACK
      bit_offset: 1
      bit_width: 1
      description: Slave NACK.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: NACK
    - !Field
      name: SLVDMA
      bit_offset: 3
      bit_width: 1
      description: Slave DMA enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: AUTOACK
      bit_offset: 8
      bit_width: 1
      description: 'Automatic Acknowledge.When this bit is set, it will cause an I2C
        header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be
        ACKed immediately; this is used with DMA to allow processing of the data without
        intervention. If this bit is clear and a header matches SLVADR0, the behavior
        is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC_ACK
    - !Field
      name: AUTOMATCHREAD
      bit_offset: 9
      bit_width: 1
      description: When AUTOACK is set, this bit controls whether it matches a read
        or write request on the next header with an address matching SLVADR0. Since
        DMA needs to be configured to match the transfer direction, the direction
        needs to be specified. This bit allows a direction to be chosen for the next
        operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: I2C_WRITE
        1: I2C_READ
  - !Register
    name: SLVDAT
    addr: 0x844
    size_bits: 32
    description: Combined Slave receiver and transmitter data register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: 'Slave function data register. Read: read the most recently received
        data for the Slave function. Write: transmit data using the Slave function.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLVQUAL0
    addr: 0x858
    size_bits: 32
    description: Slave Qualification for address 0.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: QUALMODE0
      bit_offset: 0
      bit_width: 1
      description: Qualify mode for slave address 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MASK
        1: EXTEND
    - !Field
      name: SLVQUAL0
      bit_offset: 1
      bit_width: 7
      description: Slave address Qualifier for address 0. A value of 0 causes the
        address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0
        = 0, any bit in this field which is set to 1 will cause an automatic match
        of the corresponding bit of the received address when it is compared to the
        SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address
        0. This range extends from the value defined by SLVADR0 to the address defined
        by SLVQUAL0 (address matches when SLVADR0[7:1] &amp;lt;= received address
        &amp;lt;= SLVQUAL0[7:1]).
      read_allowed: true
      write_allowed: true
  - !Register
    name: MONRXDAT
    addr: 0x880
    size_bits: 32
    description: Monitor receiver data register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MONRXDAT
      bit_offset: 0
      bit_width: 8
      description: Monitor function Receiver Data. This reflects every data byte that
        passes on the I2C pins.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONSTART
      bit_offset: 8
      bit_width: 1
      description: Monitor Received Start.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_START_DETECTED
        1: START_DETECTED
    - !Field
      name: MONRESTART
      bit_offset: 9
      bit_width: 1
      description: Monitor Received Repeated Start.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_DETECTED
        1: DETECTED
    - !Field
      name: MONNACK
      bit_offset: 10
      bit_width: 1
      description: Monitor Received NACK.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ACKNOWLEDGED
        1: NOT_ACKNOWLEDGED
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: I2C module Identification. This value appears in the shared Flexcomm
      peripheral ID register when I2C is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0300000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
  - !Register
    name: SLVADR[0]
    addr: 0x848
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[1]
    addr: 0x84c
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[2]
    addr: 0x850
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[3]
    addr: 0x854
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
- !Module
  name: I2C1
  description: i2c
  base_addr: 0x40087000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x800
    size_bits: 32
    description: Configuration for shared functions.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTEN
      bit_offset: 0
      bit_width: 1
      description: Master Enable. When disabled, configurations settings for the Master
        function are not changed, but the Master function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVEN
      bit_offset: 1
      bit_width: 1
      description: Slave Enable. When disabled, configurations settings for the Slave
        function are not changed, but the Slave function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONEN
      bit_offset: 2
      bit_width: 1
      description: Monitor Enable. When disabled, configurations settings for the
        Monitor function are not changed, but the Monitor function is internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TIMEOUTEN
      bit_offset: 3
      bit_width: 1
      description: I2C bus Time-out Enable. When disabled, the time-out function is
        internally reset.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONCLKSTR
      bit_offset: 4
      bit_width: 1
      description: Monitor function Clock Stretching.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: STAT
    addr: 0x804
    size_bits: 32
    description: Status register for Master, Slave, and Monitor functions.
    read_allowed: true
    write_allowed: true
    reset_value: 0x801
    fields:
    - !Field
      name: MSTPENDING
      bit_offset: 0
      bit_width: 1
      description: Master Pending. Indicates that the Master is waiting to continue
        communication on the I2C-bus (pending) or is idle. When the master is pending,
        the MSTSTATE bits indicate what type of software service if any the master
        expects. This flag will cause an interrupt when set if, enabled via the INTENSET
        register. The MSTPENDING flag is not set when the DMA is handling an event
        (if the MSTDMA bit in the MSTCTL register is set). If the master is in the
        idle state, and no communication is needed, mask this interrupt.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IN_PROGRESS
        1: PENDING
    - !Field
      name: MSTSTATE
      bit_offset: 1
      bit_width: 3
      description: Master State code. The master state code reflects the master state
        when the MSTPENDING bit is set, that is the master is pending or in the idle
        state. Each value of this field indicates a specific required service for
        the Master function. All other values are reserved. See Table 400 for details
        of state values and appropriate responses.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IDLE
        1: RECEIVE_READY
        2: TRANSMIT_READY
        3: NACK_ADDRESS
        4: NACK_DATA
    - !Field
      name: MSTARBLOSS
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss flag. This flag can be cleared by software
        writing a 1 to this bit. It is also cleared automatically a 1 is written to
        MSTCONTINUE.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_LOSS
        1: ARBITRATION_LOSS
    - !Field
      name: MSTSTSTPERR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error flag. This flag can be cleared by software
        writing a 1 to this bit. It is also cleared automatically a 1 is written to
        MSTCONTINUE.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_ERROR
        1: ERROR
    - !Field
      name: SLVPENDING
      bit_offset: 8
      bit_width: 1
      description: Slave Pending. Indicates that the Slave function is waiting to
        continue communication on the I2C-bus and needs software service. This flag
        will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag
        is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL
        register is set). The SLVPENDING flag is read-only and is automatically cleared
        when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point
        in time when SlvPending is set depends on whether the I2C interface is in
        HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured
        to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements
        of the HS I2C specification, slave addresses must also be detected automatically,
        since the address must be acknowledged before the clock can be stretched.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: IN_PROGRESS
        1: PENDING
    - !Field
      name: SLVSTATE
      bit_offset: 9
      bit_width: 2
      description: Slave State code. Each value of this field indicates a specific
        required service for the Slave function. All other values are reserved. See
        Table 401 for state values and actions. note that the occurrence of some states
        and how they are handled are affected by DMA mode and Automatic Operation
        modes.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: SLAVE_ADDRESS
        1: SLAVE_RECEIVE
        2: SLAVE_TRANSMIT
    - !Field
      name: SLVNOTSTR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching. Indicates when the slave function is stretching
        the I2C clock. This is needed in order to gracefully invoke Deep Sleep or
        Power-down modes during slave operation. This read-only flag reflects the
        slave function status in real time.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: STRETCHING
        1: NOT_STRETCHING
    - !Field
      name: SLVIDX
      bit_offset: 12
      bit_width: 2
      description: Slave address match Index. This field is valid when the I2C slave
        function has been selected by receiving an address that matches one of the
        slave addresses defined by any enabled slave address registers, and provides
        an identification of the address that was matched. It is possible that more
        than one address could be matched, but only one match can be reported here.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ADDRESS0
        1: ADDRESS1
        2: ADDRESS2
        3: ADDRESS3
    - !Field
      name: SLVSEL
      bit_offset: 14
      bit_width: 1
      description: Slave selected flag. SLVSEL is set after an address match when
        software tells the Slave function to acknowledge the address, or when the
        address has been automatically acknowledged. It is cleared when another address
        cycle presents an address that does not match an enabled address on the Slave
        function, when slave software decides to NACK a matched address, when there
        is a Stop detected on the bus, when the master NACKs slave data, and in some
        combinations of Automatic Operation. SLVSEL is not cleared if software NACKs
        data.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_SELECTED
        1: SELECTED
    - !Field
      name: SLVDESEL
      bit_offset: 15
      bit_width: 1
      description: Slave Deselected flag. This flag will cause an interrupt when set
        if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_DESELECTED
        1: DESELECTED
    - !Field
      name: MONRDY
      bit_offset: 16
      bit_width: 1
      description: Monitor Ready. This flag is cleared when the MONRXDAT register
        is read.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_DATA
        1: DATA_WAITING
    - !Field
      name: MONOV
      bit_offset: 17
      bit_width: 1
      description: Monitor Overflow flag.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_OVERRUN
        1: OVERRUN
    - !Field
      name: MONACTIVE
      bit_offset: 18
      bit_width: 1
      description: 'Monitor Active flag. Indicates when the Monitor function considers
        the I 2C bus to be active. Active is defined here as when some Master is on
        the bus: a bus Start has occurred more recently than a bus Stop.'
      read_allowed: true
      write_allowed: false
      enum_values:
        0: INACTIVE
        1: ACTIVE
    - !Field
      name: MONIDLE
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle flag. This flag is set when the Monitor function sees
        the I2C bus change from active to inactive. This can be used by software to
        decide when to process data accumulated by the Monitor function. This flag
        will cause an interrupt when set if enabled via the INTENSET register. The
        flag can be cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_IDLE
        1: IDLE
    - !Field
      name: EVENTTIMEOUT
      bit_offset: 24
      bit_width: 1
      description: Event Time-out Interrupt flag. Indicates when the time between
        events has been longer than the time specified by the TIMEOUT register. Events
        include Start, Stop, and clock edges. The flag is cleared by writing a 1 to
        this bit. No time-out is created when the I2C-bus is idle.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_TIMEOUT
        1: EVEN_TIMEOUT
    - !Field
      name: SCLTIMEOUT
      bit_offset: 25
      bit_width: 1
      description: SCL Time-out Interrupt flag. Indicates when SCL has remained low
        longer than the time specific by the TIMEOUT register. The flag is cleared
        by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_TIMEOUT
        1: TIMEOUT
  - !Register
    name: INTENSET
    addr: 0x808
    size_bits: 32
    description: Interrupt Enable Set and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTPENDINGEN
      bit_offset: 0
      bit_width: 1
      description: Master Pending interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTARBLOSSEN
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTSTSTPERREN
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVPENDINGEN
      bit_offset: 8
      bit_width: 1
      description: Slave Pending interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVNOTSTREN
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SLVDESELEN
      bit_offset: 15
      bit_width: 1
      description: Slave Deselect interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONRDYEN
      bit_offset: 16
      bit_width: 1
      description: Monitor data Ready interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONOVEN
      bit_offset: 17
      bit_width: 1
      description: Monitor Overrun interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MONIDLEEN
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: EVENTTIMEOUTEN
      bit_offset: 24
      bit_width: 1
      description: Event time-out interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SCLTIMEOUTEN
      bit_offset: 25
      bit_width: 1
      description: SCL time-out interrupt Enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: INTENCLR
    addr: 0x80c
    size_bits: 32
    description: Interrupt Enable Clear register.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: MSTPENDINGCLR
      bit_offset: 0
      bit_width: 1
      description: Master Pending interrupt clear. Writing 1 to this bit clears the
        corresponding bit in the INTENSET register if implemented.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTARBLOSSCLR
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTSTSTPERRCLR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVPENDINGCLR
      bit_offset: 8
      bit_width: 1
      description: Slave Pending interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVNOTSTRCLR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SLVDESELCLR
      bit_offset: 15
      bit_width: 1
      description: Slave Deselect interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONRDYCLR
      bit_offset: 16
      bit_width: 1
      description: Monitor data Ready interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONOVCLR
      bit_offset: 17
      bit_width: 1
      description: Monitor Overrun interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MONIDLECLR
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: EVENTTIMEOUTCLR
      bit_offset: 24
      bit_width: 1
      description: Event time-out interrupt clear.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SCLTIMEOUTCLR
      bit_offset: 25
      bit_width: 1
      description: SCL time-out interrupt clear.
      read_allowed: false
      write_allowed: true
  - !Register
    name: TIMEOUT
    addr: 0x810
    size_bits: 32
    description: Time-out value register.
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: TOMIN
      bit_offset: 0
      bit_width: 4
      description: Time-out time value, bottom four bits. These are hard-wired to
        0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out
        resolution of 16 I2C function clocks.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TO
      bit_offset: 4
      bit_width: 12
      description: Time-out time value. Specifies the time-out interval value in increments
        of 16 I 2C function clocks, as defined by the CLKDIV register. To change this
        value while I2C is in operation, disable all time-outs, write a new value
        to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after
        16 counts of the I2C function clock. 0x001 = A time-out will occur after 32
        counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536
        counts of the I2C function clock.
      read_allowed: true
      write_allowed: true
  - !Register
    name: CLKDIV
    addr: 0x814
    size_bits: 32
    description: Clock pre-divider for the entire I2C interface. This determines what
      time increments are used for the MSTTIME register, and controls some timing
      of the Slave function.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVVAL
      bit_offset: 0
      bit_width: 16
      description: This field controls how the Flexcomm clock (FCLK) is used by the
        I2C functions that need an internal clock in order to operate. 0x0000 = FCLK
        is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002
        = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before
        use.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x818
    size_bits: 32
    description: Interrupt Status register for Master, Slave, and Monitor functions.
    read_allowed: true
    write_allowed: false
    reset_value: 0x801
    fields:
    - !Field
      name: MSTPENDING
      bit_offset: 0
      bit_width: 1
      description: Master Pending.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTARBLOSS
      bit_offset: 4
      bit_width: 1
      description: Master Arbitration Loss flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTSTSTPERR
      bit_offset: 6
      bit_width: 1
      description: Master Start/Stop Error flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVPENDING
      bit_offset: 8
      bit_width: 1
      description: Slave Pending.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVNOTSTR
      bit_offset: 11
      bit_width: 1
      description: Slave Not Stretching status.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SLVDESEL
      bit_offset: 15
      bit_width: 1
      description: Slave Deselected flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONRDY
      bit_offset: 16
      bit_width: 1
      description: Monitor Ready.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONOV
      bit_offset: 17
      bit_width: 1
      description: Monitor Overflow flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONIDLE
      bit_offset: 19
      bit_width: 1
      description: Monitor Idle flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: EVENTTIMEOUT
      bit_offset: 24
      bit_width: 1
      description: Event time-out Interrupt flag.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SCLTIMEOUT
      bit_offset: 25
      bit_width: 1
      description: SCL time-out Interrupt flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: MSTCTL
    addr: 0x820
    size_bits: 32
    description: Master control register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MSTCONTINUE
      bit_offset: 0
      bit_width: 1
      description: Master Continue. This bit is write-only.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: CONTINUE
    - !Field
      name: MSTSTART
      bit_offset: 1
      bit_width: 1
      description: Master Start control. This bit is write-only.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: START
    - !Field
      name: MSTSTOP
      bit_offset: 2
      bit_width: 1
      description: Master Stop control. This bit is write-only.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: STOP
    - !Field
      name: MSTDMA
      bit_offset: 3
      bit_width: 1
      description: Master DMA enable. Data operations of the I2C can be performed
        with DMA. Protocol type operations such as Start, address, Stop, and address
        match must always be done with software, typically via an interrupt. Address
        acknowledgement must also be done by software except when the I2C is configured
        to be HSCAPABLE (and address acknowledgement is handled entirely by hardware)
        or when Automatic Operation is enabled. When a DMA data transfer is complete,
        MSTDMA must be cleared prior to beginning the next operation, typically a
        Start or Stop.This bit is read/write.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: MSTTIME
    addr: 0x824
    size_bits: 32
    description: Master timing configuration.
    read_allowed: true
    write_allowed: true
    reset_value: 0x77
    fields:
    - !Field
      name: MSTSCLLOW
      bit_offset: 0
      bit_width: 3
      description: Master SCL Low time. Specifies the minimum low time that will be
        asserted by this master on SCL. Other devices on the bus (masters or slaves)
        could lengthen this time. This corresponds to the parameter t LOW in the I2C
        bus specification. I2C bus specification parameters tBUF and tSU;STA have
        the same values and are also controlled by MSTSCLLOW.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _2_CLOCKS
        1: _3_CLOCKS
        2: _4_CLOCKS
        3: _5_CLOCKS
        4: _6_CLOCKS
        5: _7_CLOCKS
        6: _8_CLOCKS
        7: _9_CLOCKS
    - !Field
      name: MSTSCLHIGH
      bit_offset: 4
      bit_width: 3
      description: Master SCL High time. Specifies the minimum high time that will
        be asserted by this master on SCL. Other masters in a multi-master system
        could shorten this time. This corresponds to the parameter tHIGH in the I2C
        bus specification. I2C bus specification parameters tSU;STO and tHD;STA have
        the same values and are also controlled by MSTSCLHIGH.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: _2_CLOCKS
        1: _3_CLOCKS
        2: _4_CLOCKS
        3: _5_CLOCKS
        4: _6_CLOCKS
        5: _7_CLOCKS
        6: _8_CLOCKS
        7: _9_CLOCKS
  - !Register
    name: MSTDAT
    addr: 0x828
    size_bits: 32
    description: Combined Master receiver and transmitter data register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: 'Master function data register. Read: read the most recently received
        data for the Master function. Write: transmit data using the Master function.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLVCTL
    addr: 0x840
    size_bits: 32
    description: Slave control register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SLVCONTINUE
      bit_offset: 0
      bit_width: 1
      description: Slave Continue.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: CONTINUE
    - !Field
      name: SLVNACK
      bit_offset: 1
      bit_width: 1
      description: Slave NACK.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NO_EFFECT
        1: NACK
    - !Field
      name: SLVDMA
      bit_offset: 3
      bit_width: 1
      description: Slave DMA enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: AUTOACK
      bit_offset: 8
      bit_width: 1
      description: 'Automatic Acknowledge.When this bit is set, it will cause an I2C
        header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be
        ACKed immediately; this is used with DMA to allow processing of the data without
        intervention. If this bit is clear and a header matches SLVADR0, the behavior
        is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.'
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC_ACK
    - !Field
      name: AUTOMATCHREAD
      bit_offset: 9
      bit_width: 1
      description: When AUTOACK is set, this bit controls whether it matches a read
        or write request on the next header with an address matching SLVADR0. Since
        DMA needs to be configured to match the transfer direction, the direction
        needs to be specified. This bit allows a direction to be chosen for the next
        operation.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: I2C_WRITE
        1: I2C_READ
  - !Register
    name: SLVDAT
    addr: 0x844
    size_bits: 32
    description: Combined Slave receiver and transmitter data register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 8
      description: 'Slave function data register. Read: read the most recently received
        data for the Slave function. Write: transmit data using the Slave function.'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SLVQUAL0
    addr: 0x858
    size_bits: 32
    description: Slave Qualification for address 0.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: QUALMODE0
      bit_offset: 0
      bit_width: 1
      description: Qualify mode for slave address 0.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MASK
        1: EXTEND
    - !Field
      name: SLVQUAL0
      bit_offset: 1
      bit_width: 7
      description: Slave address Qualifier for address 0. A value of 0 causes the
        address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0
        = 0, any bit in this field which is set to 1 will cause an automatic match
        of the corresponding bit of the received address when it is compared to the
        SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address
        0. This range extends from the value defined by SLVADR0 to the address defined
        by SLVQUAL0 (address matches when SLVADR0[7:1] &amp;lt;= received address
        &amp;lt;= SLVQUAL0[7:1]).
      read_allowed: true
      write_allowed: true
  - !Register
    name: MONRXDAT
    addr: 0x880
    size_bits: 32
    description: Monitor receiver data register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: MONRXDAT
      bit_offset: 0
      bit_width: 8
      description: Monitor function Receiver Data. This reflects every data byte that
        passes on the I2C pins.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MONSTART
      bit_offset: 8
      bit_width: 1
      description: Monitor Received Start.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NO_START_DETECTED
        1: START_DETECTED
    - !Field
      name: MONRESTART
      bit_offset: 9
      bit_width: 1
      description: Monitor Received Repeated Start.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: NOT_DETECTED
        1: DETECTED
    - !Field
      name: MONNACK
      bit_offset: 10
      bit_width: 1
      description: Monitor Received NACK.
      read_allowed: true
      write_allowed: false
      enum_values:
        0: ACKNOWLEDGED
        1: NOT_ACKNOWLEDGED
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: I2C module Identification. This value appears in the shared Flexcomm
      peripheral ID register when I2C is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0300000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
  - !Register
    name: SLVADR[0]
    addr: 0x848
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[1]
    addr: 0x84c
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[2]
    addr: 0x850
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
  - !Register
    name: SLVADR[3]
    addr: 0x854
    size_bits: 32
    description: Slave address register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x1
    fields:
    - !Field
      name: SADISABLE
      bit_offset: 0
      bit_width: 1
      description: Slave Address n Disable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: ENABLED
        1: DISABLED
    - !Field
      name: SLVADR
      bit_offset: 1
      bit_width: 7
      description: Slave Address. Seven bit slave address that is compared to received
        addresses if enabled.
      read_allowed: true
      write_allowed: true
    - !Field
      name: AUTONACK
      bit_offset: 15
      bit_width: 1
      description: Automatic NACK operation. Used in conjunction with AUTOACK and
        AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous
        I2C data or other operations.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NORMAL
        1: AUTOMATIC
- !Module
  name: SPI0
  description: spi
  base_addr: 0x40087000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x400
    size_bits: 32
    description: SPI Configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: SPI enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MASTER
      bit_offset: 2
      bit_width: 1
      description: Master mode select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE_MODE
        1: MASTER_MODE
    - !Field
      name: LSBF
      bit_offset: 3
      bit_width: 1
      description: LSB First mode enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: REVERSE
    - !Field
      name: CPHA
      bit_offset: 4
      bit_width: 1
      description: Clock Phase select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANGE
        1: CAPTURE
    - !Field
      name: CPOL
      bit_offset: 5
      bit_width: 1
      description: Clock Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: LOOP
      bit_offset: 7
      bit_width: 1
      description: Loopback mode enable. Loopback mode applies only to Master mode,
        and connects transmit and receive data connected together to allow simple
        software testing.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SPOL0
      bit_offset: 8
      bit_width: 1
      description: SSEL0 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL1
      bit_offset: 9
      bit_width: 1
      description: SSEL1 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL2
      bit_offset: 10
      bit_width: 1
      description: SSEL2 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL3
      bit_offset: 11
      bit_width: 1
      description: SSEL3 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
  - !Register
    name: DLY
    addr: 0x404
    size_bits: 32
    description: SPI Delay register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRE_DELAY
      bit_offset: 0
      bit_width: 4
      description: Controls the amount of time between SSEL assertion and the beginning
        of a data transfer. There is always one SPI clock time between SSEL assertion
        and the first clock edge. This is not considered part of the pre-delay. 0x0
        = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2
        = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: POST_DELAY
      bit_offset: 4
      bit_width: 4
      description: Controls the amount of time between the end of a data transfer
        and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock
        time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock
        times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAME_DELAY
      bit_offset: 8
      bit_width: 4
      description: If the EOF flag is set, controls the minimum amount of time between
        the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No
        additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI
        clock times are inserted. 0xF = 15 SPI clock times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANSFER_DELAY
      bit_offset: 12
      bit_width: 4
      description: Controls the minimum amount of time that the SSEL is deasserted
        between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI
        clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted
        is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3
        SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI
        clock times.
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x408
    size_bits: 32
    description: SPI Status. Some status flags can be cleared by writing a 1 to that
      bit position.
    read_allowed: true
    write_allowed: true
    reset_value: 0x100
    fields:
    - !Field
      name: SSA
      bit_offset: 4
      bit_width: 1
      description: Slave Select Assert. This flag is set whenever any slave select
        transitions from deasserted to asserted, in both master and slave modes. This
        allows determining when the SPI transmit/receive functions become busy, and
        allows waking up the device from reduced power modes when a slave mode access
        begins. This flag is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSD
      bit_offset: 5
      bit_width: 1
      description: Slave Select Deassert. This flag is set whenever any asserted slave
        selects transition to deasserted, in both master and slave modes. This allows
        determining when the SPI transmit/receive functions become idle. This flag
        is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: STALLED
      bit_offset: 6
      bit_width: 1
      description: Stalled status flag. This indicates whether the SPI is currently
        in a stall condition.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ENDTRANSFER
      bit_offset: 7
      bit_width: 1
      description: End Transfer control bit. Software can set this bit to force an
        end to the current transfer when the transmitter finishes any activity already
        in progress, as if the EOT flag had been set prior to the last transmission.
        This capability is included to support cases where it is not known when transmit
        data is written that it will be the end of a transfer. The bit is cleared
        when the transmitter becomes idle as the transfer comes to an end. Forcing
        an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY
        to be inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Master idle status flag. This bit is 1 whenever the SPI master
        function is fully idle. This means that the transmit holding register is empty
        and the transmitter is not in the process of sending data.
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTENSET
    addr: 0x40c
    size_bits: 32
    description: SPI Interrupt Enable read and Set. A complete value may be read from
      this register. Writing a 1 to any implemented bit position causes that bit to
      be set.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSAEN
      bit_offset: 4
      bit_width: 1
      description: Slave select assert interrupt enable. Determines whether an interrupt
        occurs when the Slave Select is asserted.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SSDEN
      bit_offset: 5
      bit_width: 1
      description: Slave select deassert interrupt enable. Determines whether an interrupt
        occurs when the Slave Select is deasserted.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTIDLEEN
      bit_offset: 8
      bit_width: 1
      description: Master idle interrupt enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: INTENCLR
    addr: 0x410
    size_bits: 32
    description: SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position
      causes the corresponding bit in INTENSET to be cleared.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SSAEN
      bit_offset: 4
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSDEN
      bit_offset: 5
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
  - !Register
    name: DIV
    addr: 0x424
    size_bits: 32
    description: SPI clock Divider
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVVAL
      bit_offset: 0
      bit_width: 16
      description: Rate divider value. Specifies how the Flexcomm clock (FCLK) is
        divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded
        such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up
        to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x428
    size_bits: 32
    description: SPI Interrupt Status
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SSA
      bit_offset: 4
      bit_width: 1
      description: Slave Select Assert.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SSD
      bit_offset: 5
      bit_width: 1
      description: Slave Select Deassert.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Master Idle status flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOCFG
    addr: 0xe00
    size_bits: 32
    description: FIFO configuration and enable register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLETX
      bit_offset: 0
      bit_width: 1
      description: Enable the transmit FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: ENABLERX
      bit_offset: 1
      bit_width: 1
      description: Enable the receive FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SIZE
      bit_offset: 4
      bit_width: 2
      description: FIFO size configuration. This is a read-only field. 0x1 = FIFO
        is configured as 8 entries of 16 bits. 0x0, 0x2, 0x3 = not applicable to SPI.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DMATX
      bit_offset: 12
      bit_width: 1
      description: DMA configuration for transmit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
    - !Field
      name: DMARX
      bit_offset: 13
      bit_width: 1
      description: DMA configuration for receive.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
    - !Field
      name: EMPTYTX
      bit_offset: 16
      bit_width: 1
      description: Empty command for the transmit FIFO. When a 1 is written to this
        bit, the TX FIFO is emptied.
      read_allowed: false
      write_allowed: true
    - !Field
      name: EMPTYRX
      bit_offset: 17
      bit_width: 1
      description: Empty command for the receive FIFO. When a 1 is written to this
        bit, the RX FIFO is emptied.
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFOSTAT
    addr: 0xe04
    size_bits: 32
    description: FIFO status register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x30
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error. Will be set if a transmit FIFO error occurs. This
        could be an overflow caused by pushing data into a full FIFO, or by an underflow
        if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error. Will be set if a receive FIFO overflow occurs, caused
        by software or DMA not emptying the FIFO fast enough. Cleared by writing a
        1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PERINT
      bit_offset: 3
      bit_width: 1
      description: Peripheral interrupt. When 1, this indicates that the peripheral
        function has asserted an interrupt. The details can be found by reading the
        peripheral' STAT register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEMPTY
      bit_offset: 4
      bit_width: 1
      description: Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral
        may still be processing the last piece of data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXNOTFULL
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO not full. When 1, the transmit FIFO is not full,
        so more data can be written. When 0, the transmit FIFO is full and another
        write would cause it to overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOTEMPTY
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO not empty. When 1, the receive FIFO is not empty,
        so data can be read. When 0, the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 7
      bit_width: 1
      description: Receive FIFO full. When 1, the receive FIFO is full. Data needs
        to be read out to prevent the peripheral from causing an overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 5
      description: Transmit FIFO current level. A 0 means the TX FIFO is currently
        empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how
        much data is actually in the TX FIFO at the point where the read occurs. If
        the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 5
      description: Receive FIFO current level. A 0 means the RX FIFO is currently
        empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how
        much data is actually in the RX FIFO at the point where the read occurs. If
        the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOTRIG
    addr: 0xe08
    size_bits: 32
    description: FIFO trigger settings for interrupt and DMA request.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXLVLENA
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVLENA
      bit_offset: 1
      bit_width: 1
      description: Receive FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 4
      description: Transmit FIFO level trigger point. This field is used only when
        TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just
        enough to perform DMA, then return to the reduced power mode See -Hardware
        Wake-up control register-. 0 = trigger when the TX FIFO becomes empty. 1 =
        trigger when the TX FIFO level decreases to one entry. 7 = 1 = trigger when
        the TX FIFO level decreases to 7 entries (is no longer full).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 4
      description: Receive FIFO level trigger point. The RX FIFO level is checked
        when a new piece of data is received. This field is used only when RXLVLENA
        = 1. If enabled to do so, the FIFO level can wake up the device just enough
        to perform DMA, then return to the reduced power mode See -Hardware Wake-up
        control register-. 0 = trigger when the RX FIFO has received one entry (is
        no longer empty). 1 = trigger when the RX FIFO has received two entries. 7
        = trigger when the RX FIFO has received 8 entries (has become full).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTENSET
    addr: 0xe10
    size_bits: 32
    description: FIFO interrupt enable set (enable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Determines whether an interrupt occurs when a transmit error occurs,
        based on the TXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Determines whether an interrupt occurs when a receive error occurs,
        based on the RXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Determines whether an interrupt occurs when a the transmit FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Determines whether an interrupt occurs when a the receive FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: FIFOINTENCLR
    addr: 0xe14
    size_bits: 32
    description: FIFO interrupt enable clear (disable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTSTAT
    addr: 0xe18
    size_bits: 32
    description: FIFO interrupt status register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Transmit FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERINT
      bit_offset: 4
      bit_width: 1
      description: Peripheral interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOWR
    addr: 0xe20
    size_bits: 32
    description: FIFO write data.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 16
      description: Transmit data to the FIFO.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL0 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL0 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL1 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL1 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL2 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL2 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL3 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL3 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: EOT
      bit_offset: 20
      bit_width: 1
      description: End of Transfer. The asserted SSEL will be deasserted at the end
        of a transfer, and remain so for at least the time specified by the Transfer_delay
        value in the DLY register.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NOT_DEASSERTED
        1: DEASSERTED
    - !Field
      name: EOF
      bit_offset: 21
      bit_width: 1
      description: End of Frame. Between frames, a delay may be inserted, as defined
        by the FRAME_DELAY value in the DLY register. The end of a frame may not be
        particularly meaningful if the FRAME_DELAY value = 0. This control can be
        used as part of the support for frame lengths greater than 16 bits.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NOT_EOF
        1: EOF
    - !Field
      name: RXIGNORE
      bit_offset: 22
      bit_width: 1
      description: Receive Ignore. This allows data to be transmitted using the SPI
        without the need to read unneeded data from the receiver.Setting this bit
        simplifies the transmit process and can be used with the DMA.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: READ
        1: IGNORE
    - !Field
      name: LEN
      bit_offset: 24
      bit_width: 4
      description: 'Data Length. Specifies the data length from 1 to 16 bits. Note
        that transfer lengths greater than 16 bits are supported by implementing multiple
        sequential transmits. 0x0 = Data transfer is 1 bit in length. Note: when LEN
        = 0, the underrun status is not meaningful. 0x1 = Data transfer is 2 bits
        in length. 0x2 = Data transfer is 3 bits in length. 0xF = Data transfer is
        16 bits in length.'
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFORD
    addr: 0xe30
    size_bits: 32
    description: FIFO read data.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 16
      description: Received data from the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL0
        pin to be saved along with received data. The value will reflect the SSEL0
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL1
        pin to be saved along with received data. The value will reflect the SSEL1
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL2
        pin to be saved along with received data. The value will reflect the SSEL2
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL3
        pin to be saved along with received data. The value will reflect the SSEL3
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SOT
      bit_offset: 20
      bit_width: 1
      description: Start of Transfer flag. This flag will be 1 if this is the first
        data after the SSELs went from deasserted to asserted (i.e., any previous
        transfer has ended). This information can be used to identify the first piece
        of data in cases where the transfer length is greater than 16 bit.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFORDNOPOP
    addr: 0xe40
    size_bits: 32
    description: FIFO data read with no FIFO pop.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 16
      description: Received data from the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL0
        pin to be saved along with received data. The value will reflect the SSEL0
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL1
        pin to be saved along with received data. The value will reflect the SSEL1
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL2
        pin to be saved along with received data. The value will reflect the SSEL2
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL3
        pin to be saved along with received data. The value will reflect the SSEL3
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SOT
      bit_offset: 20
      bit_width: 1
      description: Start of Transfer flag. This flag will be 1 if this is the first
        data after the SSELs went from deasserted to asserted (i.e., any previous
        transfer has ended). This information can be used to identify the first piece
        of data in cases where the transfer length is greater than 16 bit.
      read_allowed: true
      write_allowed: false
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: SPI module Identification. This value appears in the shared Flexcomm
      peripheral ID register when SPI is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0200000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
- !Module
  name: SPI1
  description: spi
  base_addr: 0x4008f000
  size: 0x1000
  registers:
  - !Register
    name: CFG
    addr: 0x400
    size_bits: 32
    description: SPI Configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLE
      bit_offset: 0
      bit_width: 1
      description: SPI enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MASTER
      bit_offset: 2
      bit_width: 1
      description: Master mode select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SLAVE_MODE
        1: MASTER_MODE
    - !Field
      name: LSBF
      bit_offset: 3
      bit_width: 1
      description: LSB First mode enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: STANDARD
        1: REVERSE
    - !Field
      name: CPHA
      bit_offset: 4
      bit_width: 1
      description: Clock Phase select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: CHANGE
        1: CAPTURE
    - !Field
      name: CPOL
      bit_offset: 5
      bit_width: 1
      description: Clock Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: LOOP
      bit_offset: 7
      bit_width: 1
      description: Loopback mode enable. Loopback mode applies only to Master mode,
        and connects transmit and receive data connected together to allow simple
        software testing.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SPOL0
      bit_offset: 8
      bit_width: 1
      description: SSEL0 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL1
      bit_offset: 9
      bit_width: 1
      description: SSEL1 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL2
      bit_offset: 10
      bit_width: 1
      description: SSEL2 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
    - !Field
      name: SPOL3
      bit_offset: 11
      bit_width: 1
      description: SSEL3 Polarity select.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: LOW
        1: HIGH
  - !Register
    name: DLY
    addr: 0x404
    size_bits: 32
    description: SPI Delay register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: PRE_DELAY
      bit_offset: 0
      bit_width: 4
      description: Controls the amount of time between SSEL assertion and the beginning
        of a data transfer. There is always one SPI clock time between SSEL assertion
        and the first clock edge. This is not considered part of the pre-delay. 0x0
        = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2
        = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: POST_DELAY
      bit_offset: 4
      bit_width: 4
      description: Controls the amount of time between the end of a data transfer
        and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock
        time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock
        times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FRAME_DELAY
      bit_offset: 8
      bit_width: 4
      description: If the EOF flag is set, controls the minimum amount of time between
        the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No
        additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI
        clock times are inserted. 0xF = 15 SPI clock times are inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TRANSFER_DELAY
      bit_offset: 12
      bit_width: 4
      description: Controls the minimum amount of time that the SSEL is deasserted
        between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI
        clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted
        is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3
        SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI
        clock times.
      read_allowed: true
      write_allowed: true
  - !Register
    name: STAT
    addr: 0x408
    size_bits: 32
    description: SPI Status. Some status flags can be cleared by writing a 1 to that
      bit position.
    read_allowed: true
    write_allowed: true
    reset_value: 0x100
    fields:
    - !Field
      name: SSA
      bit_offset: 4
      bit_width: 1
      description: Slave Select Assert. This flag is set whenever any slave select
        transitions from deasserted to asserted, in both master and slave modes. This
        allows determining when the SPI transmit/receive functions become busy, and
        allows waking up the device from reduced power modes when a slave mode access
        begins. This flag is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSD
      bit_offset: 5
      bit_width: 1
      description: Slave Select Deassert. This flag is set whenever any asserted slave
        selects transition to deasserted, in both master and slave modes. This allows
        determining when the SPI transmit/receive functions become idle. This flag
        is cleared by software.
      read_allowed: false
      write_allowed: true
    - !Field
      name: STALLED
      bit_offset: 6
      bit_width: 1
      description: Stalled status flag. This indicates whether the SPI is currently
        in a stall condition.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ENDTRANSFER
      bit_offset: 7
      bit_width: 1
      description: End Transfer control bit. Software can set this bit to force an
        end to the current transfer when the transmitter finishes any activity already
        in progress, as if the EOT flag had been set prior to the last transmission.
        This capability is included to support cases where it is not known when transmit
        data is written that it will be the end of a transfer. The bit is cleared
        when the transmitter becomes idle as the transfer comes to an end. Forcing
        an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY
        to be inserted.
      read_allowed: true
      write_allowed: true
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Master idle status flag. This bit is 1 whenever the SPI master
        function is fully idle. This means that the transmit holding register is empty
        and the transmitter is not in the process of sending data.
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTENSET
    addr: 0x40c
    size_bits: 32
    description: SPI Interrupt Enable read and Set. A complete value may be read from
      this register. Writing a 1 to any implemented bit position causes that bit to
      be set.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SSAEN
      bit_offset: 4
      bit_width: 1
      description: Slave select assert interrupt enable. Determines whether an interrupt
        occurs when the Slave Select is asserted.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SSDEN
      bit_offset: 5
      bit_width: 1
      description: Slave select deassert interrupt enable. Determines whether an interrupt
        occurs when the Slave Select is deasserted.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: MSTIDLEEN
      bit_offset: 8
      bit_width: 1
      description: Master idle interrupt enable.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: INTENCLR
    addr: 0x410
    size_bits: 32
    description: SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position
      causes the corresponding bit in INTENSET to be cleared.
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SSAEN
      bit_offset: 4
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: SSDEN
      bit_offset: 5
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Writing 1 clears the corresponding bit in the INTENSET register.
      read_allowed: false
      write_allowed: true
  - !Register
    name: DIV
    addr: 0x424
    size_bits: 32
    description: SPI clock Divider
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DIVVAL
      bit_offset: 0
      bit_width: 16
      description: Rate divider value. Specifies how the Flexcomm clock (FCLK) is
        divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded
        such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up
        to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTAT
    addr: 0x428
    size_bits: 32
    description: SPI Interrupt Status
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SSA
      bit_offset: 4
      bit_width: 1
      description: Slave Select Assert.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SSD
      bit_offset: 5
      bit_width: 1
      description: Slave Select Deassert.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MSTIDLE
      bit_offset: 8
      bit_width: 1
      description: Master Idle status flag.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOCFG
    addr: 0xe00
    size_bits: 32
    description: FIFO configuration and enable register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: ENABLETX
      bit_offset: 0
      bit_width: 1
      description: Enable the transmit FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: ENABLERX
      bit_offset: 1
      bit_width: 1
      description: Enable the receive FIFO.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: SIZE
      bit_offset: 4
      bit_width: 2
      description: FIFO size configuration. This is a read-only field. 0x1 = FIFO
        is configured as 8 entries of 16 bits. 0x0, 0x2, 0x3 = not applicable to SPI.
      read_allowed: true
      write_allowed: false
    - !Field
      name: DMATX
      bit_offset: 12
      bit_width: 1
      description: DMA configuration for transmit.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
    - !Field
      name: DMARX
      bit_offset: 13
      bit_width: 1
      description: DMA configuration for receive.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: NOT_TRIGGERED
        1: TRIGGERED
    - !Field
      name: EMPTYTX
      bit_offset: 16
      bit_width: 1
      description: Empty command for the transmit FIFO. When a 1 is written to this
        bit, the TX FIFO is emptied.
      read_allowed: false
      write_allowed: true
    - !Field
      name: EMPTYRX
      bit_offset: 17
      bit_width: 1
      description: Empty command for the receive FIFO. When a 1 is written to this
        bit, the RX FIFO is emptied.
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFOSTAT
    addr: 0xe04
    size_bits: 32
    description: FIFO status register.
    read_allowed: true
    write_allowed: true
    reset_value: 0x30
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error. Will be set if a transmit FIFO error occurs. This
        could be an overflow caused by pushing data into a full FIFO, or by an underflow
        if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error. Will be set if a receive FIFO overflow occurs, caused
        by software or DMA not emptying the FIFO fast enough. Cleared by writing a
        1 to this bit.
      read_allowed: true
      write_allowed: true
    - !Field
      name: PERINT
      bit_offset: 3
      bit_width: 1
      description: Peripheral interrupt. When 1, this indicates that the peripheral
        function has asserted an interrupt. The details can be found by reading the
        peripheral' STAT register.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXEMPTY
      bit_offset: 4
      bit_width: 1
      description: Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral
        may still be processing the last piece of data.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXNOTFULL
      bit_offset: 5
      bit_width: 1
      description: Transmit FIFO not full. When 1, the transmit FIFO is not full,
        so more data can be written. When 0, the transmit FIFO is full and another
        write would cause it to overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXNOTEMPTY
      bit_offset: 6
      bit_width: 1
      description: Receive FIFO not empty. When 1, the receive FIFO is not empty,
        so data can be read. When 0, the receive FIFO is empty.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXFULL
      bit_offset: 7
      bit_width: 1
      description: Receive FIFO full. When 1, the receive FIFO is full. Data needs
        to be read out to prevent the peripheral from causing an overflow.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 5
      description: Transmit FIFO current level. A 0 means the TX FIFO is currently
        empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how
        much data is actually in the TX FIFO at the point where the read occurs. If
        the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 5
      description: Receive FIFO current level. A 0 means the RX FIFO is currently
        empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how
        much data is actually in the RX FIFO at the point where the read occurs. If
        the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOTRIG
    addr: 0xe08
    size_bits: 32
    description: FIFO trigger settings for interrupt and DMA request.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXLVLENA
      bit_offset: 0
      bit_width: 1
      description: Transmit FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVLENA
      bit_offset: 1
      bit_width: 1
      description: Receive FIFO level trigger enable. This trigger will become an
        interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG
        is set.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 8
      bit_width: 4
      description: Transmit FIFO level trigger point. This field is used only when
        TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just
        enough to perform DMA, then return to the reduced power mode See -Hardware
        Wake-up control register-. 0 = trigger when the TX FIFO becomes empty. 1 =
        trigger when the TX FIFO level decreases to one entry. 7 = 1 = trigger when
        the TX FIFO level decreases to 7 entries (is no longer full).
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 16
      bit_width: 4
      description: Receive FIFO level trigger point. The RX FIFO level is checked
        when a new piece of data is received. This field is used only when RXLVLENA
        = 1. If enabled to do so, the FIFO level can wake up the device just enough
        to perform DMA, then return to the reduced power mode See -Hardware Wake-up
        control register-. 0 = trigger when the RX FIFO has received one entry (is
        no longer empty). 1 = trigger when the RX FIFO has received two entries. 7
        = trigger when the RX FIFO has received 8 entries (has become full).
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTENSET
    addr: 0xe10
    size_bits: 32
    description: FIFO interrupt enable set (enable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Determines whether an interrupt occurs when a transmit error occurs,
        based on the TXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Determines whether an interrupt occurs when a receive error occurs,
        based on the RXERR flag in the FIFOSTAT register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Determines whether an interrupt occurs when a the transmit FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Determines whether an interrupt occurs when a the receive FIFO
        reaches the level specified by the TXLVL field in the FIFOTRIG register.
      read_allowed: true
      write_allowed: true
      enum_values:
        0: DISABLED
        1: ENABLED
  - !Register
    name: FIFOINTENCLR
    addr: 0xe14
    size_bits: 32
    description: FIFO interrupt enable clear (disable) and read register.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Writing one clears the corresponding bits in the FIFOINTENSET register.
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIFOINTSTAT
    addr: 0xe18
    size_bits: 32
    description: FIFO interrupt status register.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: TXERR
      bit_offset: 0
      bit_width: 1
      description: TX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXERR
      bit_offset: 1
      bit_width: 1
      description: RX FIFO error.
      read_allowed: true
      write_allowed: false
    - !Field
      name: TXLVL
      bit_offset: 2
      bit_width: 1
      description: Transmit FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXLVL
      bit_offset: 3
      bit_width: 1
      description: Receive FIFO level interrupt.
      read_allowed: true
      write_allowed: false
    - !Field
      name: PERINT
      bit_offset: 4
      bit_width: 1
      description: Peripheral interrupt.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFOWR
    addr: 0xe20
    size_bits: 32
    description: FIFO write data.
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TXDATA
      bit_offset: 0
      bit_width: 16
      description: Transmit data to the FIFO.
      read_allowed: false
      write_allowed: true
    - !Field
      name: TXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL0 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL0 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL1 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL1 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL2 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL2 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: TXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: 'Transmit Slave Select. This field asserts SSEL3 in master mode.
        The output on the pin is active LOW by default. Remark: The active state of
        the SSEL3 pin is configured by bits in the CFG register.'
      read_allowed: false
      write_allowed: true
      enum_values:
        0: ASSERTED
        1: NOT_ASSERTED
    - !Field
      name: EOT
      bit_offset: 20
      bit_width: 1
      description: End of Transfer. The asserted SSEL will be deasserted at the end
        of a transfer, and remain so for at least the time specified by the Transfer_delay
        value in the DLY register.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NOT_DEASSERTED
        1: DEASSERTED
    - !Field
      name: EOF
      bit_offset: 21
      bit_width: 1
      description: End of Frame. Between frames, a delay may be inserted, as defined
        by the FRAME_DELAY value in the DLY register. The end of a frame may not be
        particularly meaningful if the FRAME_DELAY value = 0. This control can be
        used as part of the support for frame lengths greater than 16 bits.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: NOT_EOF
        1: EOF
    - !Field
      name: RXIGNORE
      bit_offset: 22
      bit_width: 1
      description: Receive Ignore. This allows data to be transmitted using the SPI
        without the need to read unneeded data from the receiver.Setting this bit
        simplifies the transmit process and can be used with the DMA.
      read_allowed: false
      write_allowed: true
      enum_values:
        0: READ
        1: IGNORE
    - !Field
      name: LEN
      bit_offset: 24
      bit_width: 4
      description: 'Data Length. Specifies the data length from 1 to 16 bits. Note
        that transfer lengths greater than 16 bits are supported by implementing multiple
        sequential transmits. 0x0 = Data transfer is 1 bit in length. Note: when LEN
        = 0, the underrun status is not meaningful. 0x1 = Data transfer is 2 bits
        in length. 0x2 = Data transfer is 3 bits in length. 0xF = Data transfer is
        16 bits in length.'
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIFORD
    addr: 0xe30
    size_bits: 32
    description: FIFO read data.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 16
      description: Received data from the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL0
        pin to be saved along with received data. The value will reflect the SSEL0
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL1
        pin to be saved along with received data. The value will reflect the SSEL1
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL2
        pin to be saved along with received data. The value will reflect the SSEL2
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL3
        pin to be saved along with received data. The value will reflect the SSEL3
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SOT
      bit_offset: 20
      bit_width: 1
      description: Start of Transfer flag. This flag will be 1 if this is the first
        data after the SSELs went from deasserted to asserted (i.e., any previous
        transfer has ended). This information can be used to identify the first piece
        of data in cases where the transfer length is greater than 16 bit.
      read_allowed: true
      write_allowed: false
  - !Register
    name: FIFORDNOPOP
    addr: 0xe40
    size_bits: 32
    description: FIFO data read with no FIFO pop.
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: RXDATA
      bit_offset: 0
      bit_width: 16
      description: Received data from the FIFO.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL0_N
      bit_offset: 16
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL0
        pin to be saved along with received data. The value will reflect the SSEL0
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL1_N
      bit_offset: 17
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL1
        pin to be saved along with received data. The value will reflect the SSEL1
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL2_N
      bit_offset: 18
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL2
        pin to be saved along with received data. The value will reflect the SSEL2
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: RXSSEL3_N
      bit_offset: 19
      bit_width: 1
      description: Slave Select for receive. This field allows the state of the SSEL3
        pin to be saved along with received data. The value will reflect the SSEL3
        pin for both master and slave operation. A zero indicates that a slave select
        is active. The actual polarity of each slave select pin is configured by the
        related SPOL bit in CFG.
      read_allowed: true
      write_allowed: false
    - !Field
      name: SOT
      bit_offset: 20
      bit_width: 1
      description: Start of Transfer flag. This flag will be 1 if this is the first
        data after the SSELs went from deasserted to asserted (i.e., any previous
        transfer has ended). This information can be used to identify the first piece
        of data in cases where the transfer length is greater than 16 bit.
      read_allowed: true
      write_allowed: false
  - !Register
    name: ID
    addr: 0xffc
    size_bits: 32
    description: SPI module Identification. This value appears in the shared Flexcomm
      peripheral ID register when SPI is selected.
    read_allowed: true
    write_allowed: false
    reset_value: 0xe0200000
    fields:
    - !Field
      name: APERTURE
      bit_offset: 0
      bit_width: 8
      description: 'Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K
        aperture.'
      read_allowed: true
      write_allowed: false
    - !Field
      name: MINOR_REV
      bit_offset: 8
      bit_width: 4
      description: Minor revision of module implementation, starting at 0. Minor revision
        of module implementation, starting at 0. Software compatibility is expected
        between minor revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: MAJOR_REV
      bit_offset: 12
      bit_width: 4
      description: Major revision of module implementation, starting at 0. There may
        not be software compatibility between major revisions.
      read_allowed: true
      write_allowed: false
    - !Field
      name: ID
      bit_offset: 16
      bit_width: 16
      description: Unique module identifier for this IP block.
      read_allowed: true
      write_allowed: false
- !Module
  name: FSP
  description: fsp
  base_addr: 0x40088000
  size: 0x1a0
  registers:
  - !Register
    name: SYS_CTRL
    addr: 0x0
    size_bits: 32
    description: FSP system control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_ABORT
      bit_offset: 0
      bit_width: 1
      description: Transform Engine abort write 1 to abort
      read_allowed: false
      write_allowed: true
    - !Field
      name: MOU_ABORT
      bit_offset: 1
      bit_width: 1
      description: Matrix Operation Unit abort write 1 to abort
      read_allowed: false
      write_allowed: true
    - !Field
      name: SCF_ABORT
      bit_offset: 2
      bit_width: 1
      description: SE COR FIR abort write 1 to abort
      read_allowed: false
      write_allowed: true
  - !Register
    name: STATUS
    addr: 0x4
    size_bits: 32
    description: FSP status register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: FPU0_BUSY
      bit_offset: 0
      bit_width: 1
      description: SE COR FIR is in processing busy
      read_allowed: true
      write_allowed: false
    - !Field
      name: FPU1_BUSY
      bit_offset: 1
      bit_width: 1
      description: TE MOU is in processing busy
      read_allowed: true
      write_allowed: false
    - !Field
      name: FIR_READY
      bit_offset: 2
      bit_width: 1
      description: FIR output buffer is not empty which is valid for read
      read_allowed: true
      write_allowed: false
  - !Register
    name: INT
    addr: 0x8
    size_bits: 32
    description: FSP interrupt register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_DONE_INT
      bit_offset: 0
      bit_width: 1
      description: Transform engine done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: MOU_DONE_INT
      bit_offset: 1
      bit_width: 1
      description: Matrix operation unit done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: SE_DONE_INT
      bit_offset: 2
      bit_width: 1
      description: Statistic engine done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: COR_DONE_INT
      bit_offset: 3
      bit_width: 1
      description: Correlation done interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_CALC_IN_ERR_INT
      bit_offset: 8
      bit_width: 1
      description: SE COR FIR calculation input data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_CALC_OUT_ERR_INT
      bit_offset: 9
      bit_width: 1
      description: SE COR FIR calculation output data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_DIN_OV_INT
      bit_offset: 10
      bit_width: 1
      description: SE COR FIR input data overflow interrupt (always 0)
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_DOUT_OV_INT
      bit_offset: 11
      bit_width: 1
      description: SE COR FIR output data overflow interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: SINGULAR_INT
      bit_offset: 12
      bit_width: 1
      description: MOU singular interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_CALC_IN_ERR_INT
      bit_offset: 16
      bit_width: 1
      description: MOU TE calculation input data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_CALC_OUT_ERR_INT
      bit_offset: 17
      bit_width: 1
      description: MOU TE calculation output data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_DIN_OV_INT
      bit_offset: 18
      bit_width: 1
      description: MOU TE input data overflow interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_DOUT_OV_INT
      bit_offset: 19
      bit_width: 1
      description: MOU TE output data overflow interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_DIN_ERR_INT
      bit_offset: 20
      bit_width: 1
      description: FINV input data is inf or nan
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_DOUT_OV_INT
      bit_offset: 21
      bit_width: 1
      description: FINV output data overflow
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_ZERO_INT
      bit_offset: 22
      bit_width: 1
      description: FINV input data is zero
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_DIN_ERR
      bit_offset: 24
      bit_width: 1
      description: CORDIC input data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_DOUT_ERR_INT
      bit_offset: 25
      bit_width: 1
      description: CORDIC output data error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_CALC_ERR_INT
      bit_offset: 26
      bit_width: 1
      description: CORDIC calculation error interrupt
      read_allowed: true
      write_allowed: true
    - !Field
      name: FSP_INT
      bit_offset: 31
      bit_width: 1
      description: Or signal of all FSP function interrupt in this register
      read_allowed: true
      write_allowed: false
  - !Register
    name: INTEN
    addr: 0xc
    size_bits: 32
    description: FSP interrupt enable register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_DONE_INTEN
      bit_offset: 0
      bit_width: 1
      description: Transform engine done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: MOU_DONE_INTEN
      bit_offset: 1
      bit_width: 1
      description: Matrix operation unit done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SE_DONE_INTEN
      bit_offset: 2
      bit_width: 1
      description: Statistic engine done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: COR_DONE_INTEN
      bit_offset: 3
      bit_width: 1
      description: Correlation done interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_CALC_IN_ERR_INTEN
      bit_offset: 8
      bit_width: 1
      description: SE COR FIR calculation input data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_CALC_OUT_ERR_INTEN
      bit_offset: 9
      bit_width: 1
      description: SE COR FIR calculation output data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_DIN_OV_INTEN
      bit_offset: 10
      bit_width: 1
      description: SE COR FIR input data overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU0_DOUT_OV_INTEN
      bit_offset: 11
      bit_width: 1
      description: SE COR FIR output data overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SINGULAR_INTEN
      bit_offset: 12
      bit_width: 1
      description: MOU singular interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_CALC_IN_ERR_INTEN
      bit_offset: 16
      bit_width: 1
      description: MOU TE calculation input data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_CALC_OUT_ERR_INTEN
      bit_offset: 17
      bit_width: 1
      description: MOU TE calculation output data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_DIN_OV_INTEN
      bit_offset: 18
      bit_width: 1
      description: MOU TE input data overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FPU1_DOUT_OV_INTEN
      bit_offset: 19
      bit_width: 1
      description: MOU TE output data overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_DIN_ERR_INTEN
      bit_offset: 20
      bit_width: 1
      description: FINV data input is inf or nan interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_DOUT_OV_INTEN
      bit_offset: 21
      bit_width: 1
      description: FINV data output overflow interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FINV_ZERO_INTEN
      bit_offset: 22
      bit_width: 1
      description: FINV input is zero interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_DIN_ERR_INTEN
      bit_offset: 24
      bit_width: 1
      description: CORDIC input data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_DOUT_ERR_INTEN
      bit_offset: 25
      bit_width: 1
      description: CORDIC output data error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: CORDIC_CALC_ERR_INTEN
      bit_offset: 26
      bit_width: 1
      description: CORDIC calculation error interrupt enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: FSP_INTEN
      bit_offset: 31
      bit_width: 1
      description: Or signal of all FSP function interrupt in this register enable
      read_allowed: true
      write_allowed: true
  - !Register
    name: TE_CTRL
    addr: 0x20
    size_bits: 32
    description: transmit engine control register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_MODE
      bit_offset: 0
      bit_width: 2
      description: TE compute mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TE_FFT
        1: TE_IFFT
        2: TE_DCT
        3: TE_IDCT
    - !Field
      name: TE_IO_MODE
      bit_offset: 2
      bit_width: 2
      description: TE input &amp; output mode select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TE_RICO
        1: TE_CICO
        2: TE_RIRO
    - !Field
      name: TE_PTS
      bit_offset: 4
      bit_width: 2
      description: TE compute point
      read_allowed: true
      write_allowed: true
      enum_values:
        0: TE64PTS
        1: TE128PTS
        2: TE256PTS
    - !Field
      name: TE_DIN_FP_SEL
      bit_offset: 6
      bit_width: 1
      description: TE input data format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FIX
        1: FLT
    - !Field
      name: TE_DOUT_FP_SEL
      bit_offset: 7
      bit_width: 1
      description: TE output data format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FIX
        1: FLT
    - !Field
      name: TE_SCALE
      bit_offset: 8
      bit_width: 8
      description: TE scale
      read_allowed: true
      write_allowed: true
    - !Field
      name: TE_PAUSE_LVL
      bit_offset: 24
      bit_width: 3
      description: Transfer Engine stop level for debug use only.
      read_allowed: true
      write_allowed: true
  - !Register
    name: TE_SRC_BASE
    addr: 0x24
    size_bits: 32
    description: transfer engine source data memory base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_SRC_BASE
      bit_offset: 0
      bit_width: 17
      description: TE source data memory base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: TE_DST_BASE
    addr: 0x28
    size_bits: 32
    description: transfer engine destination data memory base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: TE_DST_BASE
      bit_offset: 0
      bit_width: 17
      description: TE destination data memory base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: MOU_CTRL
    addr: 0x40
    size_bits: 32
    description: matrix operation unit control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x1110000
    fields:
    - !Field
      name: OP_MODE
      bit_offset: 0
      bit_width: 4
      description: MOU operation mode
      read_allowed: true
      write_allowed: true
      enum_values:
        0: INV
        1: MULT
        2: TRANS
        3: LINEAR
        4: DOTMULT
    - !Field
      name: MOU_DIN_FP_SEL
      bit_offset: 8
      bit_width: 1
      description: MOU data input format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MOU_FLT
        1: MOU_FIX
    - !Field
      name: MOU_DOUT_FP_SEL
      bit_offset: 9
      bit_width: 1
      description: MOU data output format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: MOU_FLT
        1: MOU_FIX
    - !Field
      name: MAT_M
      bit_offset: 16
      bit_width: 4
      description: MOU Matrix column
      read_allowed: true
      write_allowed: true
    - !Field
      name: MAT_N
      bit_offset: 20
      bit_width: 4
      description: MOU Matrix row only valid when matrix's column is not equal to
        row
      read_allowed: true
      write_allowed: true
    - !Field
      name: MAT_K
      bit_offset: 24
      bit_width: 4
      description: MOU Matrix row only valid when matrix mult operation
      read_allowed: true
      write_allowed: true
    - !Field
      name: DIV_EPSILON
      bit_offset: 28
      bit_width: 2
      description: When the data exponent is small than DIV_EPSILON the inverse operation
        will output a error signal.
      read_allowed: true
      write_allowed: true
    - !Field
      name: LU_STOP
      bit_offset: 30
      bit_width: 1
      description: Stop at LU
      read_allowed: true
      write_allowed: true
    - !Field
      name: UINV_STOP
      bit_offset: 31
      bit_width: 1
      description: stop at U-Matrix inverse
      read_allowed: true
      write_allowed: true
  - !Register
    name: MA_SRC_BASE
    addr: 0x44
    size_bits: 32
    description: matrix A source data memory base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MA_SRC_BASE
      bit_offset: 0
      bit_width: 17
      description: Matrix A source data memory base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: MB_SRC_BASE
    addr: 0x48
    size_bits: 32
    description: matrix B source data memory base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MB_SRC_BASE
      bit_offset: 0
      bit_width: 17
      description: Matrix B source data memory base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: MO_DST_BASE
    addr: 0x4c
    size_bits: 32
    description: matrix output data memory base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MO_DST_BASE
      bit_offset: 0
      bit_width: 17
      description: Matrix Operation Unit output data destination memory base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: MOU_SCALEA
    addr: 0x50
    size_bits: 32
    description: scale coefficient A register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MOU_SCALEA
      bit_offset: 0
      bit_width: 32
      description: MOU scale coefficient A
      read_allowed: true
      write_allowed: true
  - !Register
    name: MOU_SCALEB
    addr: 0x54
    size_bits: 32
    description: scale coefficient B register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: MOU_SCALEB
      bit_offset: 0
      bit_width: 32
      description: MOU scale coefficient B
      read_allowed: true
      write_allowed: true
  - !Register
    name: SE_CTRL
    addr: 0x60
    size_bits: 32
    description: stastic engine control register
    read_allowed: true
    write_allowed: true
    reset_value: 0xc0
    fields:
    - !Field
      name: MIN_SEL
      bit_offset: 0
      bit_width: 1
      description: Minimum value selection
      read_allowed: true
      write_allowed: true
      enum_values:
        0: FIRST_ONE
        1: LAST_ONE
    - !Field
      name: MAX_SEL
      bit_offset: 1
      bit_width: 1
      description: Maximum value selection0 the first one1 the last one
      read_allowed: true
      write_allowed: true
    - !Field
      name: MIN_IDX_EN
      bit_offset: 2
      bit_width: 1
      description: Minimum value index calculation enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: MAX_IDX_EN
      bit_offset: 3
      bit_width: 1
      description: Maximum value index calculation enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SUM_EN
      bit_offset: 4
      bit_width: 1
      description: Summary calculation enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: PWR_EN
      bit_offset: 5
      bit_width: 1
      description: Power calculation enable
      read_allowed: true
      write_allowed: true
    - !Field
      name: SE_DIN_FP_SEL
      bit_offset: 6
      bit_width: 1
      description: SE data input format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: SE_FLT
        1: SE_FIX
    - !Field
      name: SE_DOUT_FP_SEL
      bit_offset: 7
      bit_width: 1
      description: SE data output format select
      read_allowed: true
      write_allowed: true
    - !Field
      name: SE_LEN
      bit_offset: 16
      bit_width: 8
      description: Statistic engine length
      read_allowed: true
      write_allowed: true
  - !Register
    name: SE_SRC_BASE
    addr: 0x64
    size_bits: 32
    description: statistic engine source data base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: SE_SRC_BASE
      bit_offset: 0
      bit_width: 17
      description: Statistic engine source data base address
      read_allowed: true
      write_allowed: true
  - !Register
    name: SE_IDX
    addr: 0x68
    size_bits: 32
    description: max or min data index register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SE_MIN_IDX
      bit_offset: 0
      bit_width: 8
      description: Minimum data index of an array
      read_allowed: true
      write_allowed: false
    - !Field
      name: SE_MAX_IDX
      bit_offset: 16
      bit_width: 8
      description: Maximum data index of an array
      read_allowed: true
      write_allowed: false
  - !Register
    name: SE_SUM
    addr: 0x6c
    size_bits: 32
    description: array summary result register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SE_SUM
      bit_offset: 0
      bit_width: 32
      description: Summary of an array
      read_allowed: true
      write_allowed: false
  - !Register
    name: SE_PWR
    addr: 0x70
    size_bits: 32
    description: array power result register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: SE_PWR
      bit_offset: 0
      bit_width: 32
      description: Power value of an array
      read_allowed: true
      write_allowed: false
  - !Register
    name: COR_CTRL
    addr: 0x80
    size_bits: 32
    description: correlation control register
    read_allowed: true
    write_allowed: true
    reset_value: 0x300
    fields:
    - !Field
      name: COR_DIN_FP_SEL
      bit_offset: 8
      bit_width: 1
      description: COR input data format select
      read_allowed: true
      write_allowed: true
      enum_values:
        0: COR_FLT
        1: COR_FIX
    - !Field
      name: COR_DOUT_FP_SEL
      bit_offset: 9
      bit_width: 1
      description: COR output data format select
      read_allowed: true
      write_allowed: true
    - !Field
      name: COR_X_LEN
      bit_offset: 16
      bit_width: 8
      description: The length of X sequence to be Correlator 0-255
      read_allowed: true
      write_allowed: true
    - !Field
      name: COR_Y_LEN
      bit_offset: 24
      bit_width: 8
      description: The length of Y sequence to be Correlator 0-255
      read_allowed: true
      write_allowed: true
  - !Register
    name: CX_SRC_BASE
    addr: 0x84
    size_bits: 32
    description: correlation x sequence base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: COR_X_ADDR
      bit_offset: 0
      bit_width: 17
      description: The base address of X sequence to be Correlator
      read_allowed: true
      write_allowed: true
  - !Register
    name: CY_SRC_BASE
    addr: 0x88
    size_bits: 32
    description: correlation y sequence base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: COR_Y_ADDR
      bit_offset: 0
      bit_width: 17
      description: The base address of Y sequence to be Correlator
      read_allowed: true
      write_allowed: true
  - !Register
    name: CO_DST_BASE
    addr: 0x8c
    size_bits: 32
    description: correlation output sequence base register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: COR_DST_BASE
      bit_offset: 0
      bit_width: 17
      description: correlation output data destination address base
      read_allowed: true
      write_allowed: true
  - !Register
    name: COR_OFFSET
    addr: 0x90
    size_bits: 32
    description: correlation offset register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: COR_X_OFFSET
      bit_offset: 0
      bit_width: 8
      description: COR input X SEQ offset 0-255
      read_allowed: true
      write_allowed: true
    - !Field
      name: COR_Y_OFFSET
      bit_offset: 8
      bit_width: 8
      description: COR input Y SEQ offset 0-255
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_CFG_CH0
    addr: 0xa0
    size_bits: 32
    description: FIR channel 0 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH0_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 0 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH0_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 0 tap length the register value equals to real tap
        length minus 1.
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_BUF_CLR_ALL
      bit_offset: 30
      bit_width: 1
      description: clear all FIR buffer
      read_allowed: false
      write_allowed: true
    - !Field
      name: FIR_CH0_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 0 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH1
    addr: 0xa4
    size_bits: 32
    description: FIR channel 1 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH1_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 1 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH1_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 1 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH1_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 1 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH2
    addr: 0xa8
    size_bits: 32
    description: FIR channel 2 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH2_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 2 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH2_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 2 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH2_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 2 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH3
    addr: 0xac
    size_bits: 32
    description: FIR channel 3 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH3_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 3 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH3_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 3 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH3_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 3 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH4
    addr: 0xb0
    size_bits: 32
    description: FIR channel 4 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH4_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 4 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH4_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 4 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH4_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 4 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH5
    addr: 0xb4
    size_bits: 32
    description: FIR channel 5 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH5_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 5 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH5_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 5 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH5_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 5 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH6
    addr: 0xb8
    size_bits: 32
    description: FIR channel 6 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH6_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 6 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH6_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 6 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH6_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 6 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH7
    addr: 0xbc
    size_bits: 32
    description: FIR channel 7 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH7_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 7 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH7_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 7 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH7_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 7 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_CFG_CH8
    addr: 0xc0
    size_bits: 32
    description: FIR channel 8 configuration register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_CH8_COEF_BASE
      bit_offset: 0
      bit_width: 16
      description: FIR channel 8 coefficient base address
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH8_TAP_LEN
      bit_offset: 16
      bit_width: 4
      description: FIR channel 8 tap length
      read_allowed: true
      write_allowed: true
    - !Field
      name: FIR_CH8_BUF_CLR
      bit_offset: 31
      bit_width: 1
      description: FIR channel 8 buffer clear
      read_allowed: false
      write_allowed: true
  - !Register
    name: FIR_DAT0_FX
    addr: 0xd0
    size_bits: 32
    description: FIR channel 0 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT0_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel 0 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT1_FX
    addr: 0xd4
    size_bits: 32
    description: FIR channel 1 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT1_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel1 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT2_FX
    addr: 0xd8
    size_bits: 32
    description: FIR channel 2 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT2_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel2 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT3_FX
    addr: 0xdc
    size_bits: 32
    description: FIR channel 3 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT3_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel3 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT4_FX
    addr: 0xe0
    size_bits: 32
    description: FIR channel 4 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT4_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel4 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT5_FX
    addr: 0xe4
    size_bits: 32
    description: FIR channel 5 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT5_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel5 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT6_FX
    addr: 0xe8
    size_bits: 32
    description: FIR channel 6 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT6_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel6 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT7_FX
    addr: 0xec
    size_bits: 32
    description: FIR channel 7 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT7_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel7 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT8_FX
    addr: 0xf0
    size_bits: 32
    description: FIR channel 8 fix point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT8_FX
      bit_offset: 0
      bit_width: 32
      description: FIR channel8 fix data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT0_FL
    addr: 0x100
    size_bits: 32
    description: FIR channel 0 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT0_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel 0 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT1_FL
    addr: 0x104
    size_bits: 32
    description: FIR channel 1 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT1_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel1 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT2_FL
    addr: 0x108
    size_bits: 32
    description: FIR channel 2 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT2_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel2 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT3_FL
    addr: 0x10c
    size_bits: 32
    description: FIR channel 3 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT3_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel3 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT4_FL
    addr: 0x110
    size_bits: 32
    description: FIR channel 4 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT4_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel4 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT5_FL
    addr: 0x114
    size_bits: 32
    description: FIR channel 5 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT5_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel5 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT6_FL
    addr: 0x118
    size_bits: 32
    description: FIR channel 6 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT6_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel6 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT7_FL
    addr: 0x11c
    size_bits: 32
    description: FIR channel 7 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT7_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel7 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: FIR_DAT8_FL
    addr: 0x120
    size_bits: 32
    description: FIR channel 8 float point data input &amp; output register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: FIR_DAT8_FL
      bit_offset: 0
      bit_width: 32
      description: FIR channel8 float data
      read_allowed: true
      write_allowed: true
  - !Register
    name: SIN_COS_IXOX
    addr: 0x140
    size_bits: 32
    description: sin &amp; cos input fix output fix mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SIN_COS_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: SIN_COS input data source address. Input fix output fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: SIN_COS_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: SIN_COS output data destination address. Input fix output fix.
      read_allowed: false
      write_allowed: true
  - !Register
    name: SIN_COS_IXOL
    addr: 0x144
    size_bits: 32
    description: sin &amp; cos input fix output float mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SIN_COS_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: SIN_COS input data source word address. Input fix output float
      read_allowed: false
      write_allowed: true
    - !Field
      name: SIN_COS_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: SIN_COS output data destination word address. Input fix output
        float.
      read_allowed: false
      write_allowed: true
  - !Register
    name: SIN_COS_ILOX
    addr: 0x148
    size_bits: 32
    description: sin &amp; cos input float output fix mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SIN_COS_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: SIN_COS input data source word address. Input float output fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: SIN_COS_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: SIN_COS output data destination word address. Input float output
        fix.
      read_allowed: false
      write_allowed: true
  - !Register
    name: SIN_COS_ILOL
    addr: 0x14c
    size_bits: 32
    description: sin &amp; cos input float output float mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: SIN_COS_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: SIN_COS input data source word address. Input float output float
      read_allowed: false
      write_allowed: true
    - !Field
      name: SIN_COS_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: SIN_COS output data destination word address. Input float output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: LN_SQRT_IXOX
    addr: 0x150
    size_bits: 32
    description: LN &amp; sqrt input fix output fix mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: LN_SQRT_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: LN_SQRT input data source word address. Input fix output fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: LN_SQRT_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: LN_SQRT output data destination word address. Input fix output
        fix.
      read_allowed: false
      write_allowed: true
  - !Register
    name: LN_SQRT_IXOL
    addr: 0x154
    size_bits: 32
    description: LN &amp; sqrt input fix output float mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: LN_SQRT_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: LN_SQRT input data source word address. Input fix output float
      read_allowed: false
      write_allowed: true
    - !Field
      name: LN_SQRT_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: LN_SQRT output data destination word address. Input fix output
        float.
      read_allowed: false
      write_allowed: true
  - !Register
    name: LN_SQRT_ILOX
    addr: 0x158
    size_bits: 32
    description: LN &amp; sqrt input float output fix mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: LN_SQRT_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: LN_SQRT input data source word address. Input float output fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: LN_SQRT_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: LN_SQRT output data destination word address. Input float output
        fix.
      read_allowed: false
      write_allowed: true
  - !Register
    name: LN_SQRT_ILOL
    addr: 0x15c
    size_bits: 32
    description: LN &amp; sqrt input float output float mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: LN_SQRT_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: LN_SQRT input data source word address. Input float output float
      read_allowed: false
      write_allowed: true
    - !Field
      name: LN_SQRT_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: LN_SQRT output data destination word address. Input float output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UP_IXOX
    addr: 0x160
    size_bits: 32
    description: native cordic input fix output fix, t=0, u=1 mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UP_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UP_IXOX input data source word address. Input fix output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UP_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UP_IXOX output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UP_IXOX_DST+1. Input fix output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UP_IXOL
    addr: 0x164
    size_bits: 32
    description: native cordic input fix output float, t=0, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UP_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UP_IXOL input data source word address. Input fix output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UP_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UP_IXOL output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UP_IXOL_DST+1. Input fix output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UP_ILOX
    addr: 0x168
    size_bits: 32
    description: native cordic input float output fix, t=0, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UP_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UP_ILOX input data source word address. Input float output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UP_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UP_ILOX output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UP_ILOX_DST+1. Input float output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UP_ILOL
    addr: 0x16c
    size_bits: 32
    description: native cordic input float output float, t=0, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UP_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UN_ILOL input data source word address. Input float output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UP_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UN_ILOL output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UN_ILOL_DST+1. Input float output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UN_IXOX
    addr: 0x170
    size_bits: 32
    description: native cordic input fix output fix, t=0, u=-1 mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UN_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UN_IXOX input data source word address. Input fix output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UN_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UN_IXOX output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UN_IXOX_DST+1. Input fix output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UN_IXOL
    addr: 0x174
    size_bits: 32
    description: native cordic input fix output float, t=0, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UN_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UN_IXOL input data source word address. Input fix output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UN_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UN_IXOL output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UN_IXOL_DST+1. Input fix output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UN_ILOX
    addr: 0x178
    size_bits: 32
    description: native cordic input float output fix, t=0, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UN_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UN_ILOX input data source word address. Input float output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UN_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UN_ILOX output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UN_ILOX_DST+1. Input float output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T0UN_ILOL
    addr: 0x17c
    size_bits: 32
    description: native cordic input float output float, t=0, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T0UN_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T0UN_ILOL input data source word address. Input float output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T0UN_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T0UN_ILOL output data destination word address. X is saved
        at here Y is saved at word address CORDIC_T0UN_ILOL_DST+1. Input float output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UP_IXOX
    addr: 0x180
    size_bits: 32
    description: native cordic input fix output fix, t=1, u=1 mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UP_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UP_IXOX input data source word address. Input fix output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UP_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UP_IXOX output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UP_IXOX_DST+1. Input fix output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UP_IXOL
    addr: 0x184
    size_bits: 32
    description: native cordic input fix output float, t=1, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UP_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UP_IXOL input data source word address. Input fix output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UP_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UP_IXOL output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UP_IXOL_DST+1. Input fix output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UP_ILOX
    addr: 0x188
    size_bits: 32
    description: native cordic input float output fix, t=1, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UP_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UP_ILOX input data source word address. Input float output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UP_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UP_ILOX output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UP_ILOX_DST+1. Input float output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UP_ILOL
    addr: 0x18c
    size_bits: 32
    description: native cordic input float output float, t=1, u=1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UP_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UP_ILOL input data source word address. Input float output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UP_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UP_ILOL output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UP_ILOL_DST+1. Input float output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UN_IXOX
    addr: 0x190
    size_bits: 32
    description: native cordic input fix output fix, t=1, u=-1 mode data address register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UN_IXOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UN_IXOX input data source word address. Input fix output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UN_IXOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UN_IXOX output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UN_IXOX_DST+1. Input fix output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UN_IXOL
    addr: 0x194
    size_bits: 32
    description: native cordic input fix output float, t=1, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UN_IXOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UN_IXOL input data source word address. Input fix output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UN_IXOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UN_IXOL output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UN_IXOL_DST+1. Input fix output
        float
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UN_ILOX
    addr: 0x198
    size_bits: 32
    description: native cordic input float output fix, t=1, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UN_ILOX_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UN_ILOX input data source word address. Input float output
        fix
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UN_ILOX_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UN_ILOX output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UN_ILOX_DST+1. Input float output
        fix
      read_allowed: false
      write_allowed: true
  - !Register
    name: CORDIC_T1UN_ILOL
    addr: 0x19c
    size_bits: 32
    description: native cordic input float output float, t=1, u=-1 mode data address
      register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CORDIC_T1UN_ILOL_SRC
      bit_offset: 0
      bit_width: 16
      description: CORDIC_T1UN_ILOL input data source word address. Input float output
        float
      read_allowed: false
      write_allowed: true
    - !Field
      name: CORDIC_T1UN_ILOL_DST
      bit_offset: 16
      bit_width: 16
      description: CORDIC_T1UN_ILOL output data destination word address. X is saved
        at here Z is saved at word address CORDIC_T1UN_ILOL_DST+1. Input float output
        float
      read_allowed: false
      write_allowed: true
- !Module
  name: GPIOA
  description: gpio
  base_addr: 0x4008c000
  size: 0x3c
  registers:
  - !Register
    name: DATA
    addr: 0x0
    size_bits: 32
    description: GPIO value register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 32
      description: data value
      read_allowed: true
      write_allowed: false
  - !Register
    name: DATAOUT
    addr: 0x4
    size_bits: 32
    description: GPIO output status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATAOUT
      bit_offset: 0
      bit_width: 32
      description: Data output register value
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTENSET
    addr: 0x10
    size_bits: 32
    description: GPIO output enable set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OUTENSET
      bit_offset: 0
      bit_width: 32
      description: output enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTENCLR
    addr: 0x14
    size_bits: 32
    description: GPIO output clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OUTENCLR
      bit_offset: 0
      bit_width: 32
      description: output enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENSET
    addr: 0x20
    size_bits: 32
    description: GPIO interrupt enable set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTENSET
      bit_offset: 0
      bit_width: 32
      description: interrupt enable set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTENCLR
    addr: 0x24
    size_bits: 32
    description: GPIO interrupt enable clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTENCLR
      bit_offset: 0
      bit_width: 32
      description: interrupt enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTTYPESET
    addr: 0x28
    size_bits: 32
    description: GPIO interrupt type set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTTYPESET
      bit_offset: 0
      bit_width: 32
      description: interrupt type set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTTYPECLR
    addr: 0x2c
    size_bits: 32
    description: GPIO interrupt type set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTTYPECLR
      bit_offset: 0
      bit_width: 32
      description: interrupt type clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTPOLSET
    addr: 0x30
    size_bits: 32
    description: GPIO interrupt polarity set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTPOLSET
      bit_offset: 0
      bit_width: 32
      description: interrupt polarity set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTPOLCLR
    addr: 0x34
    size_bits: 32
    description: GPIO interrupt polarity clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPOLCLR
      bit_offset: 0
      bit_width: 32
      description: interrupt polarity clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTATUS
    addr: 0x38
    size_bits: 32
    description: GPIO interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTSTATUS
      bit_offset: 0
      bit_width: 32
      description: interrupt status
      read_allowed: true
      write_allowed: true
- !Module
  name: GPIOB
  description: gpio
  base_addr: 0x4008d000
  size: 0x3c
  registers:
  - !Register
    name: DATA
    addr: 0x0
    size_bits: 32
    description: GPIO value register
    read_allowed: true
    write_allowed: false
    fields:
    - !Field
      name: DATA
      bit_offset: 0
      bit_width: 32
      description: data value
      read_allowed: true
      write_allowed: false
  - !Register
    name: DATAOUT
    addr: 0x4
    size_bits: 32
    description: GPIO output status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: DATAOUT
      bit_offset: 0
      bit_width: 32
      description: Data output register value
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTENSET
    addr: 0x10
    size_bits: 32
    description: GPIO output enable set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OUTENSET
      bit_offset: 0
      bit_width: 32
      description: output enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: OUTENCLR
    addr: 0x14
    size_bits: 32
    description: GPIO output clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: OUTENCLR
      bit_offset: 0
      bit_width: 32
      description: output enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTENSET
    addr: 0x20
    size_bits: 32
    description: GPIO interrupt enable set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTENSET
      bit_offset: 0
      bit_width: 32
      description: interrupt enable set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTENCLR
    addr: 0x24
    size_bits: 32
    description: GPIO interrupt enable clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTENCLR
      bit_offset: 0
      bit_width: 32
      description: interrupt enable clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTTYPESET
    addr: 0x28
    size_bits: 32
    description: GPIO interrupt type set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTTYPESET
      bit_offset: 0
      bit_width: 32
      description: interrupt type set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTTYPECLR
    addr: 0x2c
    size_bits: 32
    description: GPIO interrupt type set register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTTYPECLR
      bit_offset: 0
      bit_width: 32
      description: interrupt type clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTPOLSET
    addr: 0x30
    size_bits: 32
    description: GPIO interrupt polarity set register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: INTPOLSET
      bit_offset: 0
      bit_width: 32
      description: interrupt polarity set
      read_allowed: false
      write_allowed: true
  - !Register
    name: INTPOLCLR
    addr: 0x34
    size_bits: 32
    description: GPIO interrupt polarity clear register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTPOLCLR
      bit_offset: 0
      bit_width: 32
      description: interrupt polarity clear
      read_allowed: true
      write_allowed: true
  - !Register
    name: INTSTATUS
    addr: 0x38
    size_bits: 32
    description: GPIO interrupt status register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: INTSTATUS
      bit_offset: 0
      bit_width: 32
      description: interrupt status
      read_allowed: true
      write_allowed: true
- !Module
  name: CRC_ENGINE
  description: crc
  base_addr: 0x4008e000
  size: 0xc
  registers:
  - !Register
    name: MODE
    addr: 0x0
    size_bits: 32
    description: CRC mode register
    read_allowed: true
    write_allowed: true
    fields:
    - !Field
      name: CRC_POLY
      bit_offset: 0
      bit_width: 2
      description: 'CRC polynomial: 1X = CRC-32 polynomial 01 = CRC-16 polynomial
        00 = CRC-CCITT polynomial'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BIT_RVS_WR
      bit_offset: 2
      bit_width: 1
      description: 'Data bit order: 1 = Bit order reverse for CRC_WR_DATA (per byte)
        0 = No bit order reverse for CRC_WR_DATA (per byte)'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPL_WR
      bit_offset: 3
      bit_width: 1
      description: 'Data complement: 1 = 1''-s complement for CRC_WR_DATA 0 = No 1''-s
        complement for CRC_WR_DATA'
      read_allowed: true
      write_allowed: true
    - !Field
      name: BIT_RVS_SUM
      bit_offset: 4
      bit_width: 1
      description: 'CRC sum bit order: 1 = Bit order reverse for CRC_SUM 0 = No bit
        order reverse for CRC_SUM'
      read_allowed: true
      write_allowed: true
    - !Field
      name: CMPL_SUM
      bit_offset: 5
      bit_width: 1
      description: 'CRC sum complement: 1 = 1''-s complement for CRC_SUM 0 = No 1''-s
        complement for CRC_SUM'
      read_allowed: true
      write_allowed: true
  - !Register
    name: SEED
    addr: 0x4
    size_bits: 32
    description: CRC seed register
    read_allowed: true
    write_allowed: true
    reset_value: 0xffff
    fields:
    - !Field
      name: CRC_SEED
      bit_offset: 0
      bit_width: 32
      description: A write access to this register will load CRC seed value to CRC_SUM
        register with selected bit order and 1'-s complement pre-processes. A write
        access to this register will overrule the CRC calculation in progresses.
      read_allowed: true
      write_allowed: true
  - !Register
    name: SUM
    addr: 0x8
    size_bits: 32
    description: CRC checksum register
    read_allowed: true
    write_allowed: false
    reset_value: 0xffff
    fields:
    - !Field
      name: CRC_SUM
      bit_offset: 0
      bit_width: 32
      description: The most recent CRC sum can be read through this register with
        selected bit order and 1'-s complement post-processes.
      read_allowed: true
      write_allowed: false
  - !Register
    name: WR_DATA
    addr: 0x8
    size_bits: 32
    description: CRC data register
    read_allowed: false
    write_allowed: true
    fields:
    - !Field
      name: CRC_WR_DATA
      bit_offset: 0
      bit_width: 32
      description: Data written to this register will be taken to perform CRC calculation
        with selected bit order and 1'-s complement pre-process. Any write size 8,
        16 or 32-bit are allowed and accept back-to-back transactions.
      read_allowed: false
      write_allowed: true
